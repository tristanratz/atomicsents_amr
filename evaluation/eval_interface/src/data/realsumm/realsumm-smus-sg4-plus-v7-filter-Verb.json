[
  {
    "instance_id": "realsumm-0",
    "summary": "<t> Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks . </t> <t> Pushpa Basnet and 45 children Koirala cares for were forced to evacuate Basnet and children residence . </t> <t> Seven other CNN Heroes and Heroes and organizations organizations now assisting in relief efforts . </t>",
    "summary_trees": [
      "# ::snt  Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks . \n(c / cause-01\n      :ARG0 (a / aftershock)\n      :ARG1 (s / sleep-01\n            :ARG0 (a2 / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n                  :op2 (w / woman)\n                  :op3 (g / girl)\n                  :quant 425\n                  :mod (y / young))\n            :location (o / outdoors)))",
      "# ::snt  Pushpa Basnet and 45 children Koirala cares for were forced to evacuate Basnet and children residence . \n(f / force-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Pushpa\"\n                        :op2 \"Basnet\"))\n            :op2 (c / child\n                  :quant 45\n                  :ARG1-of (c2 / care-03\n                        :ARG0 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Koirala\")))))\n      :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                  :op1 p\n                  :op2 (c3 / child\n                        :ARG0-of (r / reside-01\n                              :ARG1 p)))))",
      "# ::snt  Seven other CNN Heroes and Heroes and organizations organizations now assisting in relief efforts . \n(a / assist-01\n      :ARG0 (o / organization\n            :quant 7\n            :mod (o2 / other)\n            :mod (p / publication\n                  :name (n / name\n                        :op1 \"CNN\"))\n            :mod (o3 / organization\n                  :name n\n                  :op1 \"Heroes\"\n                  :op2 \"and\"\n                  :op3 \"Heroes\"))\n      :mod (o4 / organization)\n      :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n      :time (n2 / now))"
    ],
    "tree": [
      "(c / cause-01\n   :ARG1 (s / sleep-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))))",
      "(c / cause-01\n   :ARG1 (s / sleep-01\n            :location (o / outdoors)))",
      "(c / cause-01\n   :ARG1 (s / sleep-01\n            :ARG0 (w / woman)))",
      "(c / cause-01\n   :ARG1 (s / sleep-01\n            :ARG0 (g / girl)))",
      "(c / cause-01\n   :ARG1 (s / sleep-01\n            :ARG0 425))",
      "(c / cause-01\n   :ARG1 (s / sleep-01\n            :ARG0 (y / young)))",
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))))",
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :location (o / outdoors)))",
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (w / woman)))",
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (g / girl)))",
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 425))",
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (y / young)))",
      "(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\")))",
      "(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\"))\n   :location (o / outdoors))",
      "(s / sleep-01\n   :ARG0 (w / woman)\n   :location (o / outdoors))",
      "(s / sleep-01\n   :ARG0 (g / girl)\n   :location (o / outdoors))",
      "(s / sleep-01\n   :ARG0 425\n   :location (o / outdoors))",
      "(s / sleep-01\n   :ARG0 (y / young)\n   :location (o / outdoors))",
      "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\")))",
      "(f / force-01\n   :ARG1 (c / child\n            :quant 45))",
      "(f / force-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))",
      "(f / force-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (c3 / child\n                      :ARG0 (r / reside-01\n                               :ARG1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))))",
      "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                      :op1 p)))",
      "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                      :op2 (c3 / child\n                               :ARG0 (r / reside-01\n                                        :ARG1 p)))))",
      "(f / force-01\n   :ARG1 (c / child\n            :quant 45)\n   :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                      :op1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))",
      "(f / force-01\n   :ARG1 (c / child\n            :quant 45)\n   :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                      :op2 (c3 / child\n                               :ARG0 (r / reside-01\n                                        :ARG1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))))",
      "(f / force-01\n   :ARG1 (c / child\n            :ARG1 (c2 / care-03\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Koirala\"))))\n   :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                      :op1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))",
      "(f / force-01\n   :ARG1 (c / child\n            :ARG1 (c2 / care-03\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Koirala\"))))\n   :ARG2 (e / evacuate-01\n            :ARG1 (a2 / and\n                      :op2 (c3 / child\n                               :ARG0 (r / reside-01\n                                        :ARG1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Pushpa\"\n                    :op2 \"Basnet\")))",
      "(a / and\n   :op2 (c / child\n           :quant 45))",
      "(a / and\n   :op2 (c / child\n           :ARG1 (c2 / care-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Koirala\")))))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :quant 7))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o2 / other)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\"))))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :name (n / name\n                              :op1 \"CNN\"))))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op1 \"Heroes\")))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op2 \"and\")))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op3 \"Heroes\")))",
      "(a / assist-01\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :quant 7)\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o2 / other))\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\")))\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :name (n / name\n                              :op1 \"CNN\")))\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op1 \"Heroes\"))\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op2 \"and\"))\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op3 \"Heroes\"))\n   :mod (o4 / organization))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :quant 7)\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o2 / other))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\")))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :name (n / name\n                              :op1 \"CNN\")))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op1 \"Heroes\"))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op2 \"and\"))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op3 \"Heroes\"))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :quant 7)\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\")))\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :name (n / name\n                              :op1 \"CNN\")))\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op1 \"Heroes\"))\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op2 \"and\"))\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :op3 \"Heroes\"))\n   :time (n2 / now))",
      "(a / assist-01\n   :mod (o4 / organization)\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :mod (o4 / organization)\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :time (n2 / now))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :quant 7)\n   :mod (o4 / organization)\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o2 / other))\n   :mod (o4 / organization)\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\")))\n   :mod (o4 / organization)\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (o / organization\n            :mod (o3 / organization\n                     :name (n / name\n                              :op1 \"CNN\")))\n   :mod (o4 / organization)\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))"
    ],
    "smus": [
      "Because Anuradha Koirala is sleeping.",
      "Because sleeping outdoors.",
      "Because the women are sleeping.",
      "Because the girls are sleeping.",
      "Because 425 is sleeping.",
      "Because the young are sleeping.",
      "Anuradha koirala is sleeping because of the aftershocks.",
      "Aftershocks cause sleeping outdoors.",
      "The women were sleeping because of the aftershocks.",
      "The girls are sleeping because of the aftershocks.",
      "425 sleeping because of aftershocks",
      "The aftershocks are what keep young from sleeping.",
      "Anuradha Koirala is sleeping.",
      "Anuradha koirala is sleeping outdoors.",
      "Women sleeping outdoors.",
      "The girls are sleeping outdoors.",
      "425 sleeping outdoors",
      "Young snoozing outdoors.",
      "Pushpa Basnet was forced.",
      "45 children were forced.",
      "Pushpa Basnet was forced to evacuate.",
      "Children in Pushpa Basnet's residence were forced to evacuate.",
      "Pushpa Basnet was forced to evacuate along with her resident children.",
      "45 children were forced to evacuate including Pushpa Basnet.",
      "45 children were forced to evacuate and the children of Pushpa Basnet's residence.",
      "Children whose care is being forced on Korela to evacuate along with Pushpa Basnet.",
      "Children in Kurula's care were forced to evacuate along with the children of Pushpa Basnet's residence.",
      "and the children that koirala cares for.",
      "Pushpa Basnet and the children that Koirala cares for.",
      "The children that Korela cares for.",
      "Koirala cares.",
      "7 organizations are assisting.",
      "Other organizations are assisting.",
      "CNN organizations are assisting.",
      "Heroes organizations are assisting.",
      "assisting organizations and",
      "Assisting relief efforts",
      "Other organizations are assisting organizations.",
      "CNN organizations are assisting organizations.",
      "Organizations and organizations are assisting.",
      "7 organizations are assisting in relief efforts.",
      "Other organizations are assisting in relief efforts.",
      "CNN organizations are assisting in relief efforts.",
      "Heroes organizations are assisting in relief efforts.",
      "Organizations and organizations are assisting in relief efforts.",
      "7 organizations are now assisting.",
      "Other organizations are now assisting.",
      "CNN organizations are now assisting.",
      "Heroes organizations are now assisting.",
      "Now the organizations and are assisting.",
      "Organizations are assisting in relief efforts.",
      "Organizations are now assisting.",
      "assisting in relief efforts now.",
      "CNN and other organizations are assisting in relief efforts.",
      "CNN is now assisting organizations.",
      "CNN organizations are now assisting organizations.",
      "Now organizations and organizations are assisting.",
      "7 organizations are now assisting in relief efforts.",
      "Other organizations are now assisting in relief efforts.",
      "CNN organizations are now assisting in relief efforts.",
      "Heroes organizations are now assisting in relief efforts.",
      "- Organizations and organizations are now assisting in relief efforts.",
      "Organizations are now assisting in relief efforts.",
      "Other organizations are now assisting with relief efforts.",
      "CNN and other organizations are now assisting in relief efforts.",
      "Organizing organizations and organizations are now assisting in relief efforts."
    ]
  },
  {
    "instance_id": "realsumm-1",
    "summary": "<t> Students from the University of Surrey discovered thousands of colonies . </t> <t> Students submerged coins and notes in agar to accelerate growth pf bacteria . </t> <t> Most were harmless on the money , but one caused boils and spots . </t> <t> Previous studies have revealed MRSA bacteria on notes and coins . </t>",
    "summary_trees": [
      "# ::snt  Students from the University of Surrey discovered thousands of colonies . \n(d / discover-01\n      :ARG0 (p / person\n            :ARG0-of (s / study-01)\n            :source (u / university\n                  :name (n / name\n                        :op1 \"University\"\n                        :op2 \"of\"\n                        :op3 \"Surrey\")))\n      :ARG1 (c / colony\n            :quant (m / multiple\n                  :op1 1000)))",
      "# ::snt  Students submerged coins and notes in agar to accelerate growth pf bacteria . \n(s / submerge-01\n      :ARG0 (p / person\n            :ARG0-of (s2 / study-01))\n      :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n / note))\n      :ARG2 (a2 / agar)\n      :purpose (a3 / accelerate-01\n            :ARG0 p\n            :ARG1 (g / grow-03\n                  :ARG1 (b / bacterium\n                        :name (n2 / name\n                              :op1 \"Pf\")))))",
      "# ::snt  Most were harmless on the money , but one caused boils and spots . \n(c / contrast-01\n      :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most)\n            :mod (o / on-the-money))\n      :ARG2 (c2 / cause-01\n            :ARG0 (o2 / one)\n            :ARG1 (a / and\n                  :op1 (b / boil-01)\n                  :op2 (s / spot))))",
      "# ::snt  Previous studies have revealed MRSA bacteria on notes and coins . \n(r / reveal-01\n      :ARG0 (s / study-01\n            :time (p / previous))\n      :ARG1 (b / bacterium\n            :mod (d / disease\n                  :name (n / name\n                        :op1 \"MRSA\"))\n            :location (a / and\n                  :op1 (n2 / note)\n                  :op2 (c / coin))))"
    ],
    "tree": [
      "(d / discover-01\n   :ARG0 (p / person\n            :ARG0 (s / study-01)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\"))))",
      "(d / discover-01\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :ARG0 (s / study-01))\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))",
      "(p / person\n   :source (u / university\n              :name (n / name\n                       :op1 \"University\"\n                       :op2 \"of\"\n                       :op3 \"Surrey\")))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01)))",
      "(s / submerge-01\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (c / coin))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (n / note))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG2 (a2 / agar))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :purpose (a3 / accelerate-01\n                :ARG0 p))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG1 (c / coin)\n   :ARG2 (a2 / agar))",
      "(s / submerge-01\n   :ARG1 (n / note)\n   :ARG2 (a2 / agar))",
      "(s / submerge-01\n   :ARG1 (c / coin)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG1 (n / note)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (c / coin)\n   :ARG2 (a2 / agar))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (n / note)\n   :ARG2 (a2 / agar))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (c / coin)\n   :purpose (a3 / accelerate-01\n                :ARG0 p))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (c / coin)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (n / note)\n   :purpose (a3 / accelerate-01\n                :ARG0 p))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (n / note)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 p))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG1 (n / note)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (c / coin)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 p))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (c / coin)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (n / note)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 p))",
      "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (n / note)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))",
      "(a / and\n   :op1 (c / coin)\n   :op2 (n / note))",
      "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -))",
      "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :ARG0 (m / most)))",
      "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :mod (o / on-the-money)))",
      "(c / contrast-01\n   :ARG2 (c2 / cause-01\n             :ARG0 (o2 / one)))",
      "(c / contrast-01\n   :ARG2 (c2 / cause-01\n             :ARG1 (b / boil-01)))",
      "(c / contrast-01\n   :ARG2 (c2 / cause-01\n             :ARG1 (s / spot)))",
      "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :mod (o / on-the-money))\n   :ARG2 (c2 / cause-01\n             :ARG0 (o2 / one)))",
      "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :mod (o / on-the-money))\n   :ARG2 (c2 / cause-01\n             :ARG1 (b / boil-01)))",
      "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous)))",
      "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))))",
      "(r / reveal-01\n   :ARG1 (b / bacterium\n            :location (n2 / note)))",
      "(r / reveal-01\n   :ARG1 (b / bacterium\n            :location (c / coin)))",
      "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))))",
      "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :location (n2 / note)))",
      "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :location (c / coin)))"
    ],
    "smus": [
      "The students discovered.",
      "The University of Surrey people discovered --",
      "Thousands of colonies were discovered.",
      "The students discovered thousands of colonies.",
      "The University of Surrey discovered thousands of colonies.",
      "There were thousands of colonies.",
      "Students submerged.",
      "Submerged to accelerate the growth of the Pf bacteria.",
      "Students submerged the coins.",
      "Students submerged notes.",
      "Students submerged in the agar.",
      "Students submerged to accelerate.",
      "The students submerged to accelerate the growth of the Pf bacteria.",
      "The coins were submerged in the agar.",
      "The notes submerged in the agar.",
      "The coins were submerged to accelerate the growth of the Pf bacteria.",
      "The notes were submerged to accelerate the growth of the Pf bacteria.",
      "The agar was submerged to accelerate the growth of the Pf bacteria.",
      "Students submerged the coins in the agar.",
      "Students submerged notes in the agar.",
      "Students submerged the coins to accelerate.",
      "The students submerged the coins to accelerate the growth of the Pf bacteria.",
      "Students submerged notes to accelerate.",
      "The students submerged notes to accelerate the growth of the Pf bacteria.",
      "Students submerged in the agar to accelerate.",
      "The students submerged in the agar to accelerate the growth of the Pf bacteria.",
      "The notes were submerged in agar to accelerate the growth of the Pf bacteria.",
      "Students submerged coins in agar to accelerate.",
      "Students submerged coins in agar to accelerate the growth of Pf bacteria.",
      "Students submerged notes in agar to accelerate.",
      "The students submerged notes in agar to accelerate the growth of Pf bacteria.",
      "The growth of the Pf bacteria will accelerate.",
      "But one caused.",
      "But it caused boils.",
      "But it caused spots.",
      "Not harmful, but one caused.",
      "It was not harmful but caused boils.",
      "No harmful, but caused spots.",
      "One caused boils.",
      "One caused the spots.",
      "Previous studies have revealed --",
      "MRSA bacteria have been revealed.",
      "The bacteria on the notes were revealed.",
      "Bacteria in coins have been revealed.",
      "Previous studies have revealed MRSA bacteria.",
      "The bacteria in the notes have been revealed in previous studies.",
      "Previous studies have revealed bacteria in coins."
    ]
  },
  {
    "instance_id": "realsumm-2",
    "summary": "<t> Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million . </t> <t> Transfer will take total raised from player sales to \u00a3 440 m since 2004 . </t> <t> James Rodriguez , Pepe and Radamel Falcao among those sold by Porto . </t> <t> CLICK HERE for all the latest Real Madrid news . </t>",
    "summary_trees": [
      "# ::snt  Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million . \n(a / agree-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Danilo\"))\n      :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                  :name (n2 / name\n                        :op1 \"Real\"\n                        :op2 \"Madrid\"))\n            :time (d / date-entity\n                  :season (s / summer))\n            :prep-for (m / monetary-quantity\n                  :quant 23000000\n                  :unit (p2 / pound)))\n      :time (w / week\n            :mod (t2 / this)))",
      "# ::snt  Transfer will take total raised from player sales to \u00a3 440 m since 2004 . \n(t / take-01\n      :ARG0 (t2 / transfer-01)\n      :ARG1 (m / monetary-quantity\n            :ARG1-of (t3 / total-01)\n            :ARG1-of (r / raise-01\n                  :ARG3 (s / sell-01\n                        :ARG1 (p / person\n                              :ARG0-of (p2 / play-01)))))\n      :ARG3 (m2 / monetary-quantity\n            :quant 440000000\n            :unit (p3 / pound))\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :year 2004)))",
      "# ::snt  James Rodriguez , Pepe and Radamel Falcao among those sold by Porto . \n(ii / include-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"Roduez\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Pepe\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\")))\n      :ARG2 (t / that\n            :ARG1-of (s / sell-01\n                  :ARG0 (t2 / team\n                        :name (n4 / name\n                              :op1 \"Porto\")))))",
      "# ::snt  CLICK HERE for all the latest Real Madrid news . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (n / news\n            :mod (a / all)\n            :topic (t / team\n                  :name (n2 / name\n                        :op1 \"Real\"\n                        :op2 \"Madrid\"))\n            :mod (l / last)))"
    ],
    "tree": [
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\")))",
      "(a / agree-01\n   :ARG1 (j / join-04\n            :ARG0 (p / person :name (n / name :op1 \"Danilo\"))))",
      "(a / agree-01\n   :ARG1 (j / join-04\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))))",
      "(a / agree-01\n   :ARG1 (j / join-04\n            :time (d / date-entity\n                     :season (s / summer))))",
      "(a / agree-01\n   :time (w / week\n            :mod (t2 / this)))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :prep-for (m / monetary-quantity\n                         :unit (p2 / pound))))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :time (w / week\n            :mod (t2 / this)))",
      "(a / agree-01\n   :ARG1 (j / join-04\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\")))\n   :time (w / week\n            :mod (t2 / this)))",
      "(a / agree-01\n   :ARG1 (j / join-04\n            :prep-for (m / monetary-quantity\n                         :unit (p2 / pound)))\n   :time (w / week\n            :mod (t2 / this)))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p)\n   :time (w / week\n            :mod (t2 / this)))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :prep-for (m / monetary-quantity\n                         :quant 23000000))\n   :time (w / week\n            :mod (t2 / this)))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :prep-for (m / monetary-quantity\n                         :unit (p2 / pound)))\n   :time (w / week\n            :mod (t2 / this)))",
      "(p / person\n   :name (n / name\n            :op1 \"Danilo\"))",
      "(j / join-04\n   :prep-for (m / monetary-quantity\n                :quant 23000000))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01)))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01))))))",
      "(t / take-01\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01)))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01))))))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01)))))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01)))))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01)))))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01)))))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01))\n   :ARG3 (m2 / monetary-quantity\n             :unit (p3 / pound))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01)))))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000)\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000)\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(r / raise-01\n   :ARG3 (s / sell-01\n            :ARG1 (p / person\n                     :ARG0 (p2 / play-01))))",
      "(s / sell-01\n   :ARG1 (p / person\n            :ARG0 (p2 / play-01)))",
      "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"James\"\n                      :op2 \"Roduez\")))",
      "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Pepe\")))",
      "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\")))",
      "(ii / include-91\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))",
      "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Pepe\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))"
    ],
    "smus": [
      "Danilo agreed.",
      "Danilo agreed to join.",
      "agreed to join Real Madrid.",
      "agreed to join in the summer.",
      "This week agreed.",
      "Danilo agreed to join Real Madrid.",
      "Danilo agreed to join in the summer.",
      "Danilo agreed this week.",
      "Danilo agreed to join this week.",
      "This week, the parties agreed to join in the summer.",
      "Danilo agreed to join Real Madrid this week.",
      "Danilo agreed this week to join in the summer.",
      "Danilo",
      "Join Real Madrid",
      "Join in summer.",
      "Real Madrid will join in the summer.",
      "Take the total.",
      "Take the money raised from the sale of the player.",
      "Take since 2004.",
      "The transfer would take the total.",
      "The transfer would take the amount raised from the sale of the player.",
      "The transfer will take place since 2004.",
      "Take the amount raised from the sale of the player to 445 million.",
      "Take the total since 2004.",
      "Take the money raised from the sale of the player since 2004.",
      "The transfer would take 445 million from the sale of the player.",
      "The transfer would take the total since 2004.",
      "The transfer would take the amount raised from the sale of the player since 2004.",
      "Take the total in pounds since 2004.",
      "Take the amount raised from the sale of the player to 445 million since 2004.",
      "The transfer would take the total to 445 million since 2004.",
      "The sale of the player was raised.",
      "The player is sold.",
      "One of those Porto have sold.",
      "James Rodriguez was one of those Porto have sold.",
      "Pepe was one of those Porto have sold.",
      "Radamel Falcao was one of those sold by Porto.",
      "Porto have sold."
    ]
  },
  {
    "instance_id": "realsumm-3",
    "summary": "<t> Dominatrix claims Dominatrix shared a ' hot , deep kiss ' with Prince Harry in Vegas . </t> <t> Carrie Reichert said Reichert felt overdressed after seeing Harry ' cute naked a * * ' The 43-year - old made the claim in an excerpt from Reichert upcoming book . </t> <t> Kensington Palace has previously denied Reichert was invited to the hotel suite . </t>",
    "summary_trees": [
      "# ::snt  Dominatrix claims Dominatrix shared a ' hot , deep kiss ' with Prince Harry in Vegas . \n(c / claim-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dominatrix\"))\n      :ARG1 (s / share-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Prince\"\n                              :op2 \"Harry\"))\n                  :ARG1-of (h / hot-05)\n                  :ARG1-of (d / deep-03))\n            :ARG2 p2\n            :location (c2 / city\n                  :name (n3 / name\n                        :op1 \"Vegas\"))))",
      "# ::snt  Carrie Reichert said Reichert felt overdressed after seeing Harry ' cute naked a * * ' The 43-year - old made the claim in an excerpt from Reichert upcoming book . \n(c / claim-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Carrie\"\n                  :op2 \"Reichert\")\n            :age (t / temporal-quantity\n                  :quant 43\n                  :unit (y / year)))\n      :ARG1 (f / feel-01\n            :ARG0 p\n            :ARG1 (o / overdress-01\n                  :ARG1 p)\n            :time (a / after\n                  :op1 (s / see-01\n                        :ARG0 p\n                        :ARG1 (a2 / and\n                              :op1 (c2 / cute\n                                    :domain (p2 / person\n                                          :name (n2 / name\n                                                :op1 \"Harry\")))\n                              :op2 (n3 / naked\n                                    :domain p2)))))\n      :medium (t2 / thing\n            :ARG1-of (e / excerpt-01\n                  :ARG2 (b / book\n                        :ARG1-of (c3 / come-up-11)\n                        :poss p))))",
      "# ::snt  Kensington Palace has previously denied Reichert was invited to the hotel suite . \n(d / deny-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Kensington\"\n                  :op2 \"Palace\"))\n      :ARG1 (ii / invite-01\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 \"Reichert\"))\n            :ARG2 (s / suite\n                  :location (h / hotel)))\n      :time (p2 / previous))"
    ],
    "tree": [
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\")))",
      "(c / claim-01\n   :ARG1 (s / share-01\n            :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))))",
      "(c / claim-01\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG0 (p / person :name (n / name :op1 \"Dominatrix\")))))",
      "(c / claim-01\n   :ARG1 (s / share-01\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Vegas\"))))",
      "(c / claim-01\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Prince\"\n                                         :op2 \"Harry\")))))",
      "(c / claim-01\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG1 (h / hot-05))))",
      "(c / claim-01\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG1 (d / deep-03))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG0 p))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG0 p)))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\"))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Vegas\"))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Prince\"\n                                         :op2 \"Harry\")))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG1 (h / hot-05))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG1 (k / kiss-01\n                     :ARG1 (d / deep-03))))",
      "(p / person\n   :name (n / name\n            :op1 \"Dominatrix\"))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\"))))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG1 (h / hot-05)))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG1 (d / deep-03)))",
      "(s / share-01\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG0 (p / person :name (n / name :op1 \"Dominatrix\")))\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\")))\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))",
      "(s / share-01\n   :ARG1 (k / kiss-01\n            :ARG1 (h / hot-05))\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\")))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (c2 / cute\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\")))))))",
      "(c / claim-01\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :poss (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\"))\n   :ARG1 (f / feel-01\n            :ARG0 p))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\"))\n   :ARG1 (f / feel-01\n            :ARG1 (o / overdress-01\n                     :ARG1 p)))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\"))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG0 p))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :ARG0 p))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :ARG1 (o / overdress-01\n                     :ARG1 p)))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG0 p))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (c2 / cute\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\")))))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (n3 / naked\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\")))))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :ARG1 (o / overdress-01\n                     :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :ARG1 (o / overdress-01\n                     :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :poss p))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (c2 / cute\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\"))))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (n3 / naked\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\"))))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\"))\n   :ARG1 (f / feel-01\n            :ARG0 p)\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\"))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG0 p)))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\"))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (c2 / cute\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\"))))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :ARG0 p)\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :ARG1 (o / overdress-01\n                     :ARG1 p))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG0 p)))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (c2 / cute\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\"))))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 43))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (n3 / naked\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\"))))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :ARG1 (c3 / come-up-11)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :time (a / after\n                     :op1 (s / see-01\n                             :ARG1 (n3 / naked\n                                       :domain (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Harry\"))))))\n   :medium (t2 / thing\n               :ARG1 (e / excerpt-01\n                        :ARG2 (b / book\n                                 :poss p))))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 43))",
      "(p / person\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(p / person\n   :name (n / name\n            :op1 \"Carrie\"\n            :op2 \"Reichert\")\n   :age (t / temporal-quantity\n           :quant 43))",
      "(p / person\n   :name (n / name\n            :op1 \"Carrie\"\n            :op2 \"Reichert\")\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(f / feel-01\n   :ARG1 (o / overdress-01\n            :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))))",
      "(f / feel-01\n   :time (a / after\n            :op1 (s / see-01\n                    :ARG1 (c2 / cute\n                              :domain (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Harry\"))))))",
      "(f / feel-01\n   :time (a / after\n            :op1 (s / see-01\n                    :ARG1 (n3 / naked\n                              :domain (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Harry\"))))))",
      "(f / feel-01\n   :ARG1 (o / overdress-01\n            :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))\n   :time (a / after\n            :op1 (s / see-01\n                    :ARG0 p)))",
      "(f / feel-01\n   :ARG1 (o / overdress-01\n            :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))\n   :time (a / after\n            :op1 (s / see-01\n                    :ARG1 (c2 / cute\n                              :domain (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Harry\"))))))",
      "(f / feel-01\n   :ARG1 (o / overdress-01\n            :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))\n   :time (a / after\n            :op1 (s / see-01\n                    :ARG1 (n3 / naked\n                              :domain (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Harry\"))))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\")))",
      "(d / deny-01\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Reichert\"))))",
      "(d / deny-01\n   :ARG1 (ii / invite-01\n             :ARG2 (s / suite\n                      :location (h / hotel))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Reichert\"))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG2 (s / suite\n                      :location (h / hotel))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :time (p2 / previous))",
      "(d / deny-01\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Reichert\")))\n   :time (p2 / previous))",
      "(d / deny-01\n   :ARG1 (ii / invite-01\n             :ARG2 (s / suite\n                      :location (h / hotel)))\n   :time (p2 / previous))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Reichert\")))\n   :time (p2 / previous))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG2 (s / suite\n                      :location (h / hotel)))\n   :time (p2 / previous))",
      "(ii / invite-01\n    :ARG1 (p / person\n             :name (n2 / name\n                       :op1 \"Reichert\")))"
    ],
    "smus": [
      "Dominatrix claims.",
      "claiming dominatrix shared a kiss.",
      "I shared with Prince Harry,'' claims the man.",
      "The claim is that Prince Harry shared a kiss.",
      "claims they shared a hot kiss.",
      "claims they shared a deep kiss.",
      "dominatrix claims to have shared.",
      "Dominatrix claims she shared a kiss.",
      "Dominatrix claims they shared a \"Prince Harry\"",
      "Dominatrix claims they shared in Vegas.",
      "Dominatrix claims they shared a kiss with Prince Harry.",
      "Dominatrix claims they shared a hot kiss.",
      "Dominatrix claims they shared a deep kiss.",
      "Dominatrix shared a kiss.",
      "Prince Harry shared a kiss.",
      "Shared a hot kiss.",
      "Shared a deep kiss.",
      "Shared in Vegas.",
      "Dominatrix shared a kiss in Vegas.",
      "Prince Harry shared a kiss in Vegas.",
      "Hot kiss shared in Vegas.",
      "In Vegas, they shared a deep kiss.",
      "Prince Harry got a kiss.",
      "The 43-year-old made the claim.",
      "The claim is that Carrie Reichert felt.",
      "The claim was that Carrie Reichert felt overdressed.",
      "The claim is that it felt after seeing how cute Harry was.",
      "The claim was made after seeing Harry as \"naked\".",
      "The claim is made in an excerpt from Carrie Reichert's book.",
      "Carrie Reichert's claim is that she feels.",
      "Carrie Reichert's claim is that she feels overdressed.",
      "Carrie Reichert's claim is that after seeing, there is a feeling.",
      "Carrie Reichert's claim is that after seeing Harry as cute, he feels like.",
      "The 43-year-old claimed to be feeling overdressed.",
      "The 43-year-old made the claim after seeing.",
      "The 43-year-old claims feeling after seeing how cute Harry is.",
      "The 43-year-old claims to have felt after seeing Harry naked.",
      "A year old makes a claim about his feelings.",
      "The 43-year-old made the claim in an excerpt from his book.",
      "The year old made the claim in an excerpt from his book.",
      "In an excerpt from her book, Carrie Reichert's feelings are claimed.",
      "In an excerpt from her book, the claim is made that Carrie Reichert felt overdressed.",
      "In an excerpt from the book \"Come Up\" there is a claim of feelings after seeing Carrie Reichert.",
      "The claim was made in an excerpt from Carrie Reichert's book that the feeling was after seeing how cute Harry was.",
      "The claim was made in an excerpt from Carrie Reichert's book that the feeling was after seeing Harry as naked.",
      "In an excerpt from her book, Carol Reichert makes the claim that she feels.",
      "In an excerpt from her book, Carol Reichert makes the claim that \"feelings after seeing\":",
      "In an excerpt from her book, Carrie Reichert claims that the feeling after seeing Harry is cute.",
      "In an excerpt from his book, a 43-year-old made a claim about his feelings.",
      "In an excerpt from his book, a 43-year-old claimed to feel overdressed.",
      "In an excerpt from his book, the 43-year-old made the claim that \"feelings after seeing\":",
      "In an excerpt from his book, the 43-year-old claims feeling after seeing how cute Harry is.",
      "In an excerpt from his book, a 43-year-old claims to have felt \"after seeing Harry as naked.\"",
      "Feeling overdressed, Carol Reichert.",
      "Feeling after seeing how cute Harry is.",
      "Feeling after seeing Harry as \"naked\".",
      "After seeing, Carol Reichert felt overdressed.",
      "After seeing how cute Harry was, Carrie Reichert felt overdressed.",
      "After seeing Harry as \"naked\", Carrie Reichert felt overdressed.",
      "After seeing how cute Harry is.",
      "After seeing Harry as naked.",
      "Seems like Harry is cute.",
      "Seeming like Harry is naked.",
      "Harry",
      "The Kensington Palace has denied.",
      "Reichert was denied invitation.",
      "Invitation to a hotel suite was denied.",
      "The Kensington Palace has denied that Reichert was invited.",
      "The Kensington Palace has denied that an invitation was made to a hotel suite.",
      "The Kensington Palace has previously denied.",
      "Reichert had previously been denied invitation.",
      "Previously, the invitation to a hotel suite was denied.",
      "The Kensington Palace had previously denied inviting Reichert.",
      "The Kensington Palace had previously denied being invited to a hotel suite.",
      "invited to the hotel suite."
    ]
  },
  {
    "instance_id": "realsumm-4",
    "summary": "<t> Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment . </t> <t> Referred to Linn neighbors as ' n * * * * * ' but insists Linn is not racist . </t> <t> One note said : ' There were no [ expletive ] in W.L until you came ' . </t> <t> Victim has said Linn family may be forced to move as family do n't feel safe . </t>",
    "summary_trees": [
      "# ::snt  Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment . \n(a / accuse-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Eva\"\n                  :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                  :quant 34\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Oregon\"))))\n      :ARG2 (h / harass-01\n            :ARG0 p))",
      "# ::snt  Referred to Linn neighbors as ' n * * * * * ' but insists Linn is not racist . \n(c / contrast-01\n      :ARG1 (r / refer-01\n            :ARG1 (p / person\n                  :ARG1-of (n / neighbor-01\n                        :ARG2 (c2 / city\n                              :name (n2 / name\n                                    :op1 \"Linn\"))))\n            :ARG2 (n3 / nigger))\n      :ARG2 (ii / insist-01\n            :ARG1 (r2 / racist\n                  :polarity -\n                  :domain c2)))",
      "# ::snt  One note said : ' There were no [ expletive ] in W.L until you came ' . \n(s / say-01\n      :ARG0 (n / note\n            :quant 1)\n      :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                  :name (n2 / name\n                        :op1 \"W.L\"))\n            :time (u / until\n                  :op1 (c2 / come-01\n                        :ARG1 (y / you)))))",
      "# ::snt  Victim has said Linn family may be forced to move as family do n't feel safe . \n(s / say-01\n      :ARG0 (v / victim)\n      :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                  :ARG1 (f2 / family\n                        :name (n / name\n                              :op1 \"Linn\"))\n                  :ARG2 (m / move-01\n                        :ARG1 f2))\n            :ARG1-of (c / cause-01\n                  :ARG0 (f3 / feel-01\n                        :polarity -\n                        :ARG0 (f4 / family)\n                        :ARG1 (s2 / safe-01\n                              :ARG1 f4)))))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 34)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\"))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :source (c / city\n                       :location (s / state\n                                    :name (n3 / name\n                                              :op1 \"Oregon\")))))",
      "(a / accuse-01\n   :ARG2 (h / harass-01\n            :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\"))\n   :ARG2 (h / harass-01\n            :ARG0 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 34))\n   :ARG2 (h / harass-01\n            :ARG0 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (h / harass-01\n            :ARG0 p))",
      "(c / contrast-01\n   :ARG1 (r / refer-01\n            :ARG1 (p / person\n                     :ARG1 (n / neighbor-01\n                              :ARG2 (c2 / city\n                                        :name (n2 / name\n                                                  :op1 \"Linn\"))))))",
      "(c / contrast-01\n   :ARG1 (r / refer-01\n            :ARG2 (n3 / nigger)))",
      "(c / contrast-01\n   :ARG2 (ii / insist-01\n             :ARG1 (r2 / racist\n                       :polarity -)))",
      "(c / contrast-01\n   :ARG1 (r / refer-01\n            :ARG1 (p / person\n                     :ARG1 (n / neighbor-01\n                              :ARG2 (c2 / city\n                                        :name (n2 / name\n                                                  :op1 \"Linn\")))))\n   :ARG2 (ii / insist-01\n             :ARG1 (r2 / racist\n                       :polarity -)))",
      "(c / contrast-01\n   :ARG1 (r / refer-01\n            :ARG2 (n3 / nigger))\n   :ARG2 (ii / insist-01\n             :ARG1 (r2 / racist\n                       :polarity -)))",
      "(r / refer-01\n   :ARG1 (p / person\n            :ARG1 (n / neighbor-01\n                     :ARG2 (c2 / city\n                               :name (n2 / name\n                                         :op1 \"Linn\")))))",
      "(r / refer-01\n   :ARG1 (p / person\n            :ARG1 (n / neighbor-01\n                     :ARG2 (c2 / city\n                               :name (n2 / name\n                                         :op1 \"Linn\"))))\n   :ARG2 (n3 / nigger))",
      "(p / person\n   :ARG1 (n / neighbor-01\n            :ARG2 (c2 / city\n                      :name (n2 / name\n                                :op1 \"Linn\"))))",
      "(s / say-01\n   :ARG0 (n / note\n            :quant 1))",
      "(s / say-01\n   :ARG1 (b / be-located-at-91\n            :polarity -))",
      "(s / say-01\n   :ARG1 (b / be-located-at-91\n            :time (u / until\n                     :op1 (c2 / come-01\n                              :ARG1 (y / you)))))",
      "(s / say-01\n   :ARG0 (n / note\n            :quant 1)\n   :ARG1 (b / be-located-at-91\n            :polarity -))",
      "(s / say-01\n   :ARG0 (n / note\n            :quant 1)\n   :ARG1 (b / be-located-at-91\n            :ARG1 (e / expletive)))",
      "(b / be-located-at-91\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\")))",
      "(b / be-located-at-91\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\")))",
      "(s / say-01\n   :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                     :ARG1 (f2 / family\n                               :name (n / name\n                                        :op1 \"Linn\")))))",
      "(s / say-01\n   :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                     :ARG2 (m / move-01\n                              :ARG1 (f2 / family :name (n / name :op1 \"Linn\"))))))",
      "(s / say-01\n   :ARG0 (v / victim)\n   :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                     :ARG1 (f2 / family\n                               :name (n / name\n                                        :op1 \"Linn\")))))",
      "(s / say-01\n   :ARG0 (v / victim)\n   :ARG1 (p / possible-01\n            :ARG1 (c / cause-01\n                     :ARG0 (f3 / feel-01\n                               :polarity -))))",
      "(s / say-01\n   :ARG0 (v / victim)\n   :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                     :ARG2 (m / move-01\n                              :ARG1 (f2 / family :name (n / name :op1 \"Linn\"))))))",
      "(s / say-01\n   :ARG0 (v / victim)\n   :ARG1 (p / possible-01\n            :ARG1 (c / cause-01\n                     :ARG0 (f3 / feel-01\n                               :ARG0 (f4 / family)))))",
      "(p / possible-01\n   :ARG1 (f / force-01\n            :ARG1 (f2 / family\n                      :name (n / name\n                               :op1 \"Linn\"))))",
      "(p / possible-01\n   :ARG1 (f / force-01\n            :ARG2 (m / move-01\n                     :ARG1 (f2 / family :name (n / name :op1 \"Linn\")))))",
      "(f / force-01\n   :ARG1 (f2 / family\n             :name (n / name\n                      :op1 \"Linn\"))\n   :ARG2 (m / move-01\n            :ARG1 f2))"
    ],
    "smus": [
      "Eva Chapin was accused.",
      "The 34-year-old was accused.",
      "West Linn people are accused.",
      "The Oregonian was accused.",
      "Eva Chapin was accused of harassment.",
      "The 34-year-old was accused of harassment.",
      "West Linn people were accused of harassment.",
      "Oregon residents were accused of harassment.",
      "But neighbors in Linn are referred to.",
      "But referred to as nigger.",
      "But insists it is not racist.",
      "neighbors in Linn are referred to, but insists not to be racist.",
      "Referred to as nigger, but insists not racist.",
      "neighbors in Linn are referred to.",
      "Linn neighbors are referred to as nigger.",
      "Insisted not to be racist.",
      "One note said --",
      "\"Being in expletive,\" said.",
      "One note said, \"There is an expletive.",
      "One note said W.L.",
      "One note said \"Be there until you come.\"",
      "Until you come W.L.",
      "Until you come.",
      "The Linn family could be forced, it is said.",
      "It is said that the Linn family could be forced to move.",
      "Victims have said the Linn family could have been forced.",
      "Victim has said that it may be because they don't feel.",
      "Victims have said the Linn family could be forced to move.",
      "Victims have said that it may be because the family feels.",
      "The Linn family could be forced.",
      "The Linn family could be forced to move.",
      "Because it doesn't feel."
    ]
  },
  {
    "instance_id": "realsumm-5",
    "summary": "<t> Justin Rose finished joint runner - up at the Masters 2015 on 14-under - par . </t> <t> Rose 's final total has only been bettered six times at the the Masters . </t> <t> Rose hopes to build on Rose display and take some big titles across the year . </t> <t> CLICK HERE for all the latest news and reaction following the Masters . </t>",
    "summary_trees": [
      "# ::snt  Justin Rose finished joint runner - up at the Masters 2015 on 14-under - par . \n(f / finish-07\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Justin\"\n                  :op2 \"Rose\"))\n      :ARG2 (r / runner-up\n            :mod (j / joint))\n      :ARG3 (e / event\n            :name (n2 / name\n                  :op1 \"Masters\")\n            :time (d / date-entity\n                  :year 2015))\n      :manner (s / score-entity\n            :op1 14\n            :op2 (p2 / par)))",
      "# ::snt  Rose 's final total has only been bettered six times at the the Masters . \n(b / best-01\n      :frequency 6\n      :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Rose\")))\n      :mod (o / only)\n      :time (g / game\n            :name (n2 / name\n                  :op1 \"Masters\")))",
      "# ::snt  Rose hopes to build on Rose display and take some big titles across the year . \n(h / hope-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rose\"))\n      :ARG1 (a / and\n            :op1 (b / build-01\n                  :ARG0 p\n                  :ARG2 (d / display-01\n                        :ARG0 p))\n            :op2 (t / take-01\n                  :ARG0 p\n                  :ARG1 (t2 / title\n                        :mod (b2 / big)\n                        :quant (s / some))\n                  :time (a2 / across\n                        :op1 (y / year)))))",
      "# ::snt  CLICK HERE for all the latest news and reaction following the Masters . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (a / and\n            :op1 (n / news\n                  :mod (l / last))\n            :op2 (r / react-01)\n            :mod (a2 / all)\n            :ARG1-of (f / follow-01\n                  :ARG2 (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\")))))"
    ],
    "tree": [
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\")))",
      "(f / finish-07\n   :ARG2 (r / runner-up\n            :mod (j / joint)))",
      "(f / finish-07\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(f / finish-07\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015)))",
      "(f / finish-07\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(f / finish-07\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015)))",
      "(f / finish-07\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\"))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\"))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\"))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(f / finish-07\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :time (d / date-entity\n                     :year 2015))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\")))",
      "(h / hope-01\n   :ARG1 (b / build-01\n            :ARG0 (p / person :name (n / name :op1 \"Rose\"))))",
      "(h / hope-01\n   :ARG1 (t / take-01\n            :ARG0 (p / person :name (n / name :op1 \"Rose\"))))",
      "(h / hope-01\n   :ARG1 (b / build-01\n            :ARG2 (d / display-01\n                     :ARG0 (p / person :name (n / name :op1 \"Rose\")))))",
      "(h / hope-01\n   :ARG1 (t / take-01\n            :ARG1 (t2 / title\n                      :mod (b2 / big))))",
      "(h / hope-01\n   :ARG1 (t / take-01\n            :time (a2 / across\n                      :op1 (y / year))))",
      "(h / hope-01\n   :ARG1 (t / take-01\n            :ARG1 (t2 / title\n                      :quant (s / some))))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (b / build-01\n            :ARG0 p))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (t / take-01\n            :ARG0 p))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (b / build-01\n            :ARG2 (d / display-01\n                     :ARG0 p)))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (t / take-01\n            :ARG1 (t2 / title\n                      :mod (b2 / big))))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (t / take-01\n            :time (a2 / across\n                      :op1 (y / year))))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (t / take-01\n            :ARG1 (t2 / title\n                      :quant (s / some))))",
      "(p / person\n   :name (n / name\n            :op1 \"Rose\"))",
      "(a / and\n   :op1 (b / build-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\"))))",
      "(a / and\n   :op2 (t / take-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\"))))",
      "(a / and\n   :op2 (t / take-01\n           :time (a2 / across\n                     :op1 (y / year))))",
      "(a / and\n   :op2 (t / take-01\n           :ARG1 (t2 / title\n                     :quant (s / some))))",
      "(a / and\n   :op1 (b / build-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\")))\n   :op2 (t / take-01\n           :ARG0 p))",
      "(a / and\n   :op1 (b / build-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\")))\n   :op2 (t / take-01\n           :ARG1 (t2 / title\n                     :mod (b2 / big))))",
      "(a / and\n   :op1 (b / build-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\")))\n   :op2 (t / take-01\n           :time (a2 / across\n                     :op1 (y / year))))",
      "(a / and\n   :op1 (b / build-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\")))\n   :op2 (t / take-01\n           :ARG1 (t2 / title\n                     :quant (s / some))))",
      "(a / and\n   :op1 (b / build-01\n           :ARG2 (d / display-01\n                    :ARG0 (p / person :name (n / name :op1 \"Rose\"))))\n   :op2 (t / take-01\n           :ARG0 p))",
      "(a / and\n   :op1 (b / build-01\n           :ARG2 (d / display-01\n                    :ARG0 (p / person :name (n / name :op1 \"Rose\"))))\n   :op2 (t / take-01\n           :ARG1 (t2 / title\n                     :mod (b2 / big))))",
      "(a / and\n   :op1 (b / build-01\n           :ARG2 (d / display-01\n                    :ARG0 (p / person :name (n / name :op1 \"Rose\"))))\n   :op2 (t / take-01\n           :time (a2 / across\n                     :op1 (y / year))))",
      "(a / and\n   :op1 (b / build-01\n           :ARG2 (d / display-01\n                    :ARG0 (p / person :name (n / name :op1 \"Rose\"))))\n   :op2 (t / take-01\n           :ARG1 (t2 / title\n                     :quant (s / some))))",
      "(b / build-01\n   :ARG2 (d / display-01\n            :ARG0 (p / person :name (n / name :op1 \"Rose\"))))",
      "(t / take-01\n   :ARG1 (t2 / title\n             :quant (s / some)))",
      "(t / take-01\n   :time (a2 / across\n             :op1 (y / year)))",
      "(c / CLICK-01\n   :purpose (n / news\n               :mod (l / last)))",
      "(c / CLICK-01\n   :purpose (f / follow-01\n               :ARG2 (g / game\n                        :name (n2 / name\n                                  :op1 \"Masters\"))))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :location (h / here))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :purpose (n / news\n               :mod (l / last)))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :purpose (r / react-01))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :purpose (a2 / all))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :purpose (f / follow-01\n               :ARG2 (g / game\n                        :name (n2 / name\n                                  :op1 \"Masters\"))))",
      "(c / CLICK-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)))",
      "(c / CLICK-01\n   :location (h / here)\n   :purpose (r / react-01))",
      "(c / CLICK-01\n   :location (h / here)\n   :purpose (a2 / all))"
    ],
    "smus": [
      "Justin Rose finished.",
      "finished joint runner up.",
      "finished the Masters.",
      "finished 2015",
      "finished 14 under par.",
      "Justin Rose finished joint runner up.",
      "Justin Rose finished the Masters.",
      "Justin Rose finished 2015.",
      "Justin Rose finished with a par of 14",
      "Joint runner-up finished 14 under par.",
      "The Masters finished 14 under par.",
      "2015 finished 14 under par.",
      "Justin Rose finished joint runner up at the Masters.",
      "Justin Rose finished joint runner up in 2015",
      "Justin Rose finished joint runner up with a par of 14",
      "Justin Rose finished the Masters at 14 under par.",
      "Justin Rose finished 2015 at 14 under par.",
      "The joint runner-up finished the Masters at 14 under par.",
      "The joint runner-up finished 2015 on 14 under par.",
      "Justin Rose finished joint runner up at the Masters with a par of 14th.",
      "Justin Rose finished joint runner up in the 2015 event with a par of 14",
      "Rose hopes.",
      "Hope Rose will build.",
      "Hope Rose takes.",
      "Hopes Rose's display will build.",
      "Hopefully it will take the big titles.",
      "Hopes to take across the year.",
      "Hope some titles will take place.",
      "Rose hopes to build.",
      "Rose hopes to take.",
      "Rose hopes to build a display.",
      "Rose hopes to take the big titles.",
      "Rose hopes to take across the year.",
      "Rose hopes to take some titles.",
      "And Rose will build.",
      "and build Rose's display.",
      "and take the big titles.",
      "And take some titles.",
      "Rose will build and take.",
      "Rose will build and take big titles.",
      "Rose will build and take across the year.",
      "Rose will build and take some titles.",
      "Build and take Rose's display.",
      "Build Rose's display and take big titles.",
      "Build Rose's display and take across the year.",
      "Build Rose's display and take some titles.",
      "Take the big titles.",
      "Take some titles.",
      "Take big titles across the year.",
      "Some titles will take place across the year.",
      "CLICKS for following the Masters.",
      "CLICK HERE for following the Masters.",
      "Click here for reaction.",
      "And following the Masters.",
      "And the latest news is the Masters are following.",
      "All about following the Masters.",
      "And the reaction to following the Masters.",
      "And all the latest news following the Masters.",
      "Following the Masters, the latest news and reaction.",
      "Following the Masters."
    ]
  },
  {
    "instance_id": "realsumm-6",
    "summary": "<t> Girl was playing with friend when Zbigniew Huminski forced friend into car . </t> <t> Chloe 's naked body was found in nearby woods an hour - and - a - half later . </t> <t> Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing . </t>",
    "summary_trees": [
      "# ::snt  Girl was playing with friend when Zbigniew Huminski forced friend into car . \n(p / play-01\n      :ARG0 (g / girl)\n      :ARG3 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 g\n                  :ARG2 (f / friend)))\n      :time (f2 / force-01\n            :ARG0 (p3 / person\n                  :name (n / name\n                        :op1 \"Zbigniew\"\n                        :op2 \"Huminski\"))\n            :ARG1 p2\n            :ARG2 (c / car)))",
      "# ::snt  Chloe 's naked body was found in nearby woods an hour - and - a - half later . \n(f / find-01\n      :ARG1 (b / body\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Chloe\"))\n            :ARG1-of (n2 / naked-02))\n      :location (w / woods\n            :location (n3 / nearby))\n      :time (a / after\n            :quant (t / temporal-quantity\n                  :quant 1.5\n                  :unit (h / hour))))",
      "# ::snt  Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing . \n(m / multi-sentence\n      :snt1 (s / say-01\n            :ARG0 (p / person\n                  :ARG0-of (p2 / prosecute-01))\n            :ARG1 (e / evidence-01\n                  :ARG1 (a / and\n                        :op1 (s2 / strangulate-01)\n                        :op2 (v / violence\n                              :mod (s3 / sex)))))\n      :snt2 (a2 / admit-01\n            :ARG0 (p3 / person\n                  :ARG0-of (ii / immigrate-01\n                        :ARG2 (c / country\n                              :name (n / name\n                                    :op1 \"Poland\")))\n                  :ARG0-of (h / head-02\n                        :ARG1 (c2 / country\n                              :name (n2 / name\n                                    :op1 \"England\"))))\n            :ARG1 (k / kill-01\n                  :ARG0 p3)))"
    ],
    "tree": [
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (g / girl))))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend))))",
      "(p / play-01\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))))",
      "(p / play-01\n   :time (f2 / force-01\n             :ARG1 (p2 / person)))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 g)))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend))))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :time (f2 / force-01\n             :ARG1 (p2 / person)))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (g / girl)))\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (g / girl)))\n   :time (f2 / force-01\n             :ARG1 p2))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (g / girl)))\n   :time (f2 / force-01\n             :ARG2 (c / car)))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG1 p2))",
      "(p / play-01\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG2 (c / car)))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 g))\n   :time (f2 / force-01\n             :ARG1 p2))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG1 p2))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG2 (c / car)))",
      "(p2 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG1 (g / girl)))",
      "(p2 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG2 (f / friend)))",
      "(f / find-01\n   :ARG1 (b / body\n            :ARG1 (n2 / naked-02)))",
      "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby)))",
      "(f / find-01\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5)))",
      "(f / find-01\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :unit (h / hour))))",
      "(f / find-01\n   :ARG1 (b / body\n            :ARG1 (n2 / naked-02))\n   :location (w / woods\n                :location (n3 / nearby)))",
      "(f / find-01\n   :ARG1 (b / body\n            :ARG1 (n2 / naked-02))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5)))",
      "(f / find-01\n   :ARG1 (b / body\n            :ARG1 (n2 / naked-02))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :unit (h / hour))))",
      "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5)))",
      "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :unit (h / hour))))",
      "(f / find-01\n   :ARG1 (b / body\n            :ARG1 (n2 / naked-02))\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5)))",
      "(f / find-01\n   :ARG1 (b / body\n            :ARG1 (n2 / naked-02))\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :unit (h / hour))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG0 (p / person\n                     :ARG0 (p2 / prosecute-01))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG1 (e / evidence-01\n                     :ARG1 (s2 / strangulate-01))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG1 (e / evidence-01\n                     :ARG1 (v / violence\n                              :mod (s3 / sex)))))",
      "(m / multi-sentence\n   :snt2 (a2 / admit-01\n             :ARG0 (p3 / person\n                       :ARG0 (ii / immigrate-01\n                                 :ARG2 (c / country\n                                          :name (n / name\n                                                   :op1 \"Poland\"))))))",
      "(m / multi-sentence\n   :snt2 (a2 / admit-01\n             :ARG1 (k / kill-01\n                      :ARG0 (p3 / person))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG0 (p / person\n                     :ARG0 (p2 / prosecute-01)))\n   :snt2 (a2 / admit-01\n             :ARG0 (p3 / person\n                       :ARG0 (ii / immigrate-01\n                                 :ARG2 (c / country\n                                          :name (n / name\n                                                   :op1 \"Poland\"))))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG0 (p / person\n                     :ARG0 (p2 / prosecute-01)))\n   :snt2 (a2 / admit-01\n             :ARG1 (k / kill-01\n                      :ARG0 (p3 / person))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG1 (e / evidence-01\n                     :ARG1 (s2 / strangulate-01)))\n   :snt2 (a2 / admit-01\n             :ARG0 (p3 / person\n                       :ARG0 (ii / immigrate-01\n                                 :ARG2 (c / country\n                                          :name (n / name\n                                                   :op1 \"Poland\"))))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG1 (e / evidence-01\n                     :ARG1 (s2 / strangulate-01)))\n   :snt2 (a2 / admit-01\n             :ARG1 (k / kill-01\n                      :ARG0 (p3 / person))))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG1 (e / evidence-01\n                     :ARG1 (v / violence\n                              :mod (s3 / sex))))\n   :snt2 (a2 / admit-01\n             :ARG1 (k / kill-01\n                      :ARG0 (p3 / person))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01)))",
      "(s / say-01\n   :ARG1 (e / evidence-01\n            :ARG1 (s2 / strangulate-01)))",
      "(s / say-01\n   :ARG1 (e / evidence-01\n            :ARG1 (v / violence\n                     :mod (s3 / sex))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (s2 / strangulate-01)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (v / violence\n                     :mod (s3 / sex))))",
      "(e / evidence-01\n   :ARG1 (v / violence\n            :mod (s3 / sex)))",
      "(a2 / admit-01\n    :ARG0 (p3 / person\n              :ARG0 (ii / immigrate-01\n                        :ARG2 (c / country\n                                 :name (n / name\n                                          :op1 \"Poland\")))))",
      "(a2 / admit-01\n    :ARG1 (k / kill-01\n             :ARG0 (p3 / person)))"
    ],
    "smus": [
      "Playing with the Girl.",
      "Playing with a friend.",
      "Playing when Zbigniew Huminski forced.",
      "Playing when people were forced.",
      "The Girl was playing with her.",
      "The Girl is playing with a friend.",
      "The Girl was playing when Zbigniew Huminski forced her.",
      "The Girl was playing when people were forced.",
      "The girl was playing when Zbigniew Huminski forced her.",
      "The girl was playing when she was forced.",
      "The girl was playing when the car forced into action.",
      "When Zbigniew Huminski forced, he was playing with a friend.",
      "Playing with a friend when forced.",
      "When the car forced into it, a friend was playing.",
      "The Girl was playing with her when she was forced.",
      "The Girl was playing with a friend when she was forced.",
      "The Girl was playing with a friend when the car forced into.",
      "Zbigniew Huminski forced.",
      "Zbigniew Huminski forced the car.",
      "The body was found naked.",
      "Found in nearby woods.",
      "Found 1.5 hours later.",
      "Found an hour later.",
      "A naked body was found in the nearby woods.",
      "The body was found 1.5 hours later.",
      "The body was found an hour later, naked.",
      "Found in nearby woods 1.5 hours later.",
      "Found in nearby woods an hour later.",
      "The naked body was found in the nearby woods 1.5 hours later.",
      "The naked body was found in the nearby woods an hour later.",
      "Prosecutors say.",
      "There is evidence of strangulation, say.",
      "There is evidence of sexual violence, say the authorities.",
      "Polish immigrants are admitted.",
      "People are admitted to killing.",
      "Prosecutors say. Poles who have immigrated have admitted.",
      "Prosecutors say, \"People are being admitted to killing.\"",
      "There is evidence of strangulation, immigrants from Poland have admitted.",
      "There is evidence of strangulation, people have admitted killing.",
      "There is evidence of sexual violence, people have been admitted to killing.",
      "Prosecutors say --",
      "There is evidence of strangulation, they say.",
      "There is evidence of sexual violence, they say.",
      "Prosecutors say there is evidence of strangulation.",
      "Prosecutors say there is evidence of sexual violence.",
      "There is evidence of sexual violence.",
      "Pole immigrants have admitted to killing.",
      "Heading for England."
    ]
  },
  {
    "instance_id": "realsumm-7",
    "summary": "<t> Pair were left homeless after storms and met in Connecticut trailer park . </t> <t> Won lottery last year but only cashed prize in after Easter to mark new start . ' </t> <t> Because of Sandy I met the love of my life ' , said thrilled lottery winner . </t>",
    "summary_trees": [
      "# ::snt  Pair were left homeless after storms and met in Connecticut trailer park . \n(a / and\n      :op1 (l / leave-13\n            :ARG1 (p / pair)\n            :ARG2 (h / homeless\n                  :domain p)\n            :time (a2 / after\n                  :op1 (s / storm)))\n      :op2 (m / meet-03\n            :ARG0 p\n            :location (p2 / park\n                  :mod (t / trailer)\n                  :location (s2 / state\n                        :name (n / name\n                              :op1 \"Connecticut\")))))",
      "# ::snt  Won lottery last year but only cashed prize in after Easter to mark new start . ' \n(c / contrast-01\n      :ARG1 (w / win-01\n            :ARG2 (l / lottery)\n            :time (y / year\n                  :mod (l2 / last)))\n      :ARG2 (c2 / cash-in-03\n            :ARG1 (p / prize)\n            :time (a / after\n                  :op1 (f / festival\n                        :name (n / name\n                              :op1 \"Easter\")))\n            :purpose (m / mark-01\n                  :ARG1 (s / start-01\n                        :ARG1-of (n2 / new-01)))\n            :mod (o / only)))",
      "# ::snt  Because of Sandy I met the love of my life ' , said thrilled lottery winner . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (w / win-01\n                  :ARG1 (l / lottery))\n            :ARG1-of (t / thrill-01))\n      :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Sandy\"))\n            :ARG1 (m / meet-02\n                  :ARG0 p\n                  :ARG1 (p3 / person\n                        :ARG0-of (l2 / love-01\n                              :ARG1 p)\n                        :ARG0-of (l3 / live-01\n                              :ARG1 p)))))"
    ],
    "tree": [
      "(a / and\n   :op1 (l / leave-13\n           :ARG1 (p / pair)))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG2 (h / homeless\n                    :domain (p / pair))))",
      "(a / and\n   :op1 (l / leave-13\n           :time (a2 / after\n                     :op1 (s / storm))))",
      "(a / and\n   :op2 (m / meet-03\n           :ARG0 (p / pair)))",
      "(a / and\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :mod (t / trailer))))",
      "(a / and\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :location (s2 / state\n                                       :name (n / name\n                                                :op1 \"Connecticut\")))))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG1 (p / pair))\n   :op2 (m / meet-03\n           :ARG0 p))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG1 (p / pair))\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :mod (t / trailer))))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG1 (p / pair))\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :location (s2 / state\n                                       :name (n / name\n                                                :op1 \"Connecticut\")))))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG2 (h / homeless\n                    :domain (p / pair)))\n   :op2 (m / meet-03\n           :ARG0 p))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG2 (h / homeless\n                    :domain (p / pair)))\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :mod (t / trailer))))",
      "(a / and\n   :op1 (l / leave-13\n           :ARG2 (h / homeless\n                    :domain (p / pair)))\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :location (s2 / state\n                                       :name (n / name\n                                                :op1 \"Connecticut\")))))",
      "(a / and\n   :op1 (l / leave-13\n           :time (a2 / after\n                     :op1 (s / storm)))\n   :op2 (m / meet-03\n           :ARG0 (p / pair)))",
      "(a / and\n   :op1 (l / leave-13\n           :time (a2 / after\n                     :op1 (s / storm)))\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :mod (t / trailer))))",
      "(a / and\n   :op1 (l / leave-13\n           :time (a2 / after\n                     :op1 (s / storm)))\n   :op2 (m / meet-03\n           :location (p2 / park\n                         :location (s2 / state\n                                       :name (n / name\n                                                :op1 \"Connecticut\")))))",
      "(l / leave-13\n   :ARG2 (h / homeless\n            :domain (p / pair)))",
      "(l / leave-13\n   :time (a2 / after\n             :op1 (s / storm)))",
      "(l / leave-13\n   :ARG1 (p / pair)\n   :ARG2 (h / homeless\n            :domain p))",
      "(l / leave-13\n   :ARG1 (p / pair)\n   :time (a2 / after\n             :op1 (s / storm)))",
      "(l / leave-13\n   :ARG2 (h / homeless\n            :domain (p / pair))\n   :time (a2 / after\n             :op1 (s / storm)))",
      "(l / leave-13\n   :ARG1 (p / pair)\n   :ARG2 (h / homeless\n            :domain p)\n   :time (a2 / after\n             :op1 (s / storm)))",
      "(m / meet-03\n   :location (p2 / park\n                 :mod (t / trailer)))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery)))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :time (y / year\n                     :mod (l2 / last))))",
      "(c / contrast-01\n   :ARG2 (c2 / cash-in-03\n             :ARG1 (p / prize)))",
      "(c / contrast-01\n   :ARG2 (c2 / cash-in-03\n             :time (a / after\n                      :op1 (f / festival\n                              :name (n / name\n                                       :op1 \"Easter\")))))",
      "(c / contrast-01\n   :ARG2 (c2 / cash-in-03\n             :purpose (m / mark-01\n                         :ARG1 (s / start-01\n                                  :ARG1 (n2 / new-01)))))",
      "(c / contrast-01\n   :ARG2 (c2 / cash-in-03\n             :mod (o / only)))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery))\n   :ARG2 (c2 / cash-in-03\n             :ARG1 (p / prize)))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery))\n   :ARG2 (c2 / cash-in-03\n             :time (a / after\n                      :op1 (f / festival\n                              :name (n / name\n                                       :op1 \"Easter\")))))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery))\n   :ARG2 (c2 / cash-in-03\n             :purpose (m / mark-01\n                         :ARG1 (s / start-01\n                                  :ARG1 (n2 / new-01)))))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery))\n   :ARG2 (c2 / cash-in-03\n             :mod (o / only)))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :ARG1 (p / prize)))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :time (a / after\n                      :op1 (f / festival\n                              :name (n / name\n                                       :op1 \"Easter\")))))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :purpose (m / mark-01\n                         :ARG1 (s / start-01\n                                  :ARG1 (n2 / new-01)))))",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :mod (o / only)))",
      "(w / win-01\n   :time (y / year\n            :mod (l2 / last)))",
      "(w / win-01\n   :ARG2 (l / lottery)\n   :time (y / year\n            :mod (l2 / last)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (t / thrill-01)))",
      "(s / say-01\n   :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"))))",
      "(s / say-01\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG0 (p / person))))",
      "(s / say-01\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG1 (p3 / person\n                               :ARG0 (l3 / live-01\n                                         :ARG1 (p / person))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery)))\n   :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery)))\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery)))\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG1 (p3 / person\n                               :ARG0 (l2 / love-01\n                                         :ARG1 p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery)))\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG1 (p3 / person\n                               :ARG0 (l3 / live-01\n                                         :ARG1 p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG1 (p3 / person\n                               :ARG0 (l2 / love-01\n                                         :ARG1 p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG1 (m / meet-02\n                     :ARG1 (p3 / person\n                               :ARG0 (l3 / live-01\n                                         :ARG1 p)))))",
      "(p / person\n   :ARG0 (w / win-01\n            :ARG1 (l / lottery)))",
      "(p / person\n   :ARG0 (w / win-01\n            :ARG1 (l / lottery))\n   :ARG1 (t / thrill-01))",
      "(c / cause-01\n   :ARG1 (m / meet-02\n            :ARG0 (p / person)))",
      "(c / cause-01\n   :ARG1 (m / meet-02\n            :ARG1 (p3 / person\n                      :ARG0 (l2 / love-01\n                                :ARG1 (p / person)))))",
      "(c / cause-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Sandy\"))\n   :ARG1 (m / meet-02\n            :ARG0 (p / person)))"
    ],
    "smus": [
      "And the pair were left.",
      "And the pair were left homeless.",
      "And left after the storms.",
      "and the pair met.",
      "and met at a trailer park.",
      "and met at a park in Connecticut.",
      "The pair left and met.",
      "The pair left and met at a trailer park.",
      "The pair left and met at a Connecticut park.",
      "The pair were left homeless and met.",
      "The pair were left homeless and met in a trailer park.",
      "The pair were left homeless and met in a Connecticut park.",
      "The pair were left after the storms and met.",
      "Left after storms and met at trailer park.",
      "Leaved after storms and met at a Connecticut park.",
      "The pair were left homeless.",
      "Leaved after storms",
      "The pair were left after the storms.",
      "The pair were left homeless after the storms.",
      "met at a trailer park.",
      "The meeting took place in a park in Connecticut.",
      "There is a trailer park in Connecticut.",
      "But cash in to mark the start of a new.",
      "Lottery wins, but prize cash in.",
      "Lottery wins, but after Easter, cash in.",
      "Lottery wins, but cash in to mark the start of a new.",
      "Lottery wins, but only cash in.",
      "The win last year was cash in to mark the start of a new year.",
      "cash in to mark the start of a new",
      "The prize will be cashed in after Easter.",
      "The prize will be cash-in to mark the start of a new year.",
      "After Easter, cash in to mark the start of a new year.",
      "Cash in only to mark the start of a new.",
      "The prize will be cashed in after Easter to mark the start of a new year.",
      "The prize is only cash in to mark the start of a new year.",
      "Only after Easter to cash in to mark the start of a new year.",
      "The prize will only be cashed in after Easter to mark the start of a new year.",
      "mark the start of a new",
      "Lottery winners said --",
      "\"Thrillers said.",
      "Because the people met,\" said the man.",
      "Because people who love each other met,\" said the man.",
      "Lottery winners said because Sandy.",
      "Lottery winners said they met because they met.",
      "Lottery winners said because they met their love.",
      "Lottery winners said because they met their own people.",
      "\"Sandy, because,\" the thrill-seeker said.",
      "The thrill seekers said, \"because I met.",
      "\"Because I met someone who was in love,\" the thrill-seeker said.",
      "The thrill seekers said because they met their own people.",
      "Lottery wins are thrilling.",
      "Because the people met.",
      "Because people who love each other met.",
      "Because Sandy, people met.",
      "Because Sandy met people who are in love.",
      "People who met through love."
    ]
  },
  {
    "instance_id": "realsumm-8",
    "summary": "<t> Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam . </t> <t> Former Barcelona man picked up the injury during Chelsea 's home win . </t> <t> Midfielder Adam scored wonder goal during the game but goal was n't enough . </t> <t> Fabregas took to Instagram to show Adam was all smiles despite the bruises . </t> <t> CLICK HERE for all the latest Chelsea news . </t>",
    "summary_trees": [
      "# ::snt  Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam . \n(c / catch-03\n      :ARG0 (a / arm\n            :part-of (p / person\n                  :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Adam\")\n                  :mod (a2 / ace)\n                  :part-of (t / team\n                        :name (n2 / name\n                              :op1 \"Stoke\"\n                              :op2 \"City\")))\n            :ARG0-of (t2 / trail-01))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Cesc\"\n                  :op2 \"Fabregas\")))",
      "# ::snt  Former Barcelona man picked up the injury during Chelsea 's home win . \n(p / pick-up-11\n      :ARG0 (m / man\n            :time (f / former)\n            :part-of (t / team\n                  :name (n / name\n                        :op1 \"Barcelona\")))\n      :ARG1 (ii / injury)\n      :time (w / win-01\n            :ARG0 (t2 / team\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))\n            :location (h / home)))",
      "# ::snt  Midfielder Adam scored wonder goal during the game but goal was n't enough . \n(h / have-concession-91\n      :ARG1 (h2 / have-quant-91\n            :polarity -\n            :ARG1 (g / goal)\n            :ARG3 (e / enough))\n      :ARG2 (s / score-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Adam\")\n                  :ARG0-of (h3 / have-org-role-91\n                        :ARG2 (m / midfielder)))\n            :ARG1 (g2 / goal\n                  :mod (w / wonder))\n            :time (g3 / game)))",
      "# ::snt  Fabregas took to Instagram to show Adam was all smiles despite the bruises . \n(t / take-35\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Fabregas\"))\n      :ARG2 (p2 / publication\n            :name (n2 / name\n                  :op1 \"Instagram\"))\n      :purpose (s / show-01\n            :ARG0 p\n            :ARG1 (s2 / smile-01\n                  :ARG0 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Adam\"))\n                  :mod (a / all)\n                  :concession (b / bruise-01\n                        :ARG1 p3))))",
      "# ::snt  CLICK HERE for all the latest Chelsea news . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (n / news\n            :mod (l / last)\n            :mod (a / all)\n            :topic (p / person\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))))"
    ],
    "tree": [
      "(c / catch-03\n   :ARG0 (a / arm\n            :ARG0 (t2 / trail-01)))",
      "(c / catch-03\n   :ARG0 (a / arm\n            :part (p / person\n                     :part (t / team\n                              :name (n2 / name\n                                        :op1 \"Stoke\"\n                                        :op2 \"City\")))))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))",
      "(c / catch-03\n   :ARG0 (a / arm\n            :part (p / person\n                     :name (n / name\n                              :op1 \"Charlie\"\n                              :op2 \"Adam\")))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))",
      "(c / catch-03\n   :ARG0 (a / arm\n            :ARG0 (t2 / trail-01))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))",
      "(c / catch-03\n   :ARG0 (a / arm\n            :part (p / person\n                     :mod (a2 / ace)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))",
      "(c / catch-03\n   :ARG0 (a / arm\n            :part (p / person\n                     :part (t / team\n                              :name (n2 / name\n                                        :op1 \"Stoke\"\n                                        :op2 \"City\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))",
      "(a / arm\n   :part (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Adam\")))",
      "(a / arm\n   :part (p / person\n            :mod (a2 / ace)))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former)))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Barcelona\"))))",
      "(p / pick-up-11\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Chelsea\"))))",
      "(p / pick-up-11\n   :time (w / win-01\n            :location (h / home)))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former))\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Chelsea\"))))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former))\n   :time (w / win-01\n            :location (h / home)))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Barcelona\")))\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Chelsea\"))))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former))\n   :ARG1 (ii / injury))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Barcelona\")))\n   :ARG1 (ii / injury))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :polarity -))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG1 (g / goal)))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG3 (e / enough)))",
      "(h / have-concession-91\n   :ARG2 (s / score-01\n            :ARG1 (g2 / goal\n                      :mod (w / wonder))))",
      "(h / have-concession-91\n   :ARG2 (s / score-01\n            :time (g3 / game)))",
      "(h / have-concession-91\n   :ARG2 (s / score-01\n            :ARG0 (p / person\n                     :ARG0 (h3 / have-org-role-91\n                               :ARG2 (m / midfielder)))))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :polarity -)\n   :ARG2 (s / score-01\n            :ARG1 (g2 / goal\n                      :mod (w / wonder))))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :polarity -)\n   :ARG2 (s / score-01\n            :time (g3 / game)))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG1 (g / goal))\n   :ARG2 (s / score-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Adam\"))))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG1 (g / goal))\n   :ARG2 (s / score-01\n            :ARG1 (g2 / goal\n                      :mod (w / wonder))))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG3 (e / enough))\n   :ARG2 (s / score-01\n            :ARG1 (g2 / goal\n                      :mod (w / wonder))))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG3 (e / enough))\n   :ARG2 (s / score-01\n            :time (g3 / game)))",
      "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :ARG3 (e / enough))\n   :ARG2 (s / score-01\n            :ARG0 (p / person\n                     :ARG0 (h3 / have-org-role-91\n                               :ARG2 (m / midfielder)))))",
      "(h2 / have-quant-91\n    :ARG1 (g / goal)\n    :ARG3 (e / enough))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\")))",
      "(s / score-01\n   :ARG0 (p / person\n            :ARG0 (h3 / have-org-role-91\n                      :ARG2 (m / midfielder))))",
      "(s / score-01\n   :ARG1 (g2 / goal\n             :mod (w / wonder)))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\"))\n   :ARG1 (g2 / goal\n             :mod (w / wonder)))",
      "(s / score-01\n   :ARG0 (p / person\n            :ARG0 (h3 / have-org-role-91\n                      :ARG2 (m / midfielder)))\n   :ARG1 (g2 / goal\n             :mod (w / wonder)))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\"))\n   :time (g3 / game))",
      "(s / score-01\n   :ARG0 (p / person\n            :ARG0 (h3 / have-org-role-91\n                      :ARG2 (m / midfielder)))\n   :time (g3 / game))",
      "(t / take-35\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\")))",
      "(t / take-35\n   :purpose (s / show-01\n               :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))))",
      "(t / take-35\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :ARG0 (p3 / person\n                                   :name (n3 / name\n                                             :op1 \"Adam\")))))",
      "(t / take-35\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :mod (a / all))))",
      "(t / take-35\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :concession (b / bruise-01\n                                        :ARG1 (p3 / person :name (n3 / name :op1 \"Adam\"))))))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\")))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :purpose (s / show-01\n               :ARG0 p))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :ARG0 (p3 / person\n                                   :name (n3 / name\n                                             :op1 \"Adam\")))))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :concession (b / bruise-01\n                                        :ARG1 (p3 / person :name (n3 / name :op1 \"Adam\"))))))",
      "(t / take-35\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))))",
      "(t / take-35\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :ARG0 (p3 / person\n                                   :name (n3 / name\n                                             :op1 \"Adam\")))))",
      "(t / take-35\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :mod (a / all))))",
      "(t / take-35\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :concession (b / bruise-01\n                                        :ARG1 (p3 / person :name (n3 / name :op1 \"Adam\"))))))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG0 p))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :ARG0 (p3 / person\n                                   :name (n3 / name\n                                             :op1 \"Adam\")))))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :mod (a / all))))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG1 (s2 / smile-01\n                         :concession (b / bruise-01\n                                        :ARG1 (p3 / person :name (n3 / name :op1 \"Adam\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Fabregas\"))",
      "(p2 / publication\n    :name (n2 / name\n              :op1 \"Instagram\"))",
      "(s / show-01\n   :ARG1 (s2 / smile-01\n             :ARG0 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Adam\"))))",
      "(s / show-01\n   :ARG1 (s2 / smile-01\n             :mod (a / all)))"
    ],
    "smus": [
      "The trailing arm was caught.",
      "The Stoke City's arm got caught.",
      "Cesc Fabregas was caught.",
      "Charlie Adam's arm caught Cesc Fabregas.",
      "a href=\"http://www.youtube.com/watch?v=ccsfgg\">Cesc Fabregas: Catches trailing arm/a>",
      "The ace's arm caught Cesc Fabregas.",
      "Stoke City's arm caught Cesc Fabregas.",
      "Charlie Adam's arm is trailing.",
      "Trailing arm of Stoke City",
      "The former man picked up.",
      "The Barcelona man picked up.",
      "Picked up with Chelsea win.",
      "Picked up with a win at home.",
      "The former man picked up with Chelsea's victory.",
      "The former man picked up with a win at home.",
      "Barcelona's man picked up in the Chelsea win.",
      "The former man picked up the injury.",
      "Barcelona's man picked up an injury.",
      "But there is a goal.",
      "Adam scored though.",
      "But the wonder goal scored.",
      "However, the midfielder scored.",
      "Adam scored, but not as much.",
      "Not a lot, but a wonder goal scored.",
      "Not a lot, but the midfielder scored.",
      "Adam scored but it was a goal.",
      "The goal was scored in the game.",
      "The midfielder scored but the goal was a goal.",
      "Not enough but the midfielder scored.",
      "Adam scored.",
      "The midfielder scored.",
      "The wonder goal scored.",
      "Adam scored a wonder goal.",
      "The midfielder scored a wonder goal.",
      "Adam scored in the game.",
      "The midfielder scored in the game.",
      "Wonder goal scored in game",
      "Adam scored a wonder goal in the game.",
      "The midfielder scored a wonder goal in the game.",
      "It took an Instagram.",
      "It took Fabregas to show.",
      "It took to show Adam's smiles.",
      "It took to show all the smiles.",
      "It took to show the smiles despite Adam's bruises.",
      "Fabregas took to Instagram.",
      "Fabregas took to show.",
      "Fabregas took to show Adam's smiles.",
      "Fabregas took to show smiles despite Adam's bruises.",
      "It took Instagram to show Fabregas.",
      "It took an Instagram to show Adam's smiles.",
      "It took an Instagram to show all the smiles.",
      "It took an Instagram to show the smiles despite Adam's bruises.",
      "Fabregas took to Instagram to show.",
      "Fabregas took to Instagram to show Adam's smiles.",
      "Fabregas took to Instagram to show all the smiles.",
      "Fabregas took to Instagram to show the smiles despite Adam's bruises.",
      "Show Adam's smiles.",
      "Show all smiles.",
      "Show smiles despite Adam's bruises.",
      "Adam smiles despite bruises."
    ]
  },
  {
    "instance_id": "realsumm-9",
    "summary": "<t> The life of 16-year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . ' </t> <t> I do n't think there 's anything sad about this . </t> <t> this 's such a celebration , ' said Darby Hudd , a 17-year - old friend of the slain teen . </t> <t> A classmate , Christopher Plaskon , has been charged with Sanchez 's murder . </t>",
    "summary_trees": [
      "# ::snt  The life of 16-year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . ' \n(m / multi-sentence\n      :snt1 (c / celebrate-01\n            :ARG0 (p / person\n                  :quant (m2 / multiple\n                        :op1 100))\n            :ARG1 (l / life\n                  :poss (p2 / person\n                        :name (n / name\n                              :op1 \"Maren\"\n                              :op2 \"Sanchez\")\n                        :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                        :ARG1-of (s / stab-01\n                              :ARG4 (d / die-01\n                                    :ARG1 p2)\n                              :time (b / before\n                                    :op1 (n2 / now)\n                                    :quant (t2 / temporal-quantity\n                                          :quant 1\n                                          :unit (y2 / year)))\n                              :time (d2 / day\n                                    :time-of (p3 / prom)))))\n            :time (d3 / date-entity\n                  :weekday (s2 / saturday))))",
      "# ::snt  I do n't think there 's anything sad about this . \n(t / think-01\n      :polarity -\n      :ARG0 (ii / i)\n      :ARG1 (s / sad-02\n            :ARG0 (a / anything)\n            :topic (t2 / this)))",
      "# ::snt  this 's such a celebration , ' said Darby Hudd , a 17-year - old friend of the slain teen . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Darby\"\n                  :op2 \"Hudd\")\n            :age (t / temporal-quantity\n                  :quant 17\n                  :unit (y / year))\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (t2 / teen\n                        :ARG1-of (s2 / slay-01))\n                  :ARG2 (f / friend)))\n      :ARG1 (c / celebrate-02\n            :ARG1 (t3 / this)\n            :mod (s3 / such)))",
      "# ::snt  A classmate , Christopher Plaskon , has been charged with Sanchez 's murder . \n(m / multi-sentence\n      :snt1 (c / charge-05\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Christopher\"\n                        :op2 \"Plaskon\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG2 (c2 / classmate)))\n            :ARG2 (m2 / murder-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Sanchez\")))))"
    ],
    "tree": [
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG0 (p / person\n                     :quant (m2 / multiple\n                                :op1 100))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :name (n / name\n                                        :op1 \"Maren\"\n                                        :op2 \"Sanchez\")))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :time (d3 / date-entity\n                      :weekday (s2 / saturday))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :age (t / temporal-quantity\n                                       :quant 16)))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :age (t / temporal-quantity\n                                       :unit (y / year))))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :ARG1 (s / stab-01\n                                        :time (d2 / day\n                                                  :time (p3 / prom)))))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :ARG1 (s / stab-01\n                                        :time (b / before\n                                                 :quant (t2 / temporal-quantity\n                                                            :quant 1)))))))",
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :ARG1 (s / stab-01\n                                        :time (b / before\n                                                 :quant (t2 / temporal-quantity\n                                                            :unit (y2 / year))))))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\"))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 16))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :op1 (n2 / now))))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (d2 / day\n                                         :time (p3 / prom))))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1))))))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :quant (t2 / temporal-quantity\n                                                   :unit (y2 / year)))))))",
      "(c / celebrate-01\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 16))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :op1 (n2 / now))))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (d2 / day\n                                         :time (p3 / prom))))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1))))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 16)))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :op1 (n2 / now)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (d2 / day\n                                         :time (p3 / prom)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :quant (t2 / temporal-quantity\n                                                   :unit (y2 / year))))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 16)))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :ARG1 (s / stab-01\n                               :time (b / before\n                                        :quant (t2 / temporal-quantity\n                                                   :unit (y2 / year))))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(p / person\n   :quant (m2 / multiple\n              :op1 100))",
      "(l / life\n   :poss (p2 / person\n             :name (n / name\n                      :op1 \"Maren\"\n                      :op2 \"Sanchez\")))",
      "(l / life\n   :poss (p2 / person\n             :age (t / temporal-quantity\n                     :unit (y / year))))",
      "(l / life\n   :poss (p2 / person\n             :ARG1 (s / stab-01\n                      :time (b / before\n                               :op1 (n2 / now)))))",
      "(l / life\n   :poss (p2 / person\n             :ARG1 (s / stab-01\n                      :time (b / before\n                               :quant (t2 / temporal-quantity\n                                          :quant 1)))))",
      "(l / life\n   :poss (p2 / person\n             :ARG1 (s / stab-01\n                      :time (b / before\n                               :quant (t2 / temporal-quantity\n                                          :unit (y2 / year))))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :quant 16))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :unit (y / year)))",
      "(p2 / person\n    :ARG1 (s / stab-01\n             :ARG4 (d / die-01\n                      :ARG1 p2)))",
      "(p2 / person\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :op1 (n2 / now))))",
      "(p2 / person\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :quant (t2 / temporal-quantity\n                                 :quant 1))))",
      "(p2 / person\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :quant (t2 / temporal-quantity\n                                 :unit (y2 / year)))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :age (t / temporal-quantity\n            :quant 16))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :age (t / temporal-quantity\n            :unit (y / year)))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :op1 (n2 / now))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :ARG1 (s / stab-01\n             :time (d2 / day\n                       :time (p3 / prom))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :quant (t2 / temporal-quantity\n                                 :quant 1))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :quant (t2 / temporal-quantity\n                                 :unit (y2 / year)))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :op1 (n2 / now))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :time (d2 / day\n                       :time (p3 / prom))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :quant (t2 / temporal-quantity\n                                 :unit (y2 / year)))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :unit (y / year))\n    :ARG1 (s / stab-01\n             :ARG4 (d / die-01\n                      :ARG1 p2)))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :unit (y / year))\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :op1 (n2 / now))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :ARG4 (d / die-01\n                      :ARG1 p2)))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :op1 (n2 / now))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :time (d2 / day\n                       :time (p3 / prom))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Maren\"\n             :op2 \"Sanchez\")\n    :age (t / temporal-quantity\n            :quant 16)\n    :ARG1 (s / stab-01\n             :time (b / before\n                      :quant (t2 / temporal-quantity\n                                 :quant 1))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Darby\"\n                     :op2 \"Hudd\"))\n   :ARG1 (c / celebrate-02\n            :ARG1 (t3 / this)))",
      "(s / say-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 17))\n   :ARG1 (c / celebrate-02\n            :ARG1 (t3 / this)))",
      "(s / say-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 17))\n   :ARG1 (c / celebrate-02\n            :mod (s3 / such)))",
      "(s / say-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (c / celebrate-02\n            :ARG1 (t3 / this)))",
      "(s / say-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (c / celebrate-02\n            :mod (s3 / such)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (c / celebrate-02\n            :ARG1 (t3 / this)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (c / celebrate-02\n            :mod (s3 / such)))",
      "(p / person\n   :name (n / name\n            :op1 \"Darby\"\n            :op2 \"Hudd\"))",
      "(p / person\n   :name (n / name\n            :op1 \"Darby\"\n            :op2 \"Hudd\")\n   :age (t / temporal-quantity\n           :quant 17))",
      "(m / multi-sentence\n   :snt1 (c / charge-05\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Christopher\"\n                              :op2 \"Plaskon\"))))",
      "(m / multi-sentence\n   :snt1 (c / charge-05\n            :ARG2 (m2 / murder-01\n                      :ARG0 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Plaskon\"))))))",
      "(m / multi-sentence\n   :snt1 (c / charge-05\n            :ARG1 (p / person\n                     :ARG0 (h / have-rel-role-91\n                              :ARG2 (c2 / classmate)))))",
      "(c / charge-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Plaskon\")))",
      "(c / charge-05\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (c2 / classmate))))",
      "(c / charge-05\n   :ARG2 (m2 / murder-01\n             :ARG0 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Plaskon\")))))",
      "(c / charge-05\n   :ARG2 (m2 / murder-01\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sanchez\"))))",
      "(c / charge-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Plaskon\"))\n   :ARG2 (m2 / murder-01\n             :ARG0 p))",
      "(c / charge-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Plaskon\"))\n   :ARG2 (m2 / murder-01\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sanchez\"))))"
    ],
    "smus": [
      "Hundreds of people celebrated.",
      "The life of Maren Sanchez is celebrated.",
      "Celebrated on Saturday.",
      "The life of the 16-year-old was celebrated.",
      "Celebrate the life of a year old.",
      "Celebrating the life of the person who was stabbed on the day of prom.",
      "The life of the people who were stabbed one before is celebrated.",
      "The life of the person stabbed a year earlier is celebrated.",
      "The life of a year old is celebrated.",
      "The life of those who were stabbed earlier is celebrated.",
      "The life of the person who was stabbed on the day of prom is celebrated.",
      "The life of those who were stabbed one before was celebrated.",
      "Celebrated Saturday.",
      "Hundreds have celebrated Maren Sanchez's life.",
      "Hundreds have celebrated the life of a 16-year-old.",
      "Hundreds have celebrated the life of those who stabbed to death.",
      "Hundreds have celebrated the life of a year.",
      "Hundreds have celebrated the life of those stabbed the day of prom.",
      "Hundreds have celebrated the life of people who have been stabbed one before.",
      "Hundreds have celebrated the life of those stabbed a year earlier.",
      "Hundreds celebrated Saturday.",
      "Maren Sanchez's life will be celebrated on Saturday.",
      "The life of the 16-year-old was celebrated Saturday.",
      "The life of a year is celebrated on Saturday.",
      "The life of the person who was stabbed on prom day was celebrated Saturday.",
      "The life of the person who was stabbed one before was celebrated on Saturday.",
      "The life of the person stabbed a year earlier was celebrated on Saturday.",
      "On Saturday, hundreds celebrated Maren Sanchez's life.",
      "On Saturday hundreds celebrated the life of the 16-year-old.",
      "On Saturday, hundreds celebrated the life of a year.",
      "Hundreds celebrated the life of those who were stabbed earlier Saturday.",
      "On Saturday, hundreds celebrated the life of people stabbed on prom day.",
      "Hundreds celebrated the life of people stabbed one before on Saturday.",
      "On Saturday, hundreds celebrated the life of people stabbed a year earlier.",
      "The life of the person who was stabbed the day of prom.",
      "The life of the person who was stabbed one before.",
      "The life of the person who was stabbed a year earlier.",
      "The person who was stabbed to death.",
      "The person who was stabbed one before.",
      "The person who was stabbed a year earlier.",
      "Maren Sanchez, stabbed earlier.",
      "Maren Sanchez, stabbed the day of the prom",
      "Maren Sanchez, stabbed a year earlier",
      "The 16-year-old was stabbed to death.",
      "The 16-year-old who was stabbed earlier.",
      "The 16-year-old was stabbed the day of the prom.",
      "The 16-year-old was stabbed a year earlier.",
      "A year old was stabbed to death.",
      "A year old who was stabbed earlier.",
      "A year old who was stabbed on a prom day.",
      "A year old who was stabbed a year earlier.",
      "Maren Sanchez, 16, was stabbed to death.",
      "Maren Sanchez, 16, was stabbed earlier.",
      "Maren Sanchez, 16, was stabbed the day of the prom.",
      "Maren Sanchez, 16, was stabbed a year earlier.",
      "A year old, Maren Sanchez, was stabbed to death.",
      "A year old, Maren Sanchez, was stabbed the day of the prom.",
      "A year old, Maren Sanchez, was stabbed one earlier.",
      "A year old, Maren Sanchez, was stabbed a year earlier.",
      "Stabbing happened a year earlier.",
      "Maren Sanchez's death was stabbed earlier.",
      "Maren Sanchez's death was stabbed one earlier.",
      "The year before, Maren Sanchez was stabbed.",
      "This is a celebration,\" Darby Husd said.",
      "This is a celebration,\" said the 17-year-old.",
      "Such a celebration, said the 17-year-old.",
      "\"This is a celebration,\" said the year's old.",
      "Such celebrations,\" said the year's old.",
      "\"This is a celebration,\" a friend said.",
      "Such a celebration, friend said.",
      "The teen who was killed",
      "The teen was killed.",
      "Christopher Plaskon was charged.",
      "Christopher Plaskon's murder is charged.",
      "Classmate is charged.",
      "The classmate is charged.",
      "Christopher Plaskon's murder was charged.",
      "Christopher Plaskon was charged with murder.",
      "Christopher Plaskon was charged with murdering Sanchez.",
      "A classmate has been charged with murder.",
      "A classmate has been charged with murdering Sanchez."
    ]
  },
  {
    "instance_id": "realsumm-10",
    "summary": "<t> Audrey Alexander wanted Alexander neighbours to chop down neighbours huge hedge . </t> <t> Alexander claims the 40 ft leylandii was blocking sunlight from reaching Alexander home . </t> <t> Feud started in 1980 when Feud blocked light from reaching a vegetable patch . </t> <t> Council finally rules that the hedge can stay - but must be cut back to 20 ft . </t>",
    "summary_trees": [
      "# ::snt  Audrey Alexander wanted Alexander neighbours to chop down neighbours huge hedge . \n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Audrey\"\n                  :op2 \"Alexander\"))\n      :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (n2 / neighbor)))\n            :ARG1 (h2 / hedge\n                  :mod (h3 / huge)\n                  :poss p2))\n      :ARG2 p2)",
      "# ::snt  Alexander claims the 40 ft leylandii was blocking sunlight from reaching Alexander home . \n(c / claim-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Alexander\"))\n      :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                  :quant (d / distance-quantity\n                        :quant 40\n                        :unit (f / foot)))\n            :ARG1 (s / sunlight)\n            :ARG2 (r / reach-01\n                  :ARG1 (h / home\n                        :poss p))))",
      "# ::snt  Feud started in 1980 when Feud blocked light from reaching a vegetable patch . \n(s / start-01\n      :ARG1 (f / feud-01)\n      :time (d / date-entity\n            :year 1980\n            :time-of (b / block-01\n                  :ARG0 f\n                  :ARG1 (r / reach-01\n                        :ARG0 (l / light)\n                        :ARG1 (p / patch\n                              :mod (v / vegetable))))))",
      "# ::snt  Council finally rules that the hedge can stay - but must be cut back to 20 ft . \n(r / rule-01\n      :ARG0 (c / council)\n      :ARG1 (c2 / contrast-01\n            :ARG1 (p / possible-01\n                  :ARG1 (s / stay-01\n                        :ARG1 (h / hedge)))\n            :ARG2 (o / obligate-01\n                  :ARG2 (c3 / cut-back-05\n                        :ARG1 h\n                        :ARG2 (d / distance-quantity\n                              :quant 20\n                              :unit (f / foot)))))\n      :time (f2 / final))"
    ],
    "tree": [
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\")))",
      "(w / want-01\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))))))",
      "(w / want-01\n   :ARG1 (c / chop-down-02\n            :ARG1 (h2 / hedge\n                      :mod (h3 / huge))))",
      "(w / want-01\n   :ARG1 (c / chop-down-02\n            :ARG1 (h2 / hedge\n                      :poss (p2 / person))))",
      "(w / want-01\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (n2 / neighbor)))))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p))))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG1 (h2 / hedge\n                      :mod (h3 / huge))))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG1 (h2 / hedge\n                      :poss (p2 / person))))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (n2 / neighbor)))))",
      "(c / chop-down-02\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n2 / neighbor))))",
      "(c / chop-down-02\n   :ARG1 (h2 / hedge\n             :mod (h3 / huge)))",
      "(c / chop-down-02\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))))\n   :ARG1 (h2 / hedge\n             :poss p2))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alexander\")))",
      "(c / claim-01\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :quant 40))))",
      "(c / claim-01\n   :ARG1 (b / block-01\n            :ARG1 (s / sunlight)))",
      "(c / claim-01\n   :ARG1 (b / block-01\n            :ARG2 (r / reach-01\n                     :ARG1 (h / home\n                              :poss (p / person :name (n / name :op1 \"Alexander\"))))))",
      "(c / claim-01\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :unit (f / foot)))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alexander\"))\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :quant 40))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alexander\"))\n   :ARG1 (b / block-01\n            :ARG1 (s / sunlight)))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alexander\"))\n   :ARG1 (b / block-01\n            :ARG2 (r / reach-01\n                     :ARG1 (h / home\n                              :poss p))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alexander\"))\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :unit (f / foot)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Alexander\"))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :quant 40)))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :unit (f / foot))))",
      "(b / block-01\n   :ARG2 (r / reach-01\n            :ARG1 (h / home\n                     :poss (p / person :name (n / name :op1 \"Alexander\")))))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :quant 40))\n   :ARG1 (s / sunlight))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :unit (f / foot)))\n   :ARG1 (s / sunlight))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :quant 40))\n   :ARG2 (r / reach-01\n            :ARG1 (h / home\n                     :poss (p / person :name (n / name :op1 \"Alexander\")))))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :unit (f / foot)))\n   :ARG2 (r / reach-01\n            :ARG1 (h / home\n                     :poss (p / person :name (n / name :op1 \"Alexander\")))))",
      "(b / block-01\n   :ARG1 (s / sunlight)\n   :ARG2 (r / reach-01\n            :ARG1 (h / home\n                     :poss (p / person :name (n / name :op1 \"Alexander\")))))",
      "(s / start-01\n   :time (d / date-entity\n            :year 1980))",
      "(s / start-01\n   :time (d / date-entity\n            :time (b / block-01\n                     :ARG0 (f / feud-01))))",
      "(s / start-01\n   :time (d / date-entity\n            :time (b / block-01\n                     :ARG1 (r / reach-01\n                              :ARG0 (l / light)))))",
      "(s / start-01\n   :time (d / date-entity\n            :time (b / block-01\n                     :ARG1 (r / reach-01\n                              :ARG1 (p / patch\n                                       :mod (v / vegetable))))))",
      "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :year 1980))",
      "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :time (b / block-01\n                     :ARG0 f)))",
      "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :time (b / block-01\n                     :ARG1 (r / reach-01\n                              :ARG0 (l / light)))))",
      "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :time (b / block-01\n                     :ARG1 (r / reach-01\n                              :ARG1 (p / patch\n                                       :mod (v / vegetable))))))",
      "(d / date-entity\n   :time (b / block-01\n            :ARG0 (f / feud-01)))",
      "(d / date-entity\n   :time (b / block-01\n            :ARG1 (r / reach-01\n                     :ARG0 (l / light))))",
      "(d / date-entity\n   :time (b / block-01\n            :ARG1 (r / reach-01\n                     :ARG1 (p / patch\n                              :mod (v / vegetable)))))",
      "(b / block-01\n   :ARG1 (r / reach-01\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 (h / hedge)))))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :quant 20)))))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :unit (f / foot))))))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 (h / hedge)))))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :quant 20)))))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :unit (f / foot))))))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p / possible-01\n                      :ARG1 (s / stay-01\n                               :ARG1 (h / hedge))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 (h / hedge))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :quant 20))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :unit (f / foot)))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p / possible-01\n                      :ARG1 (s / stay-01\n                               :ARG1 (h / hedge))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 (h / hedge))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :quant 20))))\n   :time (f2 / final))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG2 (d / distance-quantity\n                                         :unit (f / foot)))))\n   :time (f2 / final))",
      "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge))))",
      "(c2 / contrast-01\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG1 (h / hedge))))",
      "(c2 / contrast-01\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG2 (d / distance-quantity\n                                :quant 20))))",
      "(c2 / contrast-01\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG2 (d / distance-quantity\n                                :unit (f / foot)))))",
      "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge)))\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG1 h)))",
      "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge)))\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG2 (d / distance-quantity\n                                :quant 20))))",
      "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge)))\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG2 (d / distance-quantity\n                                :unit (f / foot)))))",
      "(p / possible-01\n   :ARG1 (s / stay-01\n            :ARG1 (h / hedge)))",
      "(o / obligate-01\n   :ARG2 (c3 / cut-back-05\n             :ARG1 (h / hedge)))",
      "(o / obligate-01\n   :ARG2 (c3 / cut-back-05\n             :ARG2 (d / distance-quantity\n                      :quant 20)))",
      "(o / obligate-01\n   :ARG2 (c3 / cut-back-05\n             :ARG2 (d / distance-quantity\n                      :unit (f / foot))))",
      "(c3 / cut-back-05\n    :ARG2 (d / distance-quantity\n             :quant 20))",
      "(c3 / cut-back-05\n    :ARG2 (d / distance-quantity\n             :unit (f / foot)))"
    ],
    "smus": [
      "Audrey Alexander wanted.",
      "Audrey Alexander wanted to chop down.",
      "wanted to chop down a huge hedge.",
      "wanted to chop down people's hedge.",
      "Neighbors wanted to chop down.",
      "Audrey Alexander wanted his people to chop down.",
      "Audrey Alexander wanted to chop down a huge hedge.",
      "Audrey Alexander wanted to chop down people's hedge.",
      "Audrey Alexander wanted his neighbors to chop down.",
      "Chopping down a huge hedge.",
      "Chopping down people's hedge.",
      "Neighbors chop down a huge hedge.",
      "Alexander claims.",
      "40 leylandii claim to be blocking.",
      "claims sunlight is blocking.",
      "Alexander's home claims to be blocked from reaching.",
      "Claims leylandii are blocking by feet.",
      "Alexander claims 40 leylandii are blocking.",
      "Alexander claims the sunlight is blocking.",
      "Alexander claims blocking the access to his home is the reason.",
      "Alexander claims there are feet of leylandii blocking.",
      "Foot-long leylandii were blocking.",
      "Blocking the reach of Alexander's home.",
      "40 leylandii blocking sunlight",
      "Foot-long leylandii are blocking sunlight.",
      "40 leylandii blocked the way to Alexander's home.",
      "Foot-long leylandii were blocking the reach of Alexander's home.",
      "The sunlight was blocking the reach of Alexander's home.",
      "40 leylandii blocking sunlight from reaching Alexander's home.",
      "Foot-long leylandii are blocking sunlight from reaching Alexander's home.",
      "started in 1980.",
      "started when the feud blocked.",
      "started when the light blocked its reaching.",
      "started when the reaching of the vegetable patch was blocked.",
      "Feuds started in 1980.",
      "Feuds started when they blocked.",
      "Feudal started when the light blocked its reaching.",
      "Feud started when the vegetable patch was blocked from reaching.",
      "When the Feudal Blocks Happened.",
      "when the light blocked reaching.",
      "When reaching the vegetable patch was blocked.",
      "Reaching the vegetable patch was blocked.",
      "Rules, but hedges must be cut back.",
      "Rules, but must cut back to 20.",
      "But it rules that footings must be cut back.",
      "The Council rules that hedges must be cut back.",
      "The Council rules, but must cut back by 20.",
      "The Council rules, but must cut back on footings.",
      "The Council finally rules.",
      "Finally, it rules that the hedge can stay.",
      "Finally, the rule is that hedges must be cut back.",
      "Finally, rules say, but cut back to 20.",
      "Finally, it rules, but must cut back on the feet.",
      "The Council finally rules that the hedge can stay.",
      "The Council finally rules that hedges must be cut back.",
      "The Council finally rules that but must cut back by 20.",
      "The Council finally rules that but must cut back on the footings.",
      "But the hedge may stay.",
      "But the hedge must be cut back.",
      "But it must be cut back by 20.",
      "But it must be cut back on the feet.",
      "The hedge may stay, but it must be cut back.",
      "The hedge may stay, but it will have to be cut back to 20.",
      "The hedge may stay, but it will have to be cut back by feet.",
      "The hedge can stay put.",
      "The hedge must be cut back.",
      "Cut back by 20.",
      "Cut back on the feet.",
      "Cut back by 20",
      "Cut back on feet."
    ]
  },
  {
    "instance_id": "realsumm-11",
    "summary": "<t> Catherine Nevin was allowed out despite being jailed for life in April 2000 . </t> <t> 62-year - old was seen on the bus , with a pal and walking around in Dublin . </t> <t> Sat next to unsuspecting commuter on bus and went totally unnoticed . </t> <t> Ireland 's most infamous female prisoner murdered husband Tom in 1996 . </t>",
    "summary_trees": [
      "# ::snt  Catherine Nevin was allowed out despite being jailed for life in April 2000 . \n(a / allow-01\n      :ARG1 (o / out-06\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Catherine\"\n                        :op2 \"Nevin\")))\n      :concession (j / jail-01\n            :ARG1 p\n            :ARG2 (l / life)\n            :time (d / date-entity\n                  :year 2000\n                  :month 4)))",
      "# ::snt  62-year - old was seen on the bus , with a pal and walking around in Dublin . \n(s / see-01\n      :ARG1 (p / person\n            :age (t / temporal-quantity\n                  :quant 62\n                  :unit (y / year))\n            :accompanier (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (p3 / pal)))\n            :ARG0-of (w / walk-01\n                  :location (a / around\n                        :op1 (c / city\n                              :name (n / name\n                                    :op1 \"Dublin\")))))\n      :location (b / bus))",
      "# ::snt  Sat next to unsuspecting commuter on bus and went totally unnoticed . \n(a / and\n      :op1 (s / sit-01\n            :ARG1 (ii / i)\n            :ARG2 (n / next-to\n                  :op1 (p / person\n                        :ARG0-of (c / commute-01)\n                        :ARG0-of (s2 / suspect-01\n                              :polarity -))\n                  :location (b / bus)))\n      :op2 (n2 / notice-01\n            :polarity -\n            :ARG1 ii\n            :degree (t / total)))",
      "# ::snt  Ireland 's most infamous female prisoner murdered husband Tom in 1996 . \n(m / murder-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tom\")\n            :ARG1-of (h / have-rel-role-91\n                  :ARG0 (p2 / person\n                        :ARG1-of (ii / imprison-01)\n                        :mod (f / female)\n                        :ARG1-of (h2 / have-degree-91\n                              :ARG2 (ii2 / infamous)\n                              :ARG3 (m2 / most)\n                              :ARG5 (p3 / person\n                                    :ARG1-of (ii3 / imprison-01)\n                                    :location (c / country\n                                          :name (n2 / name\n                                                :op1 \"Ireland\")))))\n                  :ARG2 (h3 / husband)))\n      :ARG1 p\n      :time (d / date-entity\n            :year 1996))"
    ],
    "tree": [
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\"))))",
      "(a / allow-01\n   :concession (j / jail-01\n                  :ARG1 (p / person\n                           :name (n / name\n                                    :op1 \"Catherine\"\n                                    :op2 \"Nevin\"))))",
      "(a / allow-01\n   :concession (j / jail-01\n                  :ARG2 (l / life)))",
      "(a / allow-01\n   :concession (j / jail-01\n                  :time (d / date-entity\n                           :year 2000)))",
      "(a / allow-01\n   :concession (j / jail-01\n                  :time (d / date-entity\n                           :month 4)))",
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :ARG1 p))",
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :ARG2 (l / life)))",
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :time (d / date-entity\n                           :year 2000)))",
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :time (d / date-entity\n                           :month 4)))",
      "(o / out-06\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Catherine\"\n            :op2 \"Nevin\"))",
      "(s / see-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 62)))",
      "(s / see-01\n   :ARG1 (p / person\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG1 p))))",
      "(s / see-01\n   :ARG1 (p / person\n            :ARG0 (w / walk-01\n                     :location (a / around\n                                  :op1 (c / city\n                                          :name (n / name\n                                                   :op1 \"Dublin\"))))))",
      "(s / see-01\n   :ARG1 (p / person\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG2 (p3 / pal)))))",
      "(s / see-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 62))\n   :location (b / bus))",
      "(s / see-01\n   :ARG1 (p / person\n            :ARG0 (w / walk-01\n                     :location (a / around\n                                  :op1 (c / city\n                                          :name (n / name\n                                                   :op1 \"Dublin\")))))\n   :location (b / bus))",
      "(s / see-01\n   :ARG1 (p / person\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG2 (p3 / pal))))\n   :location (b / bus))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 62))",
      "(p / person\n   :accompanier (p2 / person\n                    :ARG0 (h / have-rel-role-91\n                             :ARG1 p)))",
      "(p / person\n   :accompanier (p2 / person\n                    :ARG0 (h / have-rel-role-91\n                             :ARG2 (p3 / pal))))",
      "(p / person\n   :ARG0 (w / walk-01\n            :location (a / around\n                         :op1 (c / city\n                                 :name (n / name\n                                          :op1 \"Dublin\")))))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 62)\n   :accompanier (p2 / person\n                    :ARG0 (h / have-rel-role-91\n                             :ARG2 (p3 / pal))))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG1 (ii / i)))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (c / commute-01)))))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :location (b / bus))))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (s2 / suspect-01\n                                      :polarity -)))))",
      "(a / and\n   :op2 (n2 / notice-01\n            :polarity -))",
      "(a / and\n   :op2 (n2 / notice-01\n            :ARG1 (ii / i)))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG1 (ii / i))\n   :op2 (n2 / notice-01\n            :polarity -))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG1 (ii / i))\n   :op2 (n2 / notice-01\n            :ARG1 ii))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG1 (ii / i))\n   :op2 (n2 / notice-01\n            :degree (t / total)))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (c / commute-01))))\n   :op2 (n2 / notice-01\n            :polarity -))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (c / commute-01))))\n   :op2 (n2 / notice-01\n            :ARG1 (ii / i)))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :location (b / bus)))\n   :op2 (n2 / notice-01\n            :ARG1 (ii / i)))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (s2 / suspect-01\n                                      :polarity -))))\n   :op2 (n2 / notice-01\n            :polarity -))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (s2 / suspect-01\n                                      :polarity -))))\n   :op2 (n2 / notice-01\n            :ARG1 (ii / i)))",
      "(a / and\n   :op1 (s / sit-01\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0 (s2 / suspect-01\n                                      :polarity -))))\n   :op2 (n2 / notice-01\n            :degree (t / total)))",
      "(s / sit-01\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0 (c / commute-01))))",
      "(s / sit-01\n   :ARG2 (n / next-to\n            :location (b / bus)))",
      "(s / sit-01\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0 (s2 / suspect-01\n                              :polarity -))))",
      "(s / sit-01\n   :ARG1 (ii / i)\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0 (c / commute-01))))",
      "(s / sit-01\n   :ARG1 (ii / i)\n   :ARG2 (n / next-to\n            :location (b / bus)))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)))))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband))))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :mod (f / female)))))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01)))))))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\"))))))))",
      "(m / murder-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Tom\")))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\"))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :mod (f / female))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)\n                               :mod (f / female))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband)))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband)\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband)\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :mod (f / female)))\n            :name (n / name\n                     :op1 \"Tom\"))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :mod (f / female)\n                               :ARG1 (ii / imprison-01))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)))\n                     :ARG2 (h3 / husband)))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous))\n                               :mod (f / female))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)\n                                         :ARG3 (m2 / most)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)))\n                     :ARG2 (h3 / husband)))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most))\n                               :mod (f / female))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)\n                                         :ARG2 (ii2 / infamous)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01)))\n                               :ARG1 (ii / imprison-01))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))))\n                     :ARG2 (h3 / husband)))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))\n                                         :ARG2 (ii2 / infamous)))))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\"))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Tom\"))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband)))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :mod (f / female))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG2 (ii2 / infamous)))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG1 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\"))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01))))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband)))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :mod (f / female))))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :location (c / country\n                                                                :name (n2 / name\n                                                                          :op1 \"Ireland\")))))))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)))\n            :name (n / name\n                     :op1 \"Tom\"))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01))))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01))\n                     :ARG2 (h3 / husband)))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG3 (m2 / most)))))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG0 (p2 / person\n                               :ARG1 (ii / imprison-01)\n                               :ARG1 (h2 / have-degree-91\n                                         :ARG5 (p3 / person\n                                                   :ARG1 (ii3 / imprison-01))))))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(m / murder-01\n   :ARG0 (p / person\n            :ARG1 (h / have-rel-role-91\n                     :ARG2 (h3 / husband))\n            :name (n / name\n                     :op1 \"Tom\"))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))"
    ],
    "smus": [
      "Catherine Nevin was allowed out.",
      "allowed despite Catherine Nevin being jailed.",
      "allowed, but jailed for life.",
      "allowed despite being jailed in 2000.",
      "allowed, but jailed in April",
      "Catherine Nevin was allowed out despite being jailed.",
      "Catherine Nevin was allowed out despite being jailed for life.",
      "Catherine Nevin was allowed out despite being jailed in 2000.",
      "Catherine Nevin was allowed out despite being jailed in April.",
      "In 2000, he was jailed for life.",
      "In April, he was jailed for life.",
      "The 62-year-old was seen.",
      "See people with them.",
      "People walking around Dublin were seen.",
      "Seems to be a pal with whom.",
      "The 62-year-old was seen on the bus.",
      "People walking around Dublin were seen on a bus.",
      "A pal was seen on the bus with the man.",
      "People walking around Dublin.",
      "Walking around Dublin with friends.",
      "a pal walking around Dublin",
      "62 - with pal walking around Dublin",
      "Walking around Dublin.",
      "and I'm sitting.",
      "and sitting next to a commuter.",
      "and sitting next to the bus.",
      "and sitting next to the unconcerned.",
      "And it's not noticed.",
      "I'm sitting and unnoticed.",
      "I'm sitting and totally noticeless.",
      "Sitting next to commuters and unnoticeable.",
      "Sitting next to a commuter and I'm noticeably noticeless.",
      "Sitting next to a commuter and totally noticeless.",
      "Sitting next to the bus and unnoticeable.",
      "Sitting next to an unconcerned and unnoticed.",
      "Sitting next to an unconcerned person and totally noticeless.",
      "Sitting next to a commuter.",
      "Sitting next to the bus.",
      "Sitting next to an unsuspecting person.",
      "I'm sitting next to a commuter.",
      "I'm sitting next to the bus.",
      "I'm sitting next to an unsuspecting person.",
      "next to commuter on bus",
      "Tom was murdered.",
      "Prisoners were murdered.",
      "The husband was murdered.",
      "The female was murdered.",
      "Females were murdered.",
      "Irish people were murdered.",
      "Murdered in 1996.",
      "Tom was murdered by the prisoner.",
      "Prisoners murdered them.",
      "Female prisoners have murdered them.",
      "The infamous prisoner was murdered.",
      "Prisoners in Ireland have murdered them.",
      "The husband of the infamous was murdered.",
      "The husband of the prisoner was murdered.",
      "The husband of an Irish person was murdered.",
      "Tom was murdered by a female.",
      "The infamous female was murdered.",
      "Female prisoners were murdered.",
      "Tom was murdered by the infamous.",
      "The murder was committed by a infamous female.",
      "The infamous people have murdered them.",
      "Tom was murdered by a prisoner.",
      "Prisoners have murdered them.",
      "Tom was murdered by an Irish person.",
      "Irish prisoners have murdered them.",
      "Irish females were murdered.",
      "Irish people have murdered them.",
      "Tom was murdered in 1996.",
      "Prisoners were murdered in 1996.",
      "The husband was murdered in 1996.",
      "In 1996 a female was murdered.",
      "In 1996 a infamous person was murdered.",
      "In 1996 Irish people were murdered.",
      "A female was murdered in 1996.",
      "Irish people were murdered in 1996.",
      "In 1996 a notorious prisoner murdered him.",
      "In 1996 the most imprisoned person murdered them.",
      "In 1996, the husband of the infamous was murdered.",
      "In 1996, the husband of the prisoner was murdered.",
      "In 1996, the husband of an Irish person was murdered.",
      "In 1996 a infamous female was murdered.",
      "In 1996 the most female was murdered.",
      "In 1996 a female prisoner was murdered.",
      "In 1996 a female Irish person was murdered.",
      "Tom was murdered in 1996 by the infamous.",
      "In 1996 a famous female was murdered.",
      "In 1996, the infamous person was murdered.",
      "In 1996, the most infamous person murdered him.",
      "In 1996 a notorious prisoner was murdered.",
      "In 1996 a infamous Irish person was murdered.",
      "In 1996 the most imprisoned person murdered him.",
      "The most Irish person murdered him in 1996.",
      "In 1996, Tom was murdered by a prisoner.",
      "In 1996, the most imprisoned person murdered him.",
      "In 1996 a Irish person named Tom was murdered.",
      "In 1996 a infamous Irish person murdered him.",
      "In 1996 Irish people murdered each other."
    ]
  },
  {
    "instance_id": "realsumm-12",
    "summary": "<t> Didier Drogba given the Barclays Spirit of the Game award . </t> <t> The 37-year - old 's foundation has done impressive work in Africa . </t> <t> Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 . </t> <t> CLICK HERE for all the latest Chelsea news . </t>",
    "summary_trees": [
      "# ::snt  Didier Drogba given the Barclays Spirit of the Game award . \n(g / give-01\n      :ARG1 (a / award\n            :name (n / name\n                  :op1 \"Barclays\"\n                  :op2 \"Spirit\"\n                  :op3 \"of\"\n                  :op4 \"the\"\n                  :op5 \"Game\"))\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 \"Didier\"\n                  :op2 \"Drogba\")))",
      "# ::snt  The 37-year - old 's foundation has done impressive work in Africa . \n(w / work-01\n      :ARG0 (f / foundation\n            :poss (p / person\n                  :age (t / temporal-quantity\n                        :quant 37\n                        :unit (y / year))))\n      :ARG0-of (ii / impress-01)\n      :location (c / continent\n            :name (n / name\n                  :op1 \"Africa\")))",
      "# ::snt  Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 . \n(a / attend-01\n      :ARG0 (s / star\n            :ARG1-of (ii / include-91\n                  :ARG2 (s2 / star\n                        :poss (p / person\n                              :name (n / name\n                                    :op1 \"Chelsea\"))))\n            :quant (s3 / some))\n      :ARG1 (b / ball\n            :purpose (c / charity)\n            :ARG0-of (r / raise-02\n                  :ARG1 (m / monetary-quantity\n                        :quant 400000\n                        :unit (p2 / pound)))))",
      "# ::snt  CLICK HERE for all the latest Chelsea news . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (n / news\n            :mod (l / last)\n            :mod (a / all)\n            :topic (p / person\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))))"
    ],
    "tree": [
      "(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\")))",
      "(g / give-01\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Didier\"\n                      :op2 \"Drogba\")))",
      "(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\"))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Didier\"\n                      :op2 \"Drogba\")))",
      "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :age (t / temporal-quantity\n                             :quant 37))))",
      "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\"))))))",
      "(a / attend-01\n   :ARG0 (s / star\n            :quant (s3 / some)))",
      "(a / attend-01\n   :ARG1 (b / ball\n            :purpose (c / charity)))",
      "(a / attend-01\n   :ARG1 (b / ball\n            :ARG0 (r / raise-02\n                     :ARG1 (m / monetary-quantity\n                              :quant 400000))))",
      "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\")))))\n   :ARG1 (b / ball\n            :purpose (c / charity)))",
      "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\")))))\n   :ARG1 (b / ball\n            :ARG0 (r / raise-02\n                     :ARG1 (m / monetary-quantity\n                              :quant 400000))))",
      "(a / attend-01\n   :ARG0 (s / star\n            :quant (s3 / some))\n   :ARG1 (b / ball\n            :purpose (c / charity)))",
      "(a / attend-01\n   :ARG0 (s / star\n            :quant (s3 / some))\n   :ARG1 (b / ball\n            :ARG0 (r / raise-02\n                     :ARG1 (m / monetary-quantity\n                              :quant 400000))))",
      "(s / star\n   :ARG1 (ii / include-91\n             :ARG2 (s2 / star\n                       :poss (p / person\n                                :name (n / name\n                                         :op1 \"Chelsea\"))))\n   :quant (s3 / some))",
      "(s2 / star\n    :poss (p / person\n             :name (n / name\n                      :op1 \"Chelsea\")))",
      "(b / ball\n   :ARG0 (r / raise-02\n            :ARG1 (m / monetary-quantity\n                     :quant 400000)))"
    ],
    "smus": [
      "The Barclays Spirit of the Game award was given",
      "given to Didier Drogba",
      "The Barclays Spirit of the Game award was given to Didier Drogba.",
      "Work in Africa.",
      "Stars attended, including Chelsea's.",
      "Some stars attended.",
      "attended a charity ball.",
      "The ball attended as the 400k raised.",
      "Some of Chelsea's stars attended a charity ball.",
      "One of Chelsea's stars attended the ballgame that raised 400,000.",
      "Some stars attended a charity ball.",
      "Some stars attended the ball that raised 400,000.",
      "The ball was in that 400K was raised.",
      "The charity ball raised 400,000.",
      "raised 400,000."
    ]
  },
  {
    "instance_id": "realsumm-13",
    "summary": "<t> Figures from the Catholic Church show more and more becoming nuns . </t> <t> The number of women taking Holy Vows stood at just seven back in 2004 . </t> <t> But that figure had risen to 15 in 2009 and increased further to 45 last year . </t> <t> One father said a ' gap in the market for meaning ' led people toward religion . </t>",
    "summary_trees": [
      "# ::snt  Figures from the Catholic Church show more and more becoming nuns . \n(s / show-01\n      :ARG0 (f / figure\n            :source (o / organization\n                  :name (n / name\n                        :op1 \"Catholic\"\n                        :op2 \"Church\")))\n      :ARG1 (b / become-01\n            :ARG1 (p / person\n                  :quant (n2 / number\n                        :ARG1-of (ii / increase-01)))\n            :ARG2 (n3 / nun)))",
      "# ::snt  The number of women taking Holy Vows stood at just seven back in 2004 . \n(m / multi-sentence\n      :snt1 (s / stand-04\n            :ARG1 (n / number\n                  :quant-of (w / woman\n                        :ARG0-of (t / take-01\n                              :ARG1 (v / vow-01\n                                    :mod (h / holy)))))\n            :ARG2 (n2 / numerical-quantity\n                  :quant 7\n                  :mod (j / just))\n            :time (d / date-entity\n                  :year 2004)))",
      "# ::snt  But that figure had risen to 15 in 2009 and increased further to 45 last year . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (r / rise-01\n                  :ARG1 (f / figure\n                        :mod (t / that))\n                  :ARG4 (n / numerical-quantity\n                        :quant 15)\n                  :time (d / date-entity\n                        :year 2009))\n            :op2 (ii / increase-01\n                  :ARG1 f\n                  :ARG4 (n2 / numerical-quantity\n                        :quant 45)\n                  :degree (f2 / further)\n                  :time (y / year\n                        :mod (l / last)))))",
      "# ::snt  One father said a ' gap in the market for meaning ' led people toward religion . \n(s / say-01\n      :ARG0 (p / person\n            :quant 1\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (f / father)))\n      :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                  :location (m / market)\n                  :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))"
    ],
    "tree": [
      "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\"))))",
      "(s / show-01\n   :ARG1 (b / become-01\n            :ARG1 (p / person\n                     :quant (n2 / number\n                                :ARG1 (ii / increase-01)))))",
      "(s / show-01\n   :ARG1 (b / become-01\n            :ARG2 (n3 / nun)))",
      "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\")))\n   :ARG1 (b / become-01\n            :ARG1 (p / person\n                     :quant (n2 / number\n                                :ARG1 (ii / increase-01)))))",
      "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\")))\n   :ARG1 (b / become-01\n            :ARG2 (n3 / nun)))",
      "(f / figure\n   :source (o / organization\n              :name (n / name\n                       :op1 \"Catholic\"\n                       :op2 \"Church\")))",
      "(o / organization\n   :name (n / name\n            :op1 \"Catholic\"\n            :op2 \"Church\"))",
      "(m / multi-sentence\n   :snt1 (s / stand-04\n            :ARG1 (n / number\n                     :quant (w / woman\n                               :ARG0 (t / take-01\n                                        :ARG1 (v / vow-01\n                                                 :mod (h / holy)))))))",
      "(m / multi-sentence\n   :snt1 (s / stand-04\n            :ARG2 (n2 / numerical-quantity\n                      :quant 7)))",
      "(m / multi-sentence\n   :snt1 (s / stand-04\n            :time (d / date-entity\n                     :year 2004)))",
      "(m / multi-sentence\n   :snt1 (s / stand-04\n            :ARG2 (n2 / numerical-quantity\n                      :mod (j / just))))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant (w / woman\n                      :ARG0 (t / take-01\n                               :ARG1 (v / vow-01\n                                        :mod (h / holy))))))",
      "(s / stand-04\n   :ARG2 (n2 / numerical-quantity\n             :quant 7))",
      "(s / stand-04\n   :time (d / date-entity\n            :year 2004))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant (w / woman\n                      :ARG0 (t / take-01\n                               :ARG1 (v / vow-01\n                                        :mod (h / holy)))))\n   :ARG2 (n2 / numerical-quantity\n             :quant 7))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant (w / woman\n                      :ARG0 (t / take-01\n                               :ARG1 (v / vow-01\n                                        :mod (h / holy)))))\n   :time (d / date-entity\n            :year 2004))",
      "(s / stand-04\n   :ARG2 (n2 / numerical-quantity\n             :mod (j / just))\n   :time (d / date-entity\n            :year 2004))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant (w / woman\n                      :ARG0 (t / take-01\n                               :ARG1 (v / vow-01\n                                        :mod (h / holy)))))\n   :ARG2 (n2 / numerical-quantity\n             :quant 7)\n   :time (d / date-entity\n            :year 2004))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant (w / woman\n                      :ARG0 (t / take-01\n                               :ARG1 (v / vow-01\n                                        :mod (h / holy)))))\n   :ARG2 (n2 / numerical-quantity\n             :mod (j / just))\n   :time (d / date-entity\n            :year 2004))",
      "(c / contrast-01\n   :ARG2 (r / rise-01\n            :ARG1 (f / figure\n                     :mod (t / that))))",
      "(c / contrast-01\n   :ARG2 (ii / increase-01\n             :ARG1 (f / figure\n                      :mod (t / that))))",
      "(c / contrast-01\n   :ARG2 (r / rise-01\n            :time (d / date-entity\n                     :year 2009)))",
      "(c / contrast-01\n   :ARG2 (ii / increase-01\n             :ARG4 (n2 / numerical-quantity\n                       :quant 45)))",
      "(c / contrast-01\n   :ARG2 (ii / increase-01\n             :degree (f2 / further)))",
      "(c / contrast-01\n   :ARG2 (ii / increase-01\n             :time (y / year\n                      :mod (l / last))))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG1 (f / figure\n                    :mod (t / that))))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG4 (n / numerical-quantity\n                    :quant 15)))",
      "(a / and\n   :op1 (r / rise-01\n           :time (d / date-entity\n                    :year 2009)))",
      "(a / and\n   :op2 (ii / increase-01\n            :ARG1 (f / figure\n                     :mod (t / that))))",
      "(a / and\n   :op2 (ii / increase-01\n            :degree (f2 / further)))",
      "(a / and\n   :op2 (ii / increase-01\n            :time (y / year\n                     :mod (l / last))))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG1 (f / figure\n                    :mod (t / that)))\n   :op2 (ii / increase-01\n            :ARG1 f))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG1 (f / figure\n                    :mod (t / that)))\n   :op2 (ii / increase-01\n            :ARG4 (n2 / numerical-quantity\n                      :quant 45)))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG1 (f / figure\n                    :mod (t / that)))\n   :op2 (ii / increase-01\n            :degree (f2 / further)))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG1 (f / figure\n                    :mod (t / that)))\n   :op2 (ii / increase-01\n            :time (y / year\n                     :mod (l / last))))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG4 (n / numerical-quantity\n                    :quant 15))\n   :op2 (ii / increase-01\n            :ARG1 (f / figure\n                     :mod (t / that))))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG4 (n / numerical-quantity\n                    :quant 15))\n   :op2 (ii / increase-01\n            :ARG4 (n2 / numerical-quantity\n                      :quant 45)))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG4 (n / numerical-quantity\n                    :quant 15))\n   :op2 (ii / increase-01\n            :degree (f2 / further)))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG4 (n / numerical-quantity\n                    :quant 15))\n   :op2 (ii / increase-01\n            :time (y / year\n                     :mod (l / last))))",
      "(a / and\n   :op1 (r / rise-01\n           :time (d / date-entity\n                    :year 2009))\n   :op2 (ii / increase-01\n            :ARG1 (f / figure\n                     :mod (t / that))))",
      "(a / and\n   :op1 (r / rise-01\n           :time (d / date-entity\n                    :year 2009))\n   :op2 (ii / increase-01\n            :ARG4 (n2 / numerical-quantity\n                      :quant 45)))",
      "(a / and\n   :op1 (r / rise-01\n           :time (d / date-entity\n                    :year 2009))\n   :op2 (ii / increase-01\n            :degree (f2 / further)))",
      "(a / and\n   :op1 (r / rise-01\n           :time (d / date-entity\n                    :year 2009))\n   :op2 (ii / increase-01\n            :time (y / year\n                     :mod (l / last))))",
      "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that)))",
      "(r / rise-01\n   :ARG4 (n / numerical-quantity\n            :quant 15))",
      "(r / rise-01\n   :time (d / date-entity\n            :year 2009))",
      "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :ARG4 (n / numerical-quantity\n            :quant 15))",
      "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :time (d / date-entity\n            :year 2009))",
      "(r / rise-01\n   :ARG4 (n / numerical-quantity\n            :quant 15)\n   :time (d / date-entity\n            :year 2009))",
      "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :ARG4 (n / numerical-quantity\n            :quant 15)\n   :time (d / date-entity\n            :year 2009))",
      "(ii / increase-01\n    :ARG4 (n2 / numerical-quantity\n              :quant 45))",
      "(ii / increase-01\n    :time (y / year\n             :mod (l / last)))",
      "(ii / increase-01\n    :ARG4 (n2 / numerical-quantity\n              :quant 45)\n    :degree (f2 / further))",
      "(s / say-01\n   :ARG0 (p / person\n            :quant 1))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father))))",
      "(s / say-01\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market))))",
      "(s / say-01\n   :ARG1 (l / lead-01\n            :ARG1 (p2 / person)))",
      "(s / say-01\n   :ARG1 (l / lead-01\n            :ARG4 (r / religion)))",
      "(s / say-01\n   :ARG0 (p / person\n            :quant 1)\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market))))",
      "(s / say-01\n   :ARG0 (p / person\n            :quant 1)\n   :ARG1 (l / lead-01\n            :ARG1 (p2 / person)))",
      "(s / say-01\n   :ARG0 (p / person\n            :quant 1)\n   :ARG1 (l / lead-01\n            :ARG4 (r / religion)))",
      "(s / say-01\n   :ARG0 (p / person\n            :quant 1)\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :topic (m2 / mean-01))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG1 (p2 / person)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG4 (r / religion)))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG2 (f / father)))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :topic (m2 / mean-01)))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market))\n   :ARG1 (p2 / person))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market))\n   :ARG4 (r / religion))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :topic (m2 / mean-01))\n   :ARG4 (r / religion))",
      "(l / lead-01\n   :ARG1 (p2 / person)\n   :ARG4 (r / religion))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market))\n   :ARG1 (p2 / person)\n   :ARG4 (r / religion))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person)\n   :ARG4 (r / religion))"
    ],
    "smus": [
      "The shows that more and more people are becoming.",
      "Shows how nuns are becoming.",
      "Catholic Church figures show that more and more people are becoming.",
      "Catholic Church figures show nuns becoming.",
      "More and more people are becoming.",
      "More and more people are becoming nuns.",
      "There are an increasing number of people.",
      "The number of women taking the holy vows stood at.",
      "Stands in 2004.",
      "Just stood.",
      "The number of women taking the holy vow stood at.",
      "stood at 7.",
      "The number of women taking the Holy Vow stood at 7.",
      "The number of women taking the holy vow stood in 2004.",
      "In 2004, it stood at 7.",
      "In 2004, the number of women taking the holy vow stood at 7.",
      "There are a number of women taking the holy vows.",
      "Women taking the Holy Vow.",
      "Taking the Holy Vow.",
      "But that figure has risen.",
      "But that figure increased.",
      "But in 2009, it rose.",
      "But it increased by 45.",
      "But further increased.",
      "But last year it increased.",
      "And that figure has risen.",
      "And 15 percent rose.",
      "And in 2009, it rose.",
      "And that figure increased.",
      "and further increased.",
      "And increased last year.",
      "That figure rose and increased.",
      "That figure rose and increased by 45.",
      "That figure rose and further increased.",
      "That figure has risen and increased since last year.",
      "15 rose and that figure increased.",
      "15 rose and 45 increased.",
      "15 rose and further increased.",
      "15 rises and increased from last year.",
      "In 2009, the figure rose and that figure increased.",
      "In 2009, the rise was higher and further increased.",
      "That figure has risen.",
      "In 2009, it rose by.",
      "That figure has risen to 15.",
      "That figure has risen in 2009.",
      "In 2009, the number has risen to 15.",
      "That figure has risen to 15 in 2009.",
      "increased by 45.",
      "Increased last year.",
      "Further, the number increased by 45.",
      "Last year, the number increased 45.",
      "Further increased last year.",
      "Last year, the number increased 45 further.",
      "One said --",
      "\"The father said --",
      "The gap in the market has led, it said.",
      "People were led, said.",
      "\"It is a religion led,\" said the statement.",
      "One said the gap in the market had led to it.",
      "One said, \"People are led.",
      "One said religion is led.",
      "One said the gap in meaning had led.",
      "The father said the gap in the market had led to it.",
      "The father said the people were led.",
      "The father said that religion is led.",
      "The gap in the market has led to it.",
      "The gap in the market has led to people.",
      "The meanness gap has led people.",
      "The market gap has led to religion.",
      "The meanness gap has led to religion.",
      "People are led by religion.",
      "The gap in the market has led people to religion.",
      "The meaning gap has led people to religion.",
      "There is a gap in the market for meaning."
    ]
  },
  {
    "instance_id": "realsumm-14",
    "summary": "<t> Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes . </t> <t> Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three . </t> <t> Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored . </t>",
    "summary_trees": [
      "# ::snt  Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes . \n(p / put-03\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Eduardo\"\n                  :op2 \"Vargas\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"QPR\"))\n      :ARG2 (a / ahead)\n      :manner (s / strike-01\n            :ARG0 p2\n            :ARG2 (d / distance-quantity\n                  :quant 25\n                  :unit (y / yard))\n            :mod (s2 / spectacle))\n      :time (a2 / after\n            :op1 (t2 / temporal-quantity\n                  :quant 15\n                  :unit (m / minute))))",
      "# ::snt  Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three . \n(a / and\n      :op1 (d / double-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Austin\"))\n            :ARG1 (l / lead-01)\n            :instrument (h / header)\n            :time (a2 / after\n                  :quant (t / temporal-quantity\n                        :quant 20\n                        :unit (m / minute))))\n      :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n            :ARG1 (ii / it\n                  :quant 3)))",
      "# ::snt  Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored . \n(p / pull-back-09\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Victor\"\n                  :op2 \"Anichebe\"))\n      :ARG1 (o / one)\n      :beneficiary (t / team\n            :name (n2 / name\n                  :op1 \"West\"\n                  :op2 \"Brum\"))\n      :time (b / before\n            :op1 (a / and\n                  :op1 (s / send-off-08\n                        :ARG1 (p3 / person\n                              :name (n3 / name\n                                    :op1 \"Youssouf\"\n                                    :op2 \"Mulumbu\")))\n                  :op2 (s2 / score-01\n                        :ARG0 (p4 / person\n                              :name (n4 / name\n                                    :op1 \"Joey\"\n                                    :op2 \"Barton\"))))))"
    ],
    "tree": [
      "(p / put-03\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG2 (a / ahead))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity)\n              :mod (s2 / spectacle))\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :unit (m / minute))))",
      "(a / and\n   :op1 (d / double-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Charlie\"\n                             :op2 \"Austin\"))))",
      "(a / and\n   :op1 (d / double-01\n           :ARG1 (l / lead-01)))",
      "(a / and\n   :op1 (d / double-01\n           :instrument (h / header)))",
      "(a / and\n   :op1 (d / double-01\n           :time (a2 / after\n                     :quant (t / temporal-quantity\n                               :unit (m / minute)))))",
      "(a / and\n   :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bobby\"\n                                :op2 \"Zamora\"))))",
      "(a / and\n   :op2 (m2 / make-01\n            :ARG1 (ii / it\n                      :quant 3)))",
      "(a / and\n   :op1 (d / double-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Charlie\"\n                             :op2 \"Austin\")))\n   :op2 (m2 / make-01\n            :ARG1 (ii / it\n                      :quant 3)))",
      "(a / and\n   :op1 (d / double-01\n           :ARG1 (l / lead-01))\n   :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bobby\"\n                                :op2 \"Zamora\"))))",
      "(a / and\n   :op1 (d / double-01\n           :ARG1 (l / lead-01))\n   :op2 (m2 / make-01\n            :ARG1 (ii / it\n                      :quant 3)))",
      "(a / and\n   :op1 (d / double-01\n           :instrument (h / header))\n   :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bobby\"\n                                :op2 \"Zamora\"))))",
      "(a / and\n   :op1 (d / double-01\n           :instrument (h / header))\n   :op2 (m2 / make-01\n            :ARG1 (ii / it\n                      :quant 3)))",
      "(a / and\n   :op1 (d / double-01\n           :time (a2 / after\n                     :quant (t / temporal-quantity\n                               :quant 20)))\n   :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bobby\"\n                                :op2 \"Zamora\"))))",
      "(a / and\n   :op1 (d / double-01\n           :time (a2 / after\n                     :quant (t / temporal-quantity\n                               :quant 20)))\n   :op2 (m2 / make-01\n            :ARG1 (ii / it\n                      :quant 3)))",
      "(a / and\n   :op1 (d / double-01\n           :time (a2 / after\n                     :quant (t / temporal-quantity\n                               :unit (m / minute))))\n   :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bobby\"\n                                :op2 \"Zamora\"))))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\")))",
      "(d / double-01\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :unit (m / minute))))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :instrument (h / header))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20)))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :unit (m / minute))))",
      "(d / double-01\n   :ARG1 (l / lead-01)\n   :instrument (h / header))",
      "(d / double-01\n   :ARG1 (l / lead-01)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :unit (m / minute))))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20)))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20)))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :unit (m / minute))))",
      "(d / double-01\n   :ARG1 (l / lead-01)\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20)))",
      "(d / double-01\n   :ARG1 (l / lead-01)\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :unit (m / minute))))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20)))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :unit (m / minute))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\")))",
      "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\")))",
      "(p / pull-back-09\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\")))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p / pull-back-09\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\")))",
      "(p / pull-back-09\n   :ARG1 (o / one)\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\")))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p / pull-back-09\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Victor\"\n             :op2 \"Anichebe\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"West\"\n             :op2 \"Brum\"))",
      "(b / before\n   :op1 (s / send-off-08\n           :ARG1 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Youssouf\"\n                               :op2 \"Mulumbu\"))))",
      "(b / before\n   :op1 (s2 / score-01\n            :ARG0 (p4 / person\n                      :name (n4 / name\n                                :op1 \"Joey\"\n                                :op2 \"Barton\"))))",
      "(a / and\n   :op1 (s / send-off-08\n           :ARG1 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Youssouf\"\n                               :op2 \"Mulumbu\"))))",
      "(a / and\n   :op2 (s2 / score-01\n            :ARG0 (p4 / person\n                      :name (n4 / name\n                                :op1 \"Joey\"\n                                :op2 \"Barton\"))))"
    ],
    "smus": [
      "Put in with Eduardo Vargas's spectacle strike from a distance.",
      "Put after 15",
      "Eduardo Vargas put ahead.",
      "Eduardo Vargas put it in a spectacle strike of a distance.",
      "Eduardo Vargas put after 15.",
      "QPR put ahead",
      "QPR put on a spectacle strike by Eduardo Vargas.",
      "QPR put in after 15 minutes.",
      "Put ahead with Eduardo Vargas's spectacle strike from a distance.",
      "Put ahead after 15 minutes.",
      "Put ahead after a few minutes.",
      "After 15 minutes, Eduardo Vargas put on a spectacle spectacle strike.",
      "After a minute, Eduardo Vargas put on a spectacle spectacle strike.",
      "Eduardo Vargas put QPR ahead.",
      "Eduardo Vargas put QPR in a spectacle strike from a distance.",
      "After 15 minutes Eduardo Vargas put QPR up.",
      "After a minute Eduardo Vargas put QPR up.",
      "Eduardo Vargas put ahead with a spectacular strike from a distance.",
      "Eduardo Vargas put ahead after 15 minutes.",
      "After a few minutes Eduardo Vargas put ahead.",
      "After 15 minutes, Eduardo Vargas put his spectacle strike on a distance.",
      "After a few minutes Eduardo Vargas put a spectacle strike at the distance.",
      "QPR put ahead with a spectacle strike from Eduardo Vargas.",
      "QPR put ahead after 15 minutes.",
      "QPR put on a spectacle strike from Eduardo Vargas after 15 minutes.",
      "QPR put on a spectacle strike from Eduardo Vargas after a minute.",
      "After 15 minutes, Eduardo Vargas put ahead with a spectacle strike from a distance.",
      "After a few minutes, Eduardo Vargas put ahead with a spectacle strike from a distance.",
      "Eduardo Vargas put QPR ahead with a spectacular strike from a distance.",
      "Eduardo Vargas put QPR ahead after 15 minutes.",
      "After a minute Eduardo Vargas put QPR ahead.",
      "After 15 minutes, Eduardo Vargas put QPR in with a spectacle strike from a distance.",
      "After a minute, Eduardo Vargas put QPR in with a spectacle strike.",
      "After 15 minutes, Eduardo Vargas put ahead with a spectacle strike.",
      "After a few minutes, Eduardo Vargas put ahead with a spectacle strike.",
      "QPR put ahead after 15 minutes with a spectacle strike from Eduardo Vargas.",
      "QPR put ahead with a spectacled strike from Eduardo Vargas after the first few minutes.",
      "After 15 minutes, Eduardo Vargas put QPR ahead with a spectacular strike from a distance.",
      "After a minute, Eduardo Vargas put QPR ahead with a spectacular strike from a distance.",
      "Charlie Austin doubled.",
      "The lead doubled.",
      "Doubled after 20.",
      "And Bobby Zamora made.",
      "And made three of it.",
      "Charlie Austin doubled, Bobby Zamora made...",
      "The lead doubled, Bobby Zamora made.",
      "Doubled lead, made three.",
      "Doubled header, Bobby Zamora made.",
      "Doubled the header, made three of it.",
      "After 20 the doubled, Bobby Zamora made.",
      "Doubled after 20 - made it 3.",
      "Doubled in a minute, Bobby Zamora made.",
      "Doubled in a minute, made three.",
      "Charlie Austin doubled the lead.",
      "Charlie Austin doubled after 20.",
      "The lead doubled with a header.",
      "The lead doubled after 20.",
      "The lead doubled in minutes.",
      "The header doubled after 20.",
      "Charlie Austin doubled the lead with a header.",
      "Charlie Austin doubled the header minutes later.",
      "The lead doubled with a header minutes later.",
      "Charlie Austin doubled the lead with a header after 20.",
      "Charlie Austin doubled the lead with a header minutes later.",
      "Bobby Zamora made.",
      "It made three.",
      "Bobby Zamora made three of it.",
      "Victor Anichebe pulled back.",
      "Pull back before Youssouf Mulumbu is sent off",
      "Pullbacks before Joey Barton scored.",
      "Victor Anichebe pulled back one.",
      "Victor Anchebe pulled back for West Brum.",
      "Victor Anichebe pulled back before Youssouf Mulumbu was sent off.",
      "Victor Anichebe pulled back before Joey Barton scored.",
      "One pulled back for West Brom.",
      "One pulled back before Youssouf Mulumbu was sent off.",
      "One pulled back before Joey Barton scored.",
      "Before Joey Barton scored, West Brom pulled back.",
      "Victor Anichebe pulled back one for West Brum.",
      "Victor Anichebe pulled back one before Youssouf Mulumbu was sent off.",
      "Victor Anichebe pulled back one before Joey Barton scored.",
      "Victor Anchebe pulled back for West Brum before Youssouf Mulumbu was sent off.",
      "Victor Anchebe pulled back for West Brum before Joey Barton scored.",
      "One pulled back for West Brom before Youssouf Mulumbu was sent off.",
      "One pulled back for West Brum before Joey Barton scored.",
      "Victor Anchebe pulled back one for West Brum before Youssouf Mulumbu was sent off.",
      "Victor Anchebe pulled back one for West Brum before Joey Barton scored.",
      "Before Youssouf Mulumbu was sent off.",
      "Before Joey Barton scored.",
      "And Youssouf Mulumbu was sent off.",
      "And Joey Barton scored.",
      "Youssouf Mulumbu was sent off and Joey Barton scored.",
      "Youssouf Mulumbu was sent off.",
      "Joey Barton scored."
    ]
  },
  {
    "instance_id": "realsumm-15",
    "summary": "<t> Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators . </t> <t> The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye . </t> <t> The Red Wings lost 2 - 1 but remained in third place in the Atlantic division . </t>",
    "summary_trees": [
      "# ::snt  Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators . \n(c / catch-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Drew\"\n                  :op2 \"Miller\")\n            :part-of (t / team\n                  :name (n2 / name\n                        :op1 \"Detroit\"\n                        :op2 \"Red\"\n                        :op3 \"Wings\")))\n      :ARG2 (s / skate)\n      :time (p2 / period\n            :ord (o / ordinal-entity\n                  :value 1)\n            :subevent-of (o2 / oppose-01\n                  :ARG0 t\n                  :ARG1 (t2 / team\n                        :name (n3 / name\n                              :op1 \"Ottawa\"\n                              :op2 \"Senators\")))))",
      "# ::snt  The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye . \n(c / contrast-01\n      :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                  :ARG1 (c3 / cut-01\n                        :mod (m / massive)))\n            :ARG1 (s / stitch\n                  :quant (b / between\n                        :op1 50\n                        :op2 60)))\n      :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                  :part-of (p / person\n                        :name (n / name\n                              :op1 \"Miller\")))))",
      "# ::snt  The Red Wings lost 2 - 1 but remained in third place in the Atlantic division . \n(h / have-concession-91\n      :ARG1 (r / remain-01\n            :ARG1 (t / team\n                  :name (n / name\n                        :op1 \"Red\"\n                        :op2 \"Wings\"))\n            :ARG3 (p / place\n                  :ord (o / ordinal-entity\n                        :value 3)\n                  :location (d / division\n                        :mod (o2 / ocean\n                              :name (n2 / name\n                                    :op1 \"Atlantic\")))))\n      :ARG2 (l / lose-03\n            :ARG0 t\n            :quant (s / score-entity\n                  :op1 2\n                  :op2 1)))"
    ],
    "tree": [
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\")))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\"))))",
      "(c / catch-02\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(c / catch-02\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\")))))",
      "(c / catch-02\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG1 (t2 / team\n                                     :name (n3 / name\n                                               :op1 \"Ottawa\"\n                                               :op2 \"Senators\")))))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :ARG2 (s / skate))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\")))\n   :ARG2 (s / skate))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\")))))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG1 (t2 / team\n                                     :name (n3 / name\n                                               :op1 \"Ottawa\"\n                                               :op2 \"Senators\")))))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\")))\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\")))\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG0 t)))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\")))\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG1 (t2 / team\n                                     :name (n3 / name\n                                               :op1 \"Ottawa\"\n                                               :op2 \"Senators\")))))",
      "(c / catch-02\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(c / catch-02\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\")))))",
      "(c / catch-02\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG1 (t2 / team\n                                     :name (n3 / name\n                                               :op1 \"Ottawa\"\n                                               :op2 \"Senators\")))))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\")))))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\"))\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG1 (t2 / team\n                                     :name (n3 / name\n                                               :op1 \"Ottawa\"\n                                               :op2 \"Senators\")))))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\")))\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(c / catch-02\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n2 / name\n                               :op1 \"Detroit\"\n                               :op2 \"Red\"\n                               :op3 \"Wings\")))\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :subevent (o2 / oppose-01\n                           :ARG1 (t2 / team\n                                     :name (n3 / name\n                                               :op1 \"Ottawa\"\n                                               :op2 \"Senators\")))))",
      "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                      :ARG1 (c3 / cut-01\n                                :mod (m / massive)))))",
      "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op1 50))))",
      "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op2 60))))",
      "(c / contrast-01\n   :ARG2 (d / damage-01\n            :polarity -))",
      "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                      :ARG1 (c3 / cut-01\n                                :mod (m / massive))))\n   :ARG2 (d / damage-01\n            :polarity -))",
      "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op2 60)))\n   :ARG2 (d / damage-01\n            :polarity -))",
      "(r / require-01\n   :ARG0 (c2 / close-01\n             :ARG1 (c3 / cut-01\n                       :mod (m / massive))))",
      "(r / require-01\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50)))",
      "(r / require-01\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op2 60)))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG1 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3))))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\"))))))",
      "(h / have-concession-91\n   :ARG2 (l / lose-03\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))))",
      "(h / have-concession-91\n   :ARG2 (l / lose-03\n            :quant (s / score-entity\n                      :op1 2)))",
      "(h / have-concession-91\n   :ARG2 (l / lose-03\n            :quant (s / score-entity\n                      :op2 1)))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3)))\n   :ARG2 (l / lose-03\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3)))\n   :ARG2 (l / lose-03\n            :quant (s / score-entity\n                      :op1 2)))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3)))\n   :ARG2 (l / lose-03\n            :quant (s / score-entity\n                      :op2 1)))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\")))))\n   :ARG2 (l / lose-03\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\")))))\n   :ARG2 (l / lose-03\n            :quant (s / score-entity\n                      :op1 2)))",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG3 (p / place\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\")))))\n   :ARG2 (l / lose-03\n            :quant (s / score-entity\n                      :op2 1)))",
      "(r / remain-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Red\"\n                     :op2 \"Wings\")))",
      "(r / remain-01\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(r / remain-01\n   :ARG3 (p / place\n            :location (d / division\n                         :mod (o2 / ocean\n                                  :name (n2 / name\n                                            :op1 \"Atlantic\")))))",
      "(r / remain-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Red\"\n                     :op2 \"Wings\"))\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(r / remain-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Red\"\n                     :op2 \"Wings\"))\n   :ARG3 (p / place\n            :location (d / division\n                         :mod (o2 / ocean\n                                  :name (n2 / name\n                                            :op1 \"Atlantic\")))))"
    ],
    "smus": [
      "Drew Miller was caught.",
      "The Detroit Red Wings were caught.",
      "Catched in the first period.",
      "Catch in the period against the Detroit Red Wings.",
      "Catch in the period against the Ottawa Senators.",
      "Drew Miller was caught on a skate.",
      "Detroit Red Wings got caught on skates.",
      "Drew Miller was caught in the first period.",
      "Drew Miller was caught in the period against the Detroit Red Wings.",
      "Drew Miller was caught in the period against the Ottawa Senators.",
      "The Detroit Red Wings were caught in the first period.",
      "The Detroit Red Wings were caught in the opposition period.",
      "The Detroit Red Wings were caught in the period against the Ottawa Senators.",
      "During the first period, skates were caught.",
      "Catch the skate in the period against the Detroit Red Wings.",
      "Catch the skate during the period against the Ottawa Senators.",
      "Drew Miller was caught on skates during the first period.",
      "Drew Miller was caught on the skate during the period against the Detroit Red Wings.",
      "Drew Miller was caught on the skates during the period against the Ottawa Senators.",
      "The Detroit Red Wings were caught on skates in the first period.",
      "Detroit Red Wings skater caught during period against Ottawa Senators.",
      "But it required a massive cut to close.",
      "But required 50 stitches.",
      "But required between 60 stitches.",
      "But not to damage.",
      "Massive cuts required to close, but did not cause damage.",
      "60 stitches required, but did not cause damage.",
      "Massive cuts required to close.",
      "required between 50 stitches.",
      "required between 60 stitches.",
      "However, the Red Wings remained.",
      "But the third place remained.",
      "But the place remained in the Atlantic division.",
      "However, the Red Wings lost.",
      "But two losses happened.",
      "But one loss happened.",
      "Red Wings lost, but remained third place.",
      "Despite the two losses, third place remained.",
      "Despite one loss, the third place remained.",
      "The Red Wings lost, but the place remained in the Atlantic division.",
      "Two losses, but the place remained in the Atlantic division.",
      "One loss, but the place remained in the Atlantic division.",
      "The Red Wings remained.",
      "The third place remained.",
      "The place remained in the Atlantic division.",
      "The Red Wings remained in third place.",
      "The Red Wings remained in place in the Atlantic division."
    ]
  },
  {
    "instance_id": "realsumm-16",
    "summary": "<t> Jurgen Klopp will leave Borussia Dortmund at the end of the season . </t> <t> German boss has enjoyed success with club during seven - year stint . </t> <t> Klopp has been linked with Manchester City , Manchester United and Arsenal . </t> <t> Per Mertesacker says Klopp would like to see Klopp in the Premier League . </t>",
    "summary_trees": [
      "# ::snt  Jurgen Klopp will leave Borussia Dortmund at the end of the season . \n(l / leave-15\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Borussia\"\n                  :op2 \"Dortmund\"))\n      :time (e / end-01\n            :ARG1 (s / season)))",
      "# ::snt  German boss has enjoyed success with club during seven - year stint . \n(e / enjoy-01\n      :ARG0 (b / boss\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Germany\")))\n      :ARG1 (s / succeed-01\n            :ARG0 b\n            :ARG1 (c2 / club))\n      :duration (s2 / stint\n            :duration (t / temporal-quantity\n                  :quant 7\n                  :unit (y / year))))",
      "# ::snt  Klopp has been linked with Manchester City , Manchester United and Arsenal . \n(l / link-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Klopp\"))\n      :ARG2 (a / and\n            :op1 (t / team\n                  :name (n2 / name\n                        :op1 \"Manchester\"\n                        :op2 \"City\"))\n            :op2 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\"))\n            :op3 (t3 / team\n                  :name (n4 / name\n                        :op1 \"Arsenal\"))))",
      "# ::snt  Per Mertesacker says Klopp would like to see Klopp in the Premier League . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Per\"\n                  :op2 \"Mertesacker\"))\n      :ARG1 (l / like-02\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Klopp\"))\n            :ARG1 (s2 / see-01\n                  :ARG0 p2\n                  :ARG1 p2\n                  :location (l2 / league\n                        :name (n3 / name\n                              :op1 \"Premier\"\n                              :op2 \"League\")))))"
    ],
    "tree": [
      "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\")))",
      "(l / leave-15\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\")))",
      "(l / leave-15\n   :time (e / end-01\n            :ARG1 (s / season)))",
      "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\")))",
      "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (e / end-01\n            :ARG1 (s / season)))",
      "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\"))\n   :time (e / end-01\n            :ARG1 (s / season)))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\"))))",
      "(e / enjoy-01\n   :ARG1 (s / succeed-01\n            :ARG1 (c2 / club)))",
      "(e / enjoy-01\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7)))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG0 b))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG1 (c2 / club)))",
      "(e / enjoy-01\n   :ARG1 (s / succeed-01\n            :ARG0 (b / boss))\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7)))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG0 b)\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7)))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG1 (c2 / club))\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7)))",
      "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Klopp\")))",
      "(l / link-01\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Manchester\"\n                      :op2 \"City\")))",
      "(l / link-01\n   :ARG2 (t2 / team\n             :name (n3 / name\n                       :op1 \"Manchester\"\n                       :op2 \"United\")))",
      "(l / link-01\n   :ARG2 (t3 / team\n             :name (n4 / name\n                       :op1 \"Arsenal\")))",
      "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Klopp\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Manchester\"\n                      :op2 \"City\")))",
      "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Klopp\"))\n   :ARG2 (t2 / team\n             :name (n3 / name\n                       :op1 \"Manchester\"\n                       :op2 \"United\")))",
      "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Klopp\"))\n   :ARG2 (t3 / team\n             :name (n4 / name\n                       :op1 \"Arsenal\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\")))",
      "(s / say-01\n   :ARG1 (l / like-02\n            :ARG1 (s2 / see-01\n                      :ARG1 (p2 / person :name (n2 / name :op1 \"Klopp\")))))",
      "(s / say-01\n   :ARG1 (l / like-02\n            :ARG1 (s2 / see-01\n                      :location (l2 / league\n                                    :name (n3 / name\n                                              :op1 \"Premier\"\n                                              :op2 \"League\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Klopp\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG1 (s2 / see-01\n                      :ARG0 (p2 / person :name (n2 / name :op1 \"Klopp\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG1 (s2 / see-01\n                      :ARG1 (p2 / person :name (n2 / name :op1 \"Klopp\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG1 (s2 / see-01\n                      :location (l2 / league\n                                    :name (n3 / name\n                                              :op1 \"Premier\"\n                                              :op2 \"League\")))))",
      "(l / like-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Klopp\")))",
      "(l / like-02\n   :ARG1 (s2 / see-01\n             :ARG0 (p2 / person :name (n2 / name :op1 \"Klopp\"))))",
      "(l / like-02\n   :ARG1 (s2 / see-01\n             :ARG1 (p2 / person :name (n2 / name :op1 \"Klopp\"))))",
      "(l / like-02\n   :ARG1 (s2 / see-01\n             :location (l2 / league\n                           :name (n3 / name\n                                     :op1 \"Premier\"\n                                     :op2 \"League\"))))",
      "(l / like-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Klopp\"))\n   :ARG1 (s2 / see-01\n             :ARG0 p2))",
      "(l / like-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Klopp\"))\n   :ARG1 (s2 / see-01\n             :ARG1 p2))"
    ],
    "smus": [
      "Kurgen Klopp will leave.",
      "Leave Borussia Dortmund",
      "Leave at the end of the season.",
      "Kurgen Klopp will leave Borussia Dortmund.",
      "Kurgen Klopp will leave at the end of the season.",
      "Jurgen Klopp will leave Borussia Dortmund at the end of the season.",
      "The German boss has enjoyed.",
      "Enjoyed the club's success.",
      "Enjoyed a 7 stint.",
      "The German boss has enjoyed success.",
      "The German boss has enjoyed success at the club.",
      "The boss has enjoyed success during his seven stints.",
      "The German boss has enjoyed success in his seven stints.",
      "The German boss has enjoyed club success in his seven stints.",
      "Klopp is linked.",
      "Manchester City are linked.",
      "Manchester United are linked.",
      "Linked to Arsenal.",
      "Klopp is linked with Manchester City.",
      "Klopp is linked with Manchester United.",
      "Klopp is linked with Arsenal.",
      "Per Mertesacker says --",
      "Like to see Klopp, says.",
      "Like to see in the Premier League, says he.",
      "Per Mertesacker says he'd like to hear from Klopp.",
      "Per Mertesacker says he'd like to see Klopp.",
      "Per Mertesacker says he would like to see Klopp.",
      "Per Mertesacker says he would like to see this in the Prem.",
      "Would like to see Klopp.",
      "Would like to see it in the Prem.",
      "Klopp would like to see.",
      "Klopp would like to see him.",
      "Klopp would like to see in the Prem.",
      "See in the Premier League."
    ]
  },
  {
    "instance_id": "realsumm-17",
    "summary": "<t> AppleInsider spotted nine listings in the past month relating to batteries . </t> <t> These include one for an iOS battery life software engineer and another for iOS software power systems engineer . </t> <t> Apple significantly improved the battery life on Apple iPhone 6 and 6 Plus . </t> <t> But Apple has been criticised for phones and tablets that only do n't last a day . </t>",
    "summary_trees": [
      "# ::snt  AppleInsider spotted nine listings in the past month relating to batteries . \n(s / spot-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"AppleInsider\"))\n      :ARG1 (l / listing\n            :quant 9\n            :ARG1-of (r / relate-01\n                  :ARG2 (b / battery)))\n      :time (m / month\n            :mod (p2 / past)))",
      "# ::snt  These include one for an iOS battery life software engineer and another for iOS software power systems engineer . \n(ii / include-01\n      :ARG1 (a / and\n            :op1 (o / one\n                  :purpose (p / person\n                        :ARG0-of (e / engineer-01\n                              :ARG1 (s / software\n                                    :purpose (l / life\n                                          :mod (b / battery))\n                                    :mod (p2 / product\n                                          :name (n / name\n                                                :op1 \"iOS\"))))))\n            :op2 (a2 / another\n                  :purpose (p3 / person\n                        :ARG0-of (e2 / engineer-01\n                              :ARG1 (s2 / system\n                                    :mod (p4 / power)\n                                    :mod (s3 / software))))))\n      :ARG2 (t / this))",
      "# ::snt  Apple significantly improved the battery life on Apple iPhone 6 and 6 Plus . \n(ii / improve-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Apple\"))\n      :ARG1 (l / life\n            :duration-of (b / battery)\n            :poss (a / and\n                  :op1 (p / product\n                        :name (n2 / name\n                              :op1 \"iPhone\"\n                              :op2 6))\n                  :op2 (p2 / product\n                        :name (n3 / name\n                              :op1 \"iPhone\"\n                              :op2 6\n                              :op3 \"Plus\"))\n                  :mod c))\n      :ARG1-of (s / significant-02))",
      "# ::snt  But Apple has been criticised for phones and tablets that only do n't last a day . \n(c / contrast-01\n      :ARG2 (c2 / criticize-01\n            :ARG1 (c3 / company\n                  :name (n / name\n                        :op1 \"Apple\"))\n            :ARG2 (a / and\n                  :op1 (p / phone)\n                  :op2 (t / tablet)\n                  :ARG1-of (l / last-04\n                        :polarity -\n                        :ARG2 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (d / day))\n                        :mod (o / only)))))"
    ],
    "tree": [
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\")))",
      "(s / spot-01\n   :ARG1 (l / listing\n            :quant 9))",
      "(s / spot-01\n   :time (m / month\n            :mod (p2 / past)))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery))))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :time (m / month\n            :mod (p2 / past)))",
      "(s / spot-01\n   :ARG1 (l / listing\n            :quant 9)\n   :time (m / month\n            :mod (p2 / past)))",
      "(s / spot-01\n   :ARG1 (l / listing\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9)\n   :time (m / month\n            :mod (p2 / past)))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))",
      "(ii / include-01\n    :ARG1 (o / one\n             :purpose (p / person\n                         :ARG0 (e / engineer-01\n                                  :ARG1 (s / software\n                                           :purpose (l / life\n                                                       :mod (b / battery)))))))",
      "(ii / include-01\n    :ARG1 (a2 / another\n              :purpose (p3 / person\n                           :ARG0 (e2 / engineer-01\n                                     :ARG1 (s2 / system\n                                               :mod (p4 / power))))))",
      "(ii / include-01\n    :ARG1 (o / one\n             :purpose (p / person\n                         :ARG0 (e / engineer-01\n                                  :ARG1 (s / software\n                                           :mod (p2 / product\n                                                    :name (n / name\n                                                             :op1 \"iOS\")))))))",
      "(ii / include-01\n    :ARG1 (a2 / another\n              :purpose (p3 / person\n                           :ARG0 (e2 / engineer-01\n                                     :ARG1 (s2 / system\n                                               :mod (s3 / software))))))",
      "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\")))",
      "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)))",
      "(ii / improve-01\n    :ARG1 (l / life\n             :poss (p / product\n                      :name (n2 / name\n                                :op1 \"iPhone\"\n                                :op2 6))))",
      "(ii / improve-01\n    :ARG1 (l / life\n             :poss (p2 / product\n                       :name (n3 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\"))))",
      "(ii / improve-01\n    :ARG1 (l / life\n             :poss (c / company :name (n / name :op1 \"Apple\"))))",
      "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :duration (b / battery)))",
      "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :poss (p / product\n                      :name (n2 / name\n                                :op1 \"iPhone\"\n                                :op2 6))))",
      "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :poss (p2 / product\n                       :name (n3 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\"))))",
      "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :poss c))",
      "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (c3 / company\n                       :name (n / name\n                                :op1 \"Apple\"))))",
      "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG2 (p / phone)))",
      "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG2 (t / tablet)))",
      "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG2 (l / last-04\n                      :polarity -)))",
      "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG2 (l / last-04\n                      :ARG2 (t2 / temporal-quantity\n                                :quant 1))))",
      "(c2 / criticize-01\n    :ARG1 (c3 / company\n              :name (n / name\n                       :op1 \"Apple\")))",
      "(c2 / criticize-01\n    :ARG2 (l / last-04\n             :polarity -))",
      "(c2 / criticize-01\n    :ARG2 (l / last-04\n             :ARG2 (t2 / temporal-quantity\n                       :quant 1)))",
      "(c2 / criticize-01\n    :ARG2 (l / last-04\n             :ARG2 (t2 / temporal-quantity\n                       :unit (d / day))))",
      "(c2 / criticize-01\n    :ARG1 (c3 / company\n              :name (n / name\n                       :op1 \"Apple\"))\n    :ARG2 (p / phone))",
      "(c2 / criticize-01\n    :ARG1 (c3 / company\n              :name (n / name\n                       :op1 \"Apple\"))\n    :ARG2 (t / tablet))",
      "(c2 / criticize-01\n    :ARG1 (c3 / company\n              :name (n / name\n                       :op1 \"Apple\"))\n    :ARG2 (l / last-04\n             :polarity -))",
      "(c2 / criticize-01\n    :ARG1 (c3 / company\n              :name (n / name\n                       :op1 \"Apple\"))\n    :ARG2 (l / last-04\n             :ARG2 (t2 / temporal-quantity\n                       :unit (d / day))))",
      "(a / and\n   :ARG1 (l / last-04\n            :ARG2 (t2 / temporal-quantity\n                      :quant 1)))",
      "(a / and\n   :op1 (p / phone)\n   :ARG1 (l / last-04\n            :polarity -))",
      "(a / and\n   :op1 (p / phone)\n   :ARG1 (l / last-04\n            :ARG2 (t2 / temporal-quantity\n                      :unit (d / day))))",
      "(a / and\n   :op2 (t / tablet)\n   :ARG1 (l / last-04\n            :polarity -))",
      "(a / and\n   :op1 (p / phone)\n   :op2 (t / tablet)\n   :ARG1 (l / last-04\n            :ARG2 (t2 / temporal-quantity\n                      :quant 1)))"
    ],
    "smus": [
      "AppleInsider spotted.",
      "Spotted 9 listings.",
      "Spotted in the past month.",
      "AppleInsider spotted 9 listings.",
      "AppleInsider spotted listings relating to batteries.",
      "AppleInsider spotted this past month.",
      "9 listings spotted in the past month.",
      "Listings related to batteries were spotted in the past month.",
      "AppleInsider spotted 9 listings in the past month.",
      "AppleInsider spotted listings related to batteries in the past month.",
      "These include one for the battery life engineer.",
      "This includes another for power systems engineers.",
      "This includes one for an IOS software engineer.",
      "This includes another for software systems engineers.",
      "Apple improved.",
      "Battery life improved.",
      "The life of the iPhone 6 improved.",
      "The life of the iPhone 6 Plus improved.",
      "Apple's life improved.",
      "Apple improved battery life.",
      "Apple improved the life of the iPhone 6.",
      "Apple improved the life of the iPhone 6 Plus.",
      "Apple improved their lives.",
      "But Apple has been criticized.",
      "But the phones were criticized.",
      "But the tablets have been criticized.",
      "But criticised for not lasting.",
      "But it was criticized that it would last only a few days.",
      "Apple has been criticized.",
      "Criticised for not lasting.",
      "Criticised for 'to last one.",
      "Criticised for 'lasting a day'",
      "Apple has been criticized for the phones.",
      "Apple has been criticized for the tablets.",
      "Apple has been criticized for not lasting.",
      "Apple has been criticized for a day's work.",
      "And phones don't last.",
      "and the tablets won't last.",
      "Phones and tablets don't last.",
      "Phones and tablets will last one day.",
      "It only lasts a day."
    ]
  },
  {
    "instance_id": "realsumm-18",
    "summary": "<t> Tournament performances have restored Andy Murray to World No 3 . </t> <t> But it 's wedding to Kim Sears that takes Murray 's No 1 spot this week . </t> <t> Murray is due to marry fianc\u00e9e Sears in Dunblane this coming Saturday . </t> <t> There are believed to be well over 100 names on down - to - earth guest list . </t>",
    "summary_trees": [
      "# ::snt  Tournament performances have restored Andy Murray to World No 3 . \n(r / restore-01\n      :ARG0 (p / perform-02\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Andy\"\n                        :op2 \"Murray\"))\n            :mod (t / tournament))\n      :ARG1 (h / have-org-role-91\n            :ARG0 p2\n            :ARG1 (w / world)\n            :ARG2 (n2 / no\n                  :ord (o / ordinal-entity\n                        :value 3))))",
      "# ::snt  But it 's wedding to Kim Sears that takes Murray 's No 1 spot this week . \n(c / contrast-01\n      :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Murray\"))\n                  :ARG2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Kim\"\n                              :op2 \"Sears\")))\n            :ARG1 (s / spot\n                  :ord (o / ordinal-entity\n                        :value 1)\n                  :poss p)\n            :time (w2 / week\n                  :mod (t2 / this))))",
      "# ::snt  Murray is due to marry fianc\u00e9e Sears in Dunblane this coming Saturday . \n(d / due-03\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Murray\"))\n      :ARG2 (m / marry-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Sears\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (f / fiancee)))\n            :location (c / city\n                  :name (n3 / name\n                        :op1 \"Dunblane\")))\n      :time (d2 / date-entity\n            :weekday (s / saturday)\n            :mod (t / this)\n            :ARG1-of (c2 / come-01)))",
      "# ::snt  There are believed to be well over 100 names on down - to - earth guest list . \n(b / believe-01\n      :ARG1 (n / name\n            :quant (o / over\n                  :op1 100\n                  :quant (w / well))\n            :location (l / list-01\n                  :ARG1 (g / guest)\n                  :mod (d / down-to-earth))))"
    ],
    "tree": [
      "(r / restore-01\n   :ARG0 (p / perform-02\n            :mod (t / tournament)))",
      "(r / restore-01\n   :ARG1 (h / have-org-role-91\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andy\"\n                               :op2 \"Murray\"))))",
      "(r / restore-01\n   :ARG1 (h / have-org-role-91\n            :ARG2 (n2 / no\n                      :ord (o / ordinal-entity\n                              :value 3))))",
      "(r / restore-01\n   :ARG0 (p / perform-02\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andy\"\n                               :op2 \"Murray\")))\n   :ARG1 (h / have-org-role-91\n            :ARG0 p2))",
      "(r / restore-01\n   :ARG0 (p / perform-02\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andy\"\n                               :op2 \"Murray\")))\n   :ARG1 (h / have-org-role-91\n            :ARG2 (n2 / no\n                      :ord (o / ordinal-entity\n                              :value 3))))",
      "(r / restore-01\n   :ARG0 (p / perform-02\n            :mod (t / tournament))\n   :ARG1 (h / have-org-role-91\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andy\"\n                               :op2 \"Murray\"))))",
      "(r / restore-01\n   :ARG0 (p / perform-02\n            :mod (t / tournament))\n   :ARG1 (h / have-org-role-91\n            :ARG2 (n2 / no\n                      :ord (o / ordinal-entity\n                              :value 3))))",
      "(c / contrast-01\n   :ARG2 (t / take-01\n            :ARG1 (s / spot\n                     :ord (o / ordinal-entity\n                             :value 1))))",
      "(c / contrast-01\n   :ARG2 (t / take-01\n            :time (w2 / week\n                      :mod (t2 / this))))",
      "(c / contrast-01\n   :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Kim\"\n                                         :op2 \"Sears\")))))",
      "(c / contrast-01\n   :ARG2 (t / take-01\n            :ARG1 (s / spot\n                     :poss (p / person\n                              :name (n / name\n                                       :op1 \"Murray\")))))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\"))))",
      "(t / take-01\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(t / take-01\n   :ARG1 (s / spot\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Murray\"))))",
      "(t / take-01\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\")))\n   :ARG1 (s / spot\n            :poss p))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Murray\"))))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(t / take-01\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1))\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1))\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\")))\n   :ARG1 (s / spot\n            :poss p)\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1))\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Murray\")))\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(w / wed-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\")))",
      "(w / wed-01\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"\n                       :op2 \"Sears\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Murray\"))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\")))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG1 (p / person :name (n / name :op1 \"Murray\"))))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\"))))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (p / person :name (n / name :op1 \"Murray\"))))))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (f / fiancee)))))",
      "(d / due-03\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG1 p))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\"))))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\"))))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG1 (p / person :name (n / name :op1 \"Murray\")))\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")))\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\")))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\")))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\")))\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (p / person :name (n / name :op1 \"Murray\")))))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (p / person :name (n / name :op1 \"Murray\")))))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (f / fiancee))))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (f / fiancee))))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (f / fiancee))))\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")))\n   :time (d2 / date-entity\n             :ARG1 (c2 / come-01)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\")))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p)))\n   :time (d2 / date-entity\n             :weekday (s / saturday)))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p)))\n   :time (d2 / date-entity\n             :mod (t / this)))",
      "(b / believe-01\n   :ARG1 (n / name\n            :quant (o / over\n                      :op1 100)))"
    ],
    "smus": [
      "Tournament performances have restored.",
      "Andy Murray is restored.",
      "No 3 is restored.",
      "Andy Murray's performances have restored his position.",
      "Andy Murray's performances have restored the No. 3 status.",
      "The Tournament performances have restored Andy Murray.",
      "Tournament performances have restored the No. 3 status.",
      "But it takes the first spot.",
      "But it takes this week.",
      "But the wedding to Kim Sears takes place.",
      "But it takes Murray's spot.",
      "It takes a wedding to Kim Sears.",
      "takes the first spot.",
      "Takes Murray's spot.",
      "This week takes.",
      "Murray's wedding takes the first spot.",
      "Murray's wedding takes his spot.",
      "Kim Sears' wedding takes the first spot.",
      "The wedding of Kim Sears takes Murray's spot.",
      "The wedding of Kim Sears takes place this week.",
      "This week, it takes the number one spot.",
      "Murray's wedding takes the first spot this week.",
      "This week, Murray's wedding takes his spot.",
      "Kim Sears' wedding takes the first spot this week.",
      "The wedding of Kim Sears takes Murray's spot this week.",
      "Murray got married.",
      "Kim Sears got married.",
      "spot one",
      "Murray is due to marry.",
      "Due to marry Sears.",
      "Due to marry fiancee",
      "Due in coming.",
      "Murray is due to marry Sears.",
      "Murray is due to marry in Dunblane.",
      "Murray is due to marry his fiancee.",
      "Murray is due in coming.",
      "Murray is due to marry Saturday.",
      "Murray is due to marry this time.",
      "This time, Seers is due to marry.",
      "This time, Murray is due to marry.",
      "In the coming years, Murray is due to marry.",
      "The fiancee is due to marry on Saturday.",
      "This time the fiancee is due to marry.",
      "In the coming months, the fiancee is due to marry.",
      "Murray is due to marry on Saturday.",
      "Murray is due to marry in the coming months.",
      "Murray is due to marry Sears on Saturday.",
      "Murray is due to marry Sears this time.",
      "Murray is due to marry in Dunblane on Saturday.",
      "Murray is due to marry in Dunblane this time.",
      "Murray is due to marry in Dunblane in the coming months.",
      "Murray is due to marry his fiancee on Saturday.",
      "Murray is due to marry his fiancee this date.",
      "Murray is due to marry his fiancee in the coming months.",
      "Murray will marry.",
      "Marry in Dunblane.",
      "Murray will marry in Dunblane.",
      "This is coming.",
      "This Saturday is coming.",
      "Over 100 names are believed."
    ]
  },
  {
    "instance_id": "realsumm-19",
    "summary": "<t> Paula Dunican paid \u00a3 25 for the baby blue coat at Dunican local branch of Asda . </t> <t> When Dunican took Asda home Dunican noticed a ' seeping ' stain on the back of coat . </t> <t> Dunican then discovered the reptile 's crushed body on the garment 's lining . </t> <t> The supermarket has apologised and offered Dunican a \u00a3 40 voucher and refund . </t>",
    "summary_trees": [
      "# ::snt  Paula Dunican paid \u00a3 25 for the baby blue coat at Dunican local branch of Asda . \n(p / pay-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Paula\"\n                  :op2 \"Dunican\"))\n      :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n      :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby))\n      :location (b3 / branch\n            :mod (l / local)\n            :part-of (c2 / company\n                  :name (n2 / name\n                        :op1 \"Asda\"))\n            :location (c3 / city\n                  :name (n3 / name\n                        :op1 \"Dunican\"))))",
      "# ::snt  When Dunican took Asda home Dunican noticed a ' seeping ' stain on the back of coat . \n(n / notice-01\n      :ARG0 (p / person\n            :name (n2 / name\n                  :op1 \"Dunican\"))\n      :ARG1 (s / stain-01\n            :ARG1-of (s2 / seep-01)\n            :location (b / back\n                  :part-of (c / coat)))\n      :time (t / take-01\n            :ARG0 p\n            :ARG1 (c2 / company\n                  :name (n3 / name\n                        :op1 \"Asda\"))\n            :ARG3 (h / home)))",
      "# ::snt  Dunican then discovered the reptile 's crushed body on the garment 's lining . \n(d / discover-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dunican\"))\n      :ARG1 (b / body\n            :part-of (r / reptile)\n            :ARG1-of (c / crush-01))\n      :location (l / lining\n            :part-of (g / garment))\n      :time (t / then))",
      "# ::snt  The supermarket has apologised and offered Dunican a \u00a3 40 voucher and refund . \n(a / and\n      :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n      :op2 (o / offer-01\n            :ARG0 s\n            :ARG1 (a3 / and\n                  :op1 (v / voucher\n                        :mod (m / monetary-quantity\n                              :quant 40\n                              :unit (p / pound)))\n                  :op2 (r / refund-01\n                        :ARG0 s\n                        :ARG2 (p2 / person\n                              :name (n / name\n                                    :op1 \"Dunican\"))))\n            :ARG3 p2))"
    ],
    "tree": [
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\")))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound)))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b / blue)))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b2 / baby)))",
      "(p / pay-01\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b / blue)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b2 / baby)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b2 / baby)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b / blue)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b2 / baby)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b2 / baby)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :mod (l / local)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25)\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b / blue))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :part (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :location (c3 / city\n                               :name (n3 / name\n                                         :op1 \"Dunican\"))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Paula\"\n             :op2 \"Dunican\"))",
      "(b3 / branch\n    :part (c2 / company\n              :name (n2 / name\n                        :op1 \"Asda\")))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\")))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01)))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat))))",
      "(n / notice-01\n   :time (t / take-01\n            :ARG0 (p / person :name (n2 / name :op1 \"Dunican\"))))",
      "(n / notice-01\n   :time (t / take-01\n            :ARG3 (h / home)))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01)))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat))))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :time (t / take-01\n            :ARG0 p))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :time (t / take-01\n            :ARG3 (h / home)))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01))\n   :time (t / take-01\n            :ARG0 (p / person :name (n2 / name :op1 \"Dunican\"))))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01))\n   :time (t / take-01\n            :ARG1 (c2 / company\n                      :name (n3 / name\n                                :op1 \"Asda\"))))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01))\n   :time (t / take-01\n            :ARG3 (h / home)))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat)))\n   :time (t / take-01\n            :ARG0 (p / person :name (n2 / name :op1 \"Dunican\"))))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat)))\n   :time (t / take-01\n            :ARG1 (c2 / company\n                      :name (n3 / name\n                                :op1 \"Asda\"))))",
      "(n / notice-01\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat)))\n   :time (t / take-01\n            :ARG3 (h / home)))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01))\n   :time (t / take-01\n            :ARG0 p))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01))\n   :time (t / take-01\n            :ARG1 (c2 / company\n                      :name (n3 / name\n                                :op1 \"Asda\"))))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :ARG1 (s2 / seep-01))\n   :time (t / take-01\n            :ARG3 (h / home)))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat)))\n   :time (t / take-01\n            :ARG0 p))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat)))\n   :time (t / take-01\n            :ARG1 (c2 / company\n                      :name (n3 / name\n                                :op1 \"Asda\"))))",
      "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :location (b / back\n                         :part (c / coat)))\n   :time (t / take-01\n            :ARG3 (h / home)))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Dunican\"))",
      "(s / stain-01\n   :ARG1 (s2 / seep-01)\n   :location (b / back\n                :part (c / coat)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\")))",
      "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)))",
      "(d / discover-01\n   :ARG1 (b / body\n            :ARG1 (c / crush-01)))",
      "(d / discover-01\n   :location (l / lining\n                :part (g / garment)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :ARG1 (c / crush-01)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :location (l / lining\n                :part (g / garment)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :time (t / then))",
      "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile))\n   :location (l / lining\n                :part (g / garment)))",
      "(d / discover-01\n   :ARG1 (b / body\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (g / garment)))",
      "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile))\n   :time (t / then))",
      "(d / discover-01\n   :ARG1 (b / body\n            :ARG1 (c / crush-01))\n   :time (t / then))",
      "(d / discover-01\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile))\n   :location (l / lining\n                :part (g / garment)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (g / garment)))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile))\n   :time (t / then))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :ARG1 (c / crush-01))\n   :time (t / then))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))",
      "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile))\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))",
      "(d / discover-01\n   :ARG1 (b / body\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile))\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))",
      "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dunican\"))\n   :ARG1 (b / body\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))",
      "(p / person\n   :name (n / name\n            :op1 \"Dunican\"))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket)))",
      "(a / and\n   :op2 (o / offer-01\n           :ARG0 (s / supermarket)))",
      "(a / and\n   :op2 (o / offer-01\n           :ARG1 (v / voucher\n                    :mod (m / monetary-quantity\n                            :quant 40))))",
      "(a / and\n   :op2 (o / offer-01\n           :ARG3 (p2 / person\n                     :name (n / name\n                              :op1 \"Dunican\"))))",
      "(a / and\n   :op2 (o / offer-01\n           :ARG1 (r / refund-01\n                    :ARG0 (s / supermarket))))",
      "(a / and\n   :op2 (o / offer-01\n           :ARG1 (r / refund-01\n                    :ARG2 (p2 / person\n                              :name (n / name\n                                       :op1 \"Dunican\")))))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n   :op2 (o / offer-01\n           :ARG0 s))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n   :op2 (o / offer-01\n           :ARG1 (v / voucher\n                    :mod (m / monetary-quantity\n                            :quant 40))))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n   :op2 (o / offer-01\n           :ARG3 (p2 / person\n                     :name (n / name\n                              :op1 \"Dunican\"))))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n   :op2 (o / offer-01\n           :ARG1 (r / refund-01\n                    :ARG0 s)))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n   :op2 (o / offer-01\n           :ARG1 (r / refund-01\n                    :ARG2 (p2 / person\n                              :name (n / name\n                                       :op1 \"Dunican\")))))",
      "(o / offer-01\n   :ARG1 (r / refund-01\n            :ARG0 (s / supermarket)))",
      "(o / offer-01\n   :ARG1 (r / refund-01\n            :ARG2 (p2 / person\n                      :name (n / name\n                               :op1 \"Dunican\"))))",
      "(a3 / and\n    :op1 (v / voucher\n            :mod (m / monetary-quantity\n                    :quant 40)))"
    ],
    "smus": [
      "Paula dunican paid.",
      "paid 25.",
      "paid in pounds.",
      "paid for the blue coat.",
      "paid for the baby coat.",
      "Payed at the local branch.",
      "Payments were made at the Asda branch.",
      "Payed at the Dunican branch.",
      "Paula dunican paid 25.",
      "Paula dunican paid for the blue coat.",
      "Paula dunican paid for the baby coat.",
      "Paula dunican paid at the local branch.",
      "Paula dunican paid at the Asda branch.",
      "Paula dunican paid at the dunican branch.",
      "The blue coat paid 25 bucks.",
      "The blue coat was paid for by the pounds.",
      "The baby coat was paid in pounds.",
      "25 was paid at the local branch.",
      "25 were paid in the Asda branch.",
      "The 25 was paid at the Dunican branch.",
      "Payed in pounds at the Dunican branch.",
      "The blue coat was paid at the Asda branch.",
      "The blue coat was paid at the Dunican branch.",
      "The baby coat was paid at the local branch.",
      "The baby coat was paid at the Asda branch.",
      "The baby coat was paid at the Dunican branch.",
      "Paula dunican paid 25 for the blue coat.",
      "Paula dunican paid 25 for a baby coat.",
      "Paula dunican paid 25 at the local branch.",
      "Paula dunican paid 25 at the Asda branch.",
      "Paula dunican paid 25 at the Dunican branch.",
      "Paula dunican paid a pound at the dunican branch.",
      "Paula dunican paid for the blue coat at the local branch.",
      "Paula dunican paid for the blue coat at the Asda branch.",
      "Paula dunican paid for the blue coat at the dunican branch.",
      "Paula dunican paid for the baby coat at the local branch.",
      "Paula dunican paid for the baby coat at the Asda branch.",
      "Paula dunican paid for the baby coat at the dunican branch.",
      "At the local branch, 25 bucks was paid for a blue coat.",
      "At the Asda branch, 25 bucks was paid for a blue coat.",
      "At the Dunican branch, 25 bucks was paid for a blue coat.",
      "25 bucks for a baby coat was paid at the local branch.",
      "25 bucks for a baby coat was paid at the Asda branch.",
      "At the Dunican branch, 25 bucks was paid for a baby coat.",
      "At the Dunican branch, the baby coat was paid for by the pounds.",
      "Paula dunican paid 25 for the blue coat at the local branch.",
      "Paula dunican paid 25 for the blue coat at the Asda branch.",
      "Paula dunican paid 25 for a blue coat at the dunican branch.",
      "Paula dunican paid 25 for the baby coat at the local branch.",
      "Paula dunican paid 25 for the baby coat at the Asda branch.",
      "Paula dunican paid 25 for a baby coat at the Dunican branch.",
      "Paula dunican paid a blue coat at the dunican branch.",
      "Paula dunican paid a pound for a baby coat at the dunican branch.",
      "The Dunican branch is located.",
      "The Asda branch is located in Dunican.",
      "There is a local branch of Asda in Dunican.",
      "Dunican noticed.",
      "Noticed a stain of seepage.",
      "Noticed stain on coat back.",
      "Noticed when Dunican took his.",
      "Noticed when taken home.",
      "Dunican noticed a stain of seeping.",
      "Dunican noticed a stain on the coat back.",
      "Dunican noticed when he took.",
      "Dunican noticed as he took home.",
      "When Dunican took his, he noticed a stain of seepage.",
      "When Asda took on, it noticed a stain of seepage.",
      "When taken home, noticed a stain of seeping.",
      "When Dunican took his, he noticed a stain on the back of the coat.",
      "When Asda took over there was a stain on the back of the coat.",
      "When taken home, noticed a stain on the back of the coat.",
      "Dunican noticed a stain of seeping when he took his.",
      "Dunican noticed a stain of seeping when Asda took off.",
      "Dunican noticed a stain of seeping when he took home.",
      "Dunican noticed a stain on the back of the coat when he took it.",
      "Dunican noticed a stain on the back of the coat when Asda took it.",
      "Dunican noticed a stain on the back of the coat when he took home.",
      "Seeping stain on coat back",
      "Asda took home.",
      "Dunican discovered.",
      "The reptile's body was discovered.",
      "The body was discovered to be crushed.",
      "Discovered in the garment lining.",
      "Dunican discovered the reptile's body.",
      "Dunican discovered the body of the crushed.",
      "Dunican discovered in the garment lining.",
      "Then Dunican discovered.",
      "The reptile's body was discovered in the garment lining.",
      "The body of the crushed was discovered in the garment lining.",
      "The reptile's body was then discovered.",
      "Then the body was discovered, crushed.",
      "Then discovered in the garment lining.",
      "Dunican discovered the reptile's body in the garment lining.",
      "Dunican discovered the crushed body in the garment lining.",
      "Then Dunican discovered the reptile's body.",
      "Then Dunican discovered the body of the crushed.",
      "Then Dunican discovered in the garment lining.",
      "The reptile's body was then discovered in a garment lining.",
      "Then the body of the crushed was discovered in the garment lining.",
      "Then Dunican discovered the reptile's body in the garment lining.",
      "Then Dunican discovered the crushed body in the garment lining.",
      "The reptile's body was crushed.",
      "And the supermarket has apologized.",
      "and the supermarket offered.",
      "and offered a 40 voucher",
      "And offered Dunican.",
      "and the supermarket offered a refund.",
      "And offered Dunican a refund.",
      "The supermarket apologized and offered.",
      "The supermarket apologized and offered a voucher of 40.",
      "The supermarket apologized and offered Dunican.",
      "The supermarket apologized and offered a refund.",
      "The supermarket apologized and offered Dunican a refund.",
      "The supermarket offered a refund.",
      "Dunican was offered a refund.",
      "and the supermarket will refund."
    ]
  },
  {
    "instance_id": "realsumm-20",
    "summary": "<t> Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 . </t> <t> Carroll died in London two days ago , aged 80 , following a battle with cancer . </t> <t> Mr Carroll was running in the General Election for Hampstead and Kilburn . </t> <t> Carroll remains on the paper and Carroll will be elected if Carroll gets enough votes . </t>",
    "summary_trees": [
      "# ::snt  Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 . \n(p / place-01\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Ronnie\"\n                  :op2 \"Carroll\"))\n      :ARG2 (f / fourth)\n      :subevent-of (c / contest-02\n            :ARG3 (e / event\n                  :name (n2 / name\n                        :op1 \"Eurovision\")))\n      :time (a / and\n            :op1 (d / date-entity\n                  :year 1962)\n            :op2 (d2 / date-entity\n                  :year 1963)))",
      "# ::snt  Carroll died in London two days ago , aged 80 , following a battle with cancer . \n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Carroll\")\n            :age (t / temporal-quantity\n                  :quant 80\n                  :unit (y / year)))\n      :location (c / city\n            :name (n2 / name\n                  :op1 \"London\"))\n      :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d2 / day)))\n      :ARG1-of (f / follow-01\n            :ARG2 (b2 / battle-01\n                  :ARG0 p\n                  :ARG1 (d3 / disease\n                        :name (n4 / name\n                              :op1 \"cancer\")))))",
      "# ::snt  Mr Carroll was running in the General Election for Hampstead and Kilburn . \n(r / run-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Mr\"\n                  :op2 \"Carroll\"))\n      :ARG1 (a / and\n            :op1 (c / city-district\n                  :name (n2 / name\n                        :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                  :name (n3 / name\n                        :op1 \"Kilburn\")))\n      :subevent-of (e / elect-01\n            :ARG1-of (g / general-02)))",
      "# ::snt  Carroll remains on the paper and Carroll will be elected if Carroll gets enough votes . \n(a / and\n      :op1 (r / remain-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Carroll\"))\n            :location (p2 / paper))\n      :op2 (e / elect-01\n            :ARG1 p\n            :condition (g / get-01\n                  :ARG0 p\n                  :ARG1 (v / vote-01\n                        :ARG1 p\n                        :ARG1-of (h / have-quant-91\n                              :ARG3 (e2 / enough))))))"
    ],
    "tree": [
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\")))",
      "(p / place-01\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\"))))",
      "(p / place-01\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\"))))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\"))))",
      "(p / place-01\n   :ARG2 (f / fourth)\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :ARG2 (f / fourth)\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\"))))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d2 / date-entity\n             :year 1963))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d / date-entity\n            :year 1962))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d2 / date-entity\n             :year 1963))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carroll\")))",
      "(d / die-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 80)))",
      "(d / die-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(d / die-01\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\")))",
      "(d / die-01\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :unit (d2 / day))))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carroll\"))\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\")))",
      "(d / die-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (b / before\n            :op1 (n3 / now)))",
      "(d / die-01\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\"))\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :quant 2)))",
      "(d / die-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 80))\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\"))\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :quant 2)))",
      "(d / die-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\"))\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :unit (d2 / day))))",
      "(p / person\n   :name (n / name\n            :op1 \"Carroll\"))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\")))",
      "(r / run-02\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\")))",
      "(r / run-02\n   :subevent (e / elect-01\n                :ARG1 (g / general-02)))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c / city-district\n            :name (n2 / name\n                      :op1 \"Hampstead\")))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\")))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :subevent (e / elect-01\n                :ARG1 (g / general-02)))",
      "(r / run-02\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\"))\n   :subevent (e / elect-01\n                :ARG1 (g / general-02)))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c / city-district\n            :name (n2 / name\n                      :op1 \"Hampstead\"))\n   :subevent (e / elect-01\n                :ARG1 (g / general-02)))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\"))\n   :subevent (e / elect-01\n                :ARG1 (g / general-02)))",
      "(a / and\n   :op1 (r / remain-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carroll\"))))",
      "(a / and\n   :op1 (r / remain-01\n           :location (p2 / paper)))",
      "(a / and\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG0 (p / person :name (n / name :op1 \"Carroll\")))))",
      "(a / and\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG1 (v / vote-01\n                                  :ARG1 (h / have-quant-91\n                                           :ARG3 (e2 / enough))))))",
      "(a / and\n   :op1 (r / remain-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carroll\")))\n   :op2 (e / elect-01\n           :ARG1 p))",
      "(a / and\n   :op1 (r / remain-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carroll\")))\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG0 p)))",
      "(a / and\n   :op1 (r / remain-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carroll\")))\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG1 (v / vote-01\n                                  :ARG1 p))))",
      "(a / and\n   :op1 (r / remain-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carroll\")))\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG1 (v / vote-01\n                                  :ARG1 (h / have-quant-91\n                                           :ARG3 (e2 / enough))))))",
      "(a / and\n   :op1 (r / remain-01\n           :location (p2 / paper))\n   :op2 (e / elect-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carroll\"))))",
      "(a / and\n   :op1 (r / remain-01\n           :location (p2 / paper))\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG0 (p / person :name (n / name :op1 \"Carroll\")))))",
      "(a / and\n   :op1 (r / remain-01\n           :location (p2 / paper))\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG1 (v / vote-01\n                                  :ARG1 (p / person :name (n / name :op1 \"Carroll\"))))))",
      "(a / and\n   :op1 (r / remain-01\n           :location (p2 / paper))\n   :op2 (e / elect-01\n           :condition (g / get-01\n                         :ARG1 (v / vote-01\n                                  :ARG1 (h / have-quant-91\n                                           :ARG3 (e2 / enough))))))",
      "(r / remain-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carroll\")))",
      "(r / remain-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carroll\"))\n   :location (p2 / paper))",
      "(p / person\n   :name (n / name\n            :op1 \"Carroll\"))",
      "(e / elect-01\n   :condition (g / get-01\n                 :ARG0 (p / person :name (n / name :op1 \"Carroll\"))))",
      "(e / elect-01\n   :condition (g / get-01\n                 :ARG1 (v / vote-01\n                          :ARG1 (p / person :name (n / name :op1 \"Carroll\")))))",
      "(e / elect-01\n   :condition (g / get-01\n                 :ARG1 (v / vote-01\n                          :ARG1 (h / have-quant-91\n                                   :ARG3 (e2 / enough)))))",
      "(g / get-01\n   :ARG1 (v / vote-01\n            :ARG1 (p / person :name (n / name :op1 \"Carroll\"))))"
    ],
    "smus": [
      "Placed: Ronnie Carroll",
      "Placed in the Eurovision contest",
      "Placed in 1962.",
      "Placed 1963.",
      "Ronnie Carroll placed fourth.",
      "Ronie Carroll placed in the Eurovision contest.",
      "Ronnie Carroll was placed in 1962.",
      "Ronnie Carroll was placed in 1963.",
      "In the Eurovision contest, it placed fourth.",
      "In 1962, it placed fourth.",
      "In 1963, it placed fourth.",
      "The Eurovision contest was placed in 1962.",
      "The Eurovision contest was placed in 1963.",
      "Ronie Carroll placed fourth in the Eurovision contest.",
      "In 1962, Ronnie Carroll placed fourth.",
      "In 1963, Ronnie Carroll placed fourth.",
      "Ronie Carroll was placed in the Eurovision contest in 1962.",
      "In 1963, Ronnie Carroll was placed in the Eurovision contest.",
      "In the Eurovision contest in 1962, it placed fourth.",
      "In 1963, the Eurovision contest placed fourth.",
      "In the Eurovision contest in 1962, Ronnie Carroll placed fourth.",
      "In 1963, Ronnie Carroll placed fourth in the Eurovision contest.",
      "Carroll died.",
      "The 80-year-old died.",
      "The year old died.",
      "died in London.",
      "Carroll died in London.",
      "The 80-year-old died in London.",
      "Two years ago, a person died.",
      "The day before, he died in London.",
      "The 80-year-old died in London the day before.",
      "Following the Carroll battle.",
      "Following the battle against cancer.",
      "Mr Carroll is running.",
      "Kilburn is running.",
      "Running in the General Election.",
      "Mr Carroll is running for Hampstead.",
      "Kilburn is run by Mr Carroll.",
      "Mr Carroll is running in the General Election.",
      "Kilburn is running in the General Election.",
      "Mr Carroll is running for Hampstead in the General Election.",
      "Mr Carroll is running for Kilburn in the General Election.",
      "And Carroll remains.",
      "And remains in the paper.",
      "And if Carroll gets elected, he'll be elected.",
      "And if enough votes gets elected, it will be elected.",
      "Carroll remains and is elected.",
      "Carroll remains and if he gets elected, he gets elected.",
      "Carroll remains and if he gets the votes he will be elected.",
      "Carroll remains and if it gets enough votes it will be elected.",
      "remains on paper and Carroll elected.",
      "remains on paper and if Carroll gets elected, he gets elected.",
      "remains on paper and if Carroll gets the votes, he will be elected.",
      "remains on paper and if enough votes gets elected, elected.",
      "Carroll remains.",
      "Carroll remains in the paper.",
      "If Carroll gets elected, he will be elected.",
      "If Carroll gets the votes, he will be elected.",
      "If enough votes gets elected, it will be elected.",
      "Gets votes for Carroll.",
      "gets enough votes."
    ]
  },
  {
    "instance_id": "realsumm-21",
    "summary": "<t> McHenry , 28 , berated single mother Gina Michelle for towing Michelle car . </t> <t> Michelle insulted Michelle looks and social status in footage that went viral . </t> <t> ESPN suspended the sports reporter for a week amid investigation . </t> <t> But despite thousands of calls for Michelle to be fired , Michelle returns this week . </t>",
    "summary_trees": [
      "# ::snt  McHenry , 28 , berated single mother Gina Michelle for towing Michelle car . \n(b / berate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Gina\"\n                  :op2 \"Michelle\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother\n                        :ARG1-of (s / single-03))))\n      :ARG2 (t2 / tow-01\n            :ARG0 p\n            :ARG1 (c / car\n                  :poss p2)))",
      "# ::snt  Michelle insulted Michelle looks and social status in footage that went viral . \n(ii / insult-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michelle\"))\n      :ARG1 (a / and\n            :op1 (l / look\n                  :mod p)\n            :op2 (s / status\n                  :mod (s2 / social)\n                  :poss p))\n      :medium (f / footage\n            :ARG1-of (g / go-08\n                  :ARG2 (v / viral))))",
      "# ::snt  ESPN suspended the sports reporter for a week amid investigation . \n(s / suspend-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"ESPN\"))\n      :ARG1 (p2 / person\n            :ARG0-of (r / report-01\n                  :ARG1 (s2 / sport)))\n      :duration (t / temporal-quantity\n            :quant 1\n            :unit (w / week))\n      :ARG1-of (c / cause-01\n            :ARG0 (ii / investigate-01)))",
      "# ::snt  But despite thousands of calls for Michelle to be fired , Michelle returns this week . \n(c / contrast-01\n      :ARG2 (r / return-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Michelle\"))\n            :time (w / week\n                  :mod (t / this))\n            :concession (c2 / call-03\n                  :ARG1 (f / fire-02\n                        :ARG1 p)\n                  :quant (m / multiple\n                        :op1 1000))))"
    ],
    "tree": [
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28)))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(b / berate-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")))",
      "(b / berate-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03)))))",
      "(b / berate-01\n   :ARG2 (t2 / tow-01\n             :ARG0 (p / person :name (n / name :op1 \"McHenry\")))))",
      "(b / berate-01\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss (p2 / person :name (n2 / name :op1 \"Gina\" :op2 \"Michelle\"))))))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03)))))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03)))))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03)))))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss (p2 / person :name (n2 / name :op1 \"Gina\" :op2 \"Michelle\"))))))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss (p2 / person :name (n2 / name :op1 \"Gina\" :op2 \"Michelle\"))))))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\"))\n   :ARG2 (t2 / tow-01\n             :ARG0 (p / person :name (n / name :op1 \"McHenry\")))))",
      "(b / berate-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss p2)))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\"))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\"))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss p2)))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss p2)))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\"))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\"))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss p2)))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG0 p))",
      "(b / berate-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG1 (c / car\n                      :poss p2)))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\")))",
      "(ii / insult-01\n    :ARG1 (l / look\n             :mod (p / person :name (n / name :op1 \"Michelle\"))))",
      "(ii / insult-01\n    :ARG1 (s / status\n             :mod (s2 / social)))",
      "(ii / insult-01\n    :ARG1 (s / status\n             :poss (p / person :name (n / name :op1 \"Michelle\"))))",
      "(ii / insult-01\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :ARG1 (l / look\n             :mod p))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :ARG1 (s / status\n             :mod (s2 / social)))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :ARG1 (s / status\n             :poss p))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG1 (l / look\n             :mod (p / person :name (n / name :op1 \"Michelle\")))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG1 (s / status\n             :mod (s2 / social))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG1 (s / status\n             :poss (p / person :name (n / name :op1 \"Michelle\")))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :ARG1 (l / look\n             :mod p)\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :ARG1 (s / status\n             :mod (s2 / social))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Michelle\"))\n    :ARG1 (s / status\n             :poss p)\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))",
      "(p / person\n   :name (n / name\n            :op1 \"Michelle\"))",
      "(a / and\n   :op1 (l / look\n           :mod (p / person :name (n / name :op1 \"Michelle\"))))",
      "(a / and\n   :op2 (s / status\n           :mod (s2 / social)))",
      "(a / and\n   :op2 (s / status\n           :poss (p / person :name (n / name :op1 \"Michelle\"))))",
      "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\")))",
      "(s / suspend-01\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport))))",
      "(s / suspend-01\n   :duration (t / temporal-quantity\n                :quant 1))",
      "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport))))",
      "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :duration (t / temporal-quantity\n                :quant 1))",
      "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :duration (t / temporal-quantity\n                :unit (w / week)))",
      "(s / suspend-01\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport)))\n   :duration (t / temporal-quantity\n                :quant 1))",
      "(s / suspend-01\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport)))\n   :duration (t / temporal-quantity\n                :unit (w / week)))",
      "(c / contrast-01\n   :ARG2 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Michelle\"))))",
      "(c / contrast-01\n   :ARG2 (r / return-01\n            :time (w / week\n                     :mod (t / this))))",
      "(c / contrast-01\n   :ARG2 (r / return-01\n            :concession (c2 / call-03\n                            :quant (m / multiple\n                                      :op1 1000))))",
      "(r / return-01\n   :time (w / week\n            :mod (t / this)))",
      "(r / return-01\n   :concession (c2 / call-03\n                   :ARG1 (f / fire-02\n                            :ARG1 (p / person :name (n / name :op1 \"Michelle\")))))",
      "(r / return-01\n   :concession (c2 / call-03\n                   :quant (m / multiple\n                             :op1 1000)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Michelle\"))\n   :time (w / week\n            :mod (t / this)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Michelle\"))\n   :concession (c2 / call-03\n                   :ARG1 (f / fire-02\n                            :ARG1 p)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Michelle\"))\n   :concession (c2 / call-03\n                   :quant (m / multiple\n                             :op1 1000)))",
      "(r / return-01\n   :time (w / week\n            :mod (t / this))\n   :concession (c2 / call-03\n                   :ARG1 (f / fire-02\n                            :ARG1 (p / person :name (n / name :op1 \"Michelle\")))))",
      "(r / return-01\n   :time (w / week\n            :mod (t / this))\n   :concession (c2 / call-03\n                   :quant (m / multiple\n                             :op1 1000)))"
    ],
    "smus": [
      "McHenry berated.",
      "The 28-year-old berated.",
      "The year old berated.",
      "Gina Michelle was berated.",
      "The single mother was berated.",
      "Berated for towing Gina Michelle's car.",
      "McHenry berated Gina Michelle.",
      "McHenry berated a single mother.",
      "The 28-year-old berated Gina Michelle.",
      "The 28-year-old berated a single mother.",
      "The year old berated Gina Michelle.",
      "McHenry berated for towing.",
      "McHenry berated towing Gina Michelle's car.",
      "The 28-year-old berated for towing.",
      "The 28-year-old berated towing Gina Michelle's car.",
      "The year old berated for towing.",
      "The year old berated towing Gina Michelle's car.",
      "Gina Michele berated for towing her car.",
      "McHenry berated Gina Michelle for towing.",
      "McHenry berated Gina Michelle for towing her car.",
      "McHenry berated a single mother for towing.",
      "McHenry berated a single mother for towing his car.",
      "The 28-year-old berated Gina Michelle for towing.",
      "The 28-year-old berated Gina Michelle for towing her car.",
      "The 28-year-old berated a single mother for towing.",
      "The 28-year-old berated a single mother for towing her car.",
      "Gina Michelle's car was towing.",
      "Michelle insulted.",
      "Michelle's looks were insulted.",
      "insulted social status.",
      "insulted Michelle's status.",
      "The footage that went viral insulted.",
      "Michelle insulted her looks.",
      "Michelle insulted social status.",
      "Michelle insulted her status.",
      "Michelle insulted in the footage that went viral.",
      "Michelle's looks were insulted in the footage that went viral.",
      "The footage that went viral insulted social status.",
      "In the footage that went viral, Michelle's status was insulted.",
      "In the footage that went viral, Michelle insulted her looks.",
      "In the footage that went viral, Michelle insulted social status.",
      "Michelle insulted her status through the footage that went viral.",
      "And Michelle looks.",
      "Michelle looks and social status.",
      "Michelle looks and her status.",
      "The footage went viral.",
      "ESPN suspended.",
      "Sports reporting suspended.",
      "ESPN suspended a sports reporter.",
      "The station suspended for a week.",
      "Sports reporting suspended for one week.",
      "Sports reporting suspended for a week.",
      "ESPN suspended a sports reporter for one week.",
      "ESPN suspended sports reporters for a week.",
      "But Michelle returns.",
      "But this week it returns.",
      "Michelle returns.",
      "Michelle returns this week.",
      "Michelle returns despite calls to be fired.",
      "Michelle returns despite thousands of calls.",
      "This week returns despite calls to fire Michelle.",
      "Michelle returns this week despite calls to be fired.",
      "Michelle returns this week despite thousands of calls.",
      "Calls for Michelle to be fired.",
      "Michelle has received thousands of calls for her to be fired."
    ]
  },
  {
    "instance_id": "realsumm-22",
    "summary": "<t> Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast . </t> <t> Came up with idea when pregnant with daughter , Lola , now three months . </t> <t> Says Lola and husband David felt like ' rabbits in headlights ' at first . </t> <t> Also struggled to remember which boob to use when breastfeeding . </t>",
    "summary_trees": [
      "# ::snt  Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast . \n(d / design-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chloe\"\n                  :op2 \"Owens\")\n            :age (t / temporal-quantity\n                  :quant 27\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Swanley\")))\n      :ARG1 (a / app\n            :name (n3 / name\n                  :op1 \"Bump\"\n                  :op2 2\n                  :op3 \"Breast\")\n            :ARG1-of (n4 / new-01)))",
      "# ::snt  Came up with idea when pregnant with daughter , Lola , now three months . \n(c / come-up-11\n      :ARG1 (ii / idea)\n      :time (ii2 / impregnate-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Lola\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG2 (d / daughter))\n                  :age (t / temporal-quantity\n                        :quant 3\n                        :unit (m / month)\n                        :time (n2 / now)))))",
      "# ::snt  Says Lola and husband David felt like ' rabbits in headlights ' at first . \n(s / say-01\n      :ARG1 (f / feel-01\n            :ARG0 (a / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Lola\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"David\")\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n            :ARG1 (r / resemble-01\n                  :ARG1 a\n                  :ARG2 (b / bunny\n                        :location (h3 / head\n                              :part-of (h4 / headlights))))\n            :time (a2 / at-first)))",
      "# ::snt  Also struggled to remember which boob to use when breastfeeding . \n(s / struggle-02\n      :ARG0 (ii / i)\n      :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                  :ARG1-of (u / use-01\n                        :ARG0 ii\n                        :time (b2 / breastfeed-01\n                              :ARG0 ii))))\n      :mod (a / also))"
    ],
    "tree": [
      "(d / design-01\n   :ARG0 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))))",
      "(d / design-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Owens\"))\n   :ARG1 (a / app\n            :ARG1 (n4 / new-01)))",
      "(d / design-01\n   :ARG0 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\")))\n   :ARG1 (a / app\n            :name (n3 / name\n                      :op1 \"Bump\"\n                      :op2 2\n                      :op3 \"Breast\")))",
      "(d / design-01\n   :ARG0 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\")))\n   :ARG1 (a / app\n            :ARG1 (n4 / new-01)))",
      "(c / come-up-11\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :name (n / name\n                                :op1 \"Lola\"))))",
      "(c / come-up-11\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :ARG0 (h / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(c / come-up-11\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :age (t / temporal-quantity\n                               :time (n2 / now)))))",
      "(c / come-up-11\n   :ARG1 (ii / idea)\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :name (n / name\n                                :op1 \"Lola\"))))",
      "(c / come-up-11\n   :ARG1 (ii / idea)\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :ARG0 (h / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(c / come-up-11\n   :ARG1 (ii / idea)\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :age (t / temporal-quantity\n                               :time (n2 / now)))))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Lola\"))))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG1 (r / resemble-01\n                     :ARG1 (a / and))))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :time (a2 / at-first)))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"David\"))))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (p / person :name (n / name :op1 \"Lola\"))))))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (h2 / husband)))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lola\")))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"David\")))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Lola\")))))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (h2 / husband))))",
      "(f / feel-01\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and)))",
      "(f / feel-01\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lola\"))\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and)))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lola\"))\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"David\"))\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and)))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Lola\"))))\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and)))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Lola\"))))\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and)))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lola\"))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"David\"))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Lola\"))))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (h2 / husband)))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lola\"))\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lola\"))\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"David\"))\n   :ARG1 (r / resemble-01\n            :ARG1 (a / and))\n   :time (a2 / at-first))",
      "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"David\"))\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))",
      "(s / struggle-02\n   :ARG1 (r / remember-01\n            :ARG0 (ii / i)))",
      "(s / struggle-02\n   :ARG1 (r / remember-01\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :ARG0 (ii / i)))))",
      "(s / struggle-02\n   :ARG1 (r / remember-01\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :time (b2 / breastfeed-01\n                                        :ARG0 (ii / i))))))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG0 ii))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :ARG0 ii))))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :time (b2 / breastfeed-01\n                                        :ARG0 ii)))))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :mod (a / also))",
      "(s / struggle-02\n   :ARG1 (r / remember-01\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :ARG0 (ii / i))))\n   :mod (a / also))",
      "(s / struggle-02\n   :ARG1 (r / remember-01\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :time (b2 / breastfeed-01\n                                        :ARG0 (ii / i)))))\n   :mod (a / also))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG0 ii)\n   :mod (a / also))",
      "(r / remember-01\n   :ARG1 (b / boob\n            :ARG1 (u / use-01\n                     :ARG0 (ii / i))))",
      "(r / remember-01\n   :ARG1 (b / boob\n            :ARG1 (u / use-01\n                     :time (b2 / breastfeed-01\n                               :ARG0 (ii / i)))))",
      "(b / boob\n   :ARG1 (u / use-01\n            :ARG0 (ii / i)))"
    ],
    "smus": [
      "The app was designed as bump 2 breast.",
      "The new app was designed.",
      "Swanley people designed the bump 2 breast app.",
      "The year old designed the new app.",
      "swanley",
      "came up when Lola was pregnant.",
      "came up when the daughter was pregnant.",
      "came up when the person was pregnant now.",
      "The idea came up when Lola was pregnant.",
      "The idea came up when the daughter was pregnant.",
      "The idea came up when a person is pregnant now.",
      "\"Lola felt.",
      "\"I felt like and...",
      "Says felt at first.",
      "David feels.",
      "\"Lola felt,\" says.",
      "\"The husband felt,\" says the woman.",
      "Lola felt.",
      "David felt.",
      "The husband felt.",
      "felt like and...",
      "felt like a bunny on its headlights.",
      "Lola felt like it.",
      "Lola felt like a bunny on its headlights.",
      "David felt like,  like, ''",
      "David felt like a bunny on his headlights.",
      "Lola felt like a bunny with headlights on their heads.",
      "The husband felt like and.",
      "The husband felt like a bunny on his headlights.",
      "At first, Lola felt.",
      "David felt at first.",
      "At first, the husband felt.",
      "At first it felt like...",
      "At first it felt like a bunny on its headlights.",
      "At first, Lola felt like it was like...",
      "At first, Lola felt like a bunny with headlights on their heads.",
      "David felt like that at first.",
      "David felt like a bunny on his headlights at first.",
      "At first the husband felt like it was.",
      "At first the husband felt like a bunny with headlights on their heads.",
      "I struggled to remember.",
      "struggled to remember the boob I was going to use.",
      "struggled to remember the boob to use when I was breast feeding.",
      "I struggled to remember the boob to use.",
      "I struggled to remember the boob to use when I was breast feeding.",
      "I also struggled.",
      "I also struggled to remember.",
      "Also struggled to remember the boob to use when I was breast feeding.",
      "I also struggled to remember the boob to use.",
      "I also struggled to remember the boob to use when breast feeding.",
      "boob to use.",
      "boob use when I'm breast feeding",
      "Use when I'm breast feeding."
    ]
  },
  {
    "instance_id": "realsumm-23",
    "summary": "<t> Harley Street is a top destination for private cosmetic surgery . </t> <t> Patients pay thousands for treatments Patients hope will change Patients lives . </t> <t> Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost Michael self - esteem . </t> <t> Andrea , 72 , pays for a facelift - but Street husband ca n't tell the difference . </t>",
    "summary_trees": [
      "# ::snt  Harley Street is a top destination for private cosmetic surgery . \n(d / destination\n      :mod (t / top)\n      :domain (s / street\n            :name (n / name\n                  :op1 \"Harley\"\n                  :op2 \"Street\"))\n      :purpose (s2 / surgery-01\n            :ARG2 (c / cosmetic)\n            :ARG1-of (p / private-03)))",
      "# ::snt  Patients pay thousands for treatments Patients hope will change Patients lives . \n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p3 / patient)))\n      :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                  :quant 1000\n                  :unit (d / dollar)))\n      :ARG3 (t / treat-03\n            :ARG1 p2\n            :ARG0-of (c / change-01\n                  :ARG1 (l / life\n                        :poss p2)\n                  :ARG1-of (h2 / hope-01\n                        :ARG0 p2))))",
      "# ::snt  Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost Michael self - esteem . \n(s / spend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\")\n            :age (t / temporal-quantity\n                  :quant 33\n                  :unit (y / year))\n            :part (h / hair))\n      :ARG1 (t2 / transplant-01\n            :ARG1 h)\n      :ARG3 (m / monetary-quantity\n            :quant 7000\n            :unit (p2 / pound))\n      :purpose (b / boost-01\n            :ARG0 t2\n            :ARG1 (e / esteem-01\n                  :ARG0 p\n                  :ARG1 p)))",
      "# ::snt  Andrea , 72 , pays for a facelift - but Street husband ca n't tell the difference . \n(c / contrast-01\n      :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Andrea\")\n                  :age (t / temporal-quantity\n                        :quant 72\n                        :unit (y / year)))\n            :ARG3 (f / facelift))\n      :ARG2 (p3 / possible-01\n            :polarity -\n            :ARG1 (k / know-04\n                  :ARG0 (p4 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 p2\n                              :ARG2 (h2 / husband))\n                        :mod (s / street))\n                  :ARG1 (t2 / thing\n                        :ARG1-of (d / differ-02)))))"
    ],
    "tree": [
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient))))",
      "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000)))",
      "(p / pay-01\n   :ARG3 (t / treat-03\n            :ARG1 (p2 / person)))",
      "(p / pay-01\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (l / life\n                              :poss (p2 / person)))))",
      "(p / pay-01\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (h2 / hope-01\n                               :ARG0 (p2 / person)))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (l / life\n                              :poss p2))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (h2 / hope-01\n                               :ARG0 p2))))",
      "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000))\n   :ARG3 (t / treat-03\n            :ARG1 (p2 / person)))",
      "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000))\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (l / life\n                              :poss (p2 / person)))))",
      "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000))\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (h2 / hope-01\n                               :ARG0 (p2 / person)))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000))\n   :ARG3 (t / treat-03\n            :ARG1 p2))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000))\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (l / life\n                              :poss p2))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000))\n   :ARG3 (t / treat-03\n            :ARG0 (c / change-01\n                     :ARG1 (h2 / hope-01\n                               :ARG0 p2))))",
      "(p2 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG2 (p3 / patient)))",
      "(m / multiple\n   :op1 (m2 / monetary-quantity\n            :quant 1000))",
      "(m / multiple\n   :op1 (m2 / monetary-quantity\n            :unit (d / dollar)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\")))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 33)))",
      "(s / spend-01\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair)))",
      "(s / spend-01\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG0 (p / person :name (n / name :op1 \"Michael\"))))))",
      "(s / spend-01\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 (p / person :name (n / name :op1 \"Michael\"))))))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG3 (m / monetary-quantity\n            :unit (p2 / pound)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"))\n   :purpose (b / boost-01\n               :ARG0 (t2 / transplant-01)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"))\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG0 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"))\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 33))\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :part (h / hair))\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG0 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG0 p)))",
      "(s / spend-01\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair))\n   :ARG3 (m / monetary-quantity\n            :quant 7000))",
      "(s / spend-01\n   :ARG0 (p / person\n            :part (h / hair))\n   :ARG1 (t2 / transplant-01\n             :ARG1 h)\n   :ARG3 (m / monetary-quantity\n            :quant 7000))",
      "(s / spend-01\n   :ARG0 (p / person\n            :part (h / hair))\n   :ARG1 (t2 / transplant-01\n             :ARG1 h)\n   :ARG3 (m / monetary-quantity\n            :unit (p2 / pound)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair))\n   :ARG3 (m / monetary-quantity\n            :quant 7000))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair))\n   :ARG3 (m / monetary-quantity\n            :unit (p2 / pound)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"))\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair))\n   :purpose (b / boost-01\n               :ARG0 t2))",
      "(s / spend-01\n   :ARG0 (p / person\n            :part (h / hair))\n   :ARG1 (t2 / transplant-01\n             :ARG1 h)\n   :purpose (b / boost-01\n               :ARG0 t2))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"))\n   :ARG3 (m / monetary-quantity\n            :quant 7000)\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :part (h / hair))\n   :ARG3 (m / monetary-quantity\n            :quant 7000)\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG0 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :part (h / hair))\n   :ARG3 (m / monetary-quantity\n            :quant 7000)\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 p)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG3 (m / monetary-quantity\n            :unit (p2 / pound))\n   :purpose (b / boost-01\n               :ARG0 (t2 / transplant-01)))",
      "(s / spend-01\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair))\n   :ARG3 (m / monetary-quantity\n            :quant 7000)\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 (p / person :name (n / name :op1 \"Michael\"))))))",
      "(s / spend-01\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair))\n   :ARG3 (m / monetary-quantity\n            :unit (p2 / pound))\n   :purpose (b / boost-01\n               :ARG1 (e / esteem-01\n                        :ARG1 (p / person :name (n / name :op1 \"Michael\"))))))",
      "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andrea\"))))",
      "(c / contrast-01\n   :ARG2 (p3 / possible-01\n             :ARG1 (k / know-04\n                      :ARG1 (t2 / thing\n                                :ARG1 (d / differ-02)))))",
      "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :ARG2 (p3 / possible-01\n             :ARG1 (k / know-04\n                      :ARG0 (p4 / person\n                                :ARG0 (h / have-rel-role-91\n                                         :ARG1 p2)))))",
      "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :ARG2 (p3 / possible-01\n             :ARG1 (k / know-04\n                      :ARG1 (t2 / thing\n                                :ARG1 (d / differ-02)))))",
      "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :ARG2 (p3 / possible-01\n             :ARG1 (k / know-04\n                      :ARG0 (p4 / person\n                                :mod (s / street)))))"
    ],
    "smus": [
      "Patients pay.",
      "pay in the thousands.",
      "People pay for their treatments.",
      "Pay for the treatments that change people's lives.",
      "Pay for the treatments that change the people hope for.",
      "Patients pay thousands.",
      "Patients pay for treatments that will change their lives.",
      "Patients pay for treatments that change what they hope for.",
      "People pay thousands for treatments.",
      "thousands pay for treatments that will change people's lives.",
      "Taus of dollars pay for the treatments that change the people hope for.",
      "Patients pay thousands for their treatments.",
      "Patients pay thousands for treatments that will change their lives.",
      "Patients pay thousands for treatments that change what they hope for.",
      "Treatments that change people's lives.",
      "Treatments that change the people hope for.",
      "Change people's lives.",
      "Michael spent.",
      "33 spent.",
      "spent on a hair transplant.",
      "Spending to boost Michael's self-esteem.",
      "Michael spent $$ on a hair transplant.",
      "Michael spent to boost the transplant.",
      "Michael spent to boost his self esteem.",
      "The 33-year-old spent to boost the transplant.",
      "The 33-year-old spent to boost his self-esteem.",
      "The hair spent to boost self esteem.",
      "Year olds spent to boost their self esteem.",
      "spent on a hair transplant to boost it",
      "The hair transplant was spent to boost Michael's self-esteem.",
      "33-year-old spent on a hair transplant to boost it.",
      "33-year-old spent on hair transplant to boost self-esteem.",
      "33-year-old spent on hair transplants to boost self-esteem.",
      "Hair transplanted people spent $$ to boost their hair.",
      "Hair transplanted people spent to boost their self esteem.",
      "33-year-old spent 7,000 to boost self-esteem.",
      "The year old spent 7,000 to boost self esteem.",
      "33-year-old spent 7,000 on a hair transplant to boost it.",
      "33-year-old spent 7,000 on a hair transplant to boost self-esteem.",
      "The year old spent 7,000 on a hair transplant to boost it.",
      "33, haired.",
      "boost Michael's self-esteem",
      "But Andrea pays.",
      "Andrea pays, but can't.",
      "Andrea pays.",
      "Andrea pays for a facelift.",
      "72 pays for a facelift."
    ]
  },
  {
    "instance_id": "realsumm-24",
    "summary": "<t> General Motors unveiled Motors concept car at an event in Shanghai . </t> <t> Chevrolet - FNR has ' dragonfly ' swing doors and ' crystal laser headlights ' FNR is self - driving , electric , and the front chairs can swivel round . </t> <t> And using iris recognition software you can start software using just your eyes . </t>",
    "summary_trees": [
      "# ::snt  General Motors unveiled Motors concept car at an event in Shanghai . \n(u / unveil-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"General\"\n                  :op2 \"Motors\"))\n      :ARG1 (c2 / car\n            :name (n2 / name\n                  :op1 \"Motors\"\n                  :op2 \"Concept\"))\n      :time (e / event\n            :location (c3 / city\n                  :name (n3 / name\n                        :op1 \"Shanghai\"))))",
      "# ::snt  Chevrolet - FNR has ' dragonfly ' swing doors and ' crystal laser headlights ' FNR is self - driving , electric , and the front chairs can swivel round . \n(m / multi-sentence\n      :snt1 (h / have-03\n            :ARG0 (c / car-make\n                  :name (n / name\n                        :op1 \"Chevrolet-FNR\"))\n            :ARG1 (a / and\n                  :op1 (d / door\n                        :mod (s / swing)\n                        :mod (d2 / dragonfly))\n                  :op2 (h2 / headlight\n                        :mod (l / laser\n                              :mod (c2 / crystal)))))\n      :snt2 (a2 / and\n            :op1 (d3 / drive-01\n                  :ARG0 (c3 / car-make\n                        :name (n2 / name\n                              :op1 \"FNR\"))\n                  :manner (s2 / self))\n            :op2 (e / electric\n                  :domain c3)\n            :op3 (p / possible-01\n                  :ARG1 (s3 / swivel-01\n                        :ARG1 (c4 / chair\n                              :mod (f / front))\n                        :direction (r / round)))))",
      "# ::snt  And using iris recognition software you can start software using just your eyes . \n(m / multi-sentence\n      :snt1 (a / and\n            :op2 (p / possible-01\n                  :ARG1 (s / start-01\n                        :ARG0 (y / you)\n                        :ARG1 (s2 / software)\n                        :manner (u / use-01\n                              :ARG0 y\n                              :ARG1 (e / eye\n                                    :mod (j / just)\n                                    :part-of (y2 / you))))\n                  :manner (u2 / use-01\n                        :ARG0 y\n                        :ARG1 (s3 / software\n                              :ARG0-of (r / recognize-01\n                                    :ARG1 (ii / iris)))))))"
    ],
    "tree": [
      "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\")))",
      "(u / unveil-01\n   :ARG1 (c2 / car\n             :name (n2 / name\n                       :op1 \"Motors\"\n                       :op2 \"Concept\")))",
      "(u / unveil-01\n   :time (e / event\n            :location (c3 / city\n                          :name (n3 / name\n                                    :op1 \"Shanghai\"))))",
      "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :name (n2 / name\n                       :op1 \"Motors\"\n                       :op2 \"Concept\")))",
      "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :time (e / event\n            :location (c3 / city\n                          :name (n3 / name\n                                    :op1 \"Shanghai\"))))",
      "(u / unveil-01\n   :ARG1 (c2 / car\n             :name (n2 / name\n                       :op1 \"Motors\"\n                       :op2 \"Concept\"))\n   :time (e / event\n            :location (c3 / city\n                          :name (n3 / name\n                                    :op1 \"Shanghai\"))))",
      "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :name (n2 / name\n                       :op1 \"Motors\"\n                       :op2 \"Concept\"))\n   :time (e / event\n            :location (c3 / city\n                          :name (n3 / name\n                                    :op1 \"Shanghai\"))))",
      "(c / company\n   :name (n / name\n            :op1 \"General\"\n            :op2 \"Motors\"))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet-FNR\"))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (s / swing))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (h2 / headlight\n                      :mod (l / laser\n                              :mod (c2 / crystal)))))",
      "(m / multi-sentence\n   :snt2 (d3 / drive-01\n             :ARG0 (c3 / car-make\n                       :name (n2 / name\n                                 :op1 \"FNR\"))))",
      "(m / multi-sentence\n   :snt2 (e / electric\n            :domain (c3 / car-make\n                        :name (n2 / name\n                                  :op1 \"FNR\"))))",
      "(m / multi-sentence\n   :snt2 (p / possible-01\n            :ARG1 (s3 / swivel-01\n                      :ARG1 (c4 / chair\n                                :mod (f / front)))))",
      "(m / multi-sentence\n   :snt2 (d3 / drive-01\n             :manner (s2 / self)))",
      "(m / multi-sentence\n   :snt2 (p / possible-01\n            :ARG1 (s3 / swivel-01\n                      :direction (r / round))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet-FNR\")))\n   :snt2 (d3 / drive-01\n             :ARG0 (c3 / car-make\n                       :name (n2 / name\n                                 :op1 \"FNR\"))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet-FNR\")))\n   :snt2 (e / electric\n            :domain (c3 / car-make\n                        :name (n2 / name\n                                  :op1 \"FNR\"))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet-FNR\")))\n   :snt2 (p / possible-01\n            :ARG1 (s3 / swivel-01\n                      :ARG1 (c4 / chair\n                                :mod (f / front)))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet-FNR\")))\n   :snt2 (d3 / drive-01\n             :manner (s2 / self)))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet-FNR\")))\n   :snt2 (p / possible-01\n            :ARG1 (s3 / swivel-01\n                      :direction (r / round))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (s / swing)))\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :ARG0 (c3 / car-make\n                                :name (n2 / name\n                                          :op1 \"FNR\")))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (s / swing)))\n   :snt2 (a2 / and\n             :op2 (e / electric\n                     :domain (c3 / car-make\n                                 :name (n2 / name\n                                           :op1 \"FNR\")))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (s / swing)))\n   :snt2 (a2 / and\n             :op3 (p / possible-01\n                     :ARG1 (s3 / swivel-01\n                               :ARG1 (c4 / chair\n                                         :mod (f / front))))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (s / swing)))\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :manner (s2 / self))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (s / swing)))\n   :snt2 (a2 / and\n             :op3 (p / possible-01\n                     :ARG1 (s3 / swivel-01\n                               :direction (r / round)))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (h2 / headlight\n                      :mod (l / laser\n                              :mod (c2 / crystal))))\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :ARG0 (c3 / car-make\n                                :name (n2 / name\n                                          :op1 \"FNR\")))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (h2 / headlight\n                      :mod (l / laser\n                              :mod (c2 / crystal))))\n   :snt2 (a2 / and\n             :op2 (e / electric\n                     :domain (c3 / car-make\n                                 :name (n2 / name\n                                           :op1 \"FNR\")))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (h2 / headlight\n                      :mod (l / laser\n                              :mod (c2 / crystal))))\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :manner (s2 / self))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (h2 / headlight\n                      :mod (l / laser\n                              :mod (c2 / crystal))))\n   :snt2 (a2 / and\n             :op3 (p / possible-01\n                     :ARG1 (s3 / swivel-01\n                               :direction (r / round)))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (d2 / dragonfly)))\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :ARG0 (c3 / car-make\n                                :name (n2 / name\n                                          :op1 \"FNR\")))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (d2 / dragonfly)))\n   :snt2 (a2 / and\n             :op2 (e / electric\n                     :domain (c3 / car-make\n                                 :name (n2 / name\n                                           :op1 \"FNR\")))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (d2 / dragonfly)))\n   :snt2 (a2 / and\n             :op3 (p / possible-01\n                     :ARG1 (s3 / swivel-01\n                               :ARG1 (c4 / chair\n                                         :mod (f / front))))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (d2 / dragonfly)))\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :manner (s2 / self))))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG1 (d / door\n                     :mod (d2 / dragonfly)))\n   :snt2 (a2 / and\n             :op3 (p / possible-01\n                     :ARG1 (s3 / swivel-01\n                               :direction (r / round)))))",
      "(h / have-03\n   :ARG0 (c / car-make\n            :name (n / name\n                     :op1 \"Chevrolet-FNR\")))",
      "(h / have-03\n   :ARG1 (d / door\n            :mod (s / swing)))",
      "(h / have-03\n   :ARG1 (h2 / headlight\n             :mod (l / laser\n                     :mod (c2 / crystal))))",
      "(h / have-03\n   :ARG1 (d / door\n            :mod (d2 / dragonfly)))",
      "(h / have-03\n   :ARG0 (c / car-make\n            :name (n / name\n                     :op1 \"Chevrolet-FNR\"))\n   :ARG1 (d / door\n            :mod (s / swing)))",
      "(h / have-03\n   :ARG0 (c / car-make\n            :name (n / name\n                     :op1 \"Chevrolet-FNR\"))\n   :ARG1 (h2 / headlight\n             :mod (l / laser\n                     :mod (c2 / crystal))))",
      "(h / have-03\n   :ARG0 (c / car-make\n            :name (n / name\n                     :op1 \"Chevrolet-FNR\"))\n   :ARG1 (d / door\n            :mod (d2 / dragonfly)))",
      "(c / car-make\n   :name (n / name\n            :op1 \"Chevrolet-FNR\"))",
      "(a / and\n   :op1 (d / door\n           :mod (s / swing)))",
      "(a / and\n   :op1 (d / door\n           :mod (d2 / dragonfly)))",
      "(a / and\n   :op2 (h2 / headlight\n            :mod (l / laser\n                    :mod (c2 / crystal))))",
      "(a / and\n   :op1 (d / door\n           :mod (s / swing))\n   :op2 (h2 / headlight\n            :mod (l / laser\n                    :mod (c2 / crystal))))",
      "(a / and\n   :op1 (d / door\n           :mod (d2 / dragonfly))\n   :op2 (h2 / headlight\n            :mod (l / laser\n                    :mod (c2 / crystal))))",
      "(h2 / headlight\n    :mod (l / laser\n            :mod (c2 / crystal)))",
      "(a2 / and\n    :op1 (d3 / drive-01\n             :ARG0 (c3 / car-make\n                       :name (n2 / name\n                                 :op1 \"FNR\"))))",
      "(a2 / and\n    :op1 (d3 / drive-01\n             :manner (s2 / self)))",
      "(a2 / and\n    :op2 (e / electric\n            :domain (c3 / car-make\n                        :name (n2 / name\n                                  :op1 \"FNR\"))))",
      "(a2 / and\n    :op3 (p / possible-01\n            :ARG1 (s3 / swivel-01\n                      :ARG1 (c4 / chair\n                                :mod (f / front)))))",
      "(a2 / and\n    :op3 (p / possible-01\n            :ARG1 (s3 / swivel-01\n                      :direction (r / round))))",
      "(a2 / and\n    :op1 (d3 / drive-01\n             :ARG0 (c3 / car-make\n                       :name (n2 / name\n                                 :op1 \"FNR\")))\n    :op2 (e / electric\n            :domain c3))",
      "(m / multi-sentence\n   :snt1 (p / possible-01\n            :ARG1 (s / start-01\n                     :ARG0 (y / you))))",
      "(m / multi-sentence\n   :snt1 (p / possible-01\n            :manner (u2 / use-01\n                        :ARG0 (y / you))))",
      "(m / multi-sentence\n   :snt1 (p / possible-01\n            :ARG1 (s / start-01\n                     :ARG1 (s2 / software))))",
      "(m / multi-sentence\n   :snt1 (p / possible-01\n            :ARG1 (s / start-01\n                     :manner (u / use-01\n                                :ARG0 (y / you)))))",
      "(m / multi-sentence\n   :snt1 (p / possible-01\n            :manner (u2 / use-01\n                        :ARG1 (s3 / software\n                                  :ARG0 (r / recognize-01\n                                           :ARG1 (ii / iris))))))",
      "(m / multi-sentence\n   :snt1 (p / possible-01\n            :ARG1 (s / start-01\n                     :manner (u / use-01\n                                :ARG1 (e / eye\n                                         :part (y2 / you))))))",
      "(a / and\n   :op2 (p / possible-01\n           :ARG1 (s / start-01\n                    :ARG0 (y / you))))",
      "(a / and\n   :op2 (p / possible-01\n           :manner (u2 / use-01\n                       :ARG0 (y / you))))",
      "(a / and\n   :op2 (p / possible-01\n           :ARG1 (s / start-01\n                    :ARG1 (s2 / software))))",
      "(a / and\n   :op2 (p / possible-01\n           :ARG1 (s / start-01\n                    :manner (u / use-01\n                               :ARG0 (y / you)))))",
      "(a / and\n   :op2 (p / possible-01\n           :manner (u2 / use-01\n                       :ARG1 (s3 / software\n                                 :ARG0 (r / recognize-01\n                                          :ARG1 (ii / iris))))))",
      "(a / and\n   :op2 (p / possible-01\n           :ARG1 (s / start-01\n                    :manner (u / use-01\n                               :ARG1 (e / eye\n                                        :part (y2 / you))))))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you)))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG1 (s2 / software)))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :manner (u / use-01\n                       :ARG0 (y / you))))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :manner (u / use-01\n                       :ARG1 (e / eye\n                                :mod (j / just)))))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :manner (u / use-01\n                       :ARG1 (e / eye\n                                :part (y2 / you)))))",
      "(p / possible-01\n   :manner (u2 / use-01\n               :ARG0 (y / you)))",
      "(p / possible-01\n   :manner (u2 / use-01\n               :ARG0 (y / you)))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you))\n   :manner (u2 / use-01\n               :ARG0 y))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you))\n   :manner (u2 / use-01\n               :ARG0 y))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG1 (s2 / software))\n   :manner (u2 / use-01\n               :ARG0 (y / you)))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG1 (s2 / software))\n   :manner (u2 / use-01\n               :ARG0 (y / you)))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :manner (u / use-01\n                       :ARG0 (y / you)))\n   :manner (u2 / use-01\n               :ARG0 y))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :manner (u / use-01\n                       :ARG0 (y / you)))\n   :manner (u2 / use-01\n               :ARG0 y))"
    ],
    "smus": [
      "General Motors unveiled --",
      "The \"Motors Concept\" car unveiled.",
      "The unveiling took place at an event in Shanghai.",
      "General Motors unveiled the \" Motors Concept \" car.",
      "General Motors unveiled at an event in Shanghai.",
      "The \" Motors Concept \" car unveiled at the event in Shanghai.",
      "General Motors unveiled the \" Motors Concept \" car at the event in Shanghai.",
      "The event took place in Shanghai.",
      "The Chevy-FNR has...",
      "has swing doors.",
      "has crystal laser headlights.",
      "Front chairs can swivel.",
      "Self driving.",
      "- Can swivel round",
      "The Chevy-FNR has it. The FNR is driving.",
      "The Chevy-FNR has electric.",
      "The Chevy-FNR has a swivel front chair.",
      "The Chevy-FNR has a self drive.",
      "The Chevy-FNR has a swivel-in.",
      "Has swing doors. FNR driving.",
      "Has swing doors and front chairs can swivel.",
      "Has swing doors, and self driving.",
      "Has swing doors and can swivel round.",
      "Has crystal laser headlights * Driving an FNR",
      "Has Crystal Laser headlights * and the FNR is electric.",
      "Has crystal laser headlights and front chairs can swivel.",
      "Has crystal laser headlights * Self driving.",
      "Has crystal laser headlights and can swivel round.",
      "has dragonfly doors * and the FNR is electric.",
      "has dragonfly doors and the front chairs can swivel.",
      "has dragonfly doors. self driving",
      "has dragonfly doors, and can swivel round.",
      "The Chevy-FNR has Crystal Laser headlights.",
      "The Chevy-FNR has dragonfly doors.",
      "And the FNR was driving.",
      "and self driving.",
      "And the front chairs can swivel.",
      "And it can swivel round.",
      "The FNR is driving and electric.",
      "Self driving, the FNR is electric.",
      "The FNR is driving and the front chairs can swivel.",
      "The FNR is driving and can swivel round.",
      "Self driving and front chairs can swivel.",
      "Self driving and can swivel round.",
      "And the FNR is electric and the front chairs can swivel.",
      "And the FNR is electric and can swivel round.",
      "The FNR is driving and is electric and the front chairs can swivel.",
      "The FNR is driving and is electric and can swivel round.",
      "Self driving, the FNR is electric and the front chairs can swivel.",
      "Self driving, the FNR is electric and can swivel round.",
      "The FNR was driving.",
      "The FNR is self driving.",
      "The front chairs can swivel.",
      "Could swivel round.",
      "The front chairs swivel round.",
      "You can start.",
      "You can by using.",
      "Software can start.",
      "You can start by using.",
      "Using iris recognition software is possible.",
      "You can start by using your eyes.",
      "And you can start.",
      "And you can by using.",
      "and the software can start.",
      "And you can start by using.",
      "and by using iris recognition software.",
      "And you can start by using your eyes.",
      "The software can start.",
      "You can start the software by using it.",
      "By using, you can start.",
      "You can start by using just eyes.",
      "Using your eyes, you can start.",
      "Start by using your eyes.",
      "Start the software.",
      "Start by using eyes.",
      "Start software by using eyes.",
      "Start the software using your eyes.",
      "using just eyes.",
      "using your eyes.",
      "using iris recognition software."
    ]
  },
  {
    "instance_id": "realsumm-25",
    "summary": "<t> Candidate Lynne Abraham says Abraham suffered a momentary drop in blood pressure and that drop 's never happened before . </t> <t> While a doctor kept attorney from returning to the debate , the 74-year - old former district attorney says attorney will not let the incident affect attorney campaign . </t>",
    "summary_trees": [
      "# ::snt  Candidate Lynne Abraham says Abraham suffered a momentary drop in blood pressure and that drop 's never happened before . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lynne\"\n                  :op2 \"Abraham\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / candidate)))\n      :ARG1 (a / and\n            :op1 (s2 / suffer-01\n                  :ARG0 p\n                  :ARG1 (d / drop-01\n                        :ARG1 (p2 / pressure\n                              :mod (b / blood))\n                        :mod (m / momentary)))\n            :op2 (b2 / be-temporally-at-91\n                  :polarity -\n                  :ARG1 d\n                  :ARG2 (b3 / before))))",
      "# ::snt  While a doctor kept attorney from returning to the debate , the 74-year - old former district attorney says attorney will not let the incident affect attorney campaign . \n(c / contrast-01\n      :ARG1 (s / say-01\n            :ARG0 (a / attorney\n                  :mod (d / district)\n                  :time (f / former)\n                  :age (t / temporal-quantity\n                        :quant 74\n                        :unit (y / year)))\n            :ARG1 (l / let-01\n                  :polarity -\n                  :ARG0 (a2 / attorney)\n                  :ARG1 (a3 / affect-01\n                        :ARG0 (ii / incident)\n                        :ARG1 (c2 / campaign-01\n                              :ARG0 a2))))\n      :ARG2 (k / keep-04\n            :ARG0 (d2 / doctor)\n            :ARG1 a2\n            :ARG2 (r / return-01\n                  :ARG1 a2\n                  :ARG4 (d3 / debate-01))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate))))",
      "(s / say-01\n   :ARG1 (s2 / suffer-01\n             :ARG0 (p / person :name (n / name :op1 \"Lynne\" :op2 \"Abraham\")))))",
      "(s / say-01\n   :ARG1 (s2 / suffer-01\n             :ARG1 (d / drop-01\n                      :mod (m / momentary))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\"))\n   :ARG1 (s2 / suffer-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\"))\n   :ARG1 (s2 / suffer-01\n             :ARG1 (d / drop-01\n                      :ARG1 (p2 / pressure\n                                :mod (b / blood)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\"))\n   :ARG1 (b2 / be-temporally-at-91\n             :ARG1 (d / drop-01\n                      :ARG1 (p2 / pressure\n                                :mod (b / blood)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\"))\n   :ARG1 (s2 / suffer-01\n             :ARG1 (d / drop-01\n                      :mod (m / momentary))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate)))\n   :ARG1 (s2 / suffer-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate)))\n   :ARG1 (s2 / suffer-01\n             :ARG1 (d / drop-01\n                      :ARG1 (p2 / pressure\n                                :mod (b / blood)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate)))\n   :ARG1 (b2 / be-temporally-at-91\n             :ARG1 (d / drop-01\n                      :ARG1 (p2 / pressure\n                                :mod (b / blood)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate)))\n   :ARG1 (b2 / be-temporally-at-91\n             :ARG2 (b3 / before)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate)))\n   :ARG1 (s2 / suffer-01\n             :ARG1 (d / drop-01\n                      :mod (m / momentary))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / candidate)))",
      "(p / person\n   :name (n / name\n            :op1 \"Lynne\"\n            :op2 \"Abraham\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / candidate)))",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG0 (p / person :name (n / name :op1 \"Lynne\" :op2 \"Abraham\")))))",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG1 (d / drop-01\n                     :mod (m / momentary))))",
      "(a / and\n   :op2 (b2 / be-temporally-at-91\n            :polarity -))",
      "(a / and\n   :op2 (b2 / be-temporally-at-91\n            :ARG1 (d / drop-01\n                     :ARG1 (p2 / pressure\n                               :mod (b / blood)))))",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG0 (p / person :name (n / name :op1 \"Lynne\" :op2 \"Abraham\"))))\n   :op2 (b2 / be-temporally-at-91\n            :ARG1 (d / drop-01\n                     :ARG1 (p2 / pressure\n                               :mod (b / blood)))))",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG1 (d / drop-01\n                     :ARG1 (p2 / pressure\n                               :mod (b / blood))))\n   :op2 (b2 / be-temporally-at-91\n            :ARG2 (b3 / before)))",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG1 (d / drop-01\n                     :ARG1 (p2 / pressure\n                               :mod (b / blood))\n                     :mod (m / momentary)))\n   :op2 (b2 / be-temporally-at-91\n            :ARG1 d))",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG1 (d / drop-01\n                     :mod (m / momentary)))\n   :op2 (b2 / be-temporally-at-91\n            :polarity -))",
      "(c / contrast-01\n   :ARG1 (s / say-01\n            :ARG0 (a / attorney\n                     :mod (d / district))))",
      "(c / contrast-01\n   :ARG1 (s / say-01\n            :ARG1 (l / let-01\n                     :polarity -))\n   :ARG2 (k / keep-04\n            :ARG1 (a2 / attorney)))",
      "(c / contrast-01\n   :ARG1 (s / say-01\n            :ARG0 (a / attorney\n                     :time (f / former)))\n   :ARG2 (k / keep-04\n            :ARG0 (d2 / doctor)))",
      "(s / say-01\n   :ARG0 (a / attorney\n            :time (f / former)))",
      "(s / say-01\n   :ARG0 (a / attorney\n            :age (t / temporal-quantity\n                    :quant 74)))",
      "(s / say-01\n   :ARG1 (l / let-01\n            :polarity -))",
      "(s / say-01\n   :ARG0 (a / attorney\n            :time (f / former))\n   :ARG1 (l / let-01\n            :polarity -))",
      "(s / say-01\n   :ARG0 (a / attorney\n            :age (t / temporal-quantity\n                    :quant 74))\n   :ARG1 (l / let-01\n            :polarity -))",
      "(a / attorney\n   :mod (d / district)\n   :time (f / former)\n   :age (t / temporal-quantity\n           :unit (y / year)))"
    ],
    "smus": [
      "Lynne Abraham says --",
      "Candidate says --",
      "Lynne Abraham suffered, says.",
      "Momentary drop suffered, says says.",
      "Lynne Abraham says she suffered.",
      "\"The drop in blood pressure suffered,\" says Lynne Abraham.",
      "\"The drop in blood pressure is happening,\" Lynne Abraham says.",
      "\"Momentary drop suffered,\" says Lynne Abraham.",
      "Candidate says he suffered.",
      "Candidate says blood pressure suffered drop.",
      "Candidate says it was the drop in blood pressure.",
      "Candidate says earlier.",
      "Candidate says momentary drop suffered.",
      "and suffered a drop in blood pressure.",
      "And the momentary drop suffered.",
      "and when blood pressure drops.",
      "Lynne Abraham suffered and the drop in blood pressure was.",
      "Lynne Abraham suffered and before.",
      "Lynne Abraham suffered and it was a momentary drop.",
      "Momentary drop in blood pressure suffered and was occurring.",
      "The drop in blood pressure suffered.",
      "Momentary drop suffered.",
      "Drop in blood pressure",
      "But the district attorney says --",
      "\"Not to let,\" says the attorney.",
      "The former attorney says, but the doctor keeps.",
      "According to the former attorney,",
      "According to the 74-year-old attorney,",
      "\"Not to let.\"",
      "The former attorney says he won't let.",
      "The 74-year-old attorney says he won't let.",
      "The doctor kept the attorney in return."
    ]
  },
  {
    "instance_id": "realsumm-26",
    "summary": "<t> Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday . </t> <t> Passenger door of vehicle flung open - releasing the money onto the road . </t> <t> Motorists pulled over and abandoned Motorists vehicles to pick up the cash . </t> <t> Police have warned anyone caught with the money will be arrested . </t>",
    "summary_trees": [
      "# ::snt  Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday . \n(s / spill-over-02\n      :ARG1 (b / bundle\n            :consist-of (n / note))\n      :ARG2 (r / road\n            :name (n2 / name\n                  :op1 \"Interstate\"\n                  :op2 20)\n            :location (c / city\n                  :name (n3 / name\n                        :op1 \"Alilene\")\n                  :location (s2 / state\n                        :name (n4 / name\n                              :op1 \"Texas\"))))\n      :time (d / date-entity\n            :weekday (f / friday)))",
      "# ::snt  Passenger door of vehicle flung open - releasing the money onto the road . \n(o / open-01\n      :ARG1 (d / door\n            :part-of (v / vehicle)\n            :mod (p / passenger))\n      :ARG0-of (r / release-01\n            :ARG1 (m / money)\n            :ARG2 (r2 / road)))",
      "# ::snt  Motorists pulled over and abandoned Motorists vehicles to pick up the cash . \n(a / and\n      :op1 (p / pull-over-05\n            :ARG1 (p2 / person\n                  :ARG0-of (d / drive-01\n                        :ARG1 (v / vehicle\n                              :poss p2))))\n      :op2 (a2 / abandon-01\n            :ARG0 p2\n            :ARG1 v)\n      :purpose (p3 / pick-up-04\n            :ARG0 p2\n            :ARG1 (c / cash)))",
      "# ::snt  Police have warned anyone caught with the money will be arrested . \n(w / warn-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                  :ARG1-of (c / catch-02\n                        :ARG2 (h / have-03\n                              :ARG0 a2\n                              :ARG1 (m / money))))))"
    ],
    "tree": [
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note)))",
      "(s / spill-over-02\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20)))",
      "(s / spill-over-02\n   :ARG2 (r / road\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\"))))",
      "(s / spill-over-02\n   :ARG2 (r / road\n            :location (c / city\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\")))))",
      "(s / spill-over-02\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20)))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\"))))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :location (c / city\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\")))))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG2 (r / road\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\")))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG2 (r / road\n            :location (c / city\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\"))))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\")))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :location (c / city\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\"))))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(o / open-01\n   :ARG1 (d / door\n            :part (v / vehicle)))",
      "(o / open-01\n   :ARG1 (d / door\n            :mod (p / passenger)))",
      "(o / open-01\n   :ARG0 (r / release-01\n            :ARG1 (m / money)))",
      "(o / open-01\n   :ARG1 (d / door\n            :part (v / vehicle))\n   :ARG0 (r / release-01\n            :ARG1 (m / money)))",
      "(o / open-01\n   :ARG1 (d / door\n            :mod (p / passenger))\n   :ARG0 (r / release-01\n            :ARG1 (m / money)))",
      "(d / door\n   :part (v / vehicle)\n   :mod (p / passenger))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2)))))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG0 (p2 / person\n                      :ARG0 (d / drive-01\n                               :ARG1 (v / vehicle\n                                        :poss p2)))))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG1 (v / vehicle\n                     :poss (p2 / person))))",
      "(a / and\n   :purpose (p3 / pick-up-04\n                :ARG1 (c / cash)))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :op2 (a2 / abandon-01\n            :ARG0 p2))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :op2 (a2 / abandon-01\n            :ARG1 v))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :purpose (p3 / pick-up-04\n                :ARG0 p2))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :purpose (p3 / pick-up-04\n                :ARG1 (c / cash)))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG0 (p2 / person\n                      :ARG0 (d / drive-01\n                               :ARG1 (v / vehicle\n                                        :poss p2))))\n   :purpose (p3 / pick-up-04\n                :ARG0 p2))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG0 (p2 / person\n                      :ARG0 (d / drive-01\n                               :ARG1 (v / vehicle\n                                        :poss p2))))\n   :purpose (p3 / pick-up-04\n                :ARG1 (c / cash)))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG1 (v / vehicle\n                     :poss (p2 / person\n                               :ARG0 (d / drive-01\n                                        :ARG1 v))))\n   :purpose (p3 / pick-up-04\n                :ARG0 p2))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG1 (v / vehicle\n                     :poss (p2 / person)))\n   :purpose (p3 / pick-up-04\n                :ARG1 (c / cash)))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :op2 (a2 / abandon-01\n            :ARG0 p2)\n   :purpose (p3 / pick-up-04\n                :ARG0 p2))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :op2 (a2 / abandon-01\n            :ARG0 p2)\n   :purpose (p3 / pick-up-04\n                :ARG1 (c / cash)))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (p2 / person\n                     :ARG0 (d / drive-01\n                              :ARG1 (v / vehicle\n                                       :poss p2))))\n   :op2 (a2 / abandon-01\n            :ARG1 v)\n   :purpose (p3 / pick-up-04\n                :ARG0 p2))",
      "(w / warn-01\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (h / have-03\n                                        :ARG0 a2)))))",
      "(w / warn-01\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (h / have-03\n                                        :ARG1 (m / money))))))",
      "(w / warn-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (h / have-03\n                                        :ARG0 a2)))))",
      "(w / warn-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (h / have-03\n                                        :ARG1 (m / money))))))",
      "(a / arrest-01\n   :ARG1 (a2 / anyone\n             :ARG1 (c / catch-02\n                      :ARG2 (h / have-03\n                               :ARG0 a2))))",
      "(a / arrest-01\n   :ARG1 (a2 / anyone\n             :ARG1 (c / catch-02\n                      :ARG2 (h / have-03\n                               :ARG1 (m / money)))))",
      "(a2 / anyone\n    :ARG1 (c / catch-02\n             :ARG2 (h / have-03\n                      :ARG1 (m / money))))",
      "(c / catch-02\n   :ARG2 (h / have-03\n            :ARG0 (a2 / anyone)))"
    ],
    "smus": [
      "Bundles of notes spilled over.",
      "spilled over Interstate 20",
      "spilled over the roads of Alilene.",
      "The road in Texas spilled over.",
      "spilled over Friday.",
      "Bundles of notes spilled over Interstate 20.",
      "Bundles of notes spilled over the road in Alilene.",
      "Bundles of notes spilled over the road in Texas.",
      "Bundles of notes spilled over on Friday.",
      "Friday, Interstate 20 spilled over.",
      "Friday, the spillovers spilled over the roads of Alilene.",
      "Friday, the Texas road spilled over.",
      "Bundles of notes spilled over Interstate 20 on Friday.",
      "Bundles of notes spilled over the road in Alilene Friday.",
      "Bundles of notes spilled over the Texas road on Friday.",
      "The vehicle's door opened.",
      "The passenger door opened.",
      "releasing the money is open.",
      "The vehicle's door opened to releasing money.",
      "The passenger door opened to the money being released.",
      "releasing money on the road.",
      "And the drivers of their vehicles pulled over.",
      "and the drivers of their vehicles abandoned.",
      "and the people's vehicles are abandoned.",
      "and to pick up cash.",
      "The drivers of their vehicles pulled over and abandoned.",
      "And the drivers of their vehicles pulled over to pick up.",
      "And the drivers of their vehicles pulled over to pick up cash.",
      "and the drivers of their vehicles abandoned to pick up.",
      "and the drivers of their vehicles abandoned to pick up cash.",
      "and the vehicles of the driver were abandoned to pick up.",
      "and people's vehicles abandoned to pick up cash.",
      "The drivers of their vehicles pulled over and abandoned to pick up.",
      "The drivers of their vehicles pulled over and abandoned to pick up cash.",
      "The drivers of their vehicles pulled over.",
      "People's vehicles are driven.",
      "Anyone caught with it will be warned to be arrested.",
      "Anyone caught with money will be warned to be arrested.",
      "Police have warned that anyone caught with them will be arrested.",
      "Police have warned that anyone caught with money will be arrested.",
      "Anyone caught with it will be arrested.",
      "Anyone caught with money will be arrested.",
      "Anyone caught with money?",
      "Catch anyone who has."
    ]
  },
  {
    "instance_id": "realsumm-27",
    "summary": "<t> Godfrey Elfwick recruited via Twitter to appear on World Have Your Say . </t> <t> Came after claims Elfwick had never seen the Star Wars franchise before . </t> <t> On the show Say described the films as both anti - women and anti - gay . </t> <t> Also said that Darth Vader was a black man and a ' really bad racial stereotype ' . </t>",
    "summary_trees": [
      "# ::snt  Godfrey Elfwick recruited via Twitter to appear on World Have Your Say . \n(r / recruit-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Godfrey\"\n                  :op2 \"Elfwick\"))\n      :ARG2 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))\n      :medium (p2 / publication\n            :name (n3 / name\n                  :op1 \"Twitter\")))",
      "# ::snt  Came after claims Elfwick had never seen the Star Wars franchise before . \n(b / be-temporally-at-91\n      :ARG1 (e / event)\n      :ARG2 (a / after\n            :op1 (c / claim-01\n                  :ARG1 (s / see-01\n                        :polarity -\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Elfwick\"))\n                        :ARG1 (f / franchise\n                              :name (n2 / name\n                                    :op1 \"Star\"\n                                    :op2 \"Wars\"))\n                        :time (e2 / ever)\n                        :time (b2 / before)))))",
      "# ::snt  On the show Say described the films as both anti - women and anti - gay . \n(d / describe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Say\"))\n      :ARG1 (f / film)\n      :ARG2 (a / and\n            :op1 (o / oppose-01\n                  :ARG0 f\n                  :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                  :ARG0 f\n                  :ARG1 (g / gay-01)))\n      :medium (s / show-04))",
      "# ::snt  Also said that Darth Vader was a black man and a ' really bad racial stereotype ' . \n(s / say-01\n      :ARG1 (a / and\n            :op1 (m / man\n                  :ARG1-of (b / black-05)\n                  :domain (p / person\n                        :name (n / name\n                              :op1 \"Darth\"\n                              :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                  :ARG2 p\n                  :mod (r / race)\n                  :ARG1-of (b2 / bad-07\n                        :degree (r2 / really))))\n      :mod (a2 / also))"
    ],
    "tree": [
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\")))",
      "(r / recruit-01\n   :ARG2 (a / appear-01\n            :ARG1 (p / person :name (n / name :op1 \"Godfrey\" :op2 \"Elfwick\"))))",
      "(r / recruit-01\n   :ARG2 (a / appear-01\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\"))))",
      "(r / recruit-01\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))",
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :ARG1 p))",
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\"))))",
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))",
      "(r / recruit-01\n   :ARG2 (a / appear-01\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\")))\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))",
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :ARG1 p)\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))",
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\")))\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))",
      "(b / be-temporally-at-91\n   :ARG2 (a / after\n            :op1 (c / claim-01\n                    :ARG1 (s / see-01\n                             :ARG1 (f / franchise\n                                      :name (n2 / name\n                                                :op1 \"Star\"\n                                                :op2 \"Wars\"))))))",
      "(a / after\n   :op1 (c / claim-01\n           :ARG1 (s / see-01\n                    :ARG1 (f / franchise\n                             :name (n2 / name\n                                       :op1 \"Star\"\n                                       :op2 \"Wars\")))))",
      "(c / claim-01\n   :ARG1 (s / see-01\n            :polarity -))",
      "(c / claim-01\n   :ARG1 (s / see-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Elfwick\"))))",
      "(c / claim-01\n   :ARG1 (s / see-01\n            :time (b2 / before)))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\")))",
      "(d / describe-01\n   :ARG2 (o2 / oppose-01\n             :ARG0 (f / film)))",
      "(d / describe-01\n   :ARG2 (o / oppose-01\n            :ARG1 (w / woman)))",
      "(d / describe-01\n   :ARG2 (o2 / oppose-01\n             :ARG1 (g / gay-01)))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\"))\n   :ARG2 (o2 / oppose-01\n             :ARG0 (f / film)))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\"))\n   :ARG2 (o / oppose-01\n            :ARG1 (w / woman)))",
      "(d / describe-01\n   :ARG1 (f / film)\n   :ARG2 (o2 / oppose-01\n             :ARG0 f))",
      "(d / describe-01\n   :ARG2 (o2 / oppose-01\n             :ARG0 (f / film))\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG2 (o / oppose-01\n            :ARG1 (w / woman))\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG2 (o2 / oppose-01\n             :ARG1 (g / gay-01))\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\"))\n   :ARG1 (f / film)\n   :ARG2 (o / oppose-01\n            :ARG1 (w / woman)))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\"))\n   :ARG1 (f / film)\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\"))\n   :ARG2 (o / oppose-01\n            :ARG0 (f / film))\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Say\"))\n   :ARG2 (o2 / oppose-01\n             :ARG1 (g / gay-01))\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG1 (f / film)\n   :ARG2 (o / oppose-01\n            :ARG0 f)\n   :medium (s / show-04))",
      "(d / describe-01\n   :ARG1 (f / film)\n   :ARG2 (o2 / oppose-01\n             :ARG0 f)\n   :medium (s / show-04))",
      "(s / say-01\n   :ARG1 (s2 / stereotype-01\n             :ARG1 (b2 / bad-07\n                       :degree (r2 / really))))",
      "(s / say-01\n   :ARG1 (m / man\n            :ARG1 (b / black-05))\n   :mod (a2 / also))",
      "(s / say-01\n   :ARG1 (s2 / stereotype-01\n             :ARG2 (p / person\n                      :name (n / name\n                               :op1 \"Darth\"\n                               :op2 \"Vader\")))\n   :mod (a2 / also))"
    ],
    "smus": [
      "Godfrey Elfwick was recruited.",
      "Godfrey Elfwick was recruited to appear.",
      "Recruited to appear on \"World Have Your Say\".",
      "Recruited on Twitter.",
      "Godfrey Elfwick was recruited to appear on World Have Your Say.",
      "Godfrey Elfwick was recruited on Twitter.",
      "Godfrey Elfwick was recruited to appear on Twitter.",
      "Godfrey Elfwick was recruited to appear on World Have Your Say on Twitter.",
      "appeared on World Have Your Say.",
      "World Have Your Say",
      "After claims that they have never been seen.",
      "claims to have never been seen.",
      "Star Wars is seen.",
      "Elfwick has seen the Star Wars franchise.",
      "Elfwick has never seen the Star Wars franchise.",
      "Say described --",
      "\"Anti-women\" described.",
      "Described as anti-gay.",
      "Say described the films.",
      "Say described being anti-gay.",
      "Say described it on the show.",
      "The films were described in the show.",
      "Say described the films as anti-women.",
      "Say described the films as anti-gay.",
      "Say described the films on the show.",
      "Say described being anti-gay on the show.",
      "The films were described in the show as anti-women.",
      "The films were described on the show as anti-gay.",
      "Say described the films in the show as anti-women.",
      "Say described the films on the show as anti-gay.",
      "Say.",
      "\"Darth Vader is also a man,\" he said.",
      "Also said racial stereotype.",
      "Also said that there is a stereotype of being really bad."
    ]
  },
  {
    "instance_id": "realsumm-28",
    "summary": "<t> Cuban - born Kathy Ferreiro 's curves have attracted fans on social media . </t> <t> Bikini - loving beach babe says photos of babe booty are all natural . </t> <t> Miami - based party girl is hoping to become next Kim Kardashian . </t> <t> Has a huge following in Colombia and other Latin American countries . </t>",
    "summary_trees": [
      "# ::snt  Cuban - born Kathy Ferreiro 's curves have attracted fans on social media . \n(a / attract-01\n      :ARG0 (c / curve\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Kathy\"\n                        :op2 \"Ferreiro\")\n                  :ARG1-of (b / bear-02\n                        :location (c2 / country\n                              :name (n2 / name\n                                    :op1 \"Cuba\")))))\n      :ARG1 (f / fan)\n      :medium (m / media\n            :mod (s / social)))",
      "# ::snt  Bikini - loving beach babe says photos of babe booty are all natural . \n(s / say-01\n      :ARG0 (b / babe\n            :ARG0-of (l / love-01\n                  :ARG1 (b2 / beach))\n            :mod (b3 / bikini))\n      :ARG1 (n / natural-03\n            :ARG1 (p / photograph-01\n                  :ARG1 (b4 / booty\n                        :mod (b5 / babe)))\n            :mod (a / all)))",
      "# ::snt  Miami - based party girl is hoping to become next Kim Kardashian . \n(h / hope-01\n      :ARG0 (g / girl\n            :mod (p / party)\n            :ARG1-of (b / base-01\n                  :location (c / city\n                        :name (n / name\n                              :op1 \"Miami\"))))\n      :ARG1 (b2 / become-01\n            :ARG1 g\n            :ARG2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")\n                  :mod (n3 / next))))",
      "# ::snt  Has a huge following in Colombia and other Latin American countries . \n(f / follow-02\n      :ARG1 (ii / it)\n      :mod (h / huge)\n      :location (a / and\n            :op1 (c / country\n                  :name (n / name\n                        :op1 \"Colombia\"))\n            :op2 (c2 / country\n                  :location (w / world-region\n                        :name (n2 / name\n                              :op1 \"Latin\"\n                              :op2 \"America\"))\n                  :mod (o / other))))"
    ],
    "tree": [
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\"))))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\"))))))",
      "(a / attract-01\n   :medium (m / media\n              :mod (s / social)))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")))\n   :ARG1 (f / fan))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :ARG1 (f / fan))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")))\n   :medium (m / media\n              :mod (s / social)))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :medium (m / media\n              :mod (s / social)))",
      "(a / attract-01\n   :ARG1 (f / fan)\n   :medium (m / media\n              :mod (s / social)))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")))\n   :ARG1 (f / fan)\n   :medium (m / media\n              :mod (s / social)))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :ARG1 (f / fan)\n   :medium (m / media\n              :mod (s / social)))",
      "(c / curve\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Kathy\"\n                     :op2 \"Ferreiro\")))",
      "(c / curve\n   :poss (p / person\n            :ARG1 (b / bear-02\n                     :location (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Cuba\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Kathy\"\n            :op2 \"Ferreiro\"))",
      "(s / say-01\n   :ARG0 (b / babe\n            :ARG0 (l / love-01\n                     :ARG1 (b2 / beach))))",
      "(s / say-01\n   :ARG1 (n / natural-03\n            :mod (a / all)))",
      "(s / say-01\n   :ARG0 (b / babe\n            :ARG0 (l / love-01\n                     :ARG1 (b2 / beach)))\n   :ARG1 (n / natural-03\n            :ARG1 (p / photograph-01\n                     :ARG1 (b4 / booty\n                               :mod (b5 / babe)))))",
      "(s / say-01\n   :ARG0 (b / babe\n            :ARG0 (l / love-01\n                     :ARG1 (b2 / beach)))\n   :ARG1 (n / natural-03\n            :mod (a / all)))",
      "(s / say-01\n   :ARG0 (b / babe\n            :mod (b3 / bikini))\n   :ARG1 (n / natural-03\n            :ARG1 (p / photograph-01\n                     :ARG1 (b4 / booty\n                               :mod (b5 / babe)))))",
      "(s / say-01\n   :ARG0 (b / babe\n            :mod (b3 / bikini))\n   :ARG1 (n / natural-03\n            :mod (a / all)))",
      "(b / babe\n   :ARG0 (l / love-01\n            :ARG1 (b2 / beach)))",
      "(h / hope-01\n   :ARG0 (g / girl\n            :mod (p / party)))",
      "(h / hope-01\n   :ARG0 (g / girl\n            :ARG1 (b / base-01\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Miami\")))))",
      "(h / hope-01\n   :ARG1 (b2 / become-01\n             :ARG1 (g / girl)))",
      "(h / hope-01\n   :ARG1 (b2 / become-01\n             :ARG2 (p2 / person\n                       :mod (n3 / next))))",
      "(h / hope-01\n   :ARG0 (g / girl\n            :mod (p / party))\n   :ARG1 (b2 / become-01\n             :ARG1 g))",
      "(h / hope-01\n   :ARG0 (g / girl\n            :mod (p / party))\n   :ARG1 (b2 / become-01\n             :ARG2 (p2 / person\n                       :mod (n3 / next))))",
      "(h / hope-01\n   :ARG0 (g / girl\n            :ARG1 (b / base-01\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Miami\"))))\n   :ARG1 (b2 / become-01\n             :ARG2 (p2 / person\n                       :mod (n3 / next))))",
      "(g / girl\n   :ARG1 (b / base-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Miami\"))))",
      "(g / girl\n   :mod (p / party)\n   :ARG1 (b / base-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Miami\"))))",
      "(b / base-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Miami\")))",
      "(b2 / become-01\n    :ARG2 (p2 / person\n              :name (n2 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")))",
      "(f / follow-02\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))",
      "(f / follow-02\n   :location (c2 / country\n                 :location (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Latin\"\n                                        :op2 \"America\"))))",
      "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge))",
      "(f / follow-02\n   :ARG1 (ii / it)\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))",
      "(f / follow-02\n   :ARG1 (ii / it)\n   :location (c2 / country\n                 :location (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Latin\"\n                                        :op2 \"America\"))))",
      "(f / follow-02\n   :ARG1 (ii / it)\n   :location (c2 / country\n                 :mod (o / other)))",
      "(f / follow-02\n   :mod (h / huge)\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))"
    ],
    "smus": [
      "Kathy Ferreiro's curves are attracted.",
      "Curves of Cuban born are attracted.",
      "Kathy Ferreiro's curves have attracted fans.",
      "Curves of Cuban-born people have attracted fans.",
      "Kathy Ferreiro's curves are attracted to social media.",
      "Cuban born people's curves are attracted to social media.",
      "Fans are attracted to social media.",
      "Kathy Ferreiro's curves have attracted fans on social media.",
      "Cuban born curves have attracted fans through social media.",
      "Cuban born curves",
      "Cuban born",
      "Kathy Ferreiro was born in Cuba.",
      "Born in Cuba.",
      "babe, love the beach says...",
      "All natural says.",
      "\"The photos of the babe booty are natural,\" says the babe babe loving the beach.",
      "\"All natural,\" says the babe who loves the beach.",
      "Bikini babe says photos of the babe booty are natural.",
      "Bikini babe says it's all natural.",
      "Loving the beach babe.",
      "Hoping the party girl",
      "The girl is hoping to be based in Miami.",
      "Hoping the girl will become.",
      "Hoping to become the next person.",
      "The party girl is hoping to become.",
      "The party girl is hoping to become the next person.",
      "The girl who is based in Miami is hoping to become the next person.",
      "The girl is based in Miami.",
      "A party girl based in Miami.",
      "Based in Miami.",
      "become the next person.",
      "Followed in Latin American countries.",
      "Followed in other countries.",
      "It is followed in Colombia.",
      "It is followed in Latin American countries.",
      "It is followed in other countries.",
      "There is huge follow in Latin American countries.",
      "There is huge follow-up in other countries."
    ]
  },
  {
    "instance_id": "realsumm-29",
    "summary": "<t> Thousands of accounts vanished from the social network last week . </t> <t> Twitter said Twitter had received numerous reports about terror - promoting users . </t> <t> Decided to suspend 10,000 accounts for making threats of violence . </t> <t> Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis . </t>",
    "summary_trees": [
      "# ::snt  Thousands of accounts vanished from the social network last week . \n(v / vanish-01\n      :ARG1 (a / account\n            :quant (m / multiple\n                  :op1 1000))\n      :location (n / network\n            :ARG1-of (s / social-03))\n      :time (w / week\n            :mod (l / last)))",
      "# ::snt  Twitter said Twitter had received numerous reports about terror - promoting users . \n(s / say-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"Twitter\"))\n      :ARG1 (r / receive-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (u / use-01)\n                        :ARG0-of (p3 / promote-02\n                              :ARG1 (t / terror)))\n                  :quant (n2 / numerous))))",
      "# ::snt  Decided to suspend 10,000 accounts for making threats of violence . \n(d / decide-01\n      :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                  :quant 10000)\n            :ARG1-of (c / cause-01\n                  :ARG0 (t / threaten-01\n                        :ARG1 (v / violence)))))",
      "# ::snt  Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis . \n(l / link-01\n      :ARG1 (s / suspend-01)\n      :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                  :name (n / name\n                        :op1 \"Anonymous\")\n                  :mod (h / hacktavist))\n            :ARG0-of (t / target-01\n                  :ARG1 (j / jihadi\n                        :mod (o / online))))\n      :mod (c3 / certain\n            :mod (a / almost)))"
    ],
    "tree": [
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000)))",
      "(v / vanish-01\n   :time (w / week\n            :mod (l / last)))",
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :location (n / network\n                :ARG1 (s / social-03)))",
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :time (w / week\n            :mod (l / last)))",
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :location (n / network\n                :ARG1 (s / social-03))\n   :time (w / week\n            :mod (l / last)))",
      "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\")))",
      "(s / say-01\n   :ARG1 (r / receive-01\n            :ARG0 (p / publication :name (n / name :op1 \"Twitter\"))))",
      "(s / say-01\n   :ARG1 (r / receive-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (p2 / person\n                                :ARG0 (u / use-01)))))",
      "(s / say-01\n   :ARG1 (r / receive-01\n            :ARG1 (r2 / report-01\n                      :quant (n2 / numerous))))",
      "(s / say-01\n   :ARG1 (r / receive-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (p2 / person\n                                :ARG0 (p3 / promote-02\n                                          :ARG1 (t / terror))))))",
      "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\"))\n   :ARG1 (r / receive-01\n            :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\"))\n   :ARG1 (r / receive-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (p2 / person\n                                :ARG0 (u / use-01)))))",
      "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\"))\n   :ARG1 (r / receive-01\n            :ARG1 (r2 / report-01\n                      :quant (n2 / numerous))))",
      "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\"))\n   :ARG1 (r / receive-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (p2 / person\n                                :ARG0 (p3 / promote-02\n                                          :ARG1 (t / terror))))))",
      "(p / publication\n   :name (n / name\n            :op1 \"Twitter\"))",
      "(r / receive-01\n   :ARG1 (r2 / report-01\n             :ARG1 (p2 / person\n                       :ARG0 (u / use-01))))",
      "(r / receive-01\n   :ARG1 (r2 / report-01\n             :quant (n2 / numerous)))",
      "(r / receive-01\n   :ARG1 (r2 / report-01\n             :ARG1 (p2 / person\n                       :ARG0 (p3 / promote-02\n                                 :ARG1 (t / terror)))))",
      "(d / decide-01\n   :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                     :quant 10000)))",
      "(d / decide-01\n   :ARG1 (s / suspend-01\n            :ARG1 (c / cause-01\n                     :ARG0 (t / threaten-01\n                              :ARG1 (v / violence)))))",
      "(s / suspend-01\n   :ARG1 (a / account\n            :quant 10000))",
      "(l / link-01\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\"))))",
      "(l / link-01\n   :ARG2 (c / campaign-01\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online)))))",
      "(l / link-01\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :mod (h / hacktavist))))",
      "(l / link-01\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\"))))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online)))))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :mod (h / hacktavist))))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG2 (c / campaign-01\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online))))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :mod (h / hacktavist)))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online))))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :mod (h / hacktavist)))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(c / campaign-01\n   :ARG0 (c2 / collective\n             :name (n / name\n                      :op1 \"Anonymous\")))"
    ],
    "smus": [
      "Thousands of accounts vanished.",
      "vanished last week.",
      "Thousands of accounts vanished from the social network.",
      "Thousands of accounts vanished last week.",
      "Thousands of accounts vanished from the social network last week.",
      "Twitter received, it said.",
      "Reports were received from users, the company said.",
      "Numerous reports were received, the company said.",
      "Reports of terrorists have been received, the statement said.",
      "Twitter said it had received.",
      "Reports of users have been received, Twitter said.",
      "Numerous reports have been received, Twitter said.",
      "Reports of terrorists have been received, Twitter said.",
      "Reports of users have been received.",
      "Numerous reports have been received.",
      "Reports of terrorists have been received.",
      "Reports of people promoting terror.",
      "There have been numerous reports of people promoting terror.",
      "Decided to suspend 10,000 accounts.",
      "The decision to suspend was made over threats of violence.",
      "Suspend 10,000 accounts.",
      "Link to anonymous collective campaign.",
      "Link to campaign targeting online jihadis.",
      "Link to hacktavist collective campaign",
      "Almost certainly linked.",
      "The suspensions were linked to anonymous collective campaign.",
      "The suspensions were linked to a campaign targeting online jihadis.",
      "The suspensions were linked to a hacktavist collective campaign.",
      "The suspensions are almost certainly linked.",
      "Almost certainly linked to the Anonymous collective campaign.",
      "Almost certainly a campaign targeting online jihadis is linked.",
      "Almost certainly linked to a hacktavist collective campaign.",
      "The suspensions are almost certainly linked to the Anonymous collective campaign.",
      "The suspensions are almost certainly linked to a campaign targeting online jihadis.",
      "The suspensions are almost certainly linked to a hacktavist collective campaign.",
      "Online jihadis are targeted."
    ]
  },
  {
    "instance_id": "realsumm-30",
    "summary": "<t> Locals say power cuts the weekend before raid could be linked to heist . </t> <t> Locals also tell of suspicious ' drilling ' noises on evening of Good Friday . </t> <t> Group seen returning to scene on Saturday - a day after initial break - in . </t> <t> Police admit Police did n't respond after alarm went off early on Friday . </t>",
    "summary_trees": [
      "# ::snt  Locals say power cuts the weekend before raid could be linked to heist . \n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (l / local-02))\n      :ARG1 (p2 / possible-01\n            :ARG1 (l2 / link-01\n                  :ARG1 (c / cut-02\n                        :ARG1 (p3 / power)\n                        :time (w / weekend)\n                        :time (b / before\n                              :op1 (r / raid-01)))\n                  :ARG2 (h / heist))))",
      "# ::snt  Locals also tell of suspicious ' drilling ' noises on evening of Good Friday . \n(t / tell-01\n      :ARG0 (p / person\n            :ARG1-of (l / local-02))\n      :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1-of (s / suspicious-03)\n            :time (d2 / date-entity\n                  :weekday (f / friday)\n                  :dayperiod (e / evening)))\n      :mod (a / also))",
      "# ::snt  Group seen returning to scene on Saturday - a day after initial break - in . \n(s / see-01\n      :ARG1 (r / return-01\n            :ARG1 (g / group)\n            :ARG4 (s2 / scene)\n            :time (d / date-entity\n                  :weekday (s3 / saturday))\n            :time (a / after\n                  :op1 (b / break-02\n                        :mod (ii / initial))\n                  :quant (t / temporal-quantity\n                        :quant 1\n                        :unit (d2 / day)))))",
      "# ::snt  Police admit Police did n't respond after alarm went off early on Friday . \n(a / admit-01\n      :ARG0 (p / police)\n      :ARG1 (r / respond-01\n            :polarity -\n            :ARG0 p\n            :time (a2 / after\n                  :op1 (g / go-off-16\n                        :ARG1 (a3 / alarm-01)\n                        :time (e / early\n                              :op1 (d / date-entity\n                                    :weekday (f / friday)))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02)))",
      "(s / say-01\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :ARG1 (p3 / power)))))",
      "(s / say-01\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG2 (h / heist))))",
      "(s / say-01\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :time (w / weekend)))))",
      "(s / say-01\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :time (b / before\n                                         :op1 (r / raid-01))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :ARG1 (p3 / power)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG2 (h / heist))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :time (w / weekend)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :time (b / before\n                                         :op1 (r / raid-01))))))",
      "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :ARG1 (p3 / power))))",
      "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG2 (h / heist)))",
      "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :time (w / weekend))))",
      "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :time (b / before\n                                :op1 (r / raid-01)))))",
      "(l2 / link-01\n    :ARG1 (c / cut-02\n             :time (w / weekend)))",
      "(l2 / link-01\n    :ARG1 (c / cut-02\n             :time (b / before\n                      :op1 (r / raid-01))))",
      "(l2 / link-01\n    :ARG1 (c / cut-02\n             :time (b / before\n                      :op1 (r / raid-01)))\n    :ARG2 (h / heist))",
      "(c / cut-02\n   :ARG1 (p3 / power)\n   :time (w / weekend))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02)))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :mod (d / drill-01)))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :ARG1 (s / suspicious-03)))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :weekday (f / friday))))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :dayperiod (e / evening))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :mod (d / drill-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :ARG1 (s / suspicious-03)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :weekday (f / friday))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :dayperiod (e / evening))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :mod (d / drill-01))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :ARG1 (s / suspicious-03))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :weekday (f / friday)))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :dayperiod (e / evening)))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :mod (d / drill-01))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :ARG1 (s / suspicious-03))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :weekday (f / friday)))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :time (d2 / date-entity\n                      :dayperiod (e / evening)))\n   :mod (a / also))",
      "(n / noise\n   :time (d2 / date-entity\n             :weekday (f / friday)))",
      "(n / noise\n   :time (d2 / date-entity\n             :dayperiod (e / evening)))",
      "(n / noise\n   :mod (d / drill-01)\n   :ARG1 (s / suspicious-03))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :ARG1 (g / group)))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :ARG4 (s2 / scene)))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :time (d / date-entity\n                     :weekday (s3 / saturday))))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :time (a / after\n                     :op1 (b / break-02\n                             :mod (ii / initial)))))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :time (a / after\n                     :quant (t / temporal-quantity\n                               :quant 1))))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :time (a / after\n                     :quant (t / temporal-quantity\n                               :unit (d2 / day)))))",
      "(r / return-01\n   :time (d / date-entity\n            :weekday (s3 / saturday)))",
      "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene))",
      "(r / return-01\n   :ARG1 (g / group)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))",
      "(r / return-01\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))",
      "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))",
      "(a / admit-01\n   :ARG1 (r / respond-01\n            :polarity -))",
      "(a / admit-01\n   :ARG0 (p / police)\n   :ARG1 (r / respond-01\n            :polarity -))",
      "(r / respond-01\n   :time (a2 / after\n             :op1 (g / go-off-16\n                     :time (e / early\n                              :op1 (d / date-entity\n                                      :weekday (f / friday))))))",
      "(a2 / after\n    :op1 (g / go-off-16\n            :ARG1 (a3 / alarm-01)))",
      "(a2 / after\n    :op1 (g / go-off-16\n            :time (e / early\n                     :op1 (d / date-entity\n                             :weekday (f / friday)))))"
    ],
    "smus": [
      "Locals say --",
      "Power cuts could be linked, they say.",
      "They say the heist could be linked.",
      "The weekend cuts could be linked, they say.",
      "The cuts could have been linked before the raid, they say.",
      "Locals say power cuts could be linked.",
      "Locals say the heist could be linked.",
      "Locals say cuts could be linked to the weekend.",
      "Locals say cuts could have been linked before the raid.",
      "Power cuts can be linked.",
      "Maybe linked to heist.",
      "Cuts over the weekend could be linked.",
      "Cuts made before the raid could be linked.",
      "Link to cuts over the weekend.",
      "Cuts made before the raid are linked.",
      "Cuts made before raid were linked to the heist.",
      "Power cuts over the weekend.",
      "Locals tell.",
      "tell of drilling noises.",
      "The noises on Friday tell.",
      "Locals tell of the drilling noises.",
      "Locals tell of suspicious noises.",
      "Locals tell of Friday noises.",
      "Locals tell of the noises in the evening.",
      "Locals also tell.",
      "The drilling noises also tell.",
      "The noises also tell of suspicious noises.",
      "The Friday noises also tell.",
      "The evening noises also tell.",
      "Locals also tell of the drilling noises.",
      "Locals also tell of suspicious noises.",
      "Locals also tell of Friday noises.",
      "Locals also tell of the evening noises.",
      "There were noises on Friday.",
      "Drill noises in the evening.",
      "Suspected noises on Friday.",
      "Suspected noises in the evening.",
      "Suspected drill noises in the evening.",
      "The Group saw return.",
      "Seemed the scene was returning.",
      "Seemed to be returning Saturday.",
      "Seemed to be returning after an initial break.",
      "Seemed to be returning after one.",
      "Seemed to be returning a day later.",
      "Returning Saturday.",
      "The Group is returning to the scene.",
      "Group will be returning Saturday.",
      "The scene was returning Saturday.",
      "The Group will be returning to the scene Saturday.",
      "Admit to not responding.",
      "Police admit they did not respond.",
      "After the alarm went off.",
      "After going off early Friday.",
      "The alarm went off early Friday."
    ]
  },
  {
    "instance_id": "realsumm-31",
    "summary": "<t> Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole . </t> <t> The fire erupted just moments after Nawaz walked over fire in the busy street . </t> <t> Incredibly no - one was hurt in the incident after Nawaz evacuated the area . </t>",
    "summary_trees": [
      "# ::snt  Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole . \n(f / feel-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Shiraz\"\n                  :op2 \"Nawaz\"))\n      :ARG1 (l / lucky\n            :domain p\n            :ARG1-of (c / cause-01\n                  :ARG0 (l2 / live-01\n                        :ARG0 p)))\n      :time (a / after\n            :op1 (s / shoot-02\n                  :ARG0 (f2 / flame)\n                  :ARG3 (m / manhole))))",
      "# ::snt  The fire erupted just moments after Nawaz walked over fire in the busy street . \n(e / erupt-01\n      :ARG1 (f / fire)\n      :time (a / after\n            :op1 (w / walk-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Nawaz\"))\n                  :ARG2 (o / over\n                        :op1 (f2 / fire))\n                  :location (s / street\n                        :ARG1-of (b / busy-02)))\n            :quant (m / moment\n                  :mod (j / just))))",
      "# ::snt  Incredibly no - one was hurt in the incident after Nawaz evacuated the area . \n(h / hurt-01\n      :ARG1 (n / no-one)\n      :manner (ii / incredible)\n      :time (ii2 / incident)\n      :time (a / after\n            :op1 (e / evacuate-01\n                  :ARG0 (p / person\n                        :name (n2 / name\n                              :op1 \"Nawaz\"))\n                  :ARG1 (a2 / area))))"
    ],
    "tree": [
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\")))",
      "(f / feel-01\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))",
      "(f / feel-01\n   :ARG1 (l / lucky\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))))",
      "(f / feel-01\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame))))",
      "(f / feel-01\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG3 (m / manhole))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG3 (m / manhole))))",
      "(f / feel-01\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame))))",
      "(f / feel-01\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG3 (m / manhole))))",
      "(f / feel-01\n   :ARG1 (l / lucky\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame))))",
      "(f / feel-01\n   :ARG1 (l / lucky\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG3 (m / manhole))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG3 (m / manhole))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p)))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p)))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG3 (m / manhole))))",
      "(p / person\n   :name (n / name\n            :op1 \"Shiraz\"\n            :op2 \"Nawaz\"))",
      "(l / lucky\n   :ARG1 (c / cause-01\n            :ARG0 (l2 / live-01\n                      :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))))",
      "(c / cause-01\n   :ARG0 (l2 / live-01\n             :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))",
      "(a / after\n   :op1 (s / shoot-02\n           :ARG0 (f2 / flame)))",
      "(a / after\n   :op1 (s / shoot-02\n           :ARG3 (m / manhole)))",
      "(e / erupt-01\n   :time (a / after\n            :op1 (w / walk-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Nawaz\")))))",
      "(e / erupt-01\n   :time (a / after\n            :quant (m / moment\n                      :mod (j / just))))",
      "(e / erupt-01\n   :time (a / after\n            :op1 (w / walk-01\n                    :ARG2 (o / over\n                             :op1 (f2 / fire)))))",
      "(e / erupt-01\n   :time (a / after\n            :op1 (w / walk-01\n                    :location (s / street\n                                 :ARG1 (b / busy-02)))))",
      "(e / erupt-01\n   :ARG1 (f / fire)\n   :time (a / after\n            :op1 (w / walk-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Nawaz\")))))",
      "(e / erupt-01\n   :ARG1 (f / fire)\n   :time (a / after\n            :quant (m / moment\n                      :mod (j / just))))",
      "(e / erupt-01\n   :ARG1 (f / fire)\n   :time (a / after\n            :op1 (w / walk-01\n                    :location (s / street\n                                 :ARG1 (b / busy-02)))))",
      "(a / after\n   :op1 (w / walk-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Nawaz\"))))",
      "(a / after\n   :op1 (w / walk-01\n           :ARG2 (o / over\n                    :op1 (f2 / fire))))",
      "(a / after\n   :op1 (w / walk-01\n           :location (s / street\n                        :ARG1 (b / busy-02))))",
      "(a / after\n   :quant (m / moment\n             :mod (j / just)))",
      "(a / after\n   :op1 (w / walk-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Nawaz\")))\n   :quant (m / moment\n             :mod (j / just)))",
      "(a / after\n   :op1 (w / walk-01\n           :ARG2 (o / over\n                    :op1 (f2 / fire)))\n   :quant (m / moment\n             :mod (j / just)))",
      "(a / after\n   :op1 (w / walk-01\n           :location (s / street\n                        :ARG1 (b / busy-02)))\n   :quant (m / moment\n             :mod (j / just)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nawaz\")))",
      "(w / walk-01\n   :ARG2 (o / over\n            :op1 (f2 / fire)))",
      "(w / walk-01\n   :location (s / street\n                :ARG1 (b / busy-02)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nawaz\"))\n   :ARG2 (o / over\n            :op1 (f2 / fire)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nawaz\"))\n   :location (s / street\n                :ARG1 (b / busy-02)))",
      "(w / walk-01\n   :ARG2 (o / over\n            :op1 (f2 / fire))\n   :location (s / street\n                :ARG1 (b / busy-02)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nawaz\"))\n   :ARG2 (o / over\n            :op1 (f2 / fire))\n   :location (s / street\n                :ARG1 (b / busy-02)))",
      "(h / hurt-01\n   :ARG1 (n / no-one)\n   :manner (ii / incredible))",
      "(h / hurt-01\n   :ARG1 (n / no-one)\n   :time (ii2 / incident))",
      "(h / hurt-01\n   :ARG1 (n / no-one)\n   :manner (ii / incredible)\n   :time (ii2 / incident))",
      "(a / after\n   :op1 (e / evacuate-01\n           :ARG0 (p / person\n                    :name (n2 / name\n                              :op1 \"Nawaz\"))))",
      "(a / after\n   :op1 (e / evacuate-01\n           :ARG1 (a2 / area)))",
      "(e / evacuate-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Nawaz\")))",
      "(e / evacuate-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Nawaz\"))\n   :ARG1 (a2 / area))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Nawaz\"))"
    ],
    "smus": [
      "Shiraz Nawabs felt.",
      "Shiraz Nawabs felt lucky.",
      "felt lucky that Shiraz Nawabs lived.",
      "Feeled after the flames shot.",
      "Feeled after the manhole was shot.",
      "Shiraz Nawza felt lucky.",
      "Shiraz Nawza felt lucky to have lived.",
      "Shiraz Nawabs felt after the flames shot.",
      "Shiraz Nawabs felt after the manhole was shot.",
      "After the flames shot, Shiraz Nawza felt lucky.",
      "After the manhole shot, Shiraz Nawza felt lucky.",
      "After the flames shot, Shiraz Nawabs felt lucky that he had lived to this day.",
      "After the manhole shot, Shiraz Nawabs felt lucky that he was alive.",
      "Shiraz Nawabs felt lucky after the flames shot.",
      "Shiraz Nawabs felt lucky after the manhole shot.",
      "After the flames shot, Shiraz Nawza felt lucky to have survived.",
      "Shiraz Nawabs felt lucky to have lived after the manhole was shot.",
      "Lucky Shiraz Nawaz lived.",
      "Because Shiraz Nawabs lives.",
      "After the flames shot.",
      "After the manhole was shot.",
      "Flames shot through the manhole.",
      "Erupted after Nawabs walked.",
      "Just moments later, it erupted.",
      "Erupted after people walked over the fire.",
      "Erupted after people walked in a busy street.",
      "The fire erupted after Nawabs walked.",
      "The fire erupted just moments later.",
      "The fire erupted after people walked on a busy street.",
      "After Nawabs walked.",
      "After walking over the fire.",
      "After walking on a busy street.",
      "Just moments after Nawabs walked.",
      "Just moments after walking over the fire.",
      "Just moments after walking on a busy street.",
      "Nawabs walked.",
      "Walked over the fire.",
      "Walked on a busy street.",
      "Nawabs walked over the fire.",
      "Nawabs walked in a busy street.",
      "Walked over a fire on a busy street.",
      "Nawaz walked over a fire on a busy street.",
      "Nawzaz",
      "No one was hurt incredibly.",
      "No one was hurt in the incident.",
      "No one was hurt incredibly during the incident.",
      "After Nawabs evacuated,",
      "After the area was evacuated.",
      "Nawabs evacuated.",
      "Nawabs evacuated the area.",
      "Nawzaz"
    ]
  },
  {
    "instance_id": "realsumm-32",
    "summary": "<t> Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi . </t> <t> Was five miles from the coast travelling to Phuket when engine exploded . </t> <t> 35-metre - long boat caught fire around 3.30pm before sinking around 6 pm . </t> <t> Passengers seen throwing Passengers overboard before being rescued . </t> <t> No injuries reported but search will continue into tomorrow for missing girl . </t>",
    "summary_trees": [
      "# ::snt  Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi . \n(b / be-located-at-91\n      :ARG1 (f / ferry\n            :name (n / name\n                  :op1 \"Ao\"\n                  :op2 \"Nang\"\n                  :op3 \"Princess\"\n                  :op4 5))\n      :ARG2 (s / sea\n            :name (n2 / name\n                  :op1 \"Andaman\"\n                  :op2 \"Sea\"))\n      :time (w / way\n            :direction (r / resort\n                  :name (n3 / name\n                        :op1 \"Krabi\"))))",
      "# ::snt  Was five miles from the coast travelling to Phuket when engine exploded . \n(t / travel-01\n      :ARG0 (ii / i)\n      :ARG1 (ii2 / island\n            :name (n / name\n                  :op1 \"Phuket\"))\n      :time (e / explode-01\n            :ARG1 (e2 / engine))\n      :extent (d / distance-quantity\n            :quant 5\n            :unit (m / mile)\n            :location (f / from\n                  :op1 (c / coast))))",
      "# ::snt  35-metre - long boat caught fire around 3.30pm before sinking around 6 pm . \n(a / and\n      :op1 (c / catch-on-fire-09\n            :ARG1 (b / boat\n                  :ARG1-of (l / long-03\n                        :ARG2 (d / distance-quantity\n                              :quant 35\n                              :unit (m / meter))))\n            :time (a2 / around\n                  :op1 (d2 / date-entity\n                        :time \"15:30\")))\n      :op2 (s / sink-01\n            :ARG1 b\n            :time (a3 / around\n                  :op1 (d3 / date-entity\n                        :time \"18:00\"))))",
      "# ::snt  Passengers seen throwing Passengers overboard before being rescued . \n(s / see-01\n      :ARG1 (t / throw-01\n            :ARG0 (p / passenger)\n            :ARG1 (p2 / passenger)\n            :ARG2 (o / overboard)\n            :time (b / before\n                  :op1 (r / rescue-01\n                        :ARG1 p2))))",
      "# ::snt  No injuries reported but search will continue into tomorrow for missing girl . \n(h / have-concession-91\n      :ARG1 (c / continue-01\n            :ARG1 (s / search-01\n                  :ARG2 (g / girl\n                        :ARG1-of (m / miss-01)))\n            :time (ii / into\n                  :op1 (t / tomorrow)))\n      :ARG2 (r / report-01\n            :polarity -\n            :ARG1 (ii2 / injure-01)))"
    ],
    "tree": [
      "(b / be-located-at-91\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\")))",
      "(t / travel-01\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\")))",
      "(t / travel-01\n   :time (e / explode-01\n            :ARG1 (e2 / engine)))",
      "(t / travel-01\n   :extent (d / distance-quantity\n              :quant 5))",
      "(t / travel-01\n   :extent (d / distance-quantity\n              :unit (m / mile)))",
      "(t / travel-01\n   :extent (d / distance-quantity\n              :location (f / from\n                           :op1 (c / coast))))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\")))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :time (e / explode-01\n            :ARG1 (e2 / engine)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :extent (d / distance-quantity\n              :unit (m / mile)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :extent (d / distance-quantity\n              :location (f / from\n                           :op1 (c / coast))))",
      "(t / travel-01\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :quant 5))",
      "(t / travel-01\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :unit (m / mile)))",
      "(t / travel-01\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :location (f / from\n                           :op1 (c / coast))))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :extent (d / distance-quantity\n              :quant 5))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :extent (d / distance-quantity\n              :unit (m / mile)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :extent (d / distance-quantity\n              :location (f / from\n                           :op1 (c / coast))))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :quant 5))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :unit (m / mile)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :location (f / from\n                           :op1 (c / coast))))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :quant 5))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :unit (m / mile)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :location (f / from\n                           :op1 (c / coast))))",
      "(a / and\n   :op1 (c / catch-on-fire-09\n           :ARG1 (b / boat\n                    :ARG1 (l / long-03\n                             :ARG2 (d / distance-quantity\n                                      :unit (m / meter))))))",
      "(a / and\n   :op2 (s / sink-01\n           :ARG1 (b / boat\n                    :ARG1 (l / long-03\n                             :ARG2 (d / distance-quantity\n                                      :unit (m / meter))))))",
      "(a / and\n   :op1 (c / catch-on-fire-09\n           :ARG1 (b / boat\n                    :ARG1 (l / long-03\n                             :ARG2 (d / distance-quantity\n                                      :quant 35\n                                      :unit (m / meter)))))\n   :op2 (s / sink-01\n           :ARG1 b))",
      "(a / and\n   :op1 (c / catch-on-fire-09\n           :ARG1 (b / boat\n                    :ARG1 (l / long-03\n                             :ARG2 (d / distance-quantity\n                                      :unit (m / meter)))))\n   :op2 (s / sink-01\n           :time (a3 / around\n                     :op1 (d3 / date-entity\n                              :time \"18:00\"))))",
      "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG0 (p / passenger)))",
      "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG1 (p2 / passenger)))",
      "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG2 (o / overboard)))",
      "(s / see-01\n   :ARG1 (t / throw-01\n            :time (b / before\n                     :op1 (r / rescue-01\n                             :ARG1 (p2 / passenger)))))",
      "(t / throw-01\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 (p2 / passenger))))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG2 (o / overboard))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 (p2 / passenger))))",
      "(t / throw-01\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard))",
      "(t / throw-01\n   :ARG1 (p2 / passenger)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p2)))",
      "(t / throw-01\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 (p2 / passenger))))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p2)))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 (p2 / passenger))))",
      "(t / throw-01\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p2)))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p2)))",
      "(h / have-concession-91\n   :ARG1 (c / continue-01\n            :ARG1 (s / search-01\n                     :ARG2 (g / girl\n                              :ARG1 (m / miss-01)))))",
      "(h / have-concession-91\n   :ARG1 (c / continue-01\n            :time (ii / into\n                      :op1 (t / tomorrow))))",
      "(h / have-concession-91\n   :ARG2 (r / report-01\n            :ARG1 (ii2 / injure-01)))",
      "(h / have-concession-91\n   :ARG1 (c / continue-01\n            :ARG1 (s / search-01\n                     :ARG2 (g / girl\n                              :ARG1 (m / miss-01))))\n   :ARG2 (r / report-01\n            :polarity -))",
      "(h / have-concession-91\n   :ARG1 (c / continue-01\n            :time (ii / into\n                      :op1 (t / tomorrow)))\n   :ARG2 (r / report-01\n            :polarity -))",
      "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1 (m / miss-01))))",
      "(c / continue-01\n   :time (ii / into\n             :op1 (t / tomorrow)))",
      "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1 (m / miss-01)))\n   :time (ii / into\n             :op1 (t / tomorrow)))",
      "(s / search-01\n   :ARG2 (g / girl\n            :ARG1 (m / miss-01)))"
    ],
    "smus": [
      "Krabi resort",
      "Traveling to Phuket.",
      "Traveling when the engine exploded.",
      "Traveling 5 miles.",
      "Traveling miles.",
      "Traveling from the coast.",
      "I'm traveling to Phuket.",
      "I was traveling when the engine exploded.",
      "I'm traveling miles.",
      "I'm traveling from the coast.",
      "The engine exploded, traveling 5 miles.",
      "Traveling miles when the engine exploded.",
      "Traveling from coast to coast when engine exploded.",
      "I was traveling to Phuket when the engine exploded.",
      "I'm traveling to Phuket 5 miles.",
      "I'm traveling miles to Phuket.",
      "I'm traveling from the coast to Phuket.",
      "I was traveling 5 miles when the engine exploded.",
      "I was traveling miles when the engine exploded.",
      "I was traveling from the coast when the engine exploded.",
      "I was traveling to Phuket 5 miles when the engine exploded.",
      "I was traveling miles to Phuket when the engine exploded.",
      "I was traveling from the coast to Phuket when the engine exploded.",
      "The long boat caught fire.",
      "And the long boat was sinking.",
      "The 35-meter-long boat caught fire, sinking.",
      "A long boat caught fire, sinking.",
      "The passengers were seen throwing.",
      "Seems like throwing overboard.",
      "The throwing was seen before the passengers were rescued.",
      "Throwing before the passengers were rescued.",
      "Passengers throwing passengers.",
      "The passengers were throwing overboard.",
      "The passengers were throwing before they were rescued.",
      "Throwing passengers overboard.",
      "Throwing passengers before they were rescued.",
      "Throwing overboard before the passengers were rescued.",
      "Passengers throwing passengers overboard.",
      "Passengers throwing passengers before they are rescued.",
      "The passengers were throwing overboard before they were rescued.",
      "Throwing passengers overboard before they were rescued.",
      "Passengers throwing passengers overboard before they were rescued.",
      "Before the passengers were rescued.",
      "Nevertheless, the search for the missing girl will continue.",
      "However, it will continue into tomorrow.",
      "Although no injuries were reported.",
      "The search for the missing girl will continue despite no reports of the girl being reported missing.",
      "There has been no reported but will continue into tomorrow.",
      "Search continues for missing girl",
      "Continue into tomorrow.",
      "The search for the missing girl will continue into tomorrow.",
      "Search for missing girl"
    ]
  },
  {
    "instance_id": "realsumm-33",
    "summary": "<t> The worker was caught on camera by a member of the public . </t> <t> Field owner TH Clements & Son was alerted and the man was sacked . </t> <t> Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves . </t>",
    "summary_trees": [
      "# ::snt  The worker was caught on camera by a member of the public . \n(c / catch-03\n      :ARG0 (m / member\n            :part-of (p / public))\n      :ARG1 (p2 / person\n            :ARG0-of (w / work-01))\n      :ARG2 (c2 / camera))",
      "# ::snt  Field owner TH Clements & Son was alerted and the man was sacked . \n(a / and\n      :op1 (a2 / alert-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"TH\"\n                        :op2 \"Clements\"\n                        :op3 \"&\"\n                        :op4 \"Son\")\n                  :ARG0-of (o / own-01\n                        :ARG1 (f / field))))\n      :op2 (s / sack-01\n            :ARG1 (m / man)))",
      "# ::snt  Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves . \n(m / multi-sentence\n      :snt1 (p / person\n            :ARG0-of (p2 / pass-by-17)\n            :ARG0-of (u / use-01\n                  :ARG1 (p3 / phone\n                        :mod (m2 / mobile))\n                  :ARG2 (s / snap-03\n                        :ARG0 p\n                        :ARG1 (a / act-02\n                              :ARG1-of (b / brand-01\n                                    :ARG2 (d / disgust-01))\n                              :mod (p4 / photo))))\n            :mod (c / company\n                  :name (n / name\n                        :op1 \"Tesco\")))\n      :snt2 (u2 / undergo-28\n            :ARG1 (v / vegetable)\n            :ARG2 (a2 / assess-01\n                  :ARG1 v\n                  :ARG1-of (e / extensive-03))\n            :time (b2 / before\n                  :op1 (h / hit-01\n                        :ARG1 (s2 / shelf)))))"
    ],
    "tree": [
      "(c / catch-03\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01)))",
      "(c / catch-03\n   :ARG0 (m / member\n            :part (p / public))\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01)))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01))\n   :ARG2 (c2 / camera))",
      "(c / catch-03\n   :ARG0 (m / member\n            :part (p / public))\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01))\n   :ARG2 (c2 / camera))",
      "(a / and\n   :op1 (a2 / alert-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"TH\"\n                              :op2 \"Clements\"\n                              :op3 \"&\"\n                              :op4 \"Son\"))))",
      "(a / and\n   :op1 (a2 / alert-01\n            :ARG1 (p / person\n                     :ARG0 (o / own-01\n                              :ARG1 (f / field)))))",
      "(a / and\n   :op2 (s / sack-01\n           :ARG1 (m / man)))",
      "(a / and\n   :op1 (a2 / alert-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"TH\"\n                              :op2 \"Clements\"\n                              :op3 \"&\"\n                              :op4 \"Son\")))\n   :op2 (s / sack-01\n           :ARG1 (m / man)))",
      "(a / and\n   :op1 (a2 / alert-01\n            :ARG1 (p / person\n                     :ARG0 (o / own-01\n                              :ARG1 (f / field))))\n   :op2 (s / sack-01\n           :ARG1 (m / man)))",
      "(a2 / alert-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"TH\"\n                      :op2 \"Clements\"\n                      :op3 \"&\"\n                      :op4 \"Son\")))",
      "(a2 / alert-01\n    :ARG1 (p / person\n             :ARG0 (o / own-01\n                      :ARG1 (f / field))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (p2 / pass-by-17)))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG1 (p3 / phone\n                               :mod (m2 / mobile)))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :mod (c / company\n                    :name (n / name\n                             :op1 \"Tesco\"))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG0 p))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :ARG1 (b / brand-01\n                                                :ARG2 (d / disgust-01)))))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :mod (p4 / photo))))))",
      "(m / multi-sentence\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)))",
      "(m / multi-sentence\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (v / vegetable))))",
      "(m / multi-sentence\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (e / extensive-03))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (p2 / pass-by-17))\n   :snt2 (u2 / undergo-28\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (p2 / pass-by-17))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (e / extensive-03))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG1 (p3 / phone\n                               :mod (m2 / mobile))))\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG1 (p3 / phone\n                               :mod (m2 / mobile))))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (v / vegetable))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG1 (p3 / phone\n                               :mod (m2 / mobile))))\n   :snt2 (u2 / undergo-28\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG1 (p3 / phone\n                               :mod (m2 / mobile))))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (e / extensive-03))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :mod (c / company\n                    :name (n / name\n                             :op1 \"Tesco\")))\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :mod (c / company\n                    :name (n / name\n                             :op1 \"Tesco\")))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (v / vegetable))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :mod (c / company\n                    :name (n / name\n                             :op1 \"Tesco\")))\n   :snt2 (u2 / undergo-28\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG0 p)))\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG0 p)))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (v / vegetable))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG0 p)))\n   :snt2 (u2 / undergo-28\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG0 p)))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (e / extensive-03))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :ARG1 (b / brand-01\n                                                :ARG2 (d / disgust-01))))))\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :ARG1 (b / brand-01\n                                                :ARG2 (d / disgust-01))))))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (v / vegetable))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :ARG1 (b / brand-01\n                                                :ARG2 (d / disgust-01))))))\n   :snt2 (u2 / undergo-28\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :ARG1 (b / brand-01\n                                                :ARG2 (d / disgust-01))))))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (e / extensive-03))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :mod (p4 / photo)))))\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :mod (p4 / photo)))))\n   :snt2 (u2 / undergo-28\n             :ARG2 (a2 / assess-01\n                       :ARG1 (v / vegetable))))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0 (u / use-01\n                     :ARG2 (s / snap-03\n                              :ARG1 (a / act-02\n                                       :mod (p4 / photo)))))\n   :snt2 (u2 / undergo-28\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(p / person\n   :mod (c / company\n           :name (n / name\n                    :op1 \"Tesco\")))",
      "(p / person\n   :ARG0 (p2 / pass-by-17)\n   :mod (c / company\n           :name (n / name\n                    :op1 \"Tesco\")))",
      "(u / use-01\n   :ARG2 (s / snap-03\n            :ARG0 (p :mod (c / company\n                             :name (n / name\n                                      :op1 \"Tesco\")))))",
      "(u / use-01\n   :ARG2 (s / snap-03\n            :ARG1 (a / act-02\n                     :ARG1 (b / brand-01\n                              :ARG2 (d / disgust-01)))))",
      "(u / use-01\n   :ARG2 (s / snap-03\n            :ARG1 (a / act-02\n                     :mod (p4 / photo))))",
      "(u / use-01\n   :ARG1 (p3 / phone\n             :mod (m2 / mobile))\n   :ARG2 (s / snap-03\n            :ARG0 (p :mod (c / company\n                             :name (n / name\n                                      :op1 \"Tesco\")))))",
      "(u / use-01\n   :ARG1 (p3 / phone\n             :mod (m2 / mobile))\n   :ARG2 (s / snap-03\n            :ARG1 (a / act-02\n                     :ARG1 (b / brand-01\n                              :ARG2 (d / disgust-01)))))",
      "(u / use-01\n   :ARG1 (p3 / phone\n             :mod (m2 / mobile))\n   :ARG2 (s / snap-03\n            :ARG1 (a / act-02\n                     :mod (p4 / photo))))",
      "(s / snap-03\n   :ARG1 (a / act-02\n            :ARG1 (b / brand-01\n                     :ARG2 (d / disgust-01))))",
      "(s / snap-03\n   :ARG1 (a / act-02\n            :mod (p4 / photo)))",
      "(a / act-02\n   :ARG1 (b / brand-01\n            :ARG2 (d / disgust-01))\n   :mod (p4 / photo))",
      "(u2 / undergo-28\n    :ARG2 (a2 / assess-01\n              :ARG1 (v / vegetable)))",
      "(u2 / undergo-28\n    :ARG2 (a2 / assess-01\n              :ARG1 (e / extensive-03)))",
      "(u2 / undergo-28\n    :time (b2 / before\n              :op1 (h / hit-01\n                      :ARG1 (s2 / shelf))))",
      "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v))"
    ],
    "smus": [
      "Work gets caught.",
      "A member of the public has caught the worker.",
      "The worker was caught on camera.",
      "A member of the public has caught the worker on camera.",
      "And TH Clements & Son was alerted.",
      "And the field owners were alerted.",
      "and the man was sacked.",
      "TH Clements & Son was alerted and the man was sacked.",
      "The field owner was alerted and the man was sacked.",
      "TH Clements & Son alerted.",
      "Field owners were alerted.",
      "Passed by.",
      "People who used a mobile phone.",
      "People who used to snap.",
      "People who used to snap an act of being branded disgusting.",
      "People who used to snap a photo act.",
      "a href=\"http://www.youtube.com/watch?v=gbbq\">Vegetables Underwent - Vegetables/a>",
      "Vegetables undergo assessment.",
      "undergo before hitting the shelves.",
      "Passed by. Vegetables undergo assessment.",
      "People who used a mobile phone. Vegetables undergo.",
      "People who used a mobile phone. Vegetables undergo assessment.",
      "People who used a mobile phone. Subsequently before hitting the shelves.",
      "People who used a mobile phone. Underwent an extensive assessment.",
      "Tesco : Vegetables undergo assessment :",
      "Tesco.. undergoes before hitting the shelves.",
      "Tesco - They undergo an extensive assessment.",
      "People who used to snap. Vegetables undergo.",
      "People who used to snap. Vegetables undergo assessment.",
      "People who used to snap. Underwent an extensive assessment.",
      "People who used to snap an act of being branded disgusting. Vegetables undergo.",
      "People who used to snap an act of being branded disgusting * Vegetables undergo assessment.",
      "People who used to snap an act branded disgusting. Underwent a process before hitting the shelves.",
      "People who used to snap an act of being branded disgusting. Underwent an extensive assessment.",
      "People who used to snap a photo act. Vegetables undergo.",
      "People who used to snap a photo act. Vegetables undergo assessment.",
      "People who used to snap a photo act. Underwent a process before hitting the shelves.",
      "People who used to snap a photo act. Underwent an extensive assessment.",
      "Passed by a Tesco.",
      "used a mobile phone.",
      "used to snap an act of being branded disgusting.",
      "used to snap a photo act.",
      "The mobile phone used to snap an act of being branded disgusting.",
      "The mobile phone used to snap the photo action.",
      "Snap the action of being branded disgusting.",
      "Snap the photo act.",
      "It's an act of being branded disgusting.",
      "The photo is an act of being branded disgusting.",
      "Vegetables undergo an assessment.",
      "The results undergo an extensive assessment.",
      "Vegetables undergo an extensive assessment.",
      "Vegetables undergo assessment before hitting the shelves.",
      "-Subject to extensive assessment before hitting the shelves.",
      "Vegetables undergo an extensive assessment before hitting the shelves.",
      "before hitting the shelves."
    ]
  },
  {
    "instance_id": "realsumm-34",
    "summary": "<t> Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption . </t> <t> Buhar 's an ex - dictator , but there 's reason for optimism . </t> <t> dictator says Jonathan administration failed to address corruption , poverty and rise of Boko Haram . </t> <t> Buhar may be tonic to years of misrule . </t>",
    "summary_trees": [
      "# ::snt  Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Stanley\"))\n      :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Muhammadu\"\n                        :op2 \"Buhar\"))\n            :ARG1 (v / vote-01)\n            :ARG2 (c / country\n                  :name (n3 / name\n                        :op1 \"Nigeria\"))\n            :ARG1-of (c2 / cause-01\n                  :ARG0 (c3 / campaign-01\n                        :ARG0 p2\n                        :ARG1 (a / against\n                              :op1 (c4 / corrupt-01))))))",
      "# ::snt  Buhar 's an ex - dictator , but there 's reason for optimism . \n(h / have-concession-91\n      :ARG1 (r / reason\n            :ARG0-of (c / cause-01\n                  :ARG1 (o / optimism)))\n      :ARG2 (d / dictator\n            :domain (p / person\n                  :name (n / name\n                        :op1 \"Buhar\"))\n            :time (e / ex)))",
      "# ::snt  dictator says Jonathan administration failed to address corruption , poverty and rise of Boko Haram . \n(s / say-01\n      :ARG0 (d / dictator)\n      :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                  :ARG0-of (a / administrate-01)\n                  :mod (p / person\n                        :name (n / name\n                              :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                  :ARG0 g\n                  :ARG1 (a3 / and\n                        :op1 (c / corruption)\n                        :op2 (p2 / poor)\n                        :op3 (r / rise-01\n                              :ARG1 (c2 / criminal-organization\n                                    :name (n2 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))))",
      "# ::snt  Buhar may be tonic to years of misrule . \n(p / possible-01\n      :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                  :duration (m2 / multiple\n                        :op1 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (y / year))))\n            :domain (p2 / person\n                  :name (n / name\n                        :op1 \"Buhar\"))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\")))",
      "(s / say-01\n   :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Muhammadu\"\n                                :op2 \"Buhar\"))))",
      "(s / say-01\n   :ARG1 (w / win-01\n            :ARG1 (v / vote-01)))",
      "(s / say-01\n   :ARG1 (w / win-01\n            :ARG2 (c / country\n                     :name (n3 / name\n                               :op1 \"Nigeria\"))))",
      "(s / say-01\n   :ARG1 (w / win-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / campaign-01\n                                :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))))))",
      "(s / say-01\n   :ARG1 (w / win-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / campaign-01\n                                :ARG1 (a / against\n                                         :op1 (c4 / corrupt-01))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Muhammadu\"\n                                :op2 \"Buhar\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG1 (v / vote-01)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG2 (c / country\n                     :name (n3 / name\n                               :op1 \"Nigeria\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / campaign-01\n                                :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / campaign-01\n                                :ARG1 (a / against\n                                         :op1 (c4 / corrupt-01))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Tim\"\n            :op2 \"Stanley\"))",
      "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\")))",
      "(w / win-01\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\")))",
      "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01))",
      "(h / have-concession-91\n   :ARG1 (r / reason\n            :ARG0 (c / cause-01\n                     :ARG1 (o / optimism))))",
      "(s / say-01\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01))))",
      "(s / say-01\n   :ARG1 (f / fail-01\n            :ARG2 (a2 / address-02\n                      :ARG0 (g / government-organization))))",
      "(s / say-01\n   :ARG1 (f / fail-01\n            :ARG2 (a2 / address-02\n                      :ARG1 (p2 / poor))))",
      "(s / say-01\n   :ARG0 (d / dictator)\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01))))",
      "(s / say-01\n   :ARG0 (d / dictator)\n   :ARG1 (f / fail-01\n            :ARG2 (a2 / address-02\n                      :ARG0 (g / government-organization))))",
      "(s / say-01\n   :ARG0 (d / dictator)\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :mod (p / person\n                             :name (n / name\n                                      :op1 \"Jonathan\")))))",
      "(s / say-01\n   :ARG0 (d / dictator)\n   :ARG1 (f / fail-01\n            :ARG2 (a2 / address-02\n                      :ARG1 (p2 / poor))))",
      "(s / say-01\n   :ARG0 (d / dictator)\n   :ARG1 (f / fail-01\n            :ARG2 (a2 / address-02\n                      :ARG1 (r / rise-01\n                               :ARG1 (c2 / criminal-organization\n                                         :name (n2 / name\n                                                   :op1 \"Boko\"\n                                                   :op2 \"Hararma\"))))))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\"))))",
      "(f / fail-01\n   :ARG2 (a2 / address-02\n             :ARG0 (g / government-organization)))",
      "(f / fail-01\n   :ARG2 (a2 / address-02\n             :ARG1 (c / corruption)))",
      "(f / fail-01\n   :ARG2 (a2 / address-02\n             :ARG1 (p2 / poor)))",
      "(f / fail-01\n   :ARG2 (a2 / address-02\n             :ARG1 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n2 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01))\n   :ARG2 (a2 / address-02\n             :ARG0 g))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01))\n   :ARG2 (a2 / address-02\n             :ARG1 (c / corruption)))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01))\n   :ARG2 (a2 / address-02\n             :ARG1 (p2 / poor)))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01))\n   :ARG2 (a2 / address-02\n             :ARG1 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n2 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG1 (c / corruption)))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG1 (p2 / poor)))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG1 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n2 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))",
      "(g / government-organization\n   :mod (p / person\n           :name (n / name\n                    :op1 \"Jonathan\")))"
    ],
    "smus": [
      "Muhammadu Buhar won.",
      "Votes won.",
      "Nigeria won.",
      "Muhammadu Buhar's campaign won.",
      "The campaign against corruption won, said the winner.",
      "Tim Stanley said Muhammadu Buhar won.",
      "Tim Stanley: Votes won.",
      "Tim Stanley said Nigeria won.",
      "Tim Stanley said Muhammadu Buhar's campaign won.",
      "Tim Stanley said the campaign against corruption won.",
      "Muhammadu Buhar won the vote.",
      "Muhammadu Buhar won Nigeria.",
      "Nigeria won the vote.",
      "Muhammadu Buhar won the vote for Nigeria.",
      "Campaign against corruption.",
      "There is reason to be optimistic though.",
      "Says the administration failed.",
      "Says the government failed to address.",
      "\"Failed to address poverty,\" says says.",
      "The dictator says the administration failed.",
      "The dictator says the government failed to address.",
      "The dictator says the Jonathan government failed.",
      "The dictator says that failing to address poverty.",
      "The dictator says the failure to address the rise of Boko Hararma failed.",
      "The administration failed.",
      "Jonathan's government failed.",
      "The government failed to address.",
      "failed to address corruption.",
      "failed to address poverty.",
      "The rise of the Boko Hararma movement failed to address.",
      "The administration failed to address this.",
      "The administration failed to address corruption.",
      "The administration failed to address poverty.",
      "The administration failed to address the rise of the Boko Hararma.",
      "Jonathan's government failed to address this.",
      "Jonathan's government failed to address corruption.",
      "Jonathan's failed to address poverty.",
      "Jonathan's government failed to address the rise of the Bok Hararma.",
      "Address the rise of the Boko Hararma."
    ]
  },
  {
    "instance_id": "realsumm-35",
    "summary": "<t> Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey . </t> <t> Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and country 's high inflation . </t> <t> country most popular resort of Sunny Beach copies those of Spain and Greece . </t>",
    "summary_trees": [
      "# ::snt  Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey . \n(h / have-degree-91\n      :ARG1 (r / resort\n            :location (s / sea\n                  :name (n / name\n                        :op1 \"Black\"\n                        :op2 \"Sea\"))\n            :poss (c / country\n                  :name (n2 / name\n                        :op1 \"Bulgaria\")))\n      :ARG2 (c2 / cheap-02\n            :ARG1 r)\n      :ARG3 (m / more)\n      :ARG4 (h2 / hotspot\n            :location (a / and\n                  :op1 (c3 / country\n                        :name (n3 / name\n                              :op1 \"Italy\"))\n                  :op2 (c4 / country\n                        :name (n4 / name\n                              :op1 \"Spain\"))\n                  :op3 (c5 / country\n                        :name (n5 / name\n                              :op1 \"Turkey\")))))",
      "# ::snt  Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and country 's high inflation . \n(m / multi-sentence\n      :snt1 (f / find-01\n            :ARG0 (p / person\n                  :ARG0-of (r / research-01))\n            :ARG1 (d / destination\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (c / cheap-02\n                              :ARG1 d)\n                        :ARG3 (m2 / most)))\n            :manner (u / use-01\n                  :ARG0 p\n                  :ARG1 (b / basket\n                        :mod (s / shop-01)\n                        :mod (ii / imaginary))))\n      :snt2 (d2 / drive-02\n            :ARG0 (a / and\n                  :op1 (r2 / rate\n                        :ARG1-of (l / low-04)\n                        :mod (e / exchange-01))\n                  :op2 (ii2 / inflate-01\n                        :ARG1 (c2 / country)\n                        :ARG1-of (h2 / high-02)))\n            :ARG1 (p2 / price-01\n                  :ARG1-of (c3 / cheap-02))))",
      "# ::snt  country most popular resort of Sunny Beach copies those of Spain and Greece . \n(c / copy-01\n      :ARG1 (r / resort\n            :poss (b / beach\n                  :name (n / name\n                        :op1 \"Sunny\"\n                        :op2 \"Beach\"))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (p / popular-02\n                        :ARG1 r)\n                  :ARG3 (m / most)\n                  :ARG5 (r2 / resort\n                        :poss (a / and\n                              :op1 (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"Spain\"))\n                              :op2 (c3 / country\n                                    :name (n3 / name\n                                          :op1 \"Greece\"))))))\n      :ARG2 r2)"
    ],
    "tree": [
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0 (r / research-01))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG2 (c / cheap-02\n                                       :ARG1 d)))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (s / shop-01)))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (ii / imaginary)))))",
      "(m / multi-sentence\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :ARG1 (l / low-04))))",
      "(m / multi-sentence\n   :snt2 (d2 / drive-02\n             :ARG1 (p2 / price-01\n                       :ARG1 (c3 / cheap-02))))",
      "(m / multi-sentence\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :mod (e / exchange-01))))",
      "(m / multi-sentence\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0 (r / research-01)))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :ARG1 (l / low-04))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0 (r / research-01)))\n   :snt2 (d2 / drive-02\n             :ARG1 (p2 / price-01\n                       :ARG1 (c3 / cheap-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0 (r / research-01)))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0 (r / research-01)))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :mod (e / exchange-01))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0 (r / research-01)))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG2 (c / cheap-02\n                                       :ARG1 d))))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :ARG1 (l / low-04))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG2 (c / cheap-02\n                                       :ARG1 d))))\n   :snt2 (d2 / drive-02\n             :ARG1 (p2 / price-01\n                       :ARG1 (c3 / cheap-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG2 (c / cheap-02\n                                       :ARG1 d))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG2 (c / cheap-02\n                                       :ARG1 d))))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :mod (e / exchange-01))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG2 (c / cheap-02\n                                       :ARG1 d))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG0 (p / person)))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG0 (p / person)))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :mod (e / exchange-01))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG0 (p / person)))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (s / shop-01))))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :ARG1 (l / low-04))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (s / shop-01))))\n   :snt2 (d2 / drive-02\n             :ARG1 (p2 / price-01\n                       :ARG1 (c3 / cheap-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (s / shop-01))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (s / shop-01))))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :mod (e / exchange-01))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (s / shop-01))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG3 (m2 / most))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG1 (d / destination\n                     :ARG1 (h / have-degree-91\n                              :ARG3 (m2 / most))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (ii / imaginary))))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :ARG1 (l / low-04))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (ii / imaginary))))\n   :snt2 (d2 / drive-02\n             :ARG1 (p2 / price-01\n                       :ARG1 (c3 / cheap-02))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (ii / imaginary))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (c2 / country))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (ii / imaginary))))\n   :snt2 (d2 / drive-02\n             :ARG0 (r2 / rate\n                       :mod (e / exchange-01))))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :manner (u / use-01\n                       :ARG1 (b / basket\n                                :mod (ii / imaginary))))\n   :snt2 (d2 / drive-02\n             :ARG0 (ii2 / inflate-01\n                        :ARG1 (h2 / high-02))))",
      "(f / find-01\n   :ARG0 (p / person\n            :ARG0 (r / research-01)))",
      "(f / find-01\n   :ARG1 (d / destination\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m2 / most))))",
      "(f / find-01\n   :manner (u / use-01\n              :ARG0 (p / person)\n              :ARG1 (b / basket)))",
      "(f / find-01\n   :ARG0 (p / person\n            :ARG0 (r / research-01))\n   :ARG1 (d / destination\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m2 / most))))",
      "(f / find-01\n   :ARG0 (p / person\n            :ARG0 (r / research-01))\n   :manner (u / use-01\n              :ARG0 p\n              :ARG1 (b / basket)))",
      "(f / find-01\n   :ARG1 (d / destination\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m2 / most)))\n   :manner (u / use-01\n              :ARG0 (p / person)\n              :ARG1 (b / basket)))",
      "(f / find-01\n   :ARG0 (p / person\n            :ARG0 (r / research-01))\n   :ARG1 (d / destination\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m2 / most)))\n   :manner (u / use-01\n              :ARG0 p\n              :ARG1 (b / basket)))",
      "(d / destination\n   :ARG1 (h / have-degree-91\n            :ARG2 (c / cheap-02\n                     :ARG1 d)))",
      "(d / destination\n   :ARG1 (h / have-degree-91\n            :ARG3 (m2 / most)))",
      "(h / have-degree-91\n   :ARG2 (c / cheap-02\n            :ARG1 (d / destination)))",
      "(h / have-degree-91\n   :ARG2 (c / cheap-02\n            :ARG1 (d / destination))\n   :ARG3 (m2 / most))",
      "(u / use-01\n   :ARG1 (b / basket\n            :mod (ii / imaginary)))",
      "(d2 / drive-02\n    :ARG0 (ii2 / inflate-01\n               :ARG1 (c2 / country)))",
      "(d2 / drive-02\n    :ARG0 (r2 / rate\n              :mod (e / exchange-01)))",
      "(c / copy-01\n   :ARG1 (r / resort\n            :poss (b / beach\n                     :name (n / name\n                              :op1 \"Sunny\"\n                              :op2 \"Beach\"))))"
    ],
    "smus": [
      "The researchers found.",
      "Found a cheap destination.",
      "Found using a shopping basket.",
      "Found using an imaginary basket.",
      "Low rates are driven by low rates.",
      "Cheap prices are driven by them.",
      "-The country is driven by inflation.",
      "Exchange rates are driven by them.",
      "High inflation is driven.",
      "Researchers found low rates were driven.",
      "The researchers found. Cheap prices are driven by them.",
      "Researchers found; country's inflation has driven.",
      "Researchers found. Exchange rates were driven.",
      "Researchers found; high inflation was driven.",
      "Found a cheap destination, driven by low rates.",
      "Find a cheap destination, the prices are driven by it.",
      "Find a cheap destination - country inflated drove.",
      "Find a cheap destination - exchange rates drive.",
      "Find a cheap destination - high inflation drove.",
      "People found by using. Inflation has driven the country.",
      "People found by using. Exchange rates were driven.",
      "People found by using. High inflation has driven.",
      "Found using shopping basket. Low rates driven.",
      "- Found using shopping baskets - cheap prices driven.",
      "- Found using a shopping basket - driven by inflation in the country",
      "- Found using shopping baskets * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",
      "Using a shopping basket found. High inflation driven.",
      "Find the destination most. Driven by inflation in the country.",
      "Finded the destination most. Driven by high inflation.",
      "Using an imaginary basket found. Low rates driven.",
      "Using an imaginary basket found, cheap prices driven.",
      "Using an imaginary basket found. The country's inflation has driven.",
      "Using an imaginary basket found. Driven by exchange rates.",
      "Using an imaginary basket, found. High inflation driven.",
      "The researchers found --",
      "People found by using a basket.",
      "The researchers found a cheap destination.",
      "The researchers found by using a basket.",
      "Using a basket, people found a cheap destination.",
      "The researchers found a cheap destination using a basket.",
      "using a shopping basket.",
      "using an imaginary basket.",
      "Low rates have driven.",
      "The country's inflation has driven it.",
      "High inflation has driven.",
      "Cheap prices are driven by inflation in the country.",
      "High inflation has driven up prices for cheap.",
      "and the country is inflating.",
      "The resort copies Greece's."
    ]
  },
  {
    "instance_id": "realsumm-36",
    "summary": "<t> WARNING : GRAPHIC CONTENT . </t> <t> Series of photos appear to show the beheading of a man in Hama in Syria . </t> <t> Man is handcuffed and blindfolded as man is led from a van to area of land . </t> <t> man is surrounded by men with guns and executioner with a meat cleaver . </t> <t> It is claimed the man was beheaded because man is an alleged ' blasphemer ' </t>",
    "summary_trees": [
      "# ::snt  WARNING : GRAPHIC CONTENT . \n(w / warn-01\n      :ARG1 (c / content\n            :mod (g / graphic)))",
      "# ::snt  Series of photos appear to show the beheading of a man in Hama in Syria . \n(a / appear-02\n      :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                  :consist-of (p / photo))\n            :ARG1 (b / behead-01\n                  :ARG1 (m / man)\n                  :location (c / city\n                        :name (n / name\n                              :op1 \"Hama\")\n                        :location (c2 / country\n                              :name (n2 / name\n                                    :op1 \"Syria\"))))))",
      "# ::snt  Man is handcuffed and blindfolded as man is led from a van to area of land . \n(a / and\n      :op1 (h / handcuff-01\n            :ARG1 (m / man))\n      :op2 (b / blindfold-01\n            :ARG1 m)\n      :time (l / lead-01\n            :ARG1 m\n            :ARG3 (v / van)\n            :ARG4 (a2 / area\n                  :mod (l2 / land))))",
      "# ::snt  man is surrounded by men with guns and executioner with a meat cleaver . \n(s / surround-01\n      :ARG1 (a / and\n            :op1 (m / man\n                  :ARG0-of (h / have-03\n                        :ARG1 (g / gun)))\n            :op2 (p / person\n                  :ARG0-of (e / execute-01)\n                  :ARG0-of (h2 / have-03\n                        :ARG1 (c / cleaver\n                              :purpose (m2 / meat)))))\n      :ARG2 (m3 / man))",
      "# ::snt  It is claimed the man was beheaded because man is an alleged ' blasphemer ' \n(c / claim-01\n      :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :ARG1-of (c2 / cause-01\n                  :ARG0 (b2 / blaspheme-01\n                        :ARG0 m\n                        :ARG1-of (a / allege-01)))))"
    ],
    "tree": [
      "(a / appear-02\n   :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                      :consist-of (p / photo))))",
      "(a / appear-02\n   :ARG1 (s / show-01\n            :ARG1 (b / behead-01\n                     :ARG1 (m / man))))",
      "(a / appear-02\n   :ARG1 (s / show-01\n            :ARG1 (b / behead-01\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Hama\")))))",
      "(s / show-01\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)))",
      "(s / show-01\n   :ARG1 (b / behead-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Hama\"))))",
      "(s / show-01\n   :ARG1 (b / behead-01\n            :location (c / city\n                         :location (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"Syria\")))))",
      "(s / show-01\n   :ARG0 (s2 / series\n             :consist-of (p / photo))\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)))",
      "(s / show-01\n   :ARG0 (s2 / series\n             :consist-of (p / photo))\n   :ARG1 (b / behead-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Hama\"))))",
      "(s / show-01\n   :ARG0 (s2 / series\n             :consist-of (p / photo))\n   :ARG1 (b / behead-01\n            :location (c / city\n                         :location (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"Syria\")))))",
      "(b / behead-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")))",
      "(b / behead-01\n   :location (c / city\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))",
      "(b / behead-01\n   :ARG1 (m / man)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")))",
      "(b / behead-01\n   :ARG1 (m / man)\n   :location (c / city\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man)))",
      "(a / and\n   :op2 (b / blindfold-01\n           :ARG1 (m / man)))",
      "(a / and\n   :time (l / lead-01\n            :ARG1 (m / man)))",
      "(a / and\n   :time (l / lead-01\n            :ARG3 (v / van)))",
      "(a / and\n   :time (l / lead-01\n            :ARG4 (a2 / area\n                      :mod (l2 / land))))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :op2 (b / blindfold-01\n           :ARG1 m))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :time (l / lead-01\n            :ARG1 m))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :time (l / lead-01\n            :ARG3 (v / van)))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :time (l / lead-01\n            :ARG4 (a2 / area\n                      :mod (l2 / land))))",
      "(a / and\n   :op2 (b / blindfold-01\n           :ARG1 (m / man))\n   :time (l / lead-01\n            :ARG1 m))",
      "(a / and\n   :op2 (b / blindfold-01\n           :ARG1 (m / man))\n   :time (l / lead-01\n            :ARG3 (v / van)))",
      "(a / and\n   :op2 (b / blindfold-01\n           :ARG1 (m / man))\n   :time (l / lead-01\n            :ARG4 (a2 / area\n                      :mod (l2 / land))))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :op2 (b / blindfold-01\n           :ARG1 m)\n   :time (l / lead-01\n            :ARG1 m))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :op2 (b / blindfold-01\n           :ARG1 m)\n   :time (l / lead-01\n            :ARG3 (v / van)))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man))\n   :op2 (b / blindfold-01\n           :ARG1 m)\n   :time (l / lead-01\n            :ARG4 (a2 / area\n                      :mod (l2 / land))))",
      "(l / lead-01\n   :ARG4 (a2 / area\n             :mod (l2 / land)))",
      "(l / lead-01\n   :ARG3 (v / van)\n   :ARG4 (a2 / area\n             :mod (l2 / land)))",
      "(s / surround-01\n   :ARG1 (m / man\n            :ARG0 (h / have-03\n                     :ARG1 (g / gun))))",
      "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (e / execute-01)))",
      "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (c / cleaver\n                               :purpose (m2 / meat)))))",
      "(s / surround-01\n   :ARG1 (m / man\n            :ARG0 (h / have-03\n                     :ARG1 (g / gun)))\n   :ARG2 (m3 / man))",
      "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (e / execute-01))\n   :ARG2 (m3 / man))",
      "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (c / cleaver\n                               :purpose (m2 / meat))))\n   :ARG2 (m3 / man))",
      "(c / claim-01\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)))",
      "(c / claim-01\n   :ARG1 (b / behead-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (b2 / blaspheme-01\n                                :ARG0 (m / man)))))",
      "(c / claim-01\n   :ARG1 (b / behead-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (b2 / blaspheme-01\n                                :ARG1 (a / allege-01)))))"
    ],
    "smus": [
      "The photos appear to be a series of them.",
      "The appear to show a man was beheaded.",
      "The beheadings appear to show in Hama.",
      "Show the beheading of the man.",
      "Show beheading in Hama.",
      "Show beheading in Syria",
      "The photo series will show the beheading of the man.",
      "The photo series will show the beheading in Hama.",
      "The photo series will show the beheading in Syria.",
      "The beheading took place in Hama.",
      "The beheading took place in a Syrian city.",
      "The man was beheaded in Hama.",
      "The man was beheaded in a Syrian city.",
      "and the man was handcuffed.",
      "and the man was blindfolded.",
      "and when the man was led.",
      "and when led by a van.",
      "and when led to a land area.",
      "The man was handcuffed and blindfolded.",
      "And the man was handcuffed when led.",
      "And the man was handcuffed as the van led.",
      "And the man was handcuffed as the land area was led.",
      "And the man was blindfolded when led.",
      "and the man was blindfolded as the van led.",
      "And when the land area was led, the man was blindfolded.",
      "When led, the man was handcuffed and blindfolded.",
      "When led by a van, the man was handcuffed and blindfolded.",
      "When led to a land area, the man was handcuffed and blindfolded.",
      "led to a land area.",
      "The van was led to a land area.",
      "The men were surrounded by men with guns.",
      "The executioner was surrounded.",
      "People surrounded by meat cleaver.",
      "The executioner was surrounded by men.",
      "Men were surrounded by people with meat cleaver.",
      "has a meat cleaver.",
      "The man was claimed to have been beheaded.",
      "It is claimed that the beheadings were done because of the blasphemy of the man.",
      "It is claimed that the beheadings were done because of the alleged blasphemy."
    ]
  },
  {
    "instance_id": "realsumm-37",
    "summary": "<t> Denise and Glen Higgs thought they 'd never have children . </t> <t> Higgs was made infertile due to cancer treatment , but they tried IVF . </t> <t> Couple from of Braunton , Devon , had Mazy , born three years ago . </t> <t> Tried again using the same batch and had twins Carter & Carson last week . </t>",
    "summary_trees": [
      "# ::snt  Denise and Glen Higgs thought they 'd never have children . \n(t / think-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Denise\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Glenn\"\n                        :op2 \"Higgs\")))\n      :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))",
      "# ::snt  Higgs was made infertile due to cancer treatment , but they tried IVF . \n(m / make-02\n      :ARG0 (t / treat-03\n            :ARG2 (c / cancer))\n      :ARG1 (ii / infertile\n            :domain (p / person\n                  :name (n / name\n                        :op1 \"Higgs\")))\n      :concession-of (t2 / try-01\n            :ARG0 (t3 / they)\n            :ARG1 (f / fertilize-01\n                  :mod (m2 / multiple))))",
      "# ::snt  Couple from of Braunton , Devon , had Mazy , born three years ago . \n(h / have-05\n      :ARG0 (c / couple\n            :source (c2 / city\n                  :name (n / name\n                        :op1 \"Braunton\")\n                  :location (c3 / county\n                        :name (n2 / name\n                              :op1 \"Devon\"))))\n      :ARG1 (p / person\n            :name (n3 / name\n                  :op1 \"Mazy\")\n            :ARG1-of (b / bear-02\n                  :time (b2 / before\n                        :op1 (n4 / now)\n                        :quant (t / temporal-quantity\n                              :quant 3\n                              :unit (y / year))))))",
      "# ::snt  Tried again using the same batch and had twins Carter & Carson last week . \n(a / and\n      :op1 (t / try-01\n            :ARG0 (ii / i)\n            :mod (a2 / again)\n            :manner (u / use-01\n                  :ARG0 ii\n                  :ARG1 (b / batch\n                        :ARG1-of (s / same-01))))\n      :op2 (h / have-05\n            :ARG0 ii\n            :ARG1 (a3 / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Carter\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Carson\"))\n                  :mod (t2 / twin))\n            :time (w / week\n                  :mod (l / last))))"
    ],
    "tree": [
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Denise\")))",
      "(t / think-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Glenn\"\n                       :op2 \"Higgs\")))",
      "(t / think-01\n   :ARG1 (h / have-05\n            :polarity -))",
      "(t / think-01\n   :ARG1 (h / have-05\n            :time (e / ever)))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Denise\"))\n   :ARG1 (h / have-05\n            :polarity -))",
      "(t / think-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Glenn\"\n                       :op2 \"Higgs\"))\n   :ARG1 (h / have-05\n            :polarity -))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Denise\")))",
      "(m / make-02\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Higgs\"))))",
      "(m / make-02\n   :concession (t2 / try-01\n                   :ARG0 (t3 / they)))",
      "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (c / cancer))\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Higgs\"))))",
      "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (c / cancer))\n   :concession (t2 / try-01\n                   :ARG0 (t3 / they)))",
      "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (c / cancer))\n   :concession (t2 / try-01\n                   :ARG1 (f / fertilize-01\n                            :mod (m2 / multiple))))",
      "(m / make-02\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Higgs\")))\n   :concession (t2 / try-01\n                   :ARG0 (t3 / they)))",
      "(m / make-02\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Higgs\")))\n   :concession (t2 / try-01\n                   :ARG1 (f / fertilize-01\n                            :mod (m2 / multiple))))",
      "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (c / cancer))\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Higgs\")))\n   :concession (t2 / try-01\n                   :ARG0 (t3 / they)))",
      "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (c / cancer))\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Higgs\")))\n   :concession (t2 / try-01\n                   :ARG1 (f / fertilize-01\n                            :mod (m2 / multiple))))",
      "(ii / infertile\n    :domain (p / person\n               :name (n / name\n                        :op1 \"Higgs\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Higgs\"))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\"))))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\")))))",
      "(h / have-05\n   :ARG1 (p / person\n            :name (n3 / name\n                      :op1 \"Mazy\")))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")))\n   :ARG1 (p / person\n            :name (n3 / name\n                      :op1 \"Mazy\")))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")))\n   :ARG1 (p / person\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :op1 (n4 / now)))))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")))\n   :ARG1 (p / person\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :quant (t / temporal-quantity\n                                         :quant 3)))))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")))\n   :ARG1 (p / person\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :quant (t / temporal-quantity\n                                         :unit (y / year))))))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :name (n3 / name\n                      :op1 \"Mazy\")))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :op1 (n4 / now)))))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :quant (t / temporal-quantity\n                                         :quant 3)))))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :quant (t / temporal-quantity\n                                         :unit (y / year))))))",
      "(c2 / city\n    :name (n / name\n             :op1 \"Braunton\")\n    :location (c3 / county\n                  :name (n2 / name\n                            :op1 \"Devon\")))",
      "(p / person\n   :ARG1 (b / bear-02\n            :time (b2 / before\n                      :op1 (n4 / now))))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i)))",
      "(a / and\n   :op1 (t / try-01\n           :mod (a2 / again)))",
      "(a / and\n   :op1 (t / try-01\n           :manner (u / use-01\n                      :ARG1 (b / batch\n                               :ARG1 (s / same-01)))))",
      "(a / and\n   :op2 (h / have-05\n           :ARG0 (ii / i)))",
      "(a / and\n   :op2 (h / have-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carter\"))))",
      "(a / and\n   :op2 (h / have-05\n           :time (w / week\n                    :mod (l / last))))",
      "(a / and\n   :op2 (h / have-05\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Carson\"))))",
      "(a / and\n   :op2 (h / have-05\n           :ARG1 (t2 / twin)))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i))\n   :op2 (h / have-05\n           :ARG0 ii))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i))\n   :op2 (h / have-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carter\"))))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i))\n   :op2 (h / have-05\n           :time (w / week\n                    :mod (l / last))))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i))\n   :op2 (h / have-05\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Carson\"))))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i))\n   :op2 (h / have-05\n           :ARG1 (t2 / twin)))",
      "(a / and\n   :op1 (t / try-01\n           :mod (a2 / again))\n   :op2 (h / have-05\n           :ARG0 (ii / i)))",
      "(a / and\n   :op1 (t / try-01\n           :mod (a2 / again))\n   :op2 (h / have-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carter\"))))",
      "(a / and\n   :op1 (t / try-01\n           :mod (a2 / again))\n   :op2 (h / have-05\n           :time (w / week\n                    :mod (l / last))))",
      "(a / and\n   :op1 (t / try-01\n           :mod (a2 / again))\n   :op2 (h / have-05\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Carson\"))))",
      "(a / and\n   :op1 (t / try-01\n           :mod (a2 / again))\n   :op2 (h / have-05\n           :ARG1 (t2 / twin)))",
      "(a / and\n   :op1 (t / try-01\n           :manner (u / use-01\n                      :ARG1 (b / batch\n                               :ARG1 (s / same-01))))\n   :op2 (h / have-05\n           :ARG0 (ii / i)))",
      "(a / and\n   :op1 (t / try-01\n           :manner (u / use-01\n                      :ARG1 (b / batch\n                               :ARG1 (s / same-01))))\n   :op2 (h / have-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Carter\"))))",
      "(a / and\n   :op1 (t / try-01\n           :manner (u / use-01\n                      :ARG1 (b / batch\n                               :ARG1 (s / same-01))))\n   :op2 (h / have-05\n           :time (w / week\n                    :mod (l / last))))",
      "(a / and\n   :op1 (t / try-01\n           :manner (u / use-01\n                      :ARG1 (b / batch\n                               :ARG1 (s / same-01))))\n   :op2 (h / have-05\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Carson\"))))",
      "(a / and\n   :op1 (t / try-01\n           :manner (u / use-01\n                      :ARG1 (b / batch\n                               :ARG1 (s / same-01))))\n   :op2 (h / have-05\n           :ARG1 (t2 / twin)))",
      "(t / try-01\n   :manner (u / use-01\n              :ARG0 (ii / i)\n              :ARG1 (b / batch)))",
      "(t / try-01\n   :ARG0 (ii / i)\n   :mod (a2 / again))",
      "(t / try-01\n   :ARG0 (ii / i)\n   :manner (u / use-01\n              :ARG0 ii\n              :ARG1 (b / batch)))",
      "(t / try-01\n   :mod (a2 / again)\n   :manner (u / use-01\n              :ARG0 (ii / i)\n              :ARG1 (b / batch)))",
      "(t / try-01\n   :ARG0 (ii / i)\n   :mod (a2 / again)\n   :manner (u / use-01\n              :ARG0 ii\n              :ARG1 (b / batch)))",
      "(u / use-01\n   :ARG1 (b / batch\n            :ARG1 (s / same-01)))",
      "(h / have-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carter\")))",
      "(h / have-05\n   :time (w / week\n            :mod (l / last)))",
      "(h / have-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :time (w / week\n            :mod (l / last)))",
      "(h / have-05\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carson\"))\n   :time (w / week\n            :mod (l / last)))",
      "(h / have-05\n   :ARG1 (t2 / twin)\n   :time (w / week\n            :mod (l / last)))"
    ],
    "smus": [
      "Denise thought.",
      "Glenn Higgs thought.",
      "Thought it didn't.",
      "Thought it would never happen.",
      "Denise thought she didn't have.",
      "Glenn Higgs thought he didn't have.",
      "Denise",
      "Higgs was made infertile.",
      "Made, though they tried.",
      "The treatment for cancer has made Higgs infertile.",
      "Cancer treatment was made, but they tried.",
      "The cancer treatment was made, though multiple fertilization tried.",
      "Even though they tried, Higgs was made infertile.",
      "Even though multiple fertilization tried, Higgs was made infertile.",
      "Even though they tried, cancer treatment has made Higgs infertile.",
      "Although multiple fertilization was tried, cancer treatment had made Higgs infertile.",
      "Multiple fertilization tried.",
      "They tried multiple fertilization.",
      "The couple from Braunton had.",
      "The couple from Devon had.",
      "had mazy.",
      "The couple from Braunton had mazy.",
      "The couple from Braunton had a child born earlier.",
      "The couple from Braunton had a baby born three years earlier.",
      "The couple from Braunton had a baby born years earlier.",
      "The couple from Devon had Mazy.",
      "The couple from Devon had a child born earlier.",
      "The couple from Devon had a child born three years earlier.",
      "The couple from Devon had a baby born years earlier.",
      "Mazy was born three years earlier.",
      "Born three years earlier.",
      "And I have tried.",
      "And tried again.",
      "And tried using the same batch.",
      "And I had.",
      "And had Carter.",
      "And had last week.",
      "And had Carson.",
      "and had twins.",
      "I've tried and had.",
      "I've tried and had Carter.",
      "I've tried and had last week.",
      "I've tried and had Carson.",
      "I've tried and had twins.",
      "Try again and I had.",
      "tried again and had Carter.",
      "Try again and had last week.",
      "tried again and had Carson.",
      "tried again and had twins.",
      "Tryd using the same batch and had.",
      "Tryd using the same batch and had Carter.",
      "Tryd using the same batch and had last week.",
      "Tryd using the same batch and had Carson.",
      "Tryd using the same batch and had twins.",
      "Tryed using a batch.",
      "I've tried again.",
      "I've tried using a batch.",
      "Try again using a batch.",
      "I've tried again using a batch.",
      "using the same batch.",
      "Had Carter.",
      "Had last week.",
      "Last week, Carter had.",
      "Last week, he had Carson.",
      "The twins had last week."
    ]
  },
  {
    "instance_id": "realsumm-38",
    "summary": "<t> Speed camera discovered pointing at house in Handsworth , Birmingham . </t> <t> Fixed cameras switched off across the West Midlands in Spring of 2013 . </t> <t> Site is not going to be part of a new trial using digital technology . </t> <t> Obsolete camera may now be taken down after engineers examine device . </t>",
    "summary_trees": [
      "# ::snt  Speed camera discovered pointing at house in Handsworth , Birmingham . \n(d / discover-01\n      :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0-of (p / point-01\n                  :ARG2 (h / house\n                        :location (c2 / city-district\n                              :name (n / name\n                                    :op1 \"Handsworth\")\n                              :part-of (c3 / city\n                                    :name (n2 / name\n                                          :op1 \"Birmingham\")))))))",
      "# ::snt  Fixed cameras switched off across the West Midlands in Spring of 2013 . \n(s / switch-off-04\n      :ARG1 (c / camera\n            :ARG1-of (f / fix-03))\n      :location (a / across\n            :op1 (c2 / country-region\n                  :name (n / name\n                        :op1 \"West\"\n                        :op2 \"Midlands\")))\n      :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))",
      "# ::snt  Site is not going to be part of a new trial using digital technology . \n(h / have-part-91\n      :polarity -\n      :ARG1 (t / try-02\n            :ARG1-of (n / new-01)\n            :ARG0-of (u / use-01\n                  :ARG1 (t2 / technology\n                        :mod (d / digit))))\n      :ARG2 (s / site))",
      "# ::snt  Obsolete camera may now be taken down after engineers examine device . \n(p / possible-01\n      :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                  :mod (o / obsolete))\n            :time (a / after\n                  :op1 (e / examine-01\n                        :ARG0 (p2 / person\n                              :ARG0-of (e2 / engineer-01))\n                        :ARG1 (d / device))))\n      :time (n / now))"
    ],
    "tree": [
      "(d / discover-01\n   :ARG1 (c / camera\n            :mod (s / speed)))",
      "(d / discover-01\n   :ARG1 (c / camera\n            :ARG0 (p / point-01\n                     :ARG2 (h / house\n                              :location (c2 / city-district\n                                            :name (n / name\n                                                     :op1 \"Handsworth\"))))))",
      "(d / discover-01\n   :ARG1 (c / camera\n            :ARG0 (p / point-01\n                     :ARG2 (h / house\n                              :location (c2 / city-district\n                                            :part (c3 / city\n                                                      :name (n2 / name\n                                                                :op1 \"Birmingham\")))))))",
      "(c / camera\n   :ARG0 (p / point-01\n            :ARG2 (h / house\n                     :location (c2 / city-district\n                                   :name (n / name\n                                            :op1 \"Handsworth\")))))",
      "(c / camera\n   :ARG0 (p / point-01\n            :ARG2 (h / house\n                     :location (c2 / city-district\n                                   :part (c3 / city\n                                             :name (n2 / name\n                                                       :op1 \"Birmingham\"))))))",
      "(c / camera\n   :mod (s / speed)\n   :ARG0 (p / point-01\n            :ARG2 (h / house\n                     :location (c2 / city-district\n                                   :name (n / name\n                                            :op1 \"Handsworth\")))))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03)))",
      "(s / switch-off-04\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\"))))",
      "(s / switch-off-04\n   :time (d / date-entity\n            :year 2013))",
      "(s / switch-off-04\n   :time (d / date-entity\n            :season (s2 / spring)))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\"))))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :time (d / date-entity\n            :year 2013))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :time (d / date-entity\n            :season (s2 / spring)))",
      "(s / switch-off-04\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / switch-off-04\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :season (s2 / spring)))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :season (s2 / spring)))",
      "(t / try-02\n   :ARG1 (n / new-01)\n   :ARG0 (u / use-01\n            :ARG1 (t2 / technology\n                      :mod (d / digit))))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                     :mod (o / obsolete))))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG0 (p2 / person\n                                       :ARG0 (e2 / engineer-01))))))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG1 (d / device)))))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                     :mod (o / obsolete)))\n   :time (n / now))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG0 (p2 / person\n                                       :ARG0 (e2 / engineer-01)))))\n   :time (n / now))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG1 (d / device))))\n   :time (n / now))",
      "(t / take-down-22\n   :time (a / after\n            :op1 (e / examine-01\n                    :ARG0 (p2 / person\n                              :ARG0 (e2 / engineer-01)))))",
      "(t / take-down-22\n   :time (a / after\n            :op1 (e / examine-01\n                    :ARG1 (d / device))))",
      "(t / take-down-22\n   :ARG1 (c / camera\n            :mod (o / obsolete))\n   :time (a / after\n            :op1 (e / examine-01\n                    :ARG0 (p2 / person\n                              :ARG0 (e2 / engineer-01)))))",
      "(t / take-down-22\n   :ARG1 (c / camera\n            :mod (o / obsolete))\n   :time (a / after\n            :op1 (e / examine-01\n                    :ARG1 (d / device))))",
      "(a / after\n   :op1 (e / examine-01\n           :ARG0 (p2 / person\n                     :ARG0 (e2 / engineer-01))))",
      "(a / after\n   :op1 (e / examine-01\n           :ARG1 (d / device)))",
      "(e / examine-01\n   :ARG0 (p2 / person\n             :ARG0 (e2 / engineer-01)))",
      "(e / examine-01\n   :ARG0 (p2 / person\n             :ARG0 (e2 / engineer-01))\n   :ARG1 (d / device))"
    ],
    "smus": [
      "The speed camera was discovered.",
      "The camera was discovered at a house in Handsworth.",
      "A camera pointed at a house in Birmingham discovered.",
      "The camera was pointing at a house in Handsworth.",
      "Point to the house in Handsworth.",
      "Point to a house in Birmingham.",
      "The fixed camera switched off.",
      "Switched off across the West Midlands.",
      "switched off in 2013.",
      "Switched off in Spring.",
      "Fixed cameras switched off across the West Midlands.",
      "Fixed cameras switched off in 2013.",
      "The fixed camera switched off in spring.",
      "Switched off across the West Midlands in 2013.",
      "Switched off across the West Midlands in spring.",
      "Fixed cameras switched off across the West Midlands in 2013.",
      "Fixed cameras switched off across the West Midlands in spring.",
      "using digital technology",
      "The obsolete camera could have been taken down.",
      "It can be taken down after engineers examine.",
      "It can be taken down after the devices are examined.",
      "The obsolete camera can now be taken down.",
      "Now, after the engineers examine, they can be taken down.",
      "Now the device can be taken down after the examiners have examined it.",
      "Then after the engineers examine, the 'down' is taken down.",
      "The device is taken down after the examiners.",
      "The obsolete camera is taken down after engineers examine.",
      "The obsolete camera is taken down after the devices are examined.",
      "After the engineers examine.",
      "After the devices are examined.",
      "Engineers examine.",
      "Engineers examine the device."
    ]
  },
  {
    "instance_id": "realsumm-39",
    "summary": "<t> Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia . </t> <t> Terreni was a USC freshman and a member of the Pi Kappa Alpha house . </t> <t> Coroner identified cause of death as alcohol poisoning . </t> <t> Toxicology tests showed freshman had a blood alcohol of .375 . </t> <t> Neighbors said there was a large party ; a beer keg was still visible outside . </t>",
    "summary_trees": [
      "# ::snt  Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia . \n(f / find-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Charles\"\n                  :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                  :quant 18\n                  :unit (y / year)))\n      :ARG2 (d / die-01\n            :ARG1 p)\n      :time (d2 / date-entity\n            :day 18\n            :month 3)\n      :location (h / house\n            :mod (f2 / frat)\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Columbia\"))))",
      "# ::snt  Terreni was a USC freshman and a member of the Pi Kappa Alpha house . \n(a / and\n      :op1 (f / freshman\n            :domain (p / person\n                  :name (n / name\n                        :op1 \"Terreni\"))\n            :location (u / university\n                  :name (n2 / name\n                        :op1 \"USC\")))\n      :op2 (h / have-org-role-91\n            :ARG0 p\n            :ARG1 (h2 / house\n                  :name (n3 / name\n                        :op1 \"Pi\"\n                        :op2 \"Kappa\"\n                        :op3 \"Alpha\"))\n            :ARG2 (m / member)))",
      "# ::snt  Coroner identified cause of death as alcohol poisoning . \n(ii / identify-01\n      :ARG0 (c / coroner)\n      :ARG1 (c2 / cause-01\n            :ARG1 (d / die-01))\n      :ARG2 (p / poison-02\n            :ARG1 (a / alcohol)))",
      "# ::snt  Toxicology tests showed freshman had a blood alcohol of .375 . \n(s / show-01\n      :ARG0 (t / test-01\n            :mod (t2 / toxicology))\n      :ARG1 (h / have-03\n            :ARG0 (f / freshman)\n            :ARG1 (a / alcohol\n                  :mod (b / blood)\n                  :quant (c / concentration-quantity\n                        :quant.375 (f2 / fluid-ounce)))))",
      "# ::snt  Neighbors said there was a large party ; a beer keg was still visible outside . \n(a / and\n      :op1 (s / say-01\n            :ARG0 (n / neighbor)\n            :ARG1 (p / party-01\n                  :mod (l / large)))\n      :op2 (s2 / see-01\n            :ARG1 (k / keg\n                  :mod (b / beer))\n            :mod (s3 / still)\n            :location (o / outside)))"
    ],
    "tree": [
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\")))))",
      "(f / find-01\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 18))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :month 3)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :mod (f2 / frat)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18)\n   :location (h / house\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(ii / identify-01\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01)))",
      "(ii / identify-01\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))",
      "(ii / identify-01\n    :ARG0 (c / coroner)\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01)))",
      "(ii / identify-01\n    :ARG0 (c / coroner)\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))",
      "(ii / identify-01\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01))\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))",
      "(ii / identify-01\n    :ARG0 (c / coroner)\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01))\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))",
      "(s / show-01\n   :ARG0 (t / test-01\n            :mod (t2 / toxicology)))",
      "(s / show-01\n   :ARG1 (h / have-03\n            :ARG0 (f / freshman)))",
      "(s / show-01\n   :ARG1 (h / have-03\n            :ARG1 (a / alcohol\n                     :mod (b / blood))))",
      "(s / show-01\n   :ARG0 (t / test-01\n            :mod (t2 / toxicology))\n   :ARG1 (h / have-03\n            :ARG0 (f / freshman)))",
      "(s / show-01\n   :ARG0 (t / test-01\n            :mod (t2 / toxicology))\n   :ARG1 (h / have-03\n            :ARG1 (a / alcohol\n                     :mod (b / blood))))",
      "(h / have-03\n   :ARG1 (a / alcohol\n            :mod (b / blood)))",
      "(h / have-03\n   :ARG0 (f / freshman)\n   :ARG1 (a / alcohol\n            :mod (b / blood)))",
      "(a / and\n   :op1 (s / say-01\n           :ARG1 (p / party-01\n                    :mod (l / large))))",
      "(a / and\n   :op2 (s2 / see-01\n            :ARG1 (k / keg\n                     :mod (b / beer))))",
      "(a / and\n   :op2 (s2 / see-01\n            :mod (s3 / still)))",
      "(a / and\n   :op2 (s2 / see-01\n            :location (o / outside)))",
      "(a / and\n   :op1 (s / say-01\n           :ARG0 (n / neighbor))\n   :op2 (s2 / see-01\n            :ARG1 (k / keg\n                     :mod (b / beer))))",
      "(a / and\n   :op1 (s / say-01\n           :ARG0 (n / neighbor))\n   :op2 (s2 / see-01\n            :mod (s3 / still)))",
      "(a / and\n   :op1 (s / say-01\n           :ARG0 (n / neighbor))\n   :op2 (s2 / see-01\n            :location (o / outside)))",
      "(a / and\n   :op1 (s / say-01\n           :ARG1 (p / party-01\n                    :mod (l / large)))\n   :op2 (s2 / see-01\n            :ARG1 (k / keg\n                     :mod (b / beer))))",
      "(a / and\n   :op1 (s / say-01\n           :ARG1 (p / party-01\n                    :mod (l / large)))\n   :op2 (s2 / see-01\n            :mod (s3 / still)))",
      "(a / and\n   :op1 (s / say-01\n           :ARG1 (p / party-01\n                    :mod (l / large)))\n   :op2 (s2 / see-01\n            :location (o / outside)))",
      "(s / say-01\n   :ARG0 (n / neighbor)\n   :ARG1 (p / party-01\n            :mod (l / large)))",
      "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer)))",
      "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer))\n    :mod (s3 / still))",
      "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer))\n    :location (o / outside))",
      "(s2 / see-01\n    :mod (s3 / still)\n    :location (o / outside))"
    ],
    "smus": [
      "Charles Terreni was found.",
      "The 18-year-old was found.",
      "Charles Terreni was found dead.",
      "Found on 18th.",
      "Found in March.",
      "Found in frat house.",
      "Found in a house in Columbia.",
      "The 18-year-old was found dead.",
      "A year old was found dead.",
      "Charles Terreni was found on the 18th.",
      "Charles Terreni was found in March.",
      "The 18-year-old was found on the 18th.",
      "The 18-year-old was found in March.",
      "The person was found in March.",
      "Charles Terreni was found in a frat house.",
      "Charles Terreni was found in a house in Columbia.",
      "The 18 was found in a frat house.",
      "The 18-year-old was found in a house in Columbia.",
      "The year old was found in a frat house.",
      "The year old was found in a house in Columbia.",
      "Charles Terreni's death was found on the 18th.",
      "Charles Terreni's death was found in March.",
      "Charles Terreni's death was found in a frat house.",
      "Charles Terreni's death was found in a Columbia house.",
      "Found in a frat house on the 18th",
      "The 18th was found in a house in Columbia.",
      "Found in March in a frat house.",
      "Found in March at a house in Columbia.",
      "Charles Terreni was found dead on the 18th.",
      "Charles Terreni was found dead in March.",
      "The 18-year-old was found dead on the 18th.",
      "The 18-year-old was found dead in March.",
      "The 18-year-old was found dead on the day.",
      "A year old was found dead in March.",
      "Charles Terreni was found dead in a frat house.",
      "Charles Terreni was found dead in a Columbia house.",
      "The 18 year old was found dead in a frat house.",
      "The 18-year-old was found dead in a Columbia house.",
      "A year old was found dead in a frat house.",
      "A year old was found dead in a Columbia house.",
      "Charles Terreni was found on the 18th in the frat house.",
      "Charles Terreni was found on the 18th in a Columbia house.",
      "Charles Terreni was found in March in a frat house.",
      "Charles Terreni was found in March at a Columbia house.",
      "The 18 year old was found on the 18th in a frat house.",
      "The 18-year-old was found on the 18th in a Columbia house.",
      "The 18 was found in March in a frat house.",
      "The 18-year-old was found in a Columbia house in March.",
      "The 18-year-old was found on the frat house.",
      "The 18-year-old was found on the house in Columbia.",
      "The year old was found in March in a frat house.",
      "The year old was found in March in a Columbia house.",
      "Charles Terreni's death was found on the 18th in a frat house.",
      "Charles Terreni's death was found on the 18th in a Columbia house.",
      "Charles Terreni's death was found in March in a frat house.",
      "Charles Terreni's death was found in March in a Columbia house.",
      "Charles Terreni was found dead on the 18th in a frat house.",
      "Charles Terreni was found dead on the 18th in a Columbia house.",
      "Charles Terreni was found dead in March in a frat house.",
      "Charles Terreni was found dead in a Columbia house in March.",
      "The 18-year-old was found dead on the 18th in a frat house.",
      "The 18-year-old was found dead on the 18th in a Columbia house.",
      "In March, an 18-year-old was found dead in a frat house.",
      "In March, an 18-year-old was found dead in a Columbia house.",
      "The 18-year-old was found dead at a frat house.",
      "The 18-year-old was found dead at a house in Columbia.",
      "In March a year old was found dead in a frat house.",
      "In March a year old was found dead in a Columbia house.",
      "The cause of death was identified.",
      "The alcohol poisoning was identified.",
      "The Coroner identified the cause of death.",
      "The coroner identified the alcohol poisoning.",
      "The cause of death was identified as alcohol poisoning.",
      "The coroner identified the cause of death as alcohol poisoning.",
      "The toxicology tests showed --",
      "Showed that the freshman had.",
      "showed that there was blood alcohol.",
      "The toxicology tests showed the freshman had.",
      "The toxicology tests showed the person had blood alcohol.",
      "had blood alcohol.",
      "The freshman had blood alcohol.",
      "And said a large party.",
      "and saw a beer keg.",
      "And still to be seen.",
      "and seen from the outside.",
      "Neighbors said, and a beer keg was seen.",
      "Neighbors said, still seeing.",
      "Neighbors said, and saw from outside.",
      "A large party was said, a beer keg was seen.",
      "A large party said, still seen.",
      "Large party said, outside saw.",
      "The neighbors said it was a large party.",
      "See beer keg.",
      "Still seeing a beer keg.",
      "There was a beer keg seen outside.",
      "Still seeing a beer keg outside."
    ]
  },
  {
    "instance_id": "realsumm-40",
    "summary": "<t> Air strikes were launched by Saudi forces a month ago against rebels . </t> <t> Saudi forces have focused on beating back Shiite Houthi rebels in Yemen . </t> <t> Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings . </t> <t> Talal made pledge on Wednesday after bombing raids appeared to resume , despite an official announcement that raids would be halted last night . </t>",
    "summary_trees": [
      "# ::snt  Air strikes were launched by Saudi forces a month ago against rebels . \n(l / launch-01\n      :ARG0 (f / force\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Saudi\"\n                        :op2 \"Arabia\")))\n      :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                  :ARG0-of (r / rebel-01))\n            :path (a / air))\n      :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                  :quant 1\n                  :unit (m / month))))",
      "# ::snt  Saudi forces have focused on beating back Shiite Houthi rebels in Yemen . \n(f / focus-01\n      :ARG0 (f2 / force\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Saudi\"\n                        :op2 \"Arabia\")))\n      :ARG2 (b / beat-back-05\n            :ARG0 f2\n            :ARG1 (p / person\n                  :mod (r / religious-group\n                        :name (n2 / name\n                              :op1 \"Shiite\"\n                              :op2 \"Hathi\"))\n                  :location (c2 / country\n                        :name (n3 / name\n                              :op1 \"Yemen\"))\n                  :ARG0-of (r2 / rebel-01))))",
      "# ::snt  Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings . \n(p / pledge-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Alwaleed\"\n                  :op2 \"Bin\"\n                  :op3 \"Talal\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p3 / prince)))\n      :ARG2 (c / car-make\n            :name (n2 / name\n                  :op1 \"Bentley\"))\n      :beneficiary (p4 / person\n            :ARG0-of (p5 / pilot-01)\n            :ARG1-of (ii / involve-01\n                  :ARG2 (b / bomb-01))))",
      "# ::snt  Talal made pledge on Wednesday after bombing raids appeared to resume , despite an official announcement that raids would be halted last night . \n(p / pledge-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Talal\"))\n      :time (d / date-entity\n            :weekday (w / wednesday))\n      :time (a / after\n            :op1 (a2 / appear-02\n                  :ARG1 (r / resume-01\n                        :ARG1 (r2 / raid-01\n                              :manner (b / bomb-01)))))\n      :concession (a3 / announce-01\n            :ARG1 (h / halt-01\n                  :ARG1 r2)\n            :mod (o / official)\n            :time (d2 / date-entity\n                  :dayperiod (n2 / night)\n                  :mod (y / yesterday))))"
    ],
    "tree": [
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\"))))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG0 (f / force)))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :path (a / air)))",
      "(l / launch-01\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :path (a / air)))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG0 (f / force))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :quant 1)))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG0 (f / force))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01)))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :path (a / air))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :quant 1)))",
      "(l / launch-01\n   :ARG1 (s / strike-01\n            :path (a / air))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f)\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01)))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :path (a / air))\n   :time (b / before\n            :quant (t / temporal-quantity\n                      :unit (m / month))))",
      "(f / force\n   :mod (c / country\n           :name (n / name\n                    :op1 \"Saudi\"\n                    :op2 \"Arabia\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Saudi\"\n            :op2 \"Arabia\"))",
      "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\"))))",
      "(f / focus-01\n   :ARG2 (b / beat-back-05\n            :ARG0 (f2 / force)))",
      "(f / focus-01\n   :ARG2 (b / beat-back-05\n            :ARG1 (p / person\n                     :mod (r / religious-group\n                             :name (n2 / name\n                                       :op1 \"Shiite\"\n                                       :op2 \"Hathi\")))))",
      "(f / focus-01\n   :ARG2 (b / beat-back-05\n            :ARG1 (p / person\n                     :location (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"Yemen\")))))",
      "(f / focus-01\n   :ARG2 (b / beat-back-05\n            :ARG1 (p / person\n                     :ARG0 (r2 / rebel-01))))",
      "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG0 f2))",
      "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG1 (p / person\n                     :mod (r / religious-group\n                             :name (n2 / name\n                                       :op1 \"Shiite\"\n                                       :op2 \"Hathi\")))))",
      "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG1 (p / person\n                     :location (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"Yemen\")))))",
      "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG1 (p / person\n                     :ARG0 (r2 / rebel-01))))",
      "(f2 / force\n    :mod (c / country\n            :name (n / name\n                     :op1 \"Saudi\"\n                     :op2 \"Arabia\")))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\")))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince))))",
      "(p / pledge-01\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\")))",
      "(p / pledge-01\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)))",
      "(p / pledge-01\n   :beneficiary (p4 / person\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\"))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\")))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\")))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\"))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\"))\n   :beneficiary (p4 / person\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :beneficiary (p4 / person\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))",
      "(p / pledge-01\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)))",
      "(p / pledge-01\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\"))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\"))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Alwaleed\"\n             :op2 \"Bin\"\n             :op3 \"Talal\"))",
      "(p2 / person\n    :ARG0 (h / have-org-role-91\n             :ARG2 (p3 / prince)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\")))",
      "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(p / pledge-01\n   :concession (a3 / announce-01\n                   :ARG1 (h / halt-01\n                            :ARG1 (r2 / raid-01\n                                      :manner (b / bomb-01)))))",
      "(p / pledge-01\n   :concession (a3 / announce-01\n                   :mod (o / official)))",
      "(p / pledge-01\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :dayperiod (n2 / night))))",
      "(p / pledge-01\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :mod (y / yesterday))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :concession (a3 / announce-01\n                   :ARG1 (h / halt-01\n                            :ARG1 (r2 / raid-01\n                                      :manner (b / bomb-01)))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :concession (a3 / announce-01\n                   :mod (o / official)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :dayperiod (n2 / night))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :mod (y / yesterday))))",
      "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :ARG1 (h / halt-01\n                            :ARG1 (r2 / raid-01\n                                      :manner (b / bomb-01)))))",
      "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :mod (o / official)))",
      "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :dayperiod (n2 / night))))",
      "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :mod (y / yesterday))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :ARG1 (h / halt-01\n                            :ARG1 (r2 / raid-01\n                                      :manner (b / bomb-01)))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :mod (o / official)))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :dayperiod (n2 / night))))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Talal\"))\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :concession (a3 / announce-01\n                   :time (d2 / date-entity\n                             :mod (y / yesterday))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Talal\"))",
      "(a / after\n   :op1 (a2 / appear-02\n            :ARG1 (r / resume-01\n                     :ARG1 (r2 / raid-01\n                               :manner (b / bomb-01)))))",
      "(a2 / appear-02\n    :ARG1 (r / resume-01\n             :ARG1 (r2 / raid-01\n                       :manner (b / bomb-01))))",
      "(r / resume-01\n   :ARG1 (r2 / raid-01\n             :manner (b / bomb-01)))",
      "(a3 / announce-01\n    :time (d2 / date-entity\n              :dayperiod (n2 / night)))",
      "(a3 / announce-01\n    :ARG1 (h / halt-01\n             :ARG1 (r2 / raid-01))\n    :mod (o / official))",
      "(a3 / announce-01\n    :ARG1 (h / halt-01\n             :ARG1 (r2 / raid-01))\n    :time (d2 / date-entity\n              :dayperiod (n2 / night)))",
      "(a3 / announce-01\n    :ARG1 (h / halt-01\n             :ARG1 (r2 / raid-01))\n    :time (d2 / date-entity\n              :mod (y / yesterday)))"
    ],
    "smus": [
      "Saudi forces launched.",
      "Forces strike launched.",
      "Air strikes were launched.",
      "Launched a month earlier.",
      "Saudi forces have launched strikes.",
      "Saudi forces have launched strikes on rebels.",
      "Saudi forces have launched air strikes.",
      "The Saudi forces launched a month earlier.",
      "Forces strikes were launched one before.",
      "Forces strikes were launched a month earlier.",
      "The strikes were launched a month earlier against the rebels.",
      "Air strikes were launched one earlier.",
      "Air strikes were launched a month earlier.",
      "Saudi forces launched strikes a month earlier.",
      "Saudi forces had launched strikes on rebels a month earlier.",
      "Saudi forces had launched air strikes a month earlier.",
      "Rebel strikes",
      "The rebels were hit by air.",
      "Saudi forces have focused.",
      "Focused on the forces beating back.",
      "Focused on beating back Shiite Hathi.",
      "focusing on beating back Yemenis.",
      "Focused on beating back against rebels.",
      "Saudi forces have focused on beating back.",
      "Saudi forces have focused on beating back Shiite Hathi.",
      "Saudi forces have focused on beating back Yemenis.",
      "Saudi forces have focused on beating back rebels.",
      "beating back against Shiite Hathi.",
      "Alwaleed Bin Talal pledged --",
      "The Prince pledged --",
      "The Bentleys were pledged.",
      "pledged for pilots",
      "pledged for people involved in bombs",
      "Alwaleed Bin Talal pledged the Bentleys.",
      "The Prince pledged the Bentleys.",
      "Alwaleed Bin Talal pledged for the pilots.",
      "Alwaleed Bin Talal pledged to the people involved in the bombings.",
      "The Prince pledged for the pilots.",
      "The Prince pledged for those involved in the bombs.",
      "The bentleys were pledged for pilots.",
      "Bentleys were pledged for people involved in the bombings.",
      "Alwaleed Bin Talal pledged the Bentleys to the pilots.",
      "Alwaleed Bin Talal pledged a Bentley to those involved in the bombs.",
      "The Prince pledged the Bentleys to the pilots.",
      "The Prince pledged the Bentleys to those involved in the bombs.",
      "The people involved in the bombings.",
      "Pilots were involved in the bombings.",
      "Talal made the pledge.",
      "The pledge was made Wednesday.",
      "The pledge comes amid announcement that bomb raids have been halted.",
      "The pledge was made despite an official announcement.",
      "The pledge was made despite the announcement last night.",
      "The pledge was made despite an announcement yesterday.",
      "Talal made the pledge Wednesday.",
      "Talal made the pledge despite an announcement that bomb raids had been halted.",
      "Talal made the pledge despite the official announcement.",
      "Talal made the pledge despite the announcement last night.",
      "Talal made the pledge despite the announcement yesterday.",
      "The pledge was made Wednesday despite an announcement that bomb raids had been halted.",
      "The pledge was made Wednesday despite the official announcement.",
      "The pledge was made Wednesday night, despite the announcement.",
      "The pledge was made Wednesday despite the announcement yesterday.",
      "Talal made the pledge Wednesday despite an announcement that bomb raids had been halted.",
      "Talal made the pledge Wednesday despite an official announcement.",
      "Talal made the pledge Wednesday night despite an announcement that night.",
      "Talal made the pledge Wednesday despite an announcement yesterday.",
      "After it appeared the bomb raids would resume.",
      "The bomb raids appeared to resume.",
      "Bomb raids to resume",
      "The announcement was that the raids had been halted.",
      "The raids were officially announced halted.",
      "The raids were announced yesterday as halting.",
      "The official announcement was made late tonight that the raids had been halted.",
      "The official announcement yesterday was that the raids had been halted."
    ]
  },
  {
    "instance_id": "realsumm-41",
    "summary": "<t> Brawl at Spring Gardens station in Philadelphia was captured on CCTV . </t> <t> Fight involved students from nearby Benjamin Franklin High School . </t> <t> At one point an attacker falls onto the tracks , but manages to get back up . </t> <t> After the confrontation , the victims and attackers walk onto the same train . </t>",
    "summary_trees": [
      "# ::snt  Brawl at Spring Gardens station in Philadelphia was captured on CCTV . \n(c / capture-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"CCTV\"))\n      :ARG1 (b / brawl-01\n            :location (s / station\n                  :name (n2 / name\n                        :op1 \"Spring\"\n                        :op2 \"Gardens\")\n                  :location (c2 / city\n                        :name (n3 / name\n                              :op1 \"Philadelphia\")))))",
      "# ::snt  Fight involved students from nearby Benjamin Franklin High School . \n(ii / involve-01\n      :ARG1 (p / person\n            :ARG0-of (s / study-01)\n            :source (h / high-school\n                  :name (n / name\n                        :op1 \"Benjamin\"\n                        :op2 \"Franklin\"\n                        :op3 \"High\"\n                        :op4 \"School\")\n                  :location (n2 / nearby)))\n      :ARG2 (f / fight-01))",
      "# ::snt  At one point an attacker falls onto the tracks , but manages to get back up . \n(c / contrast-01\n      :ARG1 (f / fall-01\n            :ARG1 (p / person\n                  :ARG0-of (a / attack-01))\n            :ARG4 (t / track))\n      :ARG2 (m / manage-01\n            :ARG0 p\n            :ARG1 (g / get-back-10\n                  :ARG1 p\n                  :ARG2 t))\n      :time (p2 / point\n            :quant 1))",
      "# ::snt  After the confrontation , the victims and attackers walk onto the same train . \n(w / walk-01\n      :ARG0 (a / and\n            :op1 (v / victim)\n            :op2 (p / person\n                  :ARG0-of (a2 / attack-01)))\n      :destination (t / train\n            :ARG1-of (s / same-01))\n      :time (a3 / after\n            :op1 (c / confront-01)))"
    ],
    "tree": [
      "(c / capture-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"CCTV\")))",
      "(c / capture-01\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :name (n2 / name\n                                   :op1 \"Spring\"\n                                   :op2 \"Gardens\"))))",
      "(c / capture-01\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :location (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Philadelphia\")))))",
      "(c / capture-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"CCTV\"))\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :name (n2 / name\n                                   :op1 \"Spring\"\n                                   :op2 \"Gardens\"))))",
      "(c / capture-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"CCTV\"))\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :location (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Philadelphia\")))))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01)))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\"))))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :source (h / high-school\n                        :location (n2 / nearby))))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01))\n    :ARG2 (f / fight-01))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")))\n    :ARG2 (f / fight-01))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :source (h / high-school\n                        :location (n2 / nearby)))\n    :ARG2 (f / fight-01))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01))))",
      "(c / contrast-01\n   :ARG2 (m / manage-01\n            :ARG0 (p / person\n                     :ARG0 (a / attack-01))))",
      "(c / contrast-01\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG2 (t / track))))",
      "(c / contrast-01\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01)))\n   :ARG2 (m / manage-01\n            :ARG0 p))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01)))\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG1 p)))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG4 (t / track))\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG1 (p / person))))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG4 (t / track))\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG2 (m / manage-01\n            :ARG0 (p / person\n                     :ARG0 (a / attack-01)))\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG1 (p / person)))\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG2 (t / track)))\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01)))\n   :ARG2 (m / manage-01\n            :ARG0 p)\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01)))\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG1 p))\n   :time (p2 / point\n             :quant 1))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG4 (t / track))\n   :ARG2 (m / manage-01\n            :ARG1 (g / get-back-10\n                     :ARG2 t))\n   :time (p2 / point\n             :quant 1))",
      "(m / manage-01\n   :ARG1 (g / get-back-10\n            :ARG1 (p / person)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :ARG0 (a2 / attack-01)))",
      "(w / walk-01\n   :destination (t / train\n                   :ARG1 (s / same-01)))",
      "(w / walk-01\n   :time (a3 / after\n             :op1 (c / confront-01)))",
      "(w / walk-01\n   :ARG0 (v / victim)\n   :destination (t / train\n                   :ARG1 (s / same-01)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :ARG0 (a2 / attack-01))\n   :destination (t / train\n                   :ARG1 (s / same-01)))",
      "(w / walk-01\n   :ARG0 (v / victim)\n   :time (a3 / after\n             :op1 (c / confront-01)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :ARG0 (a2 / attack-01))\n   :time (a3 / after\n             :op1 (c / confront-01)))",
      "(w / walk-01\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :time (a3 / after\n             :op1 (c / confront-01)))",
      "(w / walk-01\n   :ARG0 (v / victim)\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :time (a3 / after\n             :op1 (c / confront-01)))",
      "(w / walk-01\n   :ARG0 (p / person\n            :ARG0 (a2 / attack-01))\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :time (a3 / after\n             :op1 (c / confront-01)))"
    ],
    "smus": [
      "CCTV has captured.",
      "Brawl at Spring Gardens station captured.",
      "The brawl at the Philadelphia station was captured.",
      "The brawl at the Spring Gardens station was captured by CCTV.",
      "The brawl at the Philadelphia station was captured by CCTV.",
      "The students involved.",
      "The nearby High School involved.",
      "The students were involved in the fight.",
      "The fight involved people from the Benjamin Franklin High School.",
      "The fight involved people from nearby High School.",
      "There is a nearby Benjamin Franklin High School.",
      "But the attacker falls.",
      "But the attacker manages.",
      "But manages to get back on track.",
      "The attacker falls but manages.",
      "The attacker falls but manages to get back.",
      "The attacker falls, but manages to get back on track.",
      "falls on tracks but manages to get back on.",
      "But at one point the attacker manages.",
      "But at one point, people manage to get back.",
      "But at one point, manages to get back on track.",
      "At one point the attacker falls but manages.",
      "At one point the attacker falls but manages to get back.",
      "At one point the attacker falls but manages to get back on track.",
      "The attacker falls.",
      "manages to get back on track.",
      "The attackers walk.",
      "Walk to the same train.",
      "Walk after the confrontation.",
      "Victims walk to the same train.",
      "The attackers walk to the same train.",
      "Victims walk after confrontation.",
      "The attackers walk after the confrontation.",
      "After the confrontation, walk to the same train.",
      "Victims walk to the same train after the confrontation.",
      "The attackers walk to the same train after the confrontation."
    ]
  },
  {
    "instance_id": "realsumm-42",
    "summary": "<t> Paul and Laura Elliott met half way round at St Katharine Docks . </t> <t> Ceremony was witnessed by 80 guests . </t> <t> Pair ran across finish line under a shower of confetti . </t> <t> Returned to scene of ceremony for party later on . </t> <t> Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father . </t>",
    "summary_trees": [
      "# ::snt  Paul and Laura Elliott met half way round at St Katharine Docks . \n(m / meet-03\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Paul\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Laura\"\n                        :op2 \"Elliott\")))\n      :location (r / round-03\n            :extent (h / half-way)\n            :location (p3 / port\n                  :name (n3 / name\n                        :op1 \"St\"\n                        :op2 \"Katharine\"\n                        :op3 \"Docks\"))))",
      "# ::snt  Ceremony was witnessed by 80 guests . \n(w / witness-01\n      :ARG0 (g / guest\n            :quant 80)\n      :ARG1 (c / ceremony))",
      "# ::snt  Pair ran across finish line under a shower of confetti . \n(r / run-02\n      :ARG0 (p / pair)\n      :path (a / across\n            :op1 (l / line\n                  :mod (f / finish-01)))\n      :time (s / shower-01\n            :ARG1 (c / confetti)))",
      "# ::snt  Returned to scene of ceremony for party later on . \n(r / return-01\n      :ARG4 (s / scene\n            :location-of (c / ceremony\n                  :purpose (p / party-01)))\n      :time (a / after))",
      "# ::snt  Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father . \n(r / raise-02\n      :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound))\n      :purpose (r2 / research-01\n            :ARG1 (c / cancer))\n      :manner (h / honor-01\n            :ARG1 (p2 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 (p3 / person\n                              :name (n / name\n                                    :op1 \"Paul\"))\n                        :ARG2 (f / father)))))"
    ],
    "tree": [
      "(m / meet-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\")))",
      "(m / meet-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\")))",
      "(m / meet-03\n   :location (r / round-03\n                :extent (h / half-way)))",
      "(m / meet-03\n   :location (r / round-03\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))",
      "(m / meet-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"))\n   :location (r / round-03\n                :extent (h / half-way)))",
      "(m / meet-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"))\n   :location (r / round-03\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))",
      "(m / meet-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\"))\n   :location (r / round-03\n                :extent (h / half-way)))",
      "(m / meet-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\"))\n   :location (r / round-03\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Paul\")))",
      "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80))",
      "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80)\n   :ARG1 (c / ceremony))",
      "(r / run-02\n   :path (a / across\n            :op1 (l / line\n                    :mod (f / finish-01))))",
      "(r / run-02\n   :time (s / shower-01\n            :ARG1 (c / confetti)))",
      "(r / run-02\n   :ARG0 (p / pair)\n   :path (a / across\n            :op1 (l / line\n                    :mod (f / finish-01))))",
      "(r / run-02\n   :ARG0 (p / pair)\n   :time (s / shower-01\n            :ARG1 (c / confetti)))",
      "(r / run-02\n   :path (a / across\n            :op1 (l / line\n                    :mod (f / finish-01)))\n   :time (s / shower-01\n            :ARG1 (c / confetti)))",
      "(r / run-02\n   :ARG0 (p / pair)\n   :path (a / across\n            :op1 (l / line\n                    :mod (f / finish-01)))\n   :time (s / shower-01\n            :ARG1 (c / confetti)))",
      "(r / return-01\n   :ARG4 (s / scene\n            :location (c / ceremony\n                         :purpose (p / party-01))))",
      "(r / return-01\n   :ARG4 (s / scene\n            :location (c / ceremony\n                         :purpose (p / party-01)))\n   :time (a / after))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000))",
      "(r / raise-02\n   :purpose (r2 / research-01\n                :ARG1 (c / cancer)))",
      "(r / raise-02\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG2 (f / father)))))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000)\n   :purpose (r2 / research-01\n                :ARG1 (c / cancer)))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000)\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG1 (p3 / person\n                                            :name (n / name\n                                                     :op1 \"Paul\"))))))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :unit (p / pound))\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG1 (p3 / person\n                                            :name (n / name\n                                                     :op1 \"Paul\"))))))",
      "(r / raise-02\n   :purpose (r2 / research-01\n                :ARG1 (c / cancer))\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG1 (p3 / person\n                                            :name (n / name\n                                                     :op1 \"Paul\"))))))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000)\n   :purpose (r2 / research-01\n                :ARG1 (c / cancer))\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG1 (p3 / person\n                                            :name (n / name\n                                                     :op1 \"Paul\"))))))"
    ],
    "smus": [
      "Paul met.",
      "Laura Elliot met.",
      "The meeting took place round half way through.",
      "The meetings took place round the St Katharine Docks.",
      "Paul met half way round.",
      "Paul met round the St Katharine Docks.",
      "Laura Elliott met round the half way point.",
      "Laura Elliot met round the St. Katharine Docks.",
      "Rounding half way at St Katharine Docks.",
      "80 guests were witnessed.",
      "The Ceremony was witnessed by 80 guests.",
      "ran across the finish line.",
      "Run during the confetti shower.",
      "The pair ran across the finish line.",
      "The pair ran in the confetti shower.",
      "ran across the finish line in a confetti shower.",
      "The pair ran across the finish line in a confetti shower.",
      "The scene of the party ceremony was returned.",
      "The scene of the party ceremony was later returned.",
      "7k raised.",
      "Raised for Cancer Research",
      "Raised in honor of the father.",
      "7000 raised for Cancer Research",
      "7000 were raised in honor of the father.",
      "The PS was raised in honor of the father.",
      "Cancer Research raised in honor of the father",
      "7000 raised for Cancer Research in honor of the father"
    ]
  },
  {
    "instance_id": "realsumm-43",
    "summary": "<t> Nasr Bitar spotted Google Street View car driving around last autumn . </t> <t> Decided it was ' Bitar time to shine ' with car so followed in Bitar car to get a selfie . </t> <t> Sensing the perfect moment , Bitar got out and took the snap in Mississauga . </t> <t> Picture of Nasr 's selfie and the Street View image shared 2.9million times . </t>",
    "summary_trees": [
      "# ::snt  Nasr Bitar spotted Google Street View car driving around last autumn . \n(s / spot-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nasr\"\n                  :op2 \"Bitar\"))\n      :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                  :name (n2 / name\n                        :op1 \"Google\"\n                        :op2 \"Street\"\n                        :op3 \"View\"))\n            :ARG1 (a / around))\n      :time (d2 / date-entity\n            :season (a2 / autumn\n                  :mod (l / last))))",
      "# ::snt  Decided it was ' Bitar time to shine ' with car so followed in Bitar car to get a selfie . \n(c / cause-01\n      :ARG0 (d / decide-01\n            :ARG1 (t / time\n                  :time-of (s / shine-01\n                        :location (c2 / city\n                              :name (n / name\n                                    :op1 \"Brisbane\")))\n                  :domain (c3 / car)))\n      :ARG1 (f / follow-01\n            :ARG1 (ii / i)\n            :ARG2 (c4 / car\n                  :mod c2)\n            :purpose (g / get-01\n                  :ARG0 ii\n                  :ARG1 (s2 / selfie))))",
      "# ::snt  Sensing the perfect moment , Bitar got out and took the snap in Mississauga . \n(a / and\n      :op1 (g / get-05\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Bitar\"))\n            :ARG2 (o / out))\n      :op2 (s / snap-03\n            :ARG0 p\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Mississauga\")))\n      :manner (s2 / sense-01\n            :ARG0 p\n            :ARG1 (m / moment\n                  :ARG1-of (p2 / perfect-02))))",
      "# ::snt  Picture of Nasr 's selfie and the Street View image shared 2.9million times . \n(a / and\n      :op1 (p / picture\n            :poss (p2 / person\n                  :name (n / name\n                        :op1 \"Nasr\")))\n      :op2 (ii / image\n            :mod (p3 / product\n                  :name (n2 / name\n                        :op1 \"Street\"\n                        :op2 \"View\"))\n            :ARG1-of (s / share-01\n                  :ARG3 (t / times\n                        :quant 2900000))))"
    ],
    "tree": [
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\")))",
      "(s / spot-01\n   :ARG1 (d / drive-01\n            :ARG1 (a / around)))",
      "(s / spot-01\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG1 (a / around)))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(s / spot-01\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\")))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(s / spot-01\n   :ARG1 (d / drive-01\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\")))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(p / person\n   :name (n / name\n            :op1 \"Nasr\"\n            :op2 \"Bitar\"))",
      "(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\")))",
      "(c / cause-01\n   :ARG0 (d / decide-01\n            :ARG1 (t / time\n                     :domain (c3 / car))))",
      "(c / cause-01\n   :ARG1 (f / follow-01\n            :ARG1 (ii / i)))",
      "(c / cause-01\n   :ARG1 (f / follow-01\n            :purpose (g / get-01\n                        :ARG0 (ii / i))))",
      "(c / cause-01\n   :ARG1 (f / follow-01\n            :purpose (g / get-01\n                        :ARG1 (s2 / selfie))))",
      "(c / cause-01\n   :ARG0 (d / decide-01\n            :ARG1 (t / time\n                     :domain (c3 / car)))\n   :ARG1 (f / follow-01\n            :ARG1 (ii / i)))",
      "(c / cause-01\n   :ARG0 (d / decide-01\n            :ARG1 (t / time\n                     :domain (c3 / car)))\n   :ARG1 (f / follow-01\n            :purpose (g / get-01\n                        :ARG0 (ii / i))))",
      "(c / cause-01\n   :ARG0 (d / decide-01\n            :ARG1 (t / time\n                     :domain (c3 / car)))\n   :ARG1 (f / follow-01\n            :purpose (g / get-01\n                        :ARG1 (s2 / selfie))))",
      "(d / decide-01\n   :ARG1 (t / time\n            :domain (c3 / car)))",
      "(c2 / city\n    :name (n / name\n             :op1 \"Brisbane\"))",
      "(f / follow-01\n   :ARG2 (c4 / car\n             :mod (c2 / city :name (n / name :op1 \"Brisbane\"))))",
      "(f / follow-01\n   :purpose (g / get-01\n               :ARG1 (s2 / selfie)))",
      "(f / follow-01\n   :ARG1 (ii / i)\n   :ARG2 (c4 / car\n             :mod (c2 / city :name (n / name :op1 \"Brisbane\"))))",
      "(a / and\n   :op1 (g / get-05\n           :ARG2 (o / out)))",
      "(a / and\n   :op2 (s / snap-03\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\"))))",
      "(a / and\n   :op1 (g / get-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\")))\n   :op2 (s / snap-03\n           :ARG0 p))",
      "(a / and\n   :op1 (g / get-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\")))\n   :manner (s2 / sense-01\n               :ARG0 p))",
      "(a / and\n   :op2 (s / snap-03\n           :location (c / city\n                        :name (n2 / name\n                                  :op1 \"Mississauga\")))\n   :manner (s2 / sense-01\n               :ARG0 (p / person :name (n / name :op1 \"Bitar\"))\n               :ARG1 (m / moment)))",
      "(a / and\n   :op1 (g / get-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\")))\n   :op2 (s / snap-03\n           :ARG0 p)\n   :manner (s2 / sense-01\n               :ARG0 p\n               :ARG1 (m / moment)))",
      "(a / and\n   :op1 (g / get-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\")))\n   :op2 (s / snap-03\n           :location (c / city\n                        :name (n2 / name\n                                  :op1 \"Mississauga\")))\n   :manner (s2 / sense-01\n               :ARG0 p\n               :ARG1 (m / moment)))",
      "(a / and\n   :op1 (g / get-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\")))\n   :op2 (s / snap-03\n           :location (c / city\n                        :name (n2 / name\n                                  :op1 \"Mississauga\")))\n   :manner (s2 / sense-01\n               :ARG0 p))",
      "(a / and\n   :op1 (g / get-05\n           :ARG2 (o / out))\n   :op2 (s / snap-03\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bitar\")))\n   :manner (s2 / sense-01\n               :ARG0 p))"
    ],
    "smus": [
      "Nasr biata spotted.",
      "A driver was spotted driving around.",
      "Spotted last autumn.",
      "Nasr Balitar spotted a Google Street View driving.",
      "Nasr tar spotted the driver driving around.",
      "Nasr bilat spotted last autumn.",
      "Last autumn, a Google Street View spotted driving.",
      "A driving around was spotted last autumn.",
      "Last autumn Nasr Balitar spotted a Google Street View driver.",
      "Last autumn Nasr Balitar spotted a car driving around.",
      "Driving a Google Street View.",
      "Google Street View is driving around.",
      "So the car decided it was time.",
      "So I followed.",
      "So I followed to get.",
      "So, followed to get a selfie.",
      "I followed because the car decided it was time.",
      "The car decided it was time, so I followed to get.",
      "The car decided it was time, so followed to get a selfie.",
      "The car decided it was time.",
      "Followed to get.",
      "Followed to get a selfie.",
      "I followed to get.",
      "I followed to get a selfie.",
      "and got out.",
      "And Bitcoin took a snap.",
      "got out and took a snap in Mississauga.",
      "And Bitcoin is snapping, senseing the moment.",
      "Gibralt got and snapped in Mississauga senseing the moment.",
      "Got out and took a snap, senseing the moment.",
      "With Bitcoin sensing the moment, he got out and there was a snap in Mississauga.",
      "Sensingly, the out got out and there was a snap in Mississauga.",
      "Snap in Mississauga"
    ]
  },
  {
    "instance_id": "realsumm-44",
    "summary": "<t> Rory McIlroy bidding to win McIlroy first Masters title this week at Augusta . </t> <t> The Northern Irishman finished tied for eighth place last year in Irishman best finish in Georgia . </t> <t> McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year . </t> <t> One Direction star Niall Horan caddied for McIlroy in Wednesday 's Par-3 Contest . </t>",
    "summary_trees": [
      "# ::snt  Rory McIlroy bidding to win McIlroy first Masters title this week at Augusta . \n(b / bid-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                  :mod (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\"))\n                  :ord (o / ordinal-entity\n                        :value 1))\n            :time (w2 / week\n                  :mod (t2 / this))\n            :location (f / facility\n                  :name (n3 / name\n                        :op1 \"Augusta\"))))",
      "# ::snt  The Northern Irishman finished tied for eighth place last year in Irishman best finish in Georgia . \n(f / finish-07\n      :ARG0 (p / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Northern\"\n                        :op2 \"Ireland\")))\n      :ARG2 (t / tie-01\n            :ARG1 p\n            :ARG3 (p2 / place\n                  :ord (o / ordinal-entity\n                        :value 8)))\n      :time (y / year\n            :mod (l / last))\n      :subevent-of (f2 / finish-07\n            :ARG0 p\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 \"Georgia\"))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (g / good-03\n                        :ARG1 f2)\n                  :ARG3 (m / most))))",
      "# ::snt  McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year . \n(l / look-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McIlroy\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                  :value 3\n                  :range (s / straight)))\n      :time (a / after\n            :op1 (w2 / win-01\n                  :ARG0 p\n                  :ARG2 (a2 / and\n                        :op1 (e / event\n                              :name (n2 / name\n                                    :op1 \"The\"\n                                    :op2 \"Open\"))\n                        :op2 (e2 / event\n                              :name (n3 / name\n                                    :op1 \"USPGA\"\n                                    :op2 \"Championship\")))\n                  :time (y / year\n                        :mod (l2 / last)))))",
      "# ::snt  One Direction star Niall Horan caddied for McIlroy in Wednesday 's Par-3 Contest . \n(c / caddie-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Niall\"\n                  :op2 \"Horan\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"One\"\n                              :op2 \"Direction\"))\n                  :ARG2 (s / star)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"McIlroy\"))\n      :subevent-of (c2 / contest-02\n            :name (n4 / name\n                  :op1 \"Par-3\")\n            :time (d / date-entity\n                  :weekday (w / wednesday))))"
    ],
    "tree": [
      "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\")))",
      "(b / bid-01\n   :ARG1 (w / win-01\n            :ARG1 (t / title\n                     :mod (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))))",
      "(b / bid-01\n   :ARG1 (w / win-01\n            :time (w2 / week\n                      :mod (t2 / this))))",
      "(b / bid-01\n   :ARG1 (w / win-01\n            :location (f / facility\n                         :name (n3 / name\n                                   :op1 \"Augusta\"))))",
      "(b / bid-01\n   :ARG1 (w / win-01\n            :ARG1 (t / title\n                     :ord (o / ordinal-entity\n                             :value 1))))",
      "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG1 (t / title\n                     :mod (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))))",
      "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG1 (t / title\n                     :ord (o / ordinal-entity\n                             :value 1))))",
      "(w / win-01\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))))",
      "(w / win-01\n   :ARG1 (t / title\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(w / win-01\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(w / win-01\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\")))\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\"))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person)))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8))))",
      "(f / finish-07\n   :subevent (f2 / finish-07\n                 :ARG0 (p / person)))",
      "(f / finish-07\n   :subevent (f2 / finish-07\n                 :location (c2 / country\n                               :name (n2 / name\n                                         :op1 \"Georgia\"))))",
      "(f / finish-07\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG2 (g / good-03\n                                   :ARG1 f2))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 p))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :time (y / year\n            :mod (l / last)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG2 (g / good-03\n                                   :ARG1 f2))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :time (y / year\n            :mod (l / last)))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person))\n   :subevent (f2 / finish-07\n                 :ARG0 p))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person))\n   :subevent (f2 / finish-07\n                 :location (c2 / country\n                               :name (n2 / name\n                                         :op1 \"Georgia\"))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG2 (g / good-03\n                                   :ARG1 f2))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :subevent (f2 / finish-07\n                 :ARG0 (p / person)))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG2 (g / good-03\n                                   :ARG1 f2))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(f / finish-07\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :ARG0 (p / person)))",
      "(f / finish-07\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG2 (g / good-03\n                                   :ARG1 f2))))",
      "(f / finish-07\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 p)\n   :time (y / year\n            :mod (l / last)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 p)\n   :subevent (f2 / finish-07\n                 :ARG0 p))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 p)\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :subevent (f2 / finish-07\n                 :ARG0 p))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG2 (g / good-03\n                                   :ARG1 f2))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :location (c2 / country\n                               :name (n2 / name\n                                         :op1 \"Georgia\"))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person))\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :ARG0 p))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person))\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :location (c2 / country\n                               :name (n2 / name\n                                         :op1 \"Georgia\"))))",
      "(f / finish-07\n   :ARG2 (t / tie-01\n            :ARG1 (p / person))\n   :time (y / year\n            :mod (l / last))\n   :subevent (f2 / finish-07\n                 :ARG1 (h / have-degree-91\n                          :ARG3 (m / most))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\")))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :mod (m / major)))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(l / look-04\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 (p / person :name (n / name :op1 \"McIlroy\")))))",
      "(l / look-04\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :mod (m / major)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"McIlroy\")))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p)))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 (p / person :name (n / name :op1 \"McIlroy\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 (p / person :name (n / name :op1 \"McIlroy\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :mod (m / major))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p)))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\")))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ord (o / ordinal-entity\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))))",
      "(w / win-01\n   :ord (o / ordinal-entity\n           :range (s / straight)))",
      "(w / win-01\n   :mod (m / major)\n   :ord (o / ordinal-entity\n           :value 3))",
      "(w / win-01\n   :mod (m / major)\n   :ord (o / ordinal-entity\n           :range (s / straight)))",
      "(a / after\n   :op1 (w2 / win-01\n            :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))))",
      "(a / after\n   :op1 (w2 / win-01\n            :ARG2 (e / event\n                     :name (n2 / name\n                               :op1 \"The\"\n                               :op2 \"Open\"))))",
      "(a / after\n   :op1 (w2 / win-01\n            :time (y / year\n                     :mod (l2 / last))))",
      "(a / after\n   :op1 (w2 / win-01\n            :ARG2 (e2 / event\n                      :name (n3 / name\n                                :op1 \"USPGA\"\n                                :op2 \"Championship\"))))",
      "(w2 / win-01\n    :ARG2 (e / event\n             :name (n2 / name\n                       :op1 \"The\"\n                       :op2 \"Open\")))",
      "(w2 / win-01\n    :ARG2 (e2 / event\n              :name (n3 / name\n                        :op1 \"USPGA\"\n                        :op2 \"Championship\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\")))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / star))))",
      "(c / caddie-01\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\"))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\"))\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))))\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / star)))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / star)))\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))",
      "(p / person\n   :name (n / name\n            :op1 \"Niall\"\n            :op2 \"Horan\"))"
    ],
    "smus": [
      "Roy McIlroy is bidding.",
      "bid to win the Masters title",
      "bid to win this week",
      "bid to win at Augusta",
      "bid to win the title",
      "Ry McIlroy bids to win the Masters title.",
      "Ry McIlroy is bidding to win the title.",
      "win the first title",
      "Win this week.",
      "Win at Augusta.",
      "Win this week at Augusta.",
      "Finish with people tied.",
      "The finish was tied for 8th place.",
      "Finishing as a person.",
      "The Northern Irish are finishing tied for 8th place.",
      "The Northern Irish finished last year.",
      "Northern Irish finished in the top 10.",
      "The finish of last year was tied for eighth place.",
      "The finish is tied with the person.",
      "Finish tied with people, as with Georgia.",
      "The finish was tied for 8th place amongst the people.",
      "Finish tied for 8th place with Georgia.",
      "The best finish was tied for 8th place.",
      "The Northern Irish finished tied last year.",
      "The Northern Irish finished last year tied for 8th place.",
      "Northern Irish finish tied in the process.",
      "The Northern Irish finished tied in a good finish.",
      "Northern Irish finish tied for 8th place in finish.",
      "Northern Ireland finished tied for 8th place with Georgia.",
      "Northern Irish finish tied for 8th place in good finish.",
      "The Northern Irish finished last year in the finish.",
      "Northern Irish finished last year in Georgia.",
      "The Northern Irish finished last year in a good finish.",
      "The tie-win finish last year was tied for the tie.",
      "Last year, the finish was tied for 8th place among people.",
      "Last year's finish was tied for eighth place with Georgia's.",
      "In the most recent year, the finish was tied for 8th place.",
      "The Northern Irish finished last year tied in the process.",
      "The Northern Irish finished in the tie last year, in the good finish.",
      "Northern Irish finished last year tied for eighth place in the finish.",
      "Northern Ireland finished last year tied for eighth place with Georgia.",
      "Last year the Northern Irish finished tied for 8th place with a good finish.",
      "tied to eighth place.",
      "McIlroy is looking.",
      "Looking like a major victory.",
      "Looking like a third victory.",
      "Looking after McIlroy winning.",
      "Looking after winning the Open.",
      "Looking after winning last year.",
      "Looking after winning the USPGA Championship.",
      "McIlroy is looking to win.",
      "McIlroy is looking for a major victory.",
      "McIlroy is looking for a third victory.",
      "McIlroy is looking for his third straight victory.",
      "After winning, McIlroy is looking.",
      "McIlroy is looking after winning the Open.",
      "McIlroy is looking after a win last year.",
      "McIlroy is looking after winning the USPGA Championship.",
      "After winning, it's looking like McIlroy is winning.",
      "After McIlroy was winning, it was looking like a major victory.",
      "After winning the Open, looking for a major victory.",
      "Looking for major victories after last year's.",
      "Looking to major victories after winning the USPGA Championship.",
      "After McIlroy winning, it's looking like a third time.",
      "Looking to win the third after winning the Open.",
      "Looking to win the third after last year.",
      "Looking to win the third after winning the USPGA Championship.",
      "After winning the Open, looking to win the straight-up.",
      "Looking to win a straight after winning last year.",
      "After winning the USPGA Championship, it's looking like a straight win.",
      "After winning, McIlroy is looking to win.",
      "After winning the Open, McIlroy is looking to win.",
      "McIlroy is looking to win after winning last year.",
      "After winning the USPGA Championship, McIlroy is looking to win.",
      "After winning, McIlroy is looking for a major victory.",
      "After winning the Open, McIlroy is looking for a major victory.",
      "After winning last year, McIlroy is looking for a major victory.",
      "After winning the USPGA Championship, McIlroy is looking to major victories.",
      "After winning, McIlroy is looking for a third victory.",
      "After winning the Open, McIlroy is looking for a third victory.",
      "McIlroy is looking for a third victory after winning last year.",
      "After winning the USPGA Championship, McIlroy is looking to win the third time.",
      "After winning, McIlroy was looking for his third straight victory.",
      "After winning the Open, McIlroy is looking for his third straight victory.",
      "After winning last year, McIlroy is looking for a straight win.",
      "After winning the USPGA Championship, McIlroy is looking for his third straight victory.",
      "After McIlroy winning.",
      "After winning the Open.",
      "After winning last year.",
      "After winning the USPGA Championship.",
      "Winning The Open",
      "Winning the USPGA Championship",
      "Winning last year.",
      "The Open was winning last year.",
      "Winning the USPGA Championship last year.",
      "Niall Horan caddied.",
      "One Direction caddied.",
      "The star caddied.",
      "Caddied in the Par-3 Contest.",
      "Caddied in the Wednesday Contest.",
      "Niall Horan caddied for McIlroy.",
      "One Direction caddied for McIlroy.",
      "The star caddied for McIlroy.",
      "Niall Horan caddied in the Par-3 Contest.",
      "Niall Horan caddied in the Wednesday contest.",
      "One Direction caddied in the Par-3 Contest.",
      "One Direction caddied at the Wednesday contest.",
      "The star caddied in the Par-3 Contest.",
      "The star caddied in the Wednesday contest.",
      "Niall Horan caddied McIlroy in the Par-3 Contest.",
      "Niall Horan caddied for McIlroy in the Wednesday contest.",
      "One Direction caddied for McIlroy in the Par-3 Contest.",
      "One Direction caddied for McIlroy at the Wednesday contest.",
      "The star caddied McIlroy in the Par-3 Contest.",
      "The star caddied McIlroy in the Wednesday contest.",
      "Contest on Wednesday"
    ]
  },
  {
    "instance_id": "realsumm-45",
    "summary": "<t> Danny Higginbotham covers Higginbotham time under Roy Keane in Higginbotham new book . </t> <t> Higginbotham played for Keane 's Sunderland during the 2007 - 08 season . </t> <t> Keane told Higginbotham players ' basically you 're s * * * ' before a game with Aston Villa . </t> <t> Higginbotham also told one player Higginbotham was ' not f * * * * * * good enough ' to play for the club . </t>",
    "summary_trees": [
      "# ::snt  Danny Higginbotham covers Higginbotham time under Roy Keane in Higginbotham new book . \n(c / cover-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Higginbotham\"))\n      :ARG1 (t / time\n            :poss (p2 / person\n                  :name (n2 / name\n                        :op1 \"Higginbotham\"))\n            :prep-under (p3 / person\n                  :name (n3 / name\n                        :op1 \"Roy\"\n                        :op2 \"Keane\")))\n      :medium (b / book\n            :ARG1-of (n4 / new-01)))",
      "# ::snt  Higginbotham played for Keane 's Sunderland during the 2007 - 08 season . \n(p / play-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Higginbotham\"))\n      :ARG2 (t / team\n            :name (n2 / name\n                  :op1 \"Sunderland\")\n            :ARG1-of (h / have-org-role-91\n                  :ARG0 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Keane\"))))\n      :time (d / date-entity\n            :year 2007\n            :year2 2008\n            :season (s / season)))",
      "# ::snt  Keane told Higginbotham players ' basically you 're s * * * ' before a game with Aston Villa . \n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Keane\"))\n      :ARG1 (s / shit\n            :domain (p2 / person\n                  :ARG0-of (p3 / play-01)\n                  :part-of (t2 / team\n                        :name (n2 / name\n                              :op1 \"Higginbotham\")))\n            :mod (b / basic))\n      :ARG2 p2\n      :time (b2 / before\n            :op1 (g / game\n                  :mod (t3 / team\n                        :name (n3 / name\n                              :op1 \"Aston\"\n                              :op2 \"Villa\")))))",
      "# ::snt  Higginbotham also told one player Higginbotham was ' not f * * * * * * good enough ' to play for the club . \n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Higginbotham\"))\n      :ARG1 (h / have-degree-91\n            :polarity -\n            :ARG1 p\n            :ARG2 (g / good-03\n                  :ARG1 p)\n            :ARG3 (e / enough)\n            :ARG6 (p2 / play-01\n                  :ARG0 p\n                  :ARG3 (c / club)))\n      :ARG2 (p3 / person\n            :quant 1\n            :ARG0-of (p4 / play-01))\n      :mod (a / also))"
    ],
    "tree": [
      "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\")))",
      "(c / cover-03\n   :ARG1 (t / time\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Higginbotham\"))))",
      "(c / cover-03\n   :ARG1 (t / time\n            :prep-under (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))",
      "(c / cover-03\n   :medium (b / book\n              :ARG1 (n4 / new-01)))",
      "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :ARG1 (t / time\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Higginbotham\"))))",
      "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :ARG1 (t / time\n            :prep-under (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))",
      "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :medium (b / book\n              :ARG1 (n4 / new-01)))",
      "(c / cover-03\n   :ARG1 (t / time\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Higginbotham\")))\n   :medium (b / book\n              :ARG1 (n4 / new-01)))",
      "(c / cover-03\n   :ARG1 (t / time\n            :prep-under (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\")))\n   :medium (b / book\n              :ARG1 (n4 / new-01)))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\")))",
      "(p / play-01\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\")))))",
      "(p / play-01\n   :time (d / date-entity\n            :year 2007))",
      "(p / play-01\n   :time (d / date-entity\n            :year2 2008))",
      "(p / play-01\n   :time (d / date-entity\n            :season (s / season)))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\")))))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :time (d / date-entity\n            :year 2007))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :time (d / date-entity\n            :year2 2008))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :time (d / date-entity\n            :season (s / season)))",
      "(p / play-01\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Sunderland\"))\n   :time (d / date-entity\n            :season (s / season)))",
      "(p / play-01\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\"))))\n   :time (d / date-entity\n            :year 2007))",
      "(p / play-01\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\"))))\n   :time (d / date-entity\n            :year2 2008))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Sunderland\"))\n   :time (d / date-entity\n            :season (s / season)))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\"))))\n   :time (d / date-entity\n            :year 2007))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\"))))\n   :time (d / date-entity\n            :year2 2008))",
      "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Higginbotham\"))\n   :ARG2 (t / team\n            :ARG1 (h / have-org-role-91\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Keane\"))))\n   :time (d / date-entity\n            :season (s / season)))",
      "(t / tell-01\n   :ARG1 (s / shit\n            :domain (p2 / person\n                        :ARG0 (p3 / play-01))))",
      "(t / tell-01\n   :ARG1 (s / shit\n            :mod (b / basic)))",
      "(t / tell-01\n   :ARG1 (s / shit\n            :domain (p2 / person\n                        :part (t2 / team\n                                  :name (n2 / name\n                                            :op1 \"Higginbotham\")))))",
      "(t / tell-01\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t3 / team\n                              :name (n3 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keane\"))\n   :ARG1 (s / shit\n            :domain (p2 / person\n                        :ARG0 (p3 / play-01))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keane\"))\n   :ARG1 (s / shit\n            :mod (b / basic)))",
      "(t / tell-01\n   :ARG1 (s / shit\n            :domain (p2 / person\n                        :ARG0 (p3 / play-01)))\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t3 / team\n                              :name (n3 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(t / tell-01\n   :ARG1 (s / shit\n            :mod (b / basic))\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t3 / team\n                              :name (n3 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(t / tell-01\n   :ARG1 (s / shit\n            :domain (p2 / person\n                        :part (t2 / team\n                                  :name (n2 / name\n                                            :op1 \"Higginbotham\"))))\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t3 / team\n                              :name (n3 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keane\"))\n   :ARG1 (s / shit\n            :domain (p2 / person\n                        :ARG0 (p3 / play-01)))\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t3 / team\n                              :name (n3 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keane\"))\n   :ARG1 (s / shit\n            :mod (b / basic))\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t3 / team\n                              :name (n3 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Keane\"))",
      "(s / shit\n   :domain (p2 / person\n               :ARG0 (p3 / play-01)))",
      "(t / tell-01\n   :ARG1 (h / have-degree-91\n            :ARG1 (p / person :name (n / name :op1 \"Higginbotham\"))))",
      "(t / tell-01\n   :ARG2 (p3 / person\n             :quant 1))",
      "(t / tell-01\n   :ARG2 (p3 / person\n             :ARG0 (p4 / play-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :ARG1 (h / have-degree-91\n            :polarity -))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :ARG2 (p3 / person\n             :quant 1))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (h / have-degree-91\n            :ARG1 (p / person :name (n / name :op1 \"Higginbotham\")))\n   :ARG2 (p3 / person\n             :quant 1))",
      "(t / tell-01\n   :ARG1 (h / have-degree-91\n            :ARG1 (p / person :name (n / name :op1 \"Higginbotham\")))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG2 (p3 / person\n             :ARG0 (p4 / play-01))\n   :mod (a / also))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :ARG1 (h / have-degree-91\n            :polarity -)\n   :ARG2 (p3 / person\n             :quant 1))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :ARG1 (h / have-degree-91\n            :polarity -)\n   :ARG2 (p3 / person\n             :ARG0 (p4 / play-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :ARG1 (h / have-degree-91\n            :polarity -)\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (h / have-degree-91\n            :polarity -)\n   :ARG2 (p3 / person\n             :quant 1)\n   :mod (a / also))",
      "(t / tell-01\n   :ARG1 (h / have-degree-91\n            :ARG1 (p / person :name (n / name :op1 \"Higginbotham\")))\n   :ARG2 (p3 / person\n             :quant 1)\n   :mod (a / also))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Higginbotham\"))\n   :ARG1 (h / have-degree-91\n            :polarity -)\n   :ARG2 (p3 / person\n             :quant 1)\n   :mod (a / also))",
      "(p / person\n   :name (n / name\n            :op1 \"Higginbotham\"))",
      "(h / have-degree-91\n   :ARG2 (g / good-03\n            :ARG1 (p / person :name (n / name :op1 \"Higginbotham\"))))"
    ],
    "smus": [
      "Danny Higginbotham covers.",
      "Covers the new book.",
      "Danny Higginbotham covers Higginbotham's time.",
      "Danny Higginbotham covers time under Roy Keane.",
      "Danny Higginbotham covers in the new book.",
      "In the new book, Higginbotham's time is covered.",
      "The new book covers the time under Roy Keane.",
      "In the new book, Danny Higginbotham covers Higginbotham's time.",
      "In the new book, Danny Higginbotham covers the time under Roy Keane.",
      "Higginbotham played.",
      "played for the Keane team.",
      "Played in 2007.",
      "Played in 2008.",
      "Played in the season.",
      "Higginbotham played for the Keane team.",
      "Higginbotham played in 2007.",
      "Higginbotham played in 2008.",
      "Higginbotham played in the season.",
      "Played for Sunderland in the season.",
      "Kaane played for the 2007 team.",
      "Keane played for the 2008 team.",
      "Higginbotham played for Sunderland in the season.",
      "In 2007, Higginbotham played for Keane's team.",
      "In 2008, Higginbotham played for Keane's team.",
      "Higginbotham played for the Keane team in the season.",
      "The players were told to be shit.",
      "Tells basic shit.",
      "Higginbotham's were told to be shit.",
      "told before the Aston Villa game.",
      "Keane told the players were shit.",
      "Basically, Keane told shit.",
      "The players were told to be shit before the Aston Villa game.",
      "Basically told shit before the Aston Villa game.",
      "Before the Aston Villa game, Higginbotham were told they were shit.",
      "Before the Aston Villa game, Keane told the players were shit.",
      "Before the Aston Villa game, Keane told the basic shit:",
      "Players are basically shit.",
      "Higginbotham's guys are basically shit.",
      "Higginbotham was told...",
      "One person told.",
      "The player was told.",
      "Higginbotham told it was not.",
      "Higginbotham told one person.",
      "Higginbotham also told --",
      "Higginbotham was told by one person.",
      "Higginbotham was also told.",
      "The player was also told.",
      "Higginbotham told one person that it was not.",
      "Higginbotham told the players not to be.",
      "Higginbotham also told not to.",
      "Also told one person that it was not.",
      "Higginbotham was also told to one.",
      "Higginbotham also told one person that it was not.",
      "Higginbotham is playing.",
      "Playing for a club."
    ]
  },
  {
    "instance_id": "realsumm-46",
    "summary": "<t> Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 . </t> <t> Owner suspected Owner had historic value and experts have been investigating . </t> <t> Historian now claims DNA from the timber proves Historian belonged to Henry VII . </t> <t> Ornate bed , now on display , was made for King and wife Elizabeth of York . </t>",
    "summary_trees": [
      "# ::snt  Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 . \n(a / and\n      :op1 (d / dump-01\n            :ARG1 (b / bed\n                  :mod (p / poster\n                        :quant 4))\n            :location (p2 / park\n                  :mod (c / car)\n                  :mod (h / hotel)))\n      :op2 (s / sell-01\n            :ARG1 b\n            :ARG3 (m / monetary-quantity\n                  :quant 2100\n                  :unit (p3 / pound))\n            :time (a2 / auction-off-01)))",
      "# ::snt  Owner suspected Owner had historic value and experts have been investigating . \n(a / and\n      :op1 (s / suspect-01\n            :ARG0 (p / person\n                  :ARG0-of (o / own-01\n                        :ARG1 (p2 / person)))\n            :ARG1 (v / value-01\n                  :ARG1 p2\n                  :mod (h / history)))\n      :op2 (ii / investigate-01\n            :ARG0 (p3 / person\n                  :ARG1-of (e / expert-01))))",
      "# ::snt  Historian now claims DNA from the timber proves Historian belonged to Henry VII . \n(c / claim-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (h2 / historian)))\n      :ARG1 (p2 / prove-01\n            :ARG0 (n / nucleic-acid\n                  :name (n2 / name\n                        :op1 \"DNA\")\n                  :source (t / timber))\n            :ARG1 (b / belong-01\n                  :ARG0 p\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Henry\"\n                              :op2 \"VII\"))))\n      :time (n4 / now))",
      "# ::snt  Ornate bed , now on display , was made for King and wife Elizabeth of York . \n(m / make-01\n      :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1-of (d / display-01\n                  :time (n / now)))\n      :ARG3 (p / person\n            :name (n2 / name\n                  :op1 \"Elizabeth\"\n                  :op2 \"of\"\n                  :op3 \"York\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (k / king))\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG2 (w / wife))))"
    ],
    "tree": [
      "(a / and\n   :op1 (d / dump-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4))))",
      "(a / and\n   :op1 (d / dump-01\n           :location (p2 / park\n                         :mod (c / car))))",
      "(a / and\n   :op1 (d / dump-01\n           :location (p2 / park\n                         :mod (h / hotel))))",
      "(a / and\n   :op2 (s / sell-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4))))",
      "(a / and\n   :op2 (s / sell-01\n           :time (a2 / auction-off-01)))",
      "(a / and\n   :op1 (d / dump-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4)))\n   :op2 (s / sell-01\n           :ARG1 b))",
      "(a / and\n   :op1 (d / dump-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4)))\n   :op2 (s / sell-01\n           :time (a2 / auction-off-01)))",
      "(a / and\n   :op1 (d / dump-01\n           :location (p2 / park\n                         :mod (c / car)))\n   :op2 (s / sell-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4))))",
      "(a / and\n   :op1 (d / dump-01\n           :location (p2 / park\n                         :mod (c / car)))\n   :op2 (s / sell-01\n           :time (a2 / auction-off-01)))",
      "(a / and\n   :op1 (d / dump-01\n           :location (p2 / park\n                         :mod (h / hotel)))\n   :op2 (s / sell-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4))))",
      "(a / and\n   :op1 (d / dump-01\n           :location (p2 / park\n                         :mod (h / hotel)))\n   :op2 (s / sell-01\n           :time (a2 / auction-off-01)))",
      "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4)))",
      "(d / dump-01\n   :location (p2 / park\n                 :mod (c / car)))",
      "(d / dump-01\n   :location (p2 / park\n                 :mod (h / hotel)))",
      "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4))\n   :location (p2 / park\n                 :mod (c / car)))",
      "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4))\n   :location (p2 / park\n                 :mod (h / hotel)))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG0 (p / person\n                    :ARG0 (o / own-01\n                             :ARG1 (p2 / person)))))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG1 (v / value-01\n                    :ARG1 (p2 / person))))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG1 (v / value-01\n                    :mod (h / history))))",
      "(a / and\n   :op2 (ii / investigate-01\n            :ARG0 (p3 / person\n                      :ARG1 (e / expert-01))))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG0 (p / person\n                    :ARG0 (o / own-01\n                             :ARG1 (p2 / person))))\n   :op2 (ii / investigate-01\n            :ARG0 (p3 / person\n                      :ARG1 (e / expert-01))))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG1 (v / value-01\n                    :ARG1 (p2 / person)))\n   :op2 (ii / investigate-01\n            :ARG0 (p3 / person\n                      :ARG1 (e / expert-01))))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG1 (v / value-01\n                    :mod (h / history)))\n   :op2 (ii / investigate-01\n            :ARG0 (p3 / person\n                      :ARG1 (e / expert-01))))",
      "(s / suspect-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (p2 / person))))",
      "(s / suspect-01\n   :ARG1 (v / value-01\n            :ARG1 (p2 / person)))",
      "(s / suspect-01\n   :ARG1 (v / value-01\n            :mod (h / history)))",
      "(s / suspect-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (p2 / person)))\n   :ARG1 (v / value-01\n            :mod (h / history)))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian))))",
      "(c / claim-01\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\"))))",
      "(c / claim-01\n   :ARG1 (p2 / prove-01\n             :ARG1 (b / belong-01\n                      :ARG0 (p / person))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\"))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :time (n4 / now))",
      "(c / claim-01\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")))\n   :time (n4 / now))",
      "(c / claim-01\n   :ARG1 (p2 / prove-01\n             :ARG1 (b / belong-01\n                      :ARG0 (p / person)))\n   :time (n4 / now))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")))\n   :time (n4 / now))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG1 (b / belong-01\n                      :ARG0 p))\n   :time (n4 / now))",
      "(p2 / prove-01\n    :ARG0 (n / nucleic-acid\n             :source (t / timber)))",
      "(p2 / prove-01\n    :ARG1 (b / belong-01\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Henry\"\n                                 :op2 \"VII\"))))",
      "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate)))",
      "(m / make-01\n   :ARG1 (b / bed\n            :ARG1 (d / display-01\n                     :time (n / now))))",
      "(m / make-01\n   :ARG3 (p / person\n            :name (n2 / name\n                      :op1 \"Elizabeth\"\n                      :op2 \"of\"\n                      :op3 \"York\")))",
      "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate))\n   :ARG3 (p / person\n            :name (n2 / name\n                      :op1 \"Elizabeth\"\n                      :op2 \"of\"\n                      :op3 \"York\")))",
      "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate))\n   :ARG3 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (k / king))))",
      "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate))\n   :ARG3 (p / person\n            :ARG0 (h2 / have-rel-role-91\n                      :ARG2 (w / wife))))",
      "(m / make-01\n   :ARG1 (b / bed\n            :ARG1 (d / display-01\n                     :time (n / now)))\n   :ARG3 (p / person\n            :name (n2 / name\n                      :op1 \"Elizabeth\"\n                      :op2 \"of\"\n                      :op3 \"York\")))",
      "(m / make-01\n   :ARG1 (b / bed\n            :ARG1 (d / display-01\n                     :time (n / now)))\n   :ARG3 (p / person\n            :ARG0 (h2 / have-rel-role-91\n                      :ARG2 (w / wife))))"
    ],
    "smus": [
      "and dumped a four poster bed.",
      "and dumped in a car park.",
      "and dumped in hotel park.",
      "and sold a bed with four poster.",
      "and sold at the auction.",
      "Dumped 4 poster bed and sold.",
      "Dumped 4 poster bed and sold at auction.",
      "Dumped in car park and sold 4 poster bed.",
      "Dumped in car park and sold at auction.",
      "Dumped in hotel park and sold 4 poster bed.",
      "Dumped in hotel park and sold at auction.",
      "Dumped 4 poster bed.",
      "Dumped in car park.",
      "Dumped in hotel park",
      "4 poster bed dumped in car park",
      "4 poster bed dumped in hotel park",
      "And the owners suspected.",
      "And suspected of being of value.",
      "And suspected of historical value.",
      "and the experts are investigating.",
      "The owners suspected and experts were investigating.",
      "People were suspected of being of value and experts were investigating.",
      "The historical value was suspected and experts were investigating.",
      "The owners suspected.",
      "Suspected historical value.",
      "The owner suspected the value of the person.",
      "Experts are investigating.",
      "The historian claims.",
      "claims DNA proves.",
      "It claims that proof that the person belonged.",
      "The historian claims DNA proves it.",
      "Now the historian claims.",
      "Now claims DNA proves it.",
      "Now claims that proves that the person belonged.",
      "Now the historian claims DNA proves it.",
      "Now the historian claims that it proves he was there.",
      "proves that the person belonged.",
      "DNA proves that the person belonged.",
      "Made into an ornate bed.",
      "The bed is made for the display now.",
      "Made for Elizabeth of York.",
      "An ornate bed was made for Elizabeth of York.",
      "An ornate bed is made for the King.",
      "An ornate bed is made for the wife.",
      "The bed for now's display was made for Elizabeth of York.",
      "The bed for the now-decorated display was made for the wife."
    ]
  },
  {
    "instance_id": "realsumm-47",
    "summary": "<t> Attorney : Robert Bates assumed the gun was a Taser because Bates saw a laser sight on gun . </t> <t> Harris family lawyers say there are stark differences between the gun and Taser used . </t> <t> In 2009 , an officer in California also said officer mistakenly used officer gun instead of a Taser . </t>",
    "summary_trees": [
      "# ::snt  Attorney : Robert Bates assumed the gun was a Taser because Bates saw a laser sight on gun . \n(a / assume-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Robert\"\n                  :op2 \"Bates\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (a2 / attorney)))\n      :ARG1 (t / taser\n            :domain (g / gun))\n      :ARG1-of (c / cause-01\n            :ARG0 (s / see-01\n                  :ARG0 p\n                  :ARG1 (s2 / sight\n                        :mod (l / laser)\n                        :location g))))",
      "# ::snt  Harris family lawyers say there are stark differences between the gun and Taser used . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (f / family\n                        :name (n / name\n                              :op1 \"Harris\"))\n                  :ARG2 (l / lawyer)))\n      :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                  :ARG1-of (u / use-01))\n            :mod (s2 / stark)))",
      "# ::snt  In 2009 , an officer in California also said officer mistakenly used officer gun instead of a Taser . \n(s / say-01\n      :ARG0 (o / officer\n            :location (s2 / state\n                  :name (n / name\n                        :op1 \"California\")))\n      :ARG1 (u / use-01\n            :ARG0 (o2 / officer)\n            :ARG1 (g / gun\n                  :mod (o3 / officer)\n                  :ARG1-of (ii / instead-of-91\n                        :ARG2 (t / taser)))\n            :ARG1-of (m / mistake-01\n                  :ARG0 o2))\n      :mod (a / also)\n      :time (d / date-entity\n            :year 2009))"
    ],
    "tree": [
      "(a / assume-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Robert\"\n                     :op2 \"Bates\")))",
      "(a / assume-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a2 / attorney))))",
      "(a / assume-02\n   :ARG1 (t / taser\n            :domain (g / gun)))",
      "(a / assume-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Robert\"\n                     :op2 \"Bates\"))\n   :ARG1 (t / taser\n            :domain (g / gun)))",
      "(a / assume-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a2 / attorney)))\n   :ARG1 (t / taser\n            :domain (g / gun)))",
      "(p / person\n   :name (n / name\n            :op1 \"Robert\"\n            :op2 \"Bates\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (a2 / attorney)))",
      "(p / person\n   :name (n / name\n            :op1 \"Robert\"\n            :op2 \"Bates\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (a2 / attorney)))",
      "(c / cause-01\n   :ARG0 (s / see-01\n            :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (l / lawyer))))",
      "(s / say-01\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)))",
      "(s / say-01\n   :ARG1 (d / differ-02\n            :ARG2 (t / taser\n                     :ARG1 (u / use-01))))",
      "(s / say-01\n   :ARG1 (d / differ-02\n            :mod (s2 / stark)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\"))))\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\"))))\n   :ARG1 (d / differ-02\n            :ARG2 (t / taser\n                     :ARG1 (u / use-01))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\"))))\n   :ARG1 (d / differ-02\n            :mod (s2 / stark)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :ARG2 (t / taser\n                     :ARG1 (u / use-01))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :mod (s2 / stark)))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG1 (f / family\n                     :name (n / name\n                              :op1 \"Harris\"))))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG2 (l / lawyer)))",
      "(h / have-rel-role-91\n   :ARG1 (f / family\n            :name (n / name\n                     :op1 \"Harris\")))",
      "(h / have-rel-role-91\n   :ARG1 (f / family\n            :name (n / name\n                     :op1 \"Harris\"))\n   :ARG2 (l / lawyer))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer)))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer))))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (m / mistake-01\n                     :ARG0 (o2 / officer))))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser)))))",
      "(s / say-01\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer)))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer))))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser)))))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :mod (a / also))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer))\n   :mod (a / also))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer)))\n   :mod (a / also))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (m / mistake-01\n                     :ARG0 (o2 / officer)))\n   :mod (a / also))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser))))\n   :mod (a / also))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer)))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser))))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer))\n   :mod (a / also))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer)))\n   :mod (a / also))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (m / mistake-01\n                     :ARG0 (o2 / officer)))\n   :mod (a / also))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser))))\n   :mod (a / also))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer)))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser))))\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer)))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (m / mistake-01\n                     :ARG0 (o2 / officer)))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser))))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :mod (o3 / officer)))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG1 (g / gun\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser))))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))",
      "(o / officer\n   :location (s2 / state\n                 :name (n / name\n                          :op1 \"California\")))",
      "(u / use-01\n   :ARG1 (g / gun\n            :mod (o3 / officer)))",
      "(u / use-01\n   :ARG1 (g / gun\n            :ARG1 (ii / instead-of-91\n                      :ARG2 (t / taser))))"
    ],
    "smus": [
      "Robert Bates assumed --",
      "The Attorney assumed.",
      "assumed the gun was a Taser.",
      "Robert Bates assumed the gun was a taser.",
      "The Attorney assumed the gun was a taser.",
      "Because Robert Bates saw.",
      "Because the laser sight was seen.",
      "Because the sighting on the gun was seen.",
      "The laser sight was seen.",
      "The Harris family say --",
      "Lawyers say --",
      "There are differences in gun.",
      "There are differences in the Taser used.",
      "There are stark differences, they say.",
      "The Harris family say there are differences in gun.",
      "The Harris family say there are differences in the taser used.",
      "The Harris family say there are stark differences.",
      "Lawyers say there are differences in gun.",
      "Lawyers say there are differences in the taser used.",
      "Lawyers say there are stark differences.",
      "There are differences between a gun and the Taser used.",
      "There are stark differences in gun.",
      "There are stark differences between the taser used.",
      "There are stark differences between a gun and the Taser used.",
      "The officer said he used.",
      "\"The officer gun used,\" said the man.",
      "\"The officer used the mistake,\" said the officer.",
      "\"I used a gun rather than a Taser,\" said the man.",
      "said in 2009",
      "The California officer said the officer used.",
      "An officer in California said the officer's gun was used.",
      "The California officer said the gun was used instead of a taser.",
      "The California officer also said --",
      "In 2009, a California officer said --",
      "The officer also said he used.",
      "Also said the officer gun used.",
      "The officer also said he used the mistake.",
      "Also said that the gun was used instead of a Taser.",
      "The officer said in 2009 that he used.",
      "In 2009, the officer gun was said to have been used.",
      "In 2009, it was said that the gun was used instead of a Taser.",
      "The California officer also said the officer used.",
      "The officer in California also said the officer's gun was used.",
      "The California officer also said the officer used the word \"mistake.\"",
      "The California officer also said the gun was used instead of a taser.",
      "In 2009, an officer in California said the officer used.",
      "An officer in California said in 2009 that the officer's gun was used.",
      "In 2009, an officer in California said he used a gun instead of a Taser.",
      "Also in 2009, a California officer said --",
      "In 2009, the officer also said he used the officer.",
      "Also in 2009, the officer gun was said to have been used.",
      "In 2009, the officer also said he used the mistake.",
      "Also in 2009, it was said that the gun was used instead of a Taser.",
      "In 2009, an officer in California also said the officer used.",
      "In 2009, an officer in California also said the officer's gun was used.",
      "In 2009, an officer in California also said he used a gun instead of a Taser.",
      "The officer gun used.",
      "The officer used an officer gun.",
      "The officer used a i gun instead of a taser."
    ]
  },
  {
    "instance_id": "realsumm-48",
    "summary": "<t> Singer arrived at artists ' entrance to gain entry to Drake 's gig . </t> <t> Security told Drake area was at full capacity and denied admission . </t> <t> A row erupted and a Coachella staffer tried to get Bieber into the gig . </t> <t> But festival security then intervened and put singer in chokehold and removed staffer from the area . </t>",
    "summary_trees": [
      "# ::snt  Singer arrived at artists ' entrance to gain entry to Drake 's gig . \n(a / arrive-01\n      :ARG1 (p / person\n            :ARG0-of (s / sing-01))\n      :ARG4 (e / entrance\n            :poss (a2 / artist))\n      :purpose (g / gain-02\n            :ARG0 p\n            :ARG1 (e2 / enter-01\n                  :ARG0 p\n                  :ARG1 (g2 / gig\n                        :poss (p2 / person\n                              :name (n / name\n                                    :op1 \"Drake\"))))))",
      "# ::snt  Security told Drake area was at full capacity and denied admission . \n(a / and\n      :op1 (t / tell-01\n            :ARG0 (s / security)\n            :ARG1 (c / capacity\n                  :ARG1-of (f / full-09)\n                  :domain (a2 / area\n                        :poss (p / person\n                              :name (n / name\n                                    :op1 \"Drake\")))))\n      :op2 (d / deny-01\n            :ARG0 s\n            :ARG1 (a3 / admit-02\n                  :ARG1 p)))",
      "# ::snt  A row erupted and a Coachella staffer tried to get Bieber into the gig . \n(a / and\n      :op1 (e / erupt-01\n            :ARG1 (r / row))\n      :op2 (t / try-01\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (o / organization\n                              :name (n / name\n                                    :op1 \"Coachella\"))\n                        :ARG2 (s / staffer)))\n            :ARG1 (g / get-05\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Bieber\"))\n                  :ARG2 (g2 / gig))))",
      "# ::snt  But festival security then intervened and put singer in chokehold and removed staffer from the area . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (ii / intervene-01\n                  :ARG0 (s / security\n                        :mod (f / festival))\n                  :time (t / then))\n            :op2 (p / put-01\n                  :ARG0 s\n                  :ARG1 (p2 / person\n                        :ARG0-of (s2 / sing-01))\n                  :ARG2 (c2 / chokehold))\n            :op3 (r / remove-01\n                  :ARG0 s\n                  :ARG1 (p3 / person\n                        :ARG2-of (s3 / staff-01))\n                  :ARG2 (a2 / area))))"
    ],
    "tree": [
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01)))",
      "(a / arrive-01\n   :purpose (g / gain-02\n               :ARG0 (p / person)))",
      "(a / arrive-01\n   :purpose (g / gain-02\n               :ARG1 (e2 / enter-01\n                         :ARG0 (p / person))))",
      "(a / arrive-01\n   :purpose (g / gain-02\n               :ARG1 (e2 / enter-01\n                         :ARG1 (g2 / gig\n                                   :poss (p2 / person\n                                             :name (n / name\n                                                      :op1 \"Drake\"))))))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist)))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :purpose (g / gain-02\n               :ARG0 p))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :purpose (g / gain-02\n               :ARG1 (e2 / enter-01\n                         :ARG0 p)))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :purpose (g / gain-02\n               :ARG1 (e2 / enter-01\n                         :ARG1 (g2 / gig\n                                   :poss (p2 / person\n                                             :name (n / name\n                                                      :op1 \"Drake\"))))))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist))\n   :purpose (g / gain-02\n               :ARG0 p))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist))\n   :purpose (g / gain-02\n               :ARG1 (e2 / enter-01\n                         :ARG0 p)))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist))\n   :purpose (g / gain-02\n               :ARG1 (e2 / enter-01\n                         :ARG1 (g2 / gig\n                                   :poss (p2 / person\n                                             :name (n / name\n                                                      :op1 \"Drake\"))))))",
      "(g / gain-02\n   :ARG1 (e2 / enter-01\n             :ARG0 (p / person)))",
      "(g / gain-02\n   :ARG1 (e2 / enter-01\n             :ARG1 (g2 / gig\n                       :poss (p2 / person\n                                 :name (n / name\n                                          :op1 \"Drake\")))))",
      "(e2 / enter-01\n    :ARG1 (g2 / gig\n              :poss (p2 / person\n                        :name (n / name\n                                 :op1 \"Drake\"))))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG0 (s / security)))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG1 (c / capacity\n                    :ARG1 (f / full-09))))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG1 (c / capacity\n                    :domain (a2 / area\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Drake\"))))))",
      "(a / and\n   :op2 (d / deny-01\n           :ARG0 (s / security)))",
      "(a / and\n   :op2 (d / deny-01\n           :ARG1 (a3 / admit-02\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Drake\")))))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG0 (s / security))\n   :op2 (d / deny-01\n           :ARG0 s))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG0 (s / security))\n   :op2 (d / deny-01\n           :ARG1 (a3 / admit-02\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Drake\")))))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG1 (c / capacity\n                    :ARG1 (f / full-09)))\n   :op2 (d / deny-01\n           :ARG0 (s / security)))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG1 (c / capacity\n                    :ARG1 (f / full-09)))\n   :op2 (d / deny-01\n           :ARG1 (a3 / admit-02\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Drake\")))))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG1 (c / capacity\n                    :domain (a2 / area\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Drake\")))))\n   :op2 (d / deny-01\n           :ARG0 (s / security)))",
      "(a / and\n   :op1 (t / tell-01\n           :ARG1 (c / capacity\n                    :domain (a2 / area\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Drake\")))))\n   :op2 (d / deny-01\n           :ARG1 (a3 / admit-02\n                     :ARG1 p)))",
      "(t / tell-01\n   :ARG1 (c / capacity\n            :ARG1 (f / full-09)))",
      "(t / tell-01\n   :ARG1 (c / capacity\n            :domain (a2 / area\n                        :poss (p / person\n                                 :name (n / name\n                                          :op1 \"Drake\")))))",
      "(t / tell-01\n   :ARG0 (s / security)\n   :ARG1 (c / capacity\n            :ARG1 (f / full-09)))",
      "(c / capacity\n   :domain (a2 / area\n               :poss (p / person\n                        :name (n / name\n                                 :op1 \"Drake\"))))",
      "(a / and\n   :op1 (e / erupt-01\n           :ARG1 (r / row)))",
      "(a / and\n   :op2 (t / try-01\n           :ARG0 (p / person\n                    :ARG0 (h / have-org-role-91\n                             :ARG1 (o / organization\n                                      :name (n / name\n                                               :op1 \"Coachella\"))))))",
      "(a / and\n   :op2 (t / try-01\n           :ARG1 (g / get-05\n                    :ARG0 (p / person))))",
      "(a / and\n   :op2 (t / try-01\n           :ARG1 (g / get-05\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Bieber\")))))",
      "(a / and\n   :op2 (t / try-01\n           :ARG1 (g / get-05\n                    :ARG2 (g2 / gig))))",
      "(a / and\n   :op2 (t / try-01\n           :ARG0 (p / person\n                    :ARG0 (h / have-org-role-91\n                             :ARG2 (s / staffer)))))",
      "(a / and\n   :op1 (e / erupt-01\n           :ARG1 (r / row))\n   :op2 (t / try-01\n           :ARG0 (p / person\n                    :ARG0 (h / have-org-role-91\n                             :ARG1 (o / organization\n                                      :name (n / name\n                                               :op1 \"Coachella\"))))))",
      "(a / and\n   :op1 (e / erupt-01\n           :ARG1 (r / row))\n   :op2 (t / try-01\n           :ARG1 (g / get-05\n                    :ARG0 (p / person))))",
      "(a / and\n   :op1 (e / erupt-01\n           :ARG1 (r / row))\n   :op2 (t / try-01\n           :ARG1 (g / get-05\n                    :ARG2 (g2 / gig))))",
      "(a / and\n   :op1 (e / erupt-01\n           :ARG1 (r / row))\n   :op2 (t / try-01\n           :ARG0 (p / person\n                    :ARG0 (h / have-org-role-91\n                             :ARG2 (s / staffer)))))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"Coachella\")))))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / staffer))))",
      "(t / try-01\n   :ARG1 (g / get-05\n            :ARG0 (p / person)))",
      "(t / try-01\n   :ARG1 (g / get-05\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))))",
      "(t / try-01\n   :ARG1 (g / get-05\n            :ARG2 (g2 / gig)))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"Coachella\"))))\n   :ARG1 (g / get-05\n            :ARG0 p))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"Coachella\"))))\n   :ARG1 (g / get-05\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"Coachella\"))))\n   :ARG1 (g / get-05\n            :ARG2 (g2 / gig)))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG0 p))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG2 (g2 / gig)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (o / organization\n                     :name (n / name\n                              :op1 \"Coachella\"))))",
      "(c / contrast-01\n   :ARG2 (ii / intervene-01\n             :ARG0 (s / security\n                      :mod (f / festival))))",
      "(c / contrast-01\n   :ARG2 (p / put-01\n            :ARG0 (s / security\n                     :mod (f / festival))))",
      "(c / contrast-01\n   :ARG2 (ii / intervene-01\n             :time (t / then)))",
      "(c / contrast-01\n   :ARG2 (p / put-01\n            :ARG1 (p2 / person\n                      :ARG0 (s2 / sing-01))))",
      "(c / contrast-01\n   :ARG2 (p / put-01\n            :ARG2 (c2 / chokehold)))",
      "(c / contrast-01\n   :ARG2 (r / remove-01\n            :ARG1 (p3 / person\n                      :ARG2 (s3 / staff-01))))",
      "(c / contrast-01\n   :ARG2 (r / remove-01\n            :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then)))",
      "(a / and\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01))))",
      "(a / and\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold)))",
      "(a / and\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG0 s))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG0 (s / security\n                    :mod (f / festival))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG0 s))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op3 (r / remove-01\n           :ARG0 (s / security\n                    :mod (f / festival))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op2 (p / put-01\n           :ARG0 (s / security\n                    :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG0 s))",
      "(a / and\n   :op2 (p / put-01\n           :ARG0 (s / security\n                    :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG0 (s / security\n                    :mod (f / festival))))",
      "(a / and\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG0 (s / security\n                    :mod (f / festival))))",
      "(a / and\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG0 s)\n   :op3 (r / remove-01\n           :ARG0 s))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG0 s)\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG0 s)\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG0 s))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG0 s))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival)))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG0 (s / security\n                    :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG0 s))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG0 (s / security\n                    :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG0 (s / security\n                    :mod (f / festival)))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG0 (s / security\n                    :mod (f / festival))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG1 (p2 / person\n                     :ARG0 (s2 / sing-01)))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG0 (s / security\n                    :mod (f / festival))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG1 (p3 / person\n                     :ARG2 (s3 / staff-01))))",
      "(a / and\n   :op1 (ii / intervene-01\n            :time (t / then))\n   :op2 (p / put-01\n           :ARG2 (c2 / chokehold))\n   :op3 (r / remove-01\n           :ARG2 (a2 / area)))",
      "(ii / intervene-01\n    :ARG0 (s / security\n             :mod (f / festival)))",
      "(ii / intervene-01\n    :ARG0 (s / security\n             :mod (f / festival))\n    :time (t / then))",
      "(p / put-01\n   :ARG1 (p2 / person\n             :ARG0 (s2 / sing-01)))",
      "(p / put-01\n   :ARG1 (p2 / person\n             :ARG0 (s2 / sing-01))\n   :ARG2 (c2 / chokehold))",
      "(r / remove-01\n   :ARG1 (p3 / person\n             :ARG2 (s3 / staff-01)))"
    ],
    "smus": [
      "The Singer arrived.",
      "Arrived to gain.",
      "Arrived to gain entry.",
      "Arrived to gain entry to Drake's gig.",
      "The Singer arrived at the artists entrance.",
      "The Singer arrived to gain.",
      "The Singer arrived to gain entry.",
      "Singers arrived to gain entry to Drake's gig.",
      "The Singer arrived at the artists entrance to gain.",
      "The Singer arrived at the Artists entrance to gain entry.",
      "Singers arrived at the artists entrance to gain entry to Drake's gig.",
      "Gain entry.",
      "Gain entry to Drake's gig.",
      "Enter Drake's gig.",
      "And Security told.",
      "And full capacity was told.",
      "And the capacity of Drake's area was told.",
      "and Security denied.",
      "And Drake's admission was denied.",
      "Security told and denied.",
      "Security told and denied Drake's admission.",
      "Full capacity was told and Security denied.",
      "told full capacity and denied Drake admission.",
      "The Drake area was told to be capacity and Security denied.",
      "The Drake area was told to be capacity and he denied admission.",
      "Full capacity was told.",
      "The Drake area was told to be capacity.",
      "Security told the capacity to be full.",
      "Drake's admission was denied.",
      "And a row erupted.",
      "And Coachella tried.",
      "And people tried to get.",
      "And tried to get Bieber.",
      "and tried to get a gig.",
      "And the staffer tried.",
      "The row erupted and Coachella tried.",
      "A row erupted and people tried to get in.",
      "A row erupted and people tried to get a gig.",
      "The row erupted and a staffer tried.",
      "Coachella tried.",
      "A staffer tried.",
      "tried to get people.",
      "tried to get Bieber.",
      "tried to get a gig.",
      "Coachella tried to get.",
      "Coachella tried to get Bieber.",
      "Coachella tried to get a gig.",
      "The staffer tried to get.",
      "A staffer tried to get Bieber.",
      "The staffer tried to get a gig.",
      "Get Bieber.",
      "But festival security intervened.",
      "But festival security will put...",
      "But then intervened.",
      "But put the singer.",
      "But put a chokehold.",
      "But staff were removed.",
      "But the area was removed.",
      "and festival security intervened.",
      "And then intervened.",
      "And put the singer.",
      "and put in a chokehold.",
      "and the area was removed.",
      "Festival security intervened and put.",
      "Festival security intervened and put the singer on.",
      "Festival security intervened and put a chokehold in.",
      "Then, the festival security intervened and put in.",
      "Then intervened and put the singer.",
      "Then intervened and put in a chokehold.",
      "Festival security intervened and removed.",
      "Festival security intervened and staff were removed.",
      "Festival security intervened and the area was removed.",
      "Then, the festival security intervened and removed.",
      "Then intervened and staff were removed.",
      "Then intervened and the area was removed.",
      "And festival security will put in and remove.",
      "and put festival security in place and remove staff.",
      "and put festival security in and remove the area.",
      "Put the singer in and the staff will be removed.",
      "and put a chokehold and festival security will be removed.",
      "and put in a chokehold and remove staff.",
      "Put a chokehold and remove the area.",
      "Festival security intervened, put in and removed.",
      "Festival security intervened, put in and removed staff.",
      "Festival security intervened, put in and removed the area.",
      "Festival security intervened, put the singer in and removed.",
      "Festival security intervened, put the singer on hold, and removed staff.",
      "Festival security intervened, put the singer on hold and the area was removed.",
      "Festival security intervened, put a chokehold in place and removed.",
      "Festival security intervened, put a chokehold in place and removed staff.",
      "Festival security intervened, put a chokehold in and removed the area.",
      "Then, the festival security intervened, put in place, and removed.",
      "Then intervened, put festival security in and removed staff.",
      "Then intervened, put festival security in and removed the area.",
      "Then intervened, put the singer in and festival security removed.",
      "Then intervened, put the singer in and removed the staff.",
      "Then intervened, put the singer in and removed the area.",
      "Then intervened, put in a chokehold and festival security removed.",
      "Then intervened, put in a chokehold and removed staff.",
      "Then intervened, put a chokehold in place and removed the area.",
      "Festival security intervened.",
      "The festival security then intervened.",
      "Put the singer.",
      "Put the singer in a chokehold.",
      "Staff were removed.",
      "Staff were removed from the area."
    ]
  },
  {
    "instance_id": "realsumm-49",
    "summary": "<t> Sir Philip Carter died at Carter home on Thursday morning after a short illness . </t> <t> Carter served Everton during three spells after first joining the club in 1977 . </t> <t> Toffees chairman Bill Kenwright pays tribute to a ' great man and leader ' </t>",
    "summary_trees": [
      "# ::snt  Sir Philip Carter died at Carter home on Thursday morning after a short illness . \n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Philip\"\n                  :op3 \"Carter\"))\n      :location (h / home\n            :poss p)\n      :time (d2 / date-entity\n            :weekday (t / thursday)\n            :dayperiod (m / morning))\n      :time (a / after\n            :op1 (ii / ill-01\n                  :ARG1 p\n                  :ARG1-of (s / short-07))))",
      "# ::snt  Carter served Everton during three spells after first joining the club in 1977 . \n(s / serve-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Carter\"))\n      :ARG2 (t / team\n            :name (n2 / name\n                  :op1 \"Everton\"))\n      :duration (s2 / spell\n            :quant 3)\n      :time (a / after\n            :op1 (j / join-04\n                  :ARG0 p\n                  :ARG1 t\n                  :time (d / date-entity\n                        :year 1977)\n                  :ord (o / ordinal-entity\n                        :value 1))))",
      "# ::snt  Toffees chairman Bill Kenwright pays tribute to a ' great man and leader ' \n(p / pay\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Bill\"\n                  :op2 \"Kenwright\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"Toffees\"))\n                  :ARG2 (c / chairman)))\n      :ARG1 (a / and\n            :op1 (m / man\n                  :mod (g / great))\n            :op2 (p3 / person\n                  :ARG0-of (l / lead-02))))"
    ],
    "tree": [
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\")))",
      "(d / die-01\n   :location (h / home\n                :poss (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))))",
      "(d / die-01\n   :time (d2 / date-entity\n             :weekday (t / thursday)))",
      "(d / die-01\n   :time (d2 / date-entity\n             :dayperiod (m / morning)))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :location (h / home\n                :poss p))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :time (d2 / date-entity\n             :weekday (t / thursday)))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :time (d2 / date-entity\n             :dayperiod (m / morning)))",
      "(d / die-01\n   :location (h / home\n                :poss (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\")))\n   :time (d2 / date-entity\n             :weekday (t / thursday)))",
      "(d / die-01\n   :location (h / home\n                :poss (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\")))\n   :time (d2 / date-entity\n             :dayperiod (m / morning)))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :location (h / home\n                :poss p)\n   :time (d2 / date-entity\n             :weekday (t / thursday)))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\")))",
      "(s / serve-01\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\")))",
      "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3))",
      "(s / serve-01\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 (p / person :name (n / name :op1 \"Carter\")))))",
      "(s / serve-01\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG1 (t / team :name (n2 / name :op1 \"Everton\")))))",
      "(s / serve-01\n   :time (a / after\n            :op1 (j / join-04\n                    :time (d / date-entity\n                             :year 1977))))",
      "(s / serve-01\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\")))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :duration (s2 / spell\n                 :quant 3))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 p)))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG1 (t / team :name (n2 / name :op1 \"Everton\")))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :time (d / date-entity\n                             :year 1977))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 (p / person :name (n / name :op1 \"Carter\")))))",
      "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG1 (t / team :name (n2 / name :op1 \"Everton\")))))",
      "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :time (d / date-entity\n                             :year 1977))))",
      "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG1 t)))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 p)))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG1 (t / team :name (n2 / name :op1 \"Everton\")))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :time (d / date-entity\n                             :year 1977))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(s / serve-01\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 (p / person :name (n / name :op1 \"Carter\")))))",
      "(s / serve-01\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 p)))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG1 t)))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :time (d / date-entity\n                             :year 1977))))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(p / person\n   :name (n / name\n            :op1 \"Carter\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Everton\"))",
      "(a / after\n   :op1 (j / join-04\n           :ARG0 (p / person :name (n / name :op1 \"Carter\"))))",
      "(a / after\n   :op1 (j / join-04\n           :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))))",
      "(a / after\n   :op1 (j / join-04\n           :time (d / date-entity\n                    :year 1977)))",
      "(p / pay\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"\n                      :op2 \"Kenwright\")))",
      "(p / pay\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (o / organization\n                               :name (n2 / name\n                                         :op1 \"Toffees\")))))",
      "(p / pay\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (c / chairman))))",
      "(p / pay\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"\n                      :op2 \"Kenwright\"))\n   :ARG1 (m / man\n            :mod (g / great)))",
      "(p / pay\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"\n                      :op2 \"Kenwright\"))\n   :ARG1 (p3 / person\n             :ARG0 (l / lead-02)))",
      "(p / pay\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (o / organization\n                               :name (n2 / name\n                                         :op1 \"Toffees\"))))\n   :ARG1 (m / man\n            :mod (g / great)))",
      "(p / pay\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (o / organization\n                               :name (n2 / name\n                                         :op1 \"Toffees\"))))\n   :ARG1 (p3 / person\n             :ARG0 (l / lead-02)))",
      "(p / pay\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (c / chairman)))\n   :ARG1 (m / man\n            :mod (g / great)))",
      "(p / pay\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (c / chairman)))\n   :ARG1 (p3 / person\n             :ARG0 (l / lead-02)))"
    ],
    "smus": [
      "Sir Philip Carter died.",
      "Sir Philip Carter died at his home.",
      "Died Thursday.",
      "died in the morning.",
      "Sir Philip Carter died Thursday.",
      "Sir Philip Carter died this morning.",
      "Sir Philip Carter died Thursday at his home.",
      "Sir Philip Carter died at his home in the morning.",
      "Sir Philip Carter died at his home Thursday.",
      "Sir Philip Carter died at his home the morning of.",
      "Carter served.",
      "served on Everton.",
      "served for three spells.",
      "After Carter was joining, served.",
      "After joining Everton, it served.",
      "After joining in 1977, it served.",
      "After joining first, served.",
      "Carter served for Everton.",
      "Carter served for three spells.",
      "After joining, Carter served.",
      "Carter served after joining Everton.",
      "Carter served after joining in 1977.",
      "Carter served after joining first.",
      "After joining Carter, the spells were 3 spells.",
      "After joining Everton, the spells were three spells in.",
      "After joining in 1977, the service lasted three spells.",
      "After joining first, served three spells.",
      "Carter served for three spells with Everton.",
      "Carter served at Everton after joining in 1977.",
      "After joining, Carter served for 3 spells.",
      "Carter served for three spells after joining Everton.",
      "After joining in 1977, Carter served for three spells.",
      "After joining first, Carter served for three spells.",
      "After joining Carter, Everton served for three spells.",
      "After joining Everton, the club served for three spells.",
      "After joining Everton, Carter served for three spells.",
      "After joining in 1977, Carter served three spells at Everton.",
      "Carter served three spells at Everton after joining first.",
      "After Carter was joining.",
      "After joining Everton.",
      "After joining in 1977.",
      "After joining first.",
      "Joining in 1977.",
      "Joining first.",
      "Joining in 1977 for the first time.",
      "Bill Kenwright pays.",
      "The Toffees pay.",
      "The chairman pays.",
      "Bill Kenwright pays a great man.",
      "Bill Kenwright pays the leader.",
      "The Toffees pay a great man.",
      "The Toffees pay the leader.",
      "The chairman pays a great man.",
      "The chairman pays the leader."
    ]
  },
  {
    "instance_id": "realsumm-50",
    "summary": "<t> Border collies Ace and Holly were caught on camera performing a gravity - defying feat together . </t> <t> The two pooches stood up on pooches hind legs while balancing on pooches owner and trainer Dai Aoki . </t> <t> pooches have appeared in a number of videos showing off pooches tricks . </t>",
    "summary_trees": [
      "# ::snt  Border collies Ace and Holly were caught on camera performing a gravity - defying feat together . \n(c / catch-03\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Ace\")\n                  :mod (b / border-line))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Holly\")\n                  :mod b))\n      :ARG2 (p3 / perform-01\n            :ARG0 a\n            :ARG1 (f / feat\n                  :mod (d / defy-01\n                        :ARG0 a\n                        :ARG1 (g / gravity)))\n            :manner (t / together))\n      :medium (c2 / camera))",
      "# ::snt  The two pooches stood up on pooches hind legs while balancing on pooches owner and trainer Dai Aoki . \n(m / multi-sentence\n      :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                  :quant 2\n                  :part (l / leg\n                        :mod (h / hind)\n                        :prep-on-of s)))\n      :snt2 (b / balance-01\n            :ARG1 (p2 / poocch\n                  :part l)\n            :prep-on (p3 / person\n                  :name (n / name\n                        :op1 \"Dai\"\n                        :op2 \"Aoki\")\n                  :ARG0-of (o / own-01\n                        :ARG1 (p4 / poocch))\n                  :ARG0-of (t / train-01\n                        :ARG2 p4))))",
      "# ::snt  pooches have appeared in a number of videos showing off pooches tricks . \n(a / appear-01\n      :ARG1 (p / pooch)\n      :location (v / video\n            :quant (n / number)\n            :ARG0-of (s / show-off-04\n                  :ARG1 (t / trick-01\n                        :ARG0 p))))"
    ],
    "tree": [
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line)))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and)))))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :manner (t / together)))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG1 (g / gravity)))))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and)))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and)))))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :manner (t / together)))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG1 (g / gravity)))))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and)))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and)))))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :manner (t / together)))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and)))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and)))))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :manner (t / together)))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and)))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and)))))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :manner (t / together)))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :manner (t / together))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG1 (g / gravity))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :manner (t / together))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG1 (g / gravity))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :manner (t / together))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\"))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG1 (g / gravity))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p / person\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG1 (g / gravity))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG0 (a / and))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 (a / and))))\n   :medium (c2 / camera))",
      "(c / catch-03\n   :ARG1 (p2 / person\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :manner (t / together))\n   :medium (c2 / camera))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :quant 2)))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :prep-on (l / leg\n                        :mod (h / hind))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :part (l / leg\n                              :mod (h / hind)))))",
      "(m / multi-sentence\n   :snt2 (b / balance-01\n            :ARG1 (p2 / poocch\n                      :part (l / leg\n                               :mod (h / hind)))))",
      "(m / multi-sentence\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :name (n / name\n                                  :op1 \"Dai\"\n                                  :op2 \"Aoki\"))))",
      "(m / multi-sentence\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (o / own-01\n                                  :ARG1 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (t / train-01\n                                  :ARG2 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :quant 2))\n   :snt2 (b / balance-01\n            :ARG1 (p2 / poocch\n                      :part (l / leg\n                               :mod (h / hind)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :quant 2))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :name (n / name\n                                  :op1 \"Dai\"\n                                  :op2 \"Aoki\"))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :quant 2))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (o / own-01\n                                  :ARG1 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :quant 2))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (t / train-01\n                                  :ARG2 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :prep-on (l / leg\n                        :mod (h / hind)))\n   :snt2 (b / balance-01\n            :ARG1 (p2 / poocch\n                      :part l)))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :prep-on (l / leg\n                        :mod (h / hind)))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :name (n / name\n                                  :op1 \"Dai\"\n                                  :op2 \"Aoki\"))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :prep-on (l / leg\n                        :mod (h / hind)))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (o / own-01\n                                  :ARG1 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :prep-on (l / leg\n                        :mod (h / hind)))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (t / train-01\n                                  :ARG2 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :part (l / leg\n                              :mod (h / hind))))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :name (n / name\n                                  :op1 \"Dai\"\n                                  :op2 \"Aoki\"))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :part (l / leg\n                              :mod (h / hind))))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (o / own-01\n                                  :ARG1 (p4 / poocch)))))",
      "(m / multi-sentence\n   :snt1 (s / stand-up-07\n            :ARG1 (p / poocch\n                     :part (l / leg\n                              :mod (h / hind))))\n   :snt2 (b / balance-01\n            :prep-on (p3 / person\n                         :ARG0 (t / train-01\n                                  :ARG2 (p4 / poocch)))))",
      "(s / stand-up-07\n   :ARG1 (p / poocch\n            :quant 2))",
      "(s / stand-up-07\n   :ARG1 (p / poocch\n            :part (l / leg\n                     :mod (h / hind))))",
      "(b / balance-01\n   :ARG1 (p2 / poocch\n             :part (l / leg)))",
      "(b / balance-01\n   :prep-on (p3 / person\n                :name (n / name\n                         :op1 \"Dai\"\n                         :op2 \"Aoki\")))",
      "(b / balance-01\n   :prep-on (p3 / person\n                :ARG0 (o / own-01\n                         :ARG1 (p4 / poocch))))",
      "(a / appear-01\n   :location (v / video\n                :quant (n / number)))",
      "(a / appear-01\n   :ARG1 (p / pooch)\n   :location (v / video\n                :quant (n / number)))",
      "(a / appear-01\n   :ARG1 (p / pooch)\n   :location (v / video\n                :ARG0 (s / show-off-04\n                         :ARG1 (t / trick-01\n                                  :ARG0 p))))",
      "(v / video\n   :ARG0 (s / show-off-04\n            :ARG1 (t / trick-01\n                     :ARG0 (p / pooch))))",
      "(v / video\n   :quant (n / number)\n   :ARG0 (s / show-off-04\n            :ARG1 (t / trick-01\n                     :ARG0 (p / pooch))))",
      "(s / show-off-04\n   :ARG1 (t / trick-01\n            :ARG0 (p / pooch)))"
    ],
    "smus": [
      "Catch the performers.",
      "Catch performing together.",
      "Catch performing a feat of defying gravity.",
      "Ace was caught performing by the two.",
      "Ace was caught performing a feat of defiance.",
      "Ace was caught performing together.",
      "Ace was caught performing a feat of defying gravity.",
      "Holly was caught performing by the two.",
      "Holly was caught performing a feat of defiance.",
      "Holly was caught performing together.",
      "Holly was caught performing a feat of defying gravity.",
      "The borderliner was caught performing a feat of defiance.",
      "The borderliner was caught performing together.",
      "The borderliner was caught performing a feat of defiance of gravity.",
      "The borderline people were caught performing defying feats.",
      "Ace was caught on camera.",
      "Holly was caught on camera.",
      "The performers were caught on camera.",
      "Performing a feat of defiance and being caught on camera.",
      "Performing together, caught on camera.",
      "Performing a feat of defying gravity was caught on camera.",
      "Ace was caught performing on camera.",
      "Ace was caught performing a feat of defiance on camera.",
      "Ace was caught performing together on camera.",
      "Ace was caught performing a feat of defying gravity on camera.",
      "Holly was caught performing on camera.",
      "Holly was caught performing a feat of defiance on camera.",
      "Holly was caught performing together on camera.",
      "Holly was caught performing a feat of defying gravity on camera.",
      "Borderliner caught performing on camera.",
      "Borderliner caught performing defying feats on camera.",
      "Borderliner caught performing together on camera.",
      "The borderline people were caught on camera performing a feat of defiance of gravity.",
      "Borderliner caught performing feats of defiance of gravity on camera.",
      "performing a feat of defying gravity.",
      "performing the feat of defiance together.",
      "performing a feat of defying gravity together.",
      "A feat of defying gravity.",
      "Two poocchs stood up.",
      "stood up on hind legs.",
      "Poocchs stood up with hind legs.",
      "balancing the poocchs on the hind legs.",
      "balancing on poocch trainers.",
      "Two poocchs stood up. The poocchs were balancing on their hind legs.",
      "Two poocchs stood up. Balancing on Dai Aoki.",
      "Two poocchs stood up. Balancing on the owners of the poocchs.",
      "Two poocchs stood up. Balancing on poocch trainers.",
      "Stand up on hind legs, poocchs balancing.",
      "Stand up on hind legs, balance on Dai Aoki.",
      "Stand up on hind legs, poocch owners are balancing.",
      "Stand up on hind legs, balancing on poocch trainers.",
      "Poocchs on hind legs stood up. Poocchs on hind legs were balanced.",
      "Poocchs stood up on hind legs. Balancing on Dai Aoki.",
      "Poocchs stood up with hind legs up. Balancing on poocch trainers.",
      "Poocchs on hind legs stood up.",
      "Balancing the legs poocchs.",
      "Balancing on Dai Aoki.",
      "Balancing on poocch owners.",
      "Poocch legs balancing on Dai Aoki.",
      "Poocch legs balancing on poocch owners.",
      "Poocch legs balancing on poocch trainers",
      "A number of videos have appeared.",
      "The pooch has appeared in a number of videos.",
      "Poochs appear in videos showing off their tricks.",
      "Videos showing off pooch tricks.",
      "There are a number of videos showing off pooch tricks.",
      "showing off the tricks of the pooch."
    ]
  },
  {
    "instance_id": "realsumm-51",
    "summary": "<t> Dayna Dobias , 19 , has created a video in which Dobias dances despite having a disability that makes it difficult for Dobias to walk . </t> <t> Dobias loves TV , film and fashion , and says Dobias \u2019s not happy with how people with disabilities are represented . </t> <t> The teen has created several videos during the past year aimed at changing stereotypes . </t>",
    "summary_trees": [
      "# ::snt  Dayna Dobias , 19 , has created a video in which Dobias dances despite having a disability that makes it difficult for Dobias to walk . \n(c / create-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dayna\"\n                  :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                  :quant 19\n                  :unit (y / year)))\n      :ARG1 (v / video\n            :medium-of (d / dance-01\n                  :ARG0 p\n                  :concession (h / have-03\n                        :ARG0 p\n                        :ARG1 (d2 / disability\n                              :ARG0-of (m / make-02\n                                    :ARG1 (d3 / difficult\n                                          :domain (w / walk-01\n                                                :ARG0 p))))))))",
      "# ::snt  Dobias loves TV , film and fashion , and says Dobias \u2019s not happy with how people with disabilities are represented . \n(a / and\n      :op1 (l / love-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Dobias\"))\n            :ARG1 (a2 / and\n                  :op1 (t / television)\n                  :op2 (f / film)\n                  :op3 (f2 / fashion)))\n      :op2 (s / say-01\n            :ARG0 p\n            :ARG1 (h / happy-01\n                  :polarity -\n                  :ARG0 (t2 / thing\n                        :ARG2-of (r / represent-01\n                              :ARG1 (p2 / person\n                                    :ARG0-of (h2 / have-03\n                                          :ARG1 (d / disability)))))\n                  :ARG1 p)))",
      "# ::snt  The teen has created several videos during the past year aimed at changing stereotypes . \n(c / create-01\n      :ARG0 (t / teen)\n      :ARG1 (v / video\n            :ARG0-of (a / aim-02\n                  :ARG1 (c2 / change-01\n                        :ARG1 (s / stereotype-01)))\n            :quant (s2 / several))\n      :time (y / year\n            :mod (p / past)))"
    ],
    "tree": [
      "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 19)))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(c / create-01\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))",
      "(c / create-01\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))))))",
      "(c / create-01\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))))))))))",
      "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\"))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p)))",
      "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\"))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG0 p))))",
      "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\"))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 p))))))))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 19))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p)))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 19))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG0 p))))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 19))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 p))))))))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p)))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG0 p))))",
      "(c / create-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :concession (h / have-03\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 p))))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Dayna\"\n            :op2 \"Dobias\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 19))",
      "(p / person\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(p / person\n   :name (n / name\n            :op1 \"Dayna\"\n            :op2 \"Dobias\")\n   :age (t / temporal-quantity\n           :quant 19))",
      "(p / person\n   :name (n / name\n            :op1 \"Dayna\"\n            :op2 \"Dobias\")\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(v / video\n   :medium (d / dance-01\n              :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))))",
      "(v / video\n   :medium (d / dance-01\n              :concession (h / have-03\n                             :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))",
      "(v / video\n   :medium (d / dance-01\n              :concession (h / have-03\n                             :ARG1 (d2 / disability\n                                       :ARG0 (m / make-02\n                                                :ARG1 (d3 / difficult\n                                                          :domain (w / walk-01\n                                                                     :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))))))",
      "(a / and\n   :op1 (l / love-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\"))))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (f2 / fashion)))",
      "(a / and\n   :op2 (s / say-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\"))))",
      "(a / and\n   :op2 (s / say-01\n           :ARG1 (h / happy-01\n                    :polarity -)))",
      "(a / and\n   :op1 (l / love-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\")))\n   :op2 (s / say-01\n           :ARG0 p))",
      "(a / and\n   :op1 (l / love-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\")))\n   :op2 (s / say-01\n           :ARG1 (h / happy-01\n                    :polarity -)))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (t / television))\n   :op2 (s / say-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\"))))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (t / television))\n   :op2 (s / say-01\n           :ARG1 (h / happy-01\n                    :polarity -)))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (f / film))\n   :op2 (s / say-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\"))))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (f / film))\n   :op2 (s / say-01\n           :ARG1 (h / happy-01\n                    :polarity -)))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (f2 / fashion))\n   :op2 (s / say-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dobias\"))))",
      "(a / and\n   :op1 (l / love-01\n           :ARG1 (f2 / fashion))\n   :op2 (s / say-01\n           :ARG1 (h / happy-01\n                    :polarity -)))",
      "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dobias\")))",
      "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dobias\"))\n   :ARG1 (t / television))",
      "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dobias\"))\n   :ARG1 (f / film))",
      "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dobias\"))\n   :ARG1 (f2 / fashion))",
      "(p / person\n   :name (n / name\n            :op1 \"Dobias\"))",
      "(a2 / and\n    :op1 (t / television)\n    :op2 (f / film)\n    :op3 (f2 / fashion))",
      "(c / create-01\n   :ARG1 (v / video\n            :ARG0 (a / aim-02\n                     :ARG1 (c2 / change-01\n                               :ARG1 (s / stereotype-01)))))",
      "(c / create-01\n   :ARG1 (v / video\n            :quant (s2 / several)))",
      "(c / create-01\n   :time (y / year\n            :mod (p / past)))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :ARG0 (a / aim-02\n                     :ARG1 (c2 / change-01\n                               :ARG1 (s / stereotype-01)))))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :quant (s2 / several)))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :time (y / year\n            :mod (p / past)))",
      "(c / create-01\n   :ARG1 (v / video\n            :ARG0 (a / aim-02\n                     :ARG1 (c2 / change-01\n                               :ARG1 (s / stereotype-01))))\n   :time (y / year\n            :mod (p / past)))",
      "(c / create-01\n   :ARG1 (v / video\n            :quant (s2 / several))\n   :time (y / year\n            :mod (p / past)))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :ARG0 (a / aim-02\n                     :ARG1 (c2 / change-01\n                               :ARG1 (s / stereotype-01))))\n   :time (y / year\n            :mod (p / past)))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :quant (s2 / several))\n   :time (y / year\n            :mod (p / past)))",
      "(v / video\n   :ARG0 (a / aim-02\n            :ARG1 (c2 / change-01\n                      :ARG1 (s / stereotype-01))))",
      "(v / video\n   :ARG0 (a / aim-02\n            :ARG1 (c2 / change-01\n                      :ARG1 (s / stereotype-01)))\n   :quant (s2 / several))",
      "(a / aim-02\n   :ARG1 (c2 / change-01\n             :ARG1 (s / stereotype-01)))"
    ],
    "smus": [
      "Dayna Dobias was created.",
      "Created by 19-year-olds.",
      "Created by the year old.",
      "The video in which Dayna Dobias dances was created.",
      "The video was created in which Dayna Dobias dances, though she has.",
      "The video was created in which Dayna Dobias dances despite her disability which makes it difficult for her to walk.",
      "Dayna Dobias has created a video in which she dances.",
      "Dayna Dobias has created a video in which she dances, although she has.",
      "Dayna Dobias has created a video in which she dances despite her disability, which makes it difficult for her to walk.",
      "A 19-year-old has created a video in which she dances.",
      "A 19 year old has created a video that dances, though he has.",
      "A 19 year old has created a video in which she dances despite a disability that makes it difficult for her to walk.",
      "A year old has created a video in which he dances.",
      "A year old has created a video that dances, though he has.",
      "A year old has created a video in which he dances despite a disability that makes it difficult for him to walk.",
      "The video is in which Dayna Dobias dances, though she has one.",
      "The video is of Daytona Dobias dancing, although she has a disability that makes it difficult for her to walk.",
      "Dances, although Dayna Dobias has one.",
      "Dances despite the disability that makes Dayna Dobias difficult to walk.",
      "has a disability that makes it difficult for Dayna Dobias to walk.",
      "A disability that makes Dayna Dobias difficult to walk.",
      "Makes Dayna Dobias difficult to walk.",
      "Dayna Dobias is difficult to walk.",
      "And Dobias loves.",
      "And loves fashion.",
      "And so says Dobias.",
      "And says not happy.",
      "Dobias loves and says.",
      "Dobias loves and says \"not happy\".",
      "Loves TV, says Dobias.",
      "Loves TV and says not happy.",
      "Loves the film, says Dobias.",
      "Loves the film and says not happy.",
      "Loves fashion and says Dobias.",
      "Loves fashion and says not happy.",
      "Dobias loves.",
      "Dobias loves TV.",
      "Dobias loves the film.",
      "Dobias loves fashion.",
      "Not happy, says.",
      "representing people with disabilities.",
      "Videos were created with the aim of changing stereotypes.",
      "Several videos have been created.",
      "Created in the past year.",
      "The teen has created videos aimed at changing stereotypes.",
      "The teen has created several videos.",
      "The teen was created in the past year.",
      "Videos aimed at changing stereotypes have been created in the past year.",
      "Several videos have been created over the past year.",
      "The teen has created videos in the past year aimed at changing stereotypes.",
      "The teen has created several videos in the past year.",
      "Videos aimed at changing stereotypes",
      "There are several videos aimed at changing stereotypes.",
      "aimed at changing stereotypes."
    ]
  },
  {
    "instance_id": "realsumm-52",
    "summary": "<t> Manchester United take on Manchester City on Sunday . </t> <t> Match will begin at 4 pm local time at United 's Old Trafford home . </t> <t> Police have no objections to kick - off being so late in the afternoon . </t> <t> Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final . </t>",
    "summary_trees": [
      "# ::snt  Manchester United take on Manchester City on Sunday . \n(t / take-on-09\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Manchester\"\n                  :op2 \"United\"))\n      :ARG1 (t3 / team\n            :name (n2 / name\n                  :op1 \"Manchester\"\n                  :op2 \"City\"))\n      :time (d / date-entity\n            :weekday (s / sunday)))",
      "# ::snt  Match will begin at 4 pm local time at United 's Old Trafford home . \n(b / begin-01\n      :ARG1 (m / match-03)\n      :location (h / home\n            :poss (t / team\n                  :name (n / name\n                        :op1 \"United\"))\n            :mod (s / sports-facility\n                  :name n\n                  :op1 \"Old\"\n                  :op2 \" Trafford\"))\n      :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))",
      "# ::snt  Police have no objections to kick - off being so late in the afternoon . \n(o / object-01\n      :polarity -\n      :ARG0 (p / police)\n      :ARG1 (k / kick-off-04\n            :time (l / late\n                  :op1 (d / date-entity\n                        :dayperiod (a / afternoon))\n                  :degree (s / so))))",
      "# ::snt  Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final . \n(s / see-01\n      :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                  :mod (c / city\n                        :name (n / name\n                              :op1 \"Manchester\")))\n            :time (w / weekend)\n            :time (d2 / date-entity\n                  :dayperiod (a / afternoon)\n                  :mod (l / late))\n            :mod (l2 / last))\n      :ARG1 (a2 / arrest-01\n            :ARG1 (f / fan\n                  :quant 34)\n            :location (s2 / sports-facility\n                  :name (n2 / name\n                        :op1 \"Wembley\"))\n            :time (f2 / final\n                  :mod (s3 / semi)\n                  :subevent-of (g / game\n                        :name (n3 / name\n                              :op1 \"FA\"\n                              :op2 \"Cup\")\n                        :time (d3 / date-entity\n                              :year 2011)))))"
    ],
    "tree": [
      "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\")))",
      "(t / take-on-09\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\")))",
      "(t / take-on-09\n   :time (d / date-entity\n            :weekday (s / sunday)))",
      "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\")))",
      "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :time (d / date-entity\n            :weekday (s / sunday)))",
      "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\"))\n   :time (d / date-entity\n            :weekday (s / sunday)))",
      "(b / begin-01\n   :location (h / home\n                :poss (t / team\n                         :name (n / name\n                                  :op1 \"United\"))))",
      "(b / begin-01\n   :location (h / home\n                :mod (s / sports-facility\n                        :op1 \"Old\")))",
      "(b / begin-01\n   :location (h / home\n                :mod (s / sports-facility\n                        :op2 \" Trafford\")))",
      "(b / begin-01\n   :time (d / date-entity\n            :timezone (l / local-02)))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :poss (t / team\n                         :name (n / name\n                                  :op1 \"United\"))))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :mod (s / sports-facility\n                        :name (n / name\n                                 :op1 \"United\"))))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :mod (s / sports-facility\n                        :op1 \"Old\")))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :mod (s / sports-facility\n                        :op2 \" Trafford\")))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :time (d / date-entity\n            :timezone (l / local-02)))",
      "(b / begin-01\n   :location (h / home\n                :poss (t / team\n                         :name (n / name\n                                  :op1 \"United\")))\n   :time (d / date-entity\n            :time \"16:00\"))",
      "(b / begin-01\n   :location (h / home\n                :poss (t / team\n                         :name (n / name\n                                  :op1 \"United\")))\n   :time (d / date-entity\n            :timezone (l / local-02)))",
      "(b / begin-01\n   :location (h / home\n                :mod (s / sports-facility\n                        :op1 \"Old\"))\n   :time (d / date-entity\n            :time \"16:00\"))",
      "(b / begin-01\n   :location (h / home\n                :mod (s / sports-facility\n                        :op2 \" Trafford\"))\n   :time (d / date-entity\n            :time \"16:00\"))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :poss (t / team\n                         :name (n / name\n                                  :op1 \"United\")))\n   :time (d / date-entity\n            :time \"16:00\"))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :mod (s / sports-facility\n                        :name (n / name\n                                 :op1 \"United\")))\n   :time (d / date-entity\n            :time \"16:00\"))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :mod (s / sports-facility\n                        :op2 \" Trafford\"))\n   :time (d / date-entity\n            :time \"16:00\"))",
      "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))))",
      "(k / kick-off-04\n   :time (l / late\n            :degree (s / so)))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                     :mod (c / city\n                             :name (n / name\n                                      :op1 \"Manchester\")))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (d2 / date-entity\n                      :dayperiod (a / afternoon))))",
      "(s / see-01\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :mod (s3 / semi))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                     :mod (c / city\n                             :name (n / name\n                                      :op1 \"Manchester\"))))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :mod (s3 / semi))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (w / weekend))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :mod (s3 / semi))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (d2 / date-entity\n                      :dayperiod (a / afternoon)))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :mod (s3 / semi))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (d2 / date-entity\n                      :dayperiod (a / afternoon)))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :subevent (g / game\n                                    :time (d3 / date-entity\n                                              :year 2011)))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :mod (l2 / last))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :mod (s3 / semi))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :mod (l2 / last))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :subevent (g / game\n                                    :time (d3 / date-entity\n                                              :year 2011)))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (d2 / date-entity\n                      :mod (l / late)))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :mod (s3 / semi))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (d2 / date-entity\n                      :mod (l / late)))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :subevent (g / game\n                                    :name (n3 / name\n                                              :op1 \"FA\"\n                                              :op2 \"Cup\")))))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :time (d2 / date-entity\n                      :mod (l / late)))\n   :ARG1 (a2 / arrest-01\n             :time (f2 / final\n                       :subevent (g / game\n                                    :time (d3 / date-entity\n                                              :year 2011)))))",
      "(d2 / date-entity\n    :dayperiod (a / afternoon)\n    :mod (l / late))"
    ],
    "smus": [
      "Manchester United will take on",
      "Take on Manchester City",
      "Take on Sunday.",
      "Manchester United will take on Manchester City.",
      "Manchester United will take on on Sunday.",
      "Manchester United will take on Manchester City on Sunday.",
      "begin at home for the United",
      "Begin at Old Home.",
      "Begin at Trafford home.",
      "begin at local time",
      "The Match will begin at United's home.",
      "The Match will begin at United.",
      "The Match will begin at Old fashioned.",
      "The Match will begin at Trafford.",
      "The Match will begin at the local time.",
      "Beginning at 16:00 United will begin at home.",
      "Beginning at United home at local time.",
      "Beginning at Old Home at local time.",
      "Beginning at Trafford home at local time.",
      "The Match will begin at United home at local time.",
      "The Match will begin at United Home at the local time.",
      "The Match will begin at Trafford home at the local time.",
      "Kick off late in the afternoon.",
      "Kick off so late.",
      "The Manchester derby saw off a kick-off.",
      "34 fans were seen arrested.",
      "The Manchester derby kicked off with 34 fans arrested.",
      "Kicking off the weekend saw 34 fans arrested.",
      "The afternoon's kickoff saw 34 fans arrested.",
      "Last kick off saw 34 fans arrested.",
      "The last kick-off saw the semi-final arrests.",
      "The late kick-off saw 34 fans arrested.",
      "The late kick-off saw the semi-final arrests.",
      "kicks off Manchester derby",
      "The Manchester derby kicks off over the weekend.",
      "34 fans were arrested.",
      "34 fans were arrested in the semi-finals."
    ]
  },
  {
    "instance_id": "realsumm-53",
    "summary": "<t> Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh . </t> <t> The Bangladeshi president alleged India had used president influence in the ICC . </t> <t> Governing body asked Bangladeshi to withdraw Bangladeshi statement or apologise . </t> <t> But Kamal confirmed Kamal intention to step down . </t>",
    "summary_trees": [
      "# ::snt  Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh . \n(c / criticize-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kamal\"))\n      :ARG1 (d / decide-01\n            :ARG0 (u / umpire)\n            :ARG1 (a / award-01\n                  :ARG0 u\n                  :ARG1 (b / ball\n                        :mod (c2 / controversy))\n                  :ARG2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Rohit\"\n                              :op2 \"Sharma\"))\n                  :time (m / match-03\n                        :ARG0 (c3 / country\n                              :name (n3 / name\n                                    :op1 \"India\"))\n                        :ARG1 (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Bangladesh\"))\n                        :subevent-of (g / game\n                              :name (n5 / name\n                                    :op1 \"World\"\n                                    :op2 \"Cup\"))))))",
      "# ::snt  The Bangladeshi president alleged India had used president influence in the ICC . \n(a / allege-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Bangladesh\"))\n                  :ARG2 (p2 / president)))\n      :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                  :ARG0 (p3 / president)\n                  :ARG1 (o / organization\n                        :name (n3 / name\n                              :op1 \"ICC\")))))",
      "# ::snt  Governing body asked Bangladeshi to withdraw Bangladeshi statement or apologise . \n(a / ask-02\n      :ARG0 (b / body\n            :ARG0-of (g / govern-01))\n      :ARG1 (o / or\n            :op1 (w / withdraw-01\n                  :ARG0 (p / person\n                        :mod (c / country\n                              :name (n / name\n                                    :op1 \"Bangladesh\")))\n                  :ARG1 (t / thing\n                        :ARG1-of (s / state-01\n                              :ARG0 p)))\n            :op2 (a2 / apologize-01\n                  :ARG0 p))\n      :ARG2 p)",
      "# ::snt  But Kamal confirmed Kamal intention to step down . \n(c / contrast-01\n      :ARG2 (c2 / confirm-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Kamal\"))\n            :ARG1 (ii / intend-01\n                  :ARG0 p\n                  :ARG1 (s / step-down-04\n                        :ARG0 p))))"
    ],
    "tree": [
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\")))",
      "(c / criticize-01\n   :ARG1 (d / decide-01\n            :ARG0 (u / umpire)))",
      "(c / criticize-01\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :ARG0 (u / umpire))))",
      "(c / criticize-01\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :ARG1 (b / ball\n                              :mod (c2 / controversy)))))",
      "(c / criticize-01\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Rohit\"\n                                         :op2 \"Sharma\")))))",
      "(c / criticize-01\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :time (m / match-03\n                              :ARG1 (c4 / country\n                                        :name (n4 / name\n                                                  :op1 \"Bangladesh\"))))))",
      "(c / criticize-01\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :time (m / match-03\n                              :subevent (g / game\n                                           :name (n5 / name\n                                                     :op1 \"World\"\n                                                     :op2 \"Cup\"))))))",
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG0 (u / umpire)))",
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :ARG0 (u / umpire))))",
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :ARG1 (b / ball\n                              :mod (c2 / controversy)))))",
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Rohit\"\n                                         :op2 \"Sharma\")))))",
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :time (m / match-03\n                              :ARG1 (c4 / country\n                                        :name (n4 / name\n                                                  :op1 \"Bangladesh\"))))))",
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG1 (a / award-01\n                     :time (m / match-03\n                              :subevent (g / game\n                                           :name (n5 / name\n                                                     :op1 \"World\"\n                                                     :op2 \"Cup\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Kamal\"))",
      "(d / decide-01\n   :ARG1 (a / award-01\n            :ARG0 (u / umpire)))",
      "(d / decide-01\n   :ARG1 (a / award-01\n            :ARG1 (b / ball\n                     :mod (c2 / controversy))))",
      "(d / decide-01\n   :ARG1 (a / award-01\n            :time (m / match-03\n                     :subevent (g / game\n                                  :name (n5 / name\n                                            :op1 \"World\"\n                                            :op2 \"Cup\")))))",
      "(d / decide-01\n   :ARG0 (u / umpire)\n   :ARG1 (a / award-01\n            :ARG0 u))",
      "(d / decide-01\n   :ARG0 (u / umpire)\n   :ARG1 (a / award-01\n            :ARG1 (b / ball\n                     :mod (c2 / controversy))))",
      "(d / decide-01\n   :ARG0 (u / umpire)\n   :ARG1 (a / award-01\n            :time (m / match-03\n                     :ARG0 (c3 / country\n                               :name (n3 / name\n                                         :op1 \"India\")))))",
      "(d / decide-01\n   :ARG0 (u / umpire)\n   :ARG1 (a / award-01\n            :time (m / match-03\n                     :ARG1 (c4 / country\n                               :name (n4 / name\n                                         :op1 \"Bangladesh\")))))",
      "(d / decide-01\n   :ARG0 (u / umpire)\n   :ARG1 (a / award-01\n            :time (m / match-03\n                     :subevent (g / game\n                                  :name (n5 / name\n                                            :op1 \"World\"\n                                            :op2 \"Cup\")))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\")))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / president))))",
      "(a / allege-01\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))))",
      "(a / allege-01\n   :ARG1 (u / use-01\n            :ARG1 (ii / influence-01\n                      :ARG0 (p3 / president))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))))\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))))\n   :ARG1 (u / use-01\n            :ARG1 (ii / influence-01\n                      :ARG0 (p3 / president))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))))\n   :ARG1 (u / use-01\n            :ARG1 (ii / influence-01\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / president)))\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / president)))\n   :ARG1 (u / use-01\n            :ARG1 (ii / influence-01\n                      :ARG0 (p3 / president))))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / president)))\n   :ARG1 (u / use-01\n            :ARG1 (ii / influence-01\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (p2 / president)))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Bangladesh\")))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Bangladesh\"))\n   :ARG2 (p2 / president))",
      "(c / country\n   :name (n / name\n            :op1 \"Bangladesh\"))",
      "(u / use-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"India\")))",
      "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01)))",
      "(a / ask-02\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (p / person\n                             :mod (c / country\n                                     :name (n / name\n                                              :op1 \"Bangladesh\"))))))",
      "(a / ask-02\n   :ARG1 (o / or\n            :op2 (a2 / apologize-01\n                     :ARG0 (p / person\n                              :mod (c / country\n                                      :name (n / name\n                                               :op1 \"Bangladesh\"))))))",
      "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (p / person\n                             :mod (c / country\n                                     :name (n / name\n                                              :op1 \"Bangladesh\"))))))",
      "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op2 (a2 / apologize-01\n                     :ARG0 (p / person\n                              :mod (c / country\n                                      :name (n / name\n                                               :op1 \"Bangladesh\"))))))",
      "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG1 (t / thing\n                             :ARG1 (s / state-01\n                                      :ARG0 (p / person))))))",
      "(o / or\n   :op1 (w / withdraw-01\n           :ARG1 (t / thing\n                    :ARG1 (s / state-01\n                             :ARG0 (p / person)))))",
      "(w / withdraw-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Bangladesh\"))))",
      "(c / contrast-01\n   :ARG2 (c2 / confirm-01\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Kamal\"))))",
      "(c / contrast-01\n   :ARG2 (c2 / confirm-01\n             :ARG1 (ii / intend-01\n                       :ARG0 (p / person :name (n / name :op1 \"Kamal\")))))",
      "(c / contrast-01\n   :ARG2 (c2 / confirm-01\n             :ARG1 (ii / intend-01\n                       :ARG1 (s / step-down-04\n                                :ARG0 (p / person :name (n / name :op1 \"Kamal\"))))))",
      "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\")))",
      "(c2 / confirm-01\n    :ARG1 (ii / intend-01\n              :ARG0 (p / person :name (n / name :op1 \"Kamal\"))))",
      "(c2 / confirm-01\n    :ARG1 (ii / intend-01\n              :ARG1 (s / step-down-04\n                       :ARG0 (p / person :name (n / name :op1 \"Kamal\")))))",
      "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\"))\n    :ARG1 (ii / intend-01\n              :ARG0 p))",
      "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\"))\n    :ARG1 (ii / intend-01\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))",
      "(p / person\n   :name (n / name\n            :op1 \"Kamal\"))"
    ],
    "smus": [
      "Kamal criticized.",
      "Criticized the umpires decision.",
      "Criticized the decision to award the umpires.",
      "Criticized the decision to award the controversial ball.",
      "Criticized the decision to award Rohit Sharma.",
      "Criticized the decision to award during the Bangladesh match.",
      "Criticized the decision to award during the World Cup match.",
      "Kamal criticized the umpires decision.",
      "Kamal criticized the decision to award the umpires.",
      "Kamal criticized the decision to award the controversial ball.",
      "Kamal criticized the decision to award Rohit Sharma.",
      "Kamal criticized the decision to award during the match with Bangladesh.",
      "Kamal criticized the decision to award during the World Cup match.",
      "The decision to award was made by the umpires.",
      "The decision to award the controversial ball.",
      "The decision to award Rohit Sharma was made.",
      "The umpires' decision to award:",
      "The umpires' decision to award the controversial ball.",
      "The umpires decided to award Rohit Sharma.",
      "The umpires' decision was to award during the Bangladesh match.",
      "The umpires' decision to award during the World Cup match.",
      "award the controversial ball",
      "Bangladeshis alleged.",
      "The president alleged --",
      "India allegedly used it.",
      "The allegations were that the president's influence was used.",
      "Bangladeshis alleged India had used it.",
      "The Bangladeshi alleged that the president had been used to influence.",
      "Bangladeshis alleged that influence on the ICC was used.",
      "The president alleged India had used it.",
      "The president alleged that the president's influence was used.",
      "The president alleged that influence on the ICC was used.",
      "The president's influence is used.",
      "Influence on the ICC is being used.",
      "India has used the influence of the president.",
      "India has used ICC influence.",
      "The president has influence over the ICC.",
      "The governing body asked --",
      "Bangladeshis were asked to withdraw or not.",
      "asked for an apology from Bangladesh.",
      "The governing body asked Bangladeshis to withdraw or not.",
      "The governing body asked for an apology from Bangladesh.",
      "The governing body asked that the person's statement be withheld or withdrawn.",
      "or withdraw a statement from the person.",
      "withdraw the statement of the person.",
      "But Kamal confirmed --",
      "But Kamal's intention was confirmed.",
      "But confirmed the intention of Kamal to step down.",
      "Kamal confirmed --",
      "Kamal's intention was confirmed.",
      "Kamal's intention to step down was confirmed, the confirmation said.",
      "Kamal confirmed his intention.",
      "Kamal confirmed his intention to step down.",
      "Kamal's intention was to step down."
    ]
  },
  {
    "instance_id": "realsumm-54",
    "summary": "<t> Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 . </t> <t> Joe Calzaghe believes Mayweather 's unbeaten record is a burden . </t> <t> Despite that , the Welshman thinks Mayweather will beat Welshman opponent . </t> <t> READ : Ricky Hatton gives Hatton prediction to Jeff Powell ahead of the fight . </t> <t> READ : Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale . </t>",
    "summary_trees": [
      "# ::snt  Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 . \n(f / face-off-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Floyd\"\n                  :op2 \"Mayweather\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Manny\"\n                  :op2 \"Pacquiao\"))\n      :location (c / city\n            :name (n3 / name\n                  :op1 \"Las\"\n                  :op2 \"Vegas\"))\n      :time (d / date-entity\n            :day 2\n            :month 5))",
      "# ::snt  Joe Calzaghe believes Mayweather 's unbeaten record is a burden . \n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Joe\"\n                  :op2 \"Calzaghe\"))\n      :ARG1 (b2 / burden-01\n            :ARG2 (r / record\n                  :poss (p2 / person\n                        :name (n2 / name\n                              :op1 \"Mayweather\"))\n                  :ARG1-of (b3 / beat-03\n                        :polarity -))))",
      "# ::snt  Despite that , the Welshman thinks Mayweather will beat Welshman opponent . \n(t / think-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Walesman\"))\n      :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Mayweather\"))\n            :ARG1 (p3 / person\n                  :ARG0-of (o / oppose-01\n                        :ARG1 p)))\n      :concession (t2 / that))",
      "# ::snt  READ : Ricky Hatton gives Hatton prediction to Jeff Powell ahead of the fight . \n(r / read-01\n      :mode imperative\n      :ARG0 (y / you)\n      :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Ricky\"\n                        :op2 \"Hatton\"))\n            :ARG2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Jeff\"\n                        :op2 \"Powell\"))\n            :time (a / ahead\n                  :op1 (f / fight-01))))",
      "# ::snt  READ : Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale . \n(r / read-01\n      :mode imperative\n      :ARG0 (y / you)\n      :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                  :mod (o / oppose-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Floyd\"\n                                    :op2 \"Mayweather\"))\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Manny\"\n                                    :op2 \"Pacquiao\"))))\n            :time (f / final)))"
    ],
    "tree": [
      "(f / face-off-02\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))",
      "(f / face-off-02\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\")))",
      "(f / face-off-02\n   :time (d / date-entity\n            :day 2))",
      "(f / face-off-02\n   :time (d / date-entity\n            :month 5))",
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :time (d / date-entity\n            :day 2))",
      "(f / face-off-02\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :time (d / date-entity\n            :day 2))",
      "(f / face-off-02\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :time (d / date-entity\n            :month 5))",
      "(f / face-off-02\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\"))\n   :time (d / date-entity\n            :day 2))",
      "(f / face-off-02\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\"))\n   :time (d / date-entity\n            :month 5))",
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\")))",
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :time (d / date-entity\n            :day 2))",
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :time (d / date-entity\n            :month 5))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\")))",
      "(b / believe-01\n   :ARG1 (b2 / burden-01\n             :ARG2 (r / record\n                      :ARG1 (b3 / beat-03\n                                :polarity -))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b2 / burden-01\n             :ARG2 (r / record\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Mayweather\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Joe\"\n            :op2 \"Calzaghe\"))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\")))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mayweather\"))))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG1 (p3 / person\n                      :ARG0 (o / oppose-01\n                               :ARG1 p))))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :concession (t2 / that))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mayweather\")))\n   :concession (t2 / that))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG1 (p3 / person\n                      :ARG0 (o / oppose-01\n                               :ARG1 p)))\n   :concession (t2 / that))",
      "(r / read-01\n   :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ricky\"\n                               :op2 \"Hatton\"))))",
      "(r / read-01\n   :ARG1 (p / predict-01\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Jeff\"\n                                :op2 \"Powell\"))))",
      "(r / read-01\n   :ARG1 (p / predict-01\n            :time (a / ahead\n                     :op1 (f / fight-01))))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ricky\"\n                               :op2 \"Hatton\"))))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Jeff\"\n                                :op2 \"Powell\"))))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :time (a / ahead\n                     :op1 (f / fight-01))))",
      "(p / predict-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Ricky\"\n                      :op2 \"Hatton\")))",
      "(r / read-01\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG0 (p / person\n                                      :name (n / name\n                                               :op1 \"Floyd\"\n                                               :op2 \"Mayweather\"))))))",
      "(r / read-01\n   :ARG1 (s / sell-01\n            :time (f / final)))",
      "(r / read-01\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Manny\"\n                                                 :op2 \"Pacquiao\"))))))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG0 (p / person\n                                      :name (n / name\n                                               :op1 \"Floyd\"\n                                               :op2 \"Mayweather\"))))))",
      "(t / ticket\n   :mod (o / oppose-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Floyd\"\n                             :op2 \"Mayweather\"))))",
      "(t / ticket\n   :mod (o / oppose-01\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Manny\"\n                               :op2 \"Pacquiao\"))))"
    ],
    "smus": [
      "Face off in Las Vegas.",
      "Face off on the 2nd.",
      "Face off in May.",
      "Floyd Mayweather and Manny Pacquiao face off.",
      "Floyd Mayweather and he face off in May.",
      "On the 2nd, face off in Las Vegas.",
      "Floyd Mayweather and Manny Pacquiao face off in Las Vegas.",
      "Floyd Mayweather and Manny Pacquiao face off on the 2nd.",
      "Floyd Mayweather and Manny Pacquiao face off in May.",
      "Floyd Mayweather and the pair face off in Las Vegas on the 2nd.",
      "Floyd Mayweather and Manny Pacquiao face off in Las Vegas on the 2nd.",
      "Floyd Mayweather and Manny Pacquiao face off in Las Vegas in May.",
      "Joe Calzaghe believes --",
      "The burden of an unbeaten record believes to be on the shoulders of the unbeaten.",
      "Joe Calzaghe believes Mayweather's record is a burden.",
      "A record that hasn't been beat.",
      "Walesman thinks.",
      "Walesman thinks Mayweather will beat him.",
      "Walesman thinks he'll beat his opponent.",
      "That said, Walesman thinks.",
      "That said, Walesman thinks Mayweather will beat him.",
      "That said, Walesman thinks he will beat his opponents.",
      "Ricky Hatton's prediction was read.",
      "The prediction of Jeff Powell has been read.",
      "The prediction ahead of the fight is read.",
      "You've read Ricky Hatton's prediction.",
      "You have read the prediction about Jeff Powell.",
      "You have read the prediction ahead of the fight.",
      "Ricky Hatton predicts Jeff Powell ahead of the fight.",
      "Tickets against Floyd Mayweather have been read to be sold.",
      "The final sales are read.",
      "The tickets against Manny Pacquiao were read to be sold.",
      "You have read that the Floyd Mayweather tickets are being sold.",
      "There are tickets against Floyd Mayweather.",
      "There are tickets against Manny Pacquiao."
    ]
  },
  {
    "instance_id": "realsumm-55",
    "summary": "<t> Winchester Council in Hampshire claimed annual clean - up hit by new rules . </t> <t> But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation . </t> <t> Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish . </t>",
    "summary_trees": [
      "# ::snt  Winchester Council in Hampshire claimed annual clean - up hit by new rules . \n(c / claim-01\n      :ARG0 (c2 / council\n            :mod (c3 / city\n                  :name (n / name\n                        :op1 \"Winchester\")\n                  :location (c4 / county\n                        :name (n2 / name\n                              :op1 \"Hampshire\"))))\n      :ARG1 (c5 / clean-up-02\n            :ARG1-of (h / hit-01\n                  :ARG0 (r / rule\n                        :ARG1-of (n3 / new-01)))\n            :frequency (r2 / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (y / year)))))",
      "# ::snt  But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (d / deny-01\n                  :ARG0 (g / government-organization\n                        :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))\n                  :ARG1 (t / tighten-01\n                        :ARG1 (r / rule)))\n            :op2 (a2 / add-01\n                  :ARG0 g\n                  :ARG1 (ii / interpret-01\n                        :ARG0 (c2 / council)\n                        :ARG1 (l / legislate-01)\n                        :ARG1-of (o / over-03)))))",
      "# ::snt  Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish . \n(a / accuse-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Andrew\"\n                  :op3 \"Motion\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (l / laureate\n                        :mod (p2 / poet))))\n      :ARG1 (a2 / and\n            :op1 (p3 / person\n                  :ARG0-of h\n                  :ARG1 (h2 / hall\n                        :mod (t / town))\n                  :ARG2 (b / boss)))\n      :op2 (g / government-organization\n            :name (n2 / name\n                  :op1 \"Highways\"\n                  :op2 \"Agency\"))\n      :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                  :ARG0 a2\n                  :ARG1 (r2 / remove-01\n                        :ARG0 a2\n                        :ARG1 (r3 / rubbish)))))"
    ],
    "tree": [
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\"))))",
      "(c / claim-01\n   :ARG1 (c5 / clean-up-02\n             :ARG1 (h / hit-01\n                      :ARG0 (r / rule\n                               :ARG1 (n3 / new-01)))))",
      "(c / claim-01\n   :ARG1 (c5 / clean-up-02\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1))))",
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\")))\n   :ARG1 (c5 / clean-up-02\n             :ARG1 (h / hit-01\n                      :ARG0 (r / rule\n                               :ARG1 (n3 / new-01)))))",
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\")))\n   :ARG1 (c5 / clean-up-02\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1))))",
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (c5 / clean-up-02\n             :ARG1 (h / hit-01\n                      :ARG0 (r / rule\n                               :ARG1 (n3 / new-01)))))",
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (c5 / clean-up-02\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1))))",
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (c5 / clean-up-02\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :unit (y / year)))))",
      "(c2 / council\n    :mod (c3 / city\n             :name (n / name\n                      :op1 \"Winchester\")))",
      "(c3 / city\n    :name (n / name\n             :op1 \"Winchester\"))",
      "(c3 / city\n    :location (c4 / county\n                  :name (n2 / name\n                            :op1 \"Hampshire\")))",
      "(c / contrast-01\n   :ARG2 (d / deny-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))))",
      "(c / contrast-01\n   :ARG2 (a2 / add-01\n             :ARG0 (g / government-organization\n                      :name (n / name\n                               :op1 \"Health\"\n                               :op2 \"and\"\n                               :op3 \"Safety\"\n                               :op4 \"Executive\"))))",
      "(c / contrast-01\n   :ARG2 (d / deny-01\n            :ARG1 (t / tighten-01\n                     :ARG1 (r / rule))))",
      "(c / contrast-01\n   :ARG2 (a2 / add-01\n             :ARG1 (ii / interpret-01\n                       :ARG0 (c2 / council))))",
      "(c / contrast-01\n   :ARG2 (a2 / add-01\n             :ARG1 (ii / interpret-01\n                       :ARG1 (l / legislate-01))))",
      "(c / contrast-01\n   :ARG2 (a2 / add-01\n             :ARG1 (ii / interpret-01\n                       :ARG1 (o / over-03))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG0 (g / government-organization\n                    :name (n / name\n                             :op1 \"Health\"\n                             :op2 \"and\"\n                             :op3 \"Safety\"\n                             :op4 \"Executive\"))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG1 (t / tighten-01\n                    :ARG1 (r / rule))))",
      "(a / and\n   :op2 (a2 / add-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))))",
      "(a / and\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG0 (c2 / council))))",
      "(a / and\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG1 (l / legislate-01))))",
      "(a / and\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG1 (o / over-03))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG0 (g / government-organization\n                    :name (n / name\n                             :op1 \"Health\"\n                             :op2 \"and\"\n                             :op3 \"Safety\"\n                             :op4 \"Executive\")))\n   :op2 (a2 / add-01\n            :ARG0 g))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG0 (g / government-organization\n                    :name (n / name\n                             :op1 \"Health\"\n                             :op2 \"and\"\n                             :op3 \"Safety\"\n                             :op4 \"Executive\")))\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG0 (c2 / council))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG0 (g / government-organization\n                    :name (n / name\n                             :op1 \"Health\"\n                             :op2 \"and\"\n                             :op3 \"Safety\"\n                             :op4 \"Executive\")))\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG1 (l / legislate-01))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG0 (g / government-organization\n                    :name (n / name\n                             :op1 \"Health\"\n                             :op2 \"and\"\n                             :op3 \"Safety\"\n                             :op4 \"Executive\")))\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG1 (o / over-03))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG1 (t / tighten-01\n                    :ARG1 (r / rule)))\n   :op2 (a2 / add-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG1 (t / tighten-01\n                    :ARG1 (r / rule)))\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG0 (c2 / council))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG1 (t / tighten-01\n                    :ARG1 (r / rule)))\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG1 (l / legislate-01))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG1 (t / tighten-01\n                    :ARG1 (r / rule)))\n   :op2 (a2 / add-01\n            :ARG1 (ii / interpret-01\n                      :ARG1 (o / over-03))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Health\"\n                     :op2 \"and\"\n                     :op3 \"Safety\"\n                     :op4 \"Executive\")))",
      "(d / deny-01\n   :ARG1 (t / tighten-01\n            :ARG1 (r / rule)))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Health\"\n                     :op2 \"and\"\n                     :op3 \"Safety\"\n                     :op4 \"Executive\"))\n   :ARG1 (t / tighten-01\n            :ARG1 (r / rule)))",
      "(g / government-organization\n   :name (n / name\n            :op1 \"Health\"\n            :op2 \"and\"\n            :op3 \"Safety\"\n            :op4 \"Executive\"))",
      "(a2 / add-01\n    :ARG1 (ii / interpret-01\n              :ARG1 (l / legislate-01)))",
      "(a2 / add-01\n    :ARG1 (ii / interpret-01\n              :ARG1 (o / over-03)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\")))",
      "(a / accuse-01\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\")))",
      "(a / accuse-01\n   :ARG2 (r / ruin-01\n            :ARG0 (a2 / and)))",
      "(a / accuse-01\n   :ARG2 (r / ruin-01\n            :ARG1 (c / countryside)))",
      "(a / accuse-01\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG0 (a2 / and))))",
      "(a / accuse-01\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG0 (a2 / and)))))",
      "(a / accuse-01\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG1 (r3 / rubbish)))))",
      "(a / accuse-01\n   :ARG1 (p3 / person\n             :ARG2 (b / boss)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\")))",
      "(a / accuse-01\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Andrew\" :op3 \"Motion\")))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG2 (r / ruin-01\n            :ARG0 (a2 / and)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG2 (r / ruin-01\n            :ARG1 (c / countryside)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG0 (a2 / and))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG0 (a2 / and)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG1 (r3 / rubbish)))))",
      "(a / accuse-01\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Andrew\" :op3 \"Motion\")))\n   :ARG2 (r / ruin-01\n            :ARG1 (c / countryside)))",
      "(a / accuse-01\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Andrew\" :op3 \"Motion\")))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG0 (a2 / and))))",
      "(a / accuse-01\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Andrew\" :op3 \"Motion\")))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG0 (a2 / and)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG1 (p3 / person\n             :ARG1 (h2 / hall\n                       :mod (t / town))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :ARG1 (p3 / person\n             :ARG2 (b / boss)))",
      "(a / accuse-01\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG0 (a2 / and)))))",
      "(a / accuse-01\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG1 (r3 / rubbish)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG0 (a2 / and))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\"))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG1 (r3 / rubbish)))))",
      "(a / accuse-01\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Andrew\" :op3 \"Motion\")))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG0 (a2 / and)))))",
      "(a / accuse-01\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Andrew\" :op3 \"Motion\")))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG3 (f / fail-01\n                     :ARG1 (r2 / remove-01\n                               :ARG1 (r3 / rubbish)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Sir\"\n            :op2 \"Andrew\"\n            :op3 \"Motion\"))"
    ],
    "smus": [
      "The Winchester Council claimed.",
      "The new rules had been deemed a clean-up, the claim claimed.",
      "The Winchester Council claimed the new rules had been a clean-up.",
      "The Winchester Council claimed there was a annual clean-up.",
      "The Hampshire City Council claimed the new rules had been a clean-up of the hit.",
      "The Hampshire City Council claimed there was a annual clean-up.",
      "New rules have hit the clean-up.",
      "Every time there is a clean up.",
      "The clean up happens every year.",
      "New rules have been wiped up year on year.",
      "New rules have hit.",
      "But the Health and Safety Executive denied.",
      "But the Health and Safety Executive added --",
      "But the rules were denied tightening.",
      "But added the councils were \"interpreting.\"",
      "But added the interpretation of the legislation.",
      "But added the over-interpreting.",
      "And the Health and Safety Executive denied.",
      "and denied tightening rules.",
      "And the Health and Safety Executive added --",
      "and added that the councils were interpreting.",
      "And added the interpretation of the legislation.",
      "And added the over-interpreting.",
      "The Health and Safety Executive denied and added --",
      "The Health and Safety Executive denied and added that the councils were interpreting.",
      "The Health and Safety Executive denied and added that the legislation was interpreting.",
      "The Health and Safety Executive denied and added that the over-interpreting was made.",
      "Denies tightening rules and added that the Health and Safety Executive (HSE) added --",
      "Denies tightening rules and added that the councils were interpreting.",
      "Denied tightening rules and added interpretation of legislation.",
      "Denied tightening rules and added that over-interpreting.",
      "The Health and Safety Executive denied.",
      "The rules were denied tightening.",
      "The Health and Safety Executive denied tightening the rules.",
      "\"The councils are interpreting,\" added the council.",
      "Added the interpretation of over-reliance.",
      "Councils are interpreting legislation.",
      "Sir Andrew Motion accused.",
      "accused the Highway Agency of...",
      "accused of ruining and destroying.",
      "accused of ruining the countryside.",
      "accused of ruining the failings of both.",
      "accused of ruining the failure of the parties to remove.",
      "accused of ruining failing to remove rubbish.",
      "The bosses were accused.",
      "Sir Andrew Motion accused the Highways Agency.",
      "Sir Andrew Motion accused the Highway Agency.",
      "Sir Andrew Motion accused the two of ruining.",
      "Sir Andrew Motion accused the countryside of 'ruining'.",
      "Sir Andrew Motion accused the failures of \"ruining\"",
      "Sir Andrew Motion accused the failure of the two to remove of ruining.",
      "Sir Andrew Motion accused of ruining the failure to remove rubbish.",
      "Sir Andrew Motion accused the bosses.",
      "The Highway Agency was accused of ruining.",
      "The Highway Agency was accused of ruining the countryside.",
      "The Highways Agency was accused of ruining the failure of the Highways Agency to remove.",
      "The Highways Agency was accused of ruining the failure to remove rubbish.",
      "Sir Andrew Motion accused the Highway Agency of ruining.",
      "Sir Andrew Motion accused the Highway Agency of ruining the countryside.",
      "Sir Andrew Motion accused the Highways Agency of ruining the failing to remove rubbish.",
      "Fail to remove is ruining.",
      "Fail to remove rubbish is ruining the countryside.",
      "failing to remove",
      "Fail to remove rubbish"
    ]
  },
  {
    "instance_id": "realsumm-56",
    "summary": "<t> Simon Wood , 38 , from Oldham won Masterchef last Friday . </t> <t> Father - of - four got cooking skills by feeding culinary creations to Wood kids . </t> <t> The award - winning chef says one of chef favourite meals is a plain omelette . </t>",
    "summary_trees": [
      "# ::snt  Simon Wood , 38 , from Oldham won Masterchef last Friday . \n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Simon\"\n                  :op2 \"Wood\")\n            :age (t / temporal-quantity\n                  :quant 38\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Oldham\")))\n      :ARG1 (a / award\n            :name (n3 / name\n                  :op1 \"Masterchef\"))\n      :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))",
      "# ::snt  Father - of - four got cooking skills by feeding culinary creations to Wood kids . \n(g / get-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (c / child\n                        :quant 4)\n                  :ARG2 (f / father)))\n      :ARG1 (s / skill\n            :topic (c2 / cook-01))\n      :ARG2 (f2 / feed-01\n            :ARG0 p\n            :ARG1 (t / thing\n                  :ARG1-of (c3 / create-01\n                        :mod (c4 / culinary)))\n            :ARG2 (k / kid\n                  :mod (w / wood))))",
      "# ::snt  The award - winning chef says one of chef favourite meals is a plain omelette . \n(s / say-01\n      :ARG0 (c / chef\n            :ARG0-of (w / win-01\n                  :ARG1 (a / award)))\n      :ARG1 (o / omelette\n            :mod (p / plain)\n            :domain (m / meal\n                  :ARG1-of (ii / include-91\n                        :ARG2 (m2 / meal\n                              :ARG1-of (f / favor-01\n                                    :ARG0 c))))))"
    ],
    "tree": [
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 38)))",
      "(w / win-01\n   :ARG0 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\"))))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(w / win-01\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(w / win-01\n   :time (d / date-entity\n            :mod (l / last)))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 38))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\"))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 38))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 38))\n   :time (d / date-entity\n            :mod (l / last)))",
      "(w / win-01\n   :ARG0 (p / person\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :time (d / date-entity\n            :mod (l / last)))",
      "(w / win-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d / date-entity\n            :mod (l / last)))",
      "(w / win-01\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\"))\n   :time (d / date-entity\n            :mod (l / last)))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\"))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\"))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (c / child\n                              :quant 4))))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father))))",
      "(g / get-01\n   :ARG1 (s / skill\n            :topic (c2 / cook-01)))",
      "(g / get-01\n   :ARG2 (f2 / feed-01\n             :ARG0 (p / person)))",
      "(g / get-01\n   :ARG2 (f2 / feed-01\n             :ARG1 (t / thing\n                      :ARG1 (c3 / create-01\n                                :mod (c4 / culinary)))))",
      "(g / get-01\n   :ARG2 (f2 / feed-01\n             :ARG2 (k / kid\n                      :mod (w / wood))))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (s / skill\n            :topic (c2 / cook-01)))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (c / child\n                              :quant 4)))\n   :ARG2 (f2 / feed-01\n             :ARG0 p))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (c / child\n                              :quant 4)))\n   :ARG2 (f2 / feed-01\n             :ARG1 (t / thing\n                      :ARG1 (c3 / create-01\n                                :mod (c4 / culinary)))))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG2 (f2 / feed-01\n             :ARG2 (k / kid\n                      :mod (w / wood))))",
      "(g / get-01\n   :ARG1 (s / skill\n            :topic (c2 / cook-01))\n   :ARG2 (f2 / feed-01\n             :ARG0 (p / person)))",
      "(g / get-01\n   :ARG1 (s / skill\n            :topic (c2 / cook-01))\n   :ARG2 (f2 / feed-01\n             :ARG1 (t / thing\n                      :ARG1 (c3 / create-01\n                                :mod (c4 / culinary)))))",
      "(g / get-01\n   :ARG1 (s / skill\n            :topic (c2 / cook-01))\n   :ARG2 (f2 / feed-01\n             :ARG2 (k / kid\n                      :mod (w / wood))))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (s / skill\n            :topic (c2 / cook-01))\n   :ARG2 (f2 / feed-01\n             :ARG1 (t / thing\n                      :ARG1 (c3 / create-01\n                                :mod (c4 / culinary)))))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (s / skill\n            :topic (c2 / cook-01))\n   :ARG2 (f2 / feed-01\n             :ARG2 (k / kid\n                      :mod (w / wood))))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG1 (c / child\n                     :quant 4)))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG2 (f / father)))",
      "(h / have-rel-role-91\n   :ARG1 (c / child\n            :quant 4))",
      "(h / have-rel-role-91\n   :ARG1 (c / child\n            :quant 4)\n   :ARG2 (f / father))",
      "(s / say-01\n   :ARG0 (c / chef\n            :ARG0 (w / win-01\n                     :ARG1 (a / award))))",
      "(s / say-01\n   :ARG1 (o / omelette\n            :domain (m / meal\n                       :ARG1 (ii / include-91\n                                 :ARG2 (m2 / meal\n                                           :ARG1 (f / favor-01\n                                                    :ARG0 (c / chef)))))))",
      "(s / say-01\n   :ARG0 (c / chef\n            :ARG0 (w / win-01\n                     :ARG1 (a / award)))\n   :ARG1 (o / omelette\n            :mod (p / plain)))",
      "(s / say-01\n   :ARG0 (c / chef\n            :ARG0 (w / win-01\n                     :ARG1 (a / award)))\n   :ARG1 (o / omelette\n            :domain (m / meal\n                       :ARG1 (ii / include-91\n                                 :ARG2 (m2 / meal\n                                           :ARG1 (f / favor-01\n                                                    :ARG0 c))))))",
      "(c / chef\n   :ARG0 (w / win-01\n            :ARG1 (a / award)))",
      "(o / omelette\n   :domain (m / meal\n              :ARG1 (ii / include-91\n                        :ARG2 (m2 / meal\n                                  :ARG1 (f / favor-01\n                                           :ARG0 (c / chef))))))",
      "(o / omelette\n   :mod (p / plain)\n   :domain (m / meal\n              :ARG1 (ii / include-91\n                        :ARG2 (m2 / meal\n                                  :ARG1 (f / favor-01\n                                           :ARG0 (c / chef))))))"
    ],
    "smus": [
      "Simon Wood won.",
      "Oldham won.",
      "Masterchef won.",
      "Friday won.",
      "Simon Wood won the Masterchef.",
      "The 38-year-old won the Masterchef award.",
      "The year old won the Masterchef.",
      "Simon Wood won on Friday.",
      "Simon Wood won last.",
      "Oldham won on Friday.",
      "The year old won on Friday.",
      "Masterchef won on Friday.",
      "Simon Wood won the Masterchef on Friday.",
      "The 38-year-old won the Masterchef award on Friday.",
      "Oldham's Masterchef winner won on Friday.",
      "The year old won the Masterchef on Friday.",
      "The 4 children got.",
      "The Father got.",
      "got cooking skills.",
      "People got fed.",
      "Got to feeding the culinary creations.",
      "Got fed the wood kids.",
      "The father got the cooking skills.",
      "Four children got fed.",
      "Four children got fed a culinary creation.",
      "The Father got the feeding of the Wood Kids.",
      "Cooking skills got from feeding people.",
      "Cooking skills got to be feeding the culinary creations.",
      "Cooking skills got from feeding the wood kids.",
      "Father got his cooking skills from feeding the culinary creations.",
      "The father got the cooking skills from feeding the wood kids.",
      "The father has four children.",
      "feeding the culinary creations.",
      "Feeding the Wood Kids.",
      "Feeding the wood kids with culinary creations.",
      "\"Wining the award is a chef,\" says the chef.",
      "\"Meals that are the favorite of the chef are omelettes,\" says the chef.",
      "\"The plain omelette,\" says the chef, who won the award.",
      "\"Meals are one of my favorite meals,\" says the chef who won the award.",
      "winning the award is a chef.",
      "Meals that are \"favored\" by the chef are omelettes.",
      "Meals that are \"favored\" by the chef are plain omelettes."
    ]
  },
  {
    "instance_id": "realsumm-57",
    "summary": "<t> Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 . </t> <t> Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back . </t> <t> James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield . </t> <t> Burnley 's Danny Ings and Manchester United 's James Wilson up front . </t>",
    "summary_trees": [
      "# ::snt  Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 . \n(b / be-located-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Gerhard\"\n                  :op2 \"Tremmel\")\n            :poss (t / team\n                  :name (n2 / name\n                        :op1 \"Swansea\")))\n      :ARG2 (g / goal)\n      :location (b2 / behind\n            :op1 (t2 / team\n                  :ARG1-of (f / free-04)\n                  :quant (s / score-entity\n                        :op1 4\n                        :op2 4\n                        :op3 2))))",
      "# ::snt  Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back . \n(b / be-located-at-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Glen\"\n                        :op2 \"Johnson\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Kolo\"\n                        :op2 \"Toure\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Ron\"\n                        :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                  :name (n4 / name\n                        :op1 \"Luke\"\n                        :op2 \"Garbutt\")))\n      :ARG2 (b2 / back))",
      "# ::snt  James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield . \n(b / be-located-at-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"Milner\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Mikel\"\n                        :op2 \"Arteta\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Tom\"\n                        :op2 \"Cleverley\"))\n            :op4 (p4 / person\n                  :name (n4 / name\n                        :op1 \"Jonas\"\n                        :op2 \"Gutierrez\")))\n      :ARG2 (m / midfield))",
      "# ::snt  Burnley 's Danny Ings and Manchester United 's James Wilson up front . \n(a / and\n      :op1 (p / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Ingers\")\n            :poss (t / team\n                  :name (n2 / name\n                        :op1 \"Burnley\")))\n      :op2 (p2 / person\n            :name (n3 / name\n                  :op1 \"James\"\n                  :op2 \"Wilson\")\n            :poss (t2 / team\n                  :name (n4 / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\")))\n      :location (u / up-front))"
    ],
    "tree": [],
    "smus": []
  },
  {
    "instance_id": "realsumm-58",
    "summary": "<t> Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to plans junior prom together last year . </t> <t> For plans prom picture , the pair held up a sign which read : ' Real friends do n't count chromosomes ' . </t> <t> The sign references the fact that people with Down syndrome have an extra copy of chromosome 21 . </t>",
    "summary_trees": [
      "# ::snt  Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to plans junior prom together last year . \n(p / plan-01\n      :ARG0 (a / and\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 \"Mikenzy\"\n                        :op2 \"Snell\")\n                  :ARG0-of (s / study-01\n                        :location (h / high-school\n                              :location (s2 / state\n                                    :name (n2 / name\n                                          :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Matt\"\n                        :op2 \"Pliska\")\n                  :ARG0-of (h2 / have-03\n                        :ARG1 (m / medical-condition\n                              :name (n4 / name\n                                    :op1 \"Down\"\n                                    :op2 \"Syndrome\")))))\n      :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                  :mod (j / junior))\n            :manner (t / together))\n      :time (y / year\n            :mod (l / last)))",
      "# ::snt  For plans prom picture , the pair held up a sign which read : ' Real friends do n't count chromosomes ' . \n(h / hold-up-10\n      :ARG0 (p / pair)\n      :ARG1 (s / sign\n            :ARG0-of (r / read-01\n                  :ARG1 (c / count-01\n                        :polarity -\n                        :ARG0 (p2 / person\n                              :ARG0-of (h2 / have-rel-role-91\n                                    :ARG2 (f / friend\n                                          :ARG1-of (r2 / real-04))))\n                        :ARG1 (c2 / chromosome))))\n      :purpose (p3 / plan-01\n            :ARG1 (p4 / picture-01\n                  :ARG1 (p5 / prom))))",
      "# ::snt  The sign references the fact that people with Down syndrome have an extra copy of chromosome 21 . \n(r / reference-04\n      :ARG0 (s / sign)\n      :ARG1 (h / have-03\n            :ARG0 (p / person\n                  :ARG1 (m / medical-condition\n                        :name (n / name\n                              :op1 \"Down\"\n                              :op2 \"Syndrome\")))\n            :ARG0 p)\n      :ARG1 (c / copy-01\n            :ARG1 (c2 / chromosome\n                  :mod 21)\n            :mod (e / extra)))"
    ],
    "tree": [
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\")))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\")))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\"))))))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\")))))",
      "(p / plan-01\n   :ARG1 (g / go-02\n            :ARG0 (a / and)))",
      "(p / plan-01\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior))))",
      "(p / plan-01\n   :ARG1 (g / go-02\n            :manner (t / together)))",
      "(p / plan-01\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :ARG1 (g / go-02\n            :ARG0 (a / and)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior))))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :ARG1 (g / go-02\n            :manner (t / together)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :ARG1 (g / go-02\n            :ARG0 (a / and)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior))))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :ARG1 (g / go-02\n            :manner (t / together)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :ARG0 (a / and)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior))))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :manner (t / together)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :ARG0 (a / and)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior))))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :manner (t / together)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG1 (g / go-02\n            :ARG0 (a / and))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior)))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG1 (g / go-02\n            :manner (t / together))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :ARG1 (g / go-02\n            :ARG0 (a / and))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior)))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Snell\"))\n   :ARG1 (g / go-02\n            :manner (t / together))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :ARG1 (g / go-02\n            :ARG0 (a / and))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior)))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\"))\n   :ARG1 (g / go-02\n            :manner (t / together))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :ARG0 (a / and))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior)))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p2 / person\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :manner (t / together))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :ARG0 (a / and))\n   :time (y / year\n            :mod (l / last)))",
      "(p / plan-01\n   :ARG0 (p3 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :ARG4 (p4 / prom\n                      :mod (j / junior)))\n   :time (y / year\n            :mod (l / last)))",
      "(h / hold-up-10\n   :ARG1 (s / sign\n            :ARG0 (r / read-01\n                     :ARG1 (c / count-01\n                              :polarity -))))",
      "(h / hold-up-10\n   :purpose (p3 / plan-01\n                :ARG1 (p4 / picture-01\n                          :ARG1 (p5 / prom))))",
      "(h / hold-up-10\n   :ARG0 (p / pair)\n   :purpose (p3 / plan-01\n                :ARG1 (p4 / picture-01\n                          :ARG1 (p5 / prom))))",
      "(h / hold-up-10\n   :ARG1 (s / sign\n            :ARG0 (r / read-01\n                     :ARG1 (c / count-01\n                              :polarity -)))\n   :purpose (p3 / plan-01\n                :ARG1 (p4 / picture-01\n                          :ARG1 (p5 / prom))))",
      "(h / hold-up-10\n   :ARG0 (p / pair)\n   :ARG1 (s / sign\n            :ARG0 (r / read-01\n                     :ARG1 (c / count-01\n                              :polarity -)))\n   :purpose (p3 / plan-01\n                :ARG1 (p4 / picture-01\n                          :ARG1 (p5 / prom))))",
      "(s / sign\n   :ARG0 (r / read-01\n            :ARG1 (c / count-01\n                     :ARG1 (c2 / chromosome))))",
      "(r / reference-04\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))))",
      "(r / reference-04\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))))"
    ],
    "smus": [
      "Plans to go to junior prom.",
      "Plans to go together.",
      "Mikenzy Snell has plans to go.",
      "Mikenzy Snell plans to go to junior prom.",
      "Mikenzy Snell has plans to go together.",
      "Matt Pliska has plans to go.",
      "Matt Pliska plans to go to junior prom.",
      "Matt Pliska has plans to go together.",
      "Students in high school in Michigan have plans to go.",
      "High school students in Michigan plan to go to junior prom.",
      "High school students in Michigan plan to go together.",
      "People with Down Syndrome have plans to go.",
      "People with Down syndrome have plans to go to junior prom.",
      "People with Down Syndrome have plans to go together.",
      "Mikenzy Snell made plans last year.",
      "Matt Pliska made plans last year.",
      "Students in high school in Michigan made plans last year.",
      "Last year, people with Down syndrome had plans.",
      "Last year there were plans to go.",
      "Plans were made last year to go to junior prom.",
      "Plans to go together were made last year.",
      "Mikenzy Snell made plans to go last year.",
      "Mikenzy Snell had plans last year to go to junior prom.",
      "Mikenzy Snell made plans to go together last year.",
      "Matt Pliska had plans last year to go.",
      "Matt Pliska had plans last year to go to junior prom.",
      "Matt Pliska had plans to go together last year.",
      "Last year, students at Michigan high school planned to go.",
      "Last year, high school students in Michigan planned to go to junior prom.",
      "Last year, students from Michigan high schools planned to go together.",
      "Last year, people with Down syndrome had plans to go and do so.",
      "Last year, people with Down syndrome had plans to go to junior prom.",
      "Last year, people with Down syndrome had plans to go together.",
      "Studying in high school in Michigan.",
      "Matt Pliska has Down Syndrome.",
      "has Down syndrome.",
      "Go to junior prom.",
      "Go to junior prom together.",
      "The sign read \"Uncounted\" held up.",
      "Hold up for prom pictures.",
      "The pair held up for prom pictures.",
      "The sign read \"Uncounted\" held up for prom pictures.",
      "The pair held up a \"count doesn't count\" sign for prom pictures.",
      "Read: \"It doesn't count.\"",
      "The sign references people with Down Syndrome.",
      "People with Down Syndrome have it."
    ]
  },
  {
    "instance_id": "realsumm-59",
    "summary": "<t> Police say Michael Scott Shemansky came to Police attention after Shemansky failed to appear for a supervised visit with Shemansky son Saturday . </t> <t> That same day mother Sandra Shemansky , 57 , was found dead at the home Police shared in Winter Garden , Florida . </t> <t> Michael Shemansky was going through a difficult divorce and neighbors believe the stress may have caused Shemansky to snap . </t>",
    "summary_trees": [
      "# ::snt  Police say Michael Scott Shemansky came to Police attention after Shemansky failed to appear for a supervised visit with Shemansky son Saturday . \n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                  :name (n / name\n                        :op1 \"Michael\"\n                        :op2 \"Scott\"\n                        :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                  :ARG0 p\n                  :ARG1 p2)\n            :time (a2 / after\n                  :op1 (f / fail-01\n                        :ARG1 p2\n                        :ARG2 (a3 / appear-01\n                              :ARG1 p2\n                              :purpose (v / visit-01\n                                    :ARG0 p2\n                                    :ARG1 (p3 / person\n                                          :ARG0-of (h / have-rel-role-91\n                                                :ARG1 p2\n                                                :ARG2 (s2 / son)))\n                                    :ARG1-of (s3 / supervise-01\n                                          :ARG0 p))\n                              :time (d / date-entity\n                                    :weekday (s4 / saturday)))))))",
      "# ::snt  That same day mother Sandra Shemansky , 57 , was found dead at the home Police shared in Winter Garden , Florida . \n(f / find-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Sandra\"\n                  :op2 \"Shemansky\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                  :quant 57\n                  :unit (y / year)))\n      :ARG2 (d / die-01\n            :ARG1 p)\n      :time (d2 / day\n            :ARG1-of (s / same-01)\n            :mod (t2 / that))\n      :location (h2 / home\n            :ARG1-of (s2 / share-01\n                  :ARG0 (p2 / police)\n                  :location (c / city\n                        :name (n2 / name\n                              :op1 \"Winter\"\n                              :op2 \"Garden\")\n                        :location (s3 / state\n                              :name (n3 / name\n                                    :op1 \"Florida\"))))))",
      "# ::snt  Michael Shemansky was going through a difficult divorce and neighbors believe the stress may have caused Shemansky to snap . \n(a / and\n      :op1 (g / go-through-20\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Michael\"\n                        :op2 \"Shemansky\"))\n            :ARG1 (d / divorce-01\n                  :ARG0 p\n                  :mod (d2 / difficult)))\n      :op2 (b / believe-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (n2 / neighbor)))\n            :ARG1 (p3 / possible-01\n                  :ARG1 (c / cause-01\n                        :ARG0 (s / stress-02)\n                        :ARG1 (s2 / snap-04\n                              :ARG1 p)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Michael\"\n                               :op2 \"Scott\"\n                               :op3 \"Shemansky\"))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :ARG4 (a / attend-02\n                     :ARG0 (p / police))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :ARG4 (a / attend-02\n                     :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :time (d / date-entity\n                                                 :weekday (s4 / saturday)))))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG1 (s3 / supervise-01\n                                                              :ARG0 (p / police))))))))",
      "(s / say-01\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG2 (s2 / son)))))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :ARG4 (a / attend-02\n                     :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :ARG4 (a / attend-02\n                     :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :time (d / date-entity\n                                                 :weekday (s4 / saturday)))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG1 (s3 / supervise-01\n                                                              :ARG0 p)))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG2 (a3 / appear-01\n                                        :purpose (v / visit-01\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG2 (s2 / son)))))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))",
      "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))",
      "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))",
      "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))",
      "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))))",
      "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 (p / police)))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2)))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG0 p2)))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2)))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 (p / police)))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG2 (s2 / son))))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2)))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG0 p2)))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2)))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 (p / police)))))))",
      "(c / come-01\n   :ARG4 (a / attend-02\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG2 (s2 / son))))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2)))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG0 p2)))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2)))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 p))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG2 (s2 / son))))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2)))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG0 p2)))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2)))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 (p / police)))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG2 (a3 / appear-01\n                               :purpose (v / visit-01\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG2 (s2 / son))))))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Michael\"\n             :op2 \"Scott\"\n             :op3 \"Shemansky\"))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG2 (a3 / appear-01\n                      :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG2 (a3 / appear-01\n                      :purpose (v / visit-01\n                                  :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG2 (a3 / appear-01\n                      :time (d / date-entity\n                               :weekday (s4 / saturday)))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG2 (a3 / appear-01\n                      :purpose (v / visit-01\n                                  :ARG1 (p3 / person\n                                            :ARG0 (h / have-rel-role-91\n                                                     :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG2 (a3 / appear-01\n                      :purpose (v / visit-01\n                                  :ARG1 (s3 / supervise-01\n                                            :ARG0 (p / police))))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG2 (a3 / appear-01\n                      :purpose (v / visit-01\n                                  :ARG1 (p3 / person\n                                            :ARG0 (h / have-rel-role-91\n                                                     :ARG2 (s2 / son)))))))",
      "(f / fail-01\n   :ARG2 (a3 / appear-01\n             :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))",
      "(f / fail-01\n   :ARG2 (a3 / appear-01\n             :purpose (v / visit-01\n                         :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))",
      "(f / fail-01\n   :ARG2 (a3 / appear-01\n             :time (d / date-entity\n                      :weekday (s4 / saturday))))",
      "(f / fail-01\n   :ARG2 (a3 / appear-01\n             :purpose (v / visit-01\n                         :ARG1 (p3 / person\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))))",
      "(f / fail-01\n   :ARG2 (a3 / appear-01\n             :purpose (v / visit-01\n                         :ARG1 (s3 / supervise-01\n                                   :ARG0 (p / police)))))",
      "(a3 / appear-01\n    :purpose (v / visit-01\n                :ARG1 (p3 / person\n                          :ARG0 (h / have-rel-role-91\n                                   :ARG2 (s2 / son))))\n    :time (d / date-entity\n             :weekday (s4 / saturday)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\")))))",
      "(f / find-01\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01)))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 57))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG2 (d / die-01\n            :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\"))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 (p2 / police))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :name (n2 / name\n                                                  :op1 \"Winter\"\n                                                  :op2 \"Garden\")))))",
      "(f / find-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :location (c / city\n                                        :location (s3 / state\n                                                      :name (n3 / name\n                                                                :op1 \"Florida\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Sandra\"\n            :op2 \"Shemansky\"))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :mod (d2 / difficult))))",
      "(a / and\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (s / stress-02)))))",
      "(a / and\n   :op2 (b / believe-01\n           :ARG0 (p2 / person\n                     :ARG0 (h / have-rel-role-91\n                              :ARG2 (n2 / neighbor)))))",
      "(a / and\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG1 (s2 / snap-04\n                                        :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Michael\"\n                             :op2 \"Shemansky\")))\n   :op2 (b / believe-01\n           :ARG0 (p2 / person\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Michael\"\n                             :op2 \"Shemansky\")))\n   :op2 (b / believe-01\n           :ARG0 (p2 / person\n                     :ARG0 (h / have-rel-role-91\n                              :ARG2 (n2 / neighbor)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Michael\"\n                             :op2 \"Shemansky\")))\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG1 (s2 / snap-04\n                                        :ARG1 p)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :ARG0 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (s / stress-02)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :ARG0 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))\n   :op2 (b / believe-01\n           :ARG0 (p2 / person\n                     :ARG0 (h / have-rel-role-91\n                              :ARG2 (n2 / neighbor)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :ARG0 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG1 (s2 / snap-04\n                                        :ARG1 p)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :mod (d2 / difficult)))\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (s / stress-02)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :mod (d2 / difficult)))\n   :op2 (b / believe-01\n           :ARG0 (p2 / person\n                     :ARG0 (h / have-rel-role-91\n                              :ARG2 (n2 / neighbor)))))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG1 (d / divorce-01\n                    :mod (d2 / difficult)))\n   :op2 (b / believe-01\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG1 (s2 / snap-04\n                                        :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))))))",
      "(g / go-through-20\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Shemansky\")))",
      "(g / go-through-20\n   :ARG1 (d / divorce-01\n            :mod (d2 / difficult)))",
      "(g / go-through-20\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Shemansky\"))\n   :ARG1 (d / divorce-01\n            :ARG0 p))",
      "(g / go-through-20\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Shemansky\"))\n   :ARG1 (d / divorce-01\n            :mod (d2 / difficult)))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n2 / neighbor))))",
      "(b / believe-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG0 (s / stress-02))))",
      "(b / believe-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG1 (s2 / snap-04\n                                :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG0 (s / stress-02))))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG1 (s2 / snap-04\n                                :ARG1 p))))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n2 / neighbor)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG0 (s / stress-02))))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n2 / neighbor)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG1 (s2 / snap-04\n                                :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))))",
      "(p2 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))",
      "(p2 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG2 (n2 / neighbor)))"
    ],
    "smus": [
      "\"It came from Michael Scott Shemansky.\"",
      "\"It came with the attention of the police,\" they say.",
      "\"It came after Michael Scott Shemansky failed,\" they say.",
      "\"It came with the attention of Michael Scott Shemansky,\" they say.",
      "\"It came after Michael Scott Shemansky failed to appear,\" they say.",
      "The report said it came after the person, Michael Scott Shemansky, failed to appear for a visit.",
      "\"It came after it failed to appear Saturday,\" they say.",
      "The report said it came after the person of Michael Scott Shemansky failed to appear for a visit.",
      "The report said it came after a failed appearance for a police surveillance visit.",
      "The came after a failed appearance for a visit to the son, the report said.",
      "Police say they came for attention.",
      "Police say it came after Michael Scott Shemansky failed.",
      "Police say the attention came from Michael Scott Shemansky.",
      "Police say it came after Michael Scott Shemansky failed to appear.",
      "Police say the came after a failed appearance for Michael Scott Shemansky's visit.",
      "Police say the came after a failed appearance Saturday.",
      "Police say the came after a failed appearance for a visit to Michael Scott Shemansky's person.",
      "Police say the came after a failed appearance for a surveillance visit.",
      "Police say the came after a failed appearance for a visit to the son.",
      "The police came to attention.",
      "The attention came from Michael Scott Shemansky.",
      "It came after Michael Scott Shemansky failed.",
      "It came after Michael Scott Shemansky failed to appear.",
      "It came after the person, Michael Scott Shemansky, failed to appear for the visit.",
      "It came after the person of Michael Scott Shemansky failed to appear for a visit.",
      "It came after a failed appearance for a police surveillance visit.",
      "Michael Scott Shemansky came under police attention.",
      "Michael Scott Shemansky came to his attention.",
      "Michael Scott Shemansky came after he failed.",
      "Michael Scott Shemansky came after he failed to appear.",
      "Michael Scott Shemansky came after he failed to appear for his visit.",
      "Michael Scott Shemansky came after a failed appearance Saturday.",
      "Michael Scott Shemansky came after he failed to appear for a visit to his person.",
      "Michael Scott Shemansky came after a failed appearance for a police surveillance visit.",
      "Michael Scott Shemansky came after a failed appearance for a visit to the son.",
      "The police attention came after Michael Scott Shemansky failed.",
      "The police attention came after Michael Scott Shemansky failed to appear.",
      "The police attention came after the person named Michael Scott Shemansky failed to appear for the visit.",
      "The police attention came after a failed appearance Saturday.",
      "The police attention came after the person of Michael Scott Shemansky failed to appear for a visit.",
      "After he failed, Michael Scott Shemansky came to attention.",
      "Michael Scott Shemansky's attention came after he failed to appear.",
      "Michael Scott Shemansky's attention came after he failed to appear for a visit.",
      "Michael Scott Shemansky's attention came after a failed appearance Saturday.",
      "Michael Scott Shemansky's attention came after he failed to appear for a visit to the person.",
      "Michael Scott Shemansky's attention came after a police surveillance visit failed to appear.",
      "Michael Scott Shemansky's attention came after he failed to appear for a visit to the son.",
      "Michael Scott Shemansky came under police attention after he failed.",
      "Michael Scott Shemansky came under police attention after failing to appear.",
      "Michael Scott Shemansky came under police attention after failing to appear for a visit.",
      "Michael Scott Shemansky came under police attention after failing to appear Saturday.",
      "Michael Scott Shemansky came under police attention after he failed to appear for a visit to his person.",
      "Michael Scott Shemansky came under police attention after he failed to appear for a police surveillance visit.",
      "Michael Scott Shemansky came under police attention after he failed to appear for a visit to the son.",
      "Michael Scott Shemansky came to attention after he failed.",
      "Michael Scott Shemansky came to attention after failing to appear.",
      "Michael Scott Shemansky came for attention after failing to appear for a visit.",
      "Michael Scott Shemansky came under attention after failing to appear Saturday.",
      "Michael Scott Shemansky came to his attention after failing to appear for a visit to the person.",
      "Michael Scott Shemansky came under attention after failing to appear for a police surveillance visit.",
      "Michael Scott Shemansky came to his attention after failing to appear for a visit to the son.",
      "After Michael Scott Shemansky failed.",
      "After Michael Scott Shemansky failed to appear.",
      "After the failure to appear for Michael Scott Shemansky's visit,",
      "After failing to appear Saturday.",
      "After the failure to appear for the visit of Michael Scott Shemansky,",
      "After failing to appear for a police supervision visit.",
      "After failing to appear for a visit to the son.",
      "Michael Scott Shemansky failed to appear.",
      "failed to appear for Michael Scott Shemansky's visit.",
      "failed to appear Saturday.",
      "failed to appear for a visit to Michael Scott Shemansky.",
      "failed to appear for a police surveillance visit.",
      "failed to appear for a visit to the son.",
      "Visit to the son",
      "Sandra Shemansky was found.",
      "The mother was found.",
      "The 57-year-old was found.",
      "Sandra Shemansky was found dead.",
      "Found the same day.",
      "Found that day.",
      "The home where the police shared was found.",
      "Found in a home shared in the Winter Garden.",
      "The mother was found dead.",
      "The 57-year-old was found dead.",
      "Sandra Shemansky was found the same day.",
      "Sandra Shemansky was found that day.",
      "The mother was found the same day.",
      "That day, the mother was found.",
      "The 57-year-old was found the same day.",
      "That day, the 57-year-old was found.",
      "The person was found on the same day.",
      "Sandra Shemansky was found in a home shared by the police.",
      "Sandra Shemansky was found in the home they shared in Winter Garden.",
      "Sandra Shemansky was found in a Florida shared home.",
      "The mother was found in a home shared by the police.",
      "The mother was found in the home they shared in Winter Garden.",
      "The mother was found in a Florida shared home.",
      "The 57-year-old was found in a home shared by police.",
      "The 57-year-old was found in a Florida shared home.",
      "The year old was found in a home shared by police.",
      "The year old was found in the home the shared in Winter Garden.",
      "The year old was found in a Florida shared home.",
      "On the same day, Sandra Shemansky was found dead.",
      "That day, Sandra Shemansky was found dead.",
      "Sandra Shemansky's death was found in a home shared by the police.",
      "Sandra Shemansky's death was found in the home they shared in Winter Garden.",
      "Sandra Shemansky's death was found in a Florida shared home.",
      "The same day, found in the home the two shared in the Winter Garden.",
      "The same day, the shared home of Florida was found.",
      "That day, the shared home in Winter Garden was found.",
      "That day, the shared home was found in Florida.",
      "Sandra Shemansky was found dead that day.",
      "On the same day, the mother was found dead.",
      "That day, the mother was found dead.",
      "On the same day, 57 - year old was found dead.",
      "That day, 57, was found dead.",
      "Sandra Shemansky was found dead at a home shared by the police.",
      "Sandra Shemansky was found dead in the home they shared in Winter Garden.",
      "Sandra Shemansky was found dead in the home they shared in Florida.",
      "The mother was found dead at the home the police shared.",
      "The mother was found dead in the home they shared in Winter Garden.",
      "The mother was found dead in the home the two shared in Florida.",
      "The 57-year-old was found dead at a home shared by police.",
      "The 57-year-old was found dead in the home they shared in Winter Garden.",
      "The 57-year-old was found dead in a Florida shared home.",
      "Sandra Shemansky was found the same day at the home the police shared.",
      "Sandra Shemansky was found the same day in the home they shared in Winter Garden.",
      "Sandra Shemansky was found the same day in a Florida shared home.",
      "Sandra Shemansky was found that day at the home the police shared.",
      "Sandra Shemansky was found that day in the home they shared in the Winter Garden.",
      "Sandra Shemansky was found that day in the home the two shared in Florida.",
      "The mother was found the same day at the home the police shared.",
      "The mother was found the same day in the home they shared in the Winter Garden.",
      "The mother was found the same day in the home they shared in Florida.",
      "That day, the mother was found in the home where the police shared.",
      "That day, the mother was found in the home they shared in the Winter Garden.",
      "That day, the mother was found in the home they shared in Florida.",
      "The 57-year-old was found the same day at a home the police shared.",
      "The 57-year-old was found the same day in the home they shared in Winter Garden.",
      "The 57-year-old was found the same day at a home they shared in Florida.",
      "The 57-year-old was found that day at the home the police shared.",
      "That day, the 57-year-old was found in the home the two shared in Winter Garden.",
      "That day, the 57-year-old was found in the home the two shared in Florida.",
      "The year old was found the same day at the home the police shared.",
      "The year old was found the same day in the home they shared in Florida.",
      "The year old was found that day at the home the police shared.",
      "Sandra Shemansky was found dead the same day at the home the police shared.",
      "Sandra Shemansky was found dead the same day in the home they shared in Winter Garden.",
      "Sandra Shemansky was found dead the same day in the Florida shared home.",
      "Sandra Shemansky was found dead that day at the home the police shared.",
      "Sandra Shemansky was found dead that day in the home they shared in the Winter Garden.",
      "Sandra Shemansky was found dead that day in the home they shared in Florida.",
      "Sandra Shemansky was found dead the same day in the home they shared in Florida.",
      "Sandra Shemansky was found dead that day in the home they shared in Winter Garden.",
      "The mother was found dead the same day at the home the police shared.",
      "On the same day, the mother was found dead in the home they shared in Winter Garden.",
      "The mother was found dead the same day in the home they shared in Florida.",
      "That day, the mother was found dead at the home the police shared.",
      "That day, the mother was found dead in the home they shared in the Winter Garden.",
      "That day, the mother was found dead in the home they shared in Florida.",
      "The 57-year-old was found dead the same day at a home police shared.",
      "The 57-year-old was found dead the same day at the home they shared in Winter Garden.",
      "The 57-year-old was found dead the same day at the home they shared in Florida.",
      "That day, the 57-year-old was found dead in a home shared by the police.",
      "That day, the 57-year-old was found dead in the home they shared in Winter Garden.",
      "That day, 57, was found dead in the home they shared in Florida.",
      "The home the police shared.",
      "The home the shared in the Winter Garden.",
      "The home of the shared in Florida.",
      "Shared in the Winter Garden.",
      "Shared in Florida.",
      "Police shared in Winter Garden.",
      "Police shared in Florida.",
      "and going through a difficult divorce.",
      "And believe that stress can be caused.",
      "And neighbors believe.",
      "And believe it is possible that Michael Shemansky was caused to snap.",
      "Michael Shemansky went through and his people believe.",
      "Michael Shemansky went through and neighbors believe.",
      "Michael Shemansky went through and believe that he may have snapped.",
      "Michael Shemansky went through a divorce and believe that stress could have caused it.",
      "Michael Shemansky went through a divorce and neighbors believe.",
      "Michael Shemansky went through a divorce and believe that could have caused him to snap.",
      "Divorce is difficult and people believe it can be caused by stress.",
      "Divorce is difficult and neighbors believe.",
      "Divorce is going through, and some believe that Michael Shemansky could have snapped.",
      "Michael Shemansky went through.",
      "Going through a difficult divorce.",
      "Michael Shemansky went through a divorce.",
      "Michael Shemansky went through a difficult divorce.",
      "Neighbors believe.",
      "Some believe stress could have caused.",
      "Some believe Michael Shemansky could have snapped.",
      "Michael Shemansky and others believe that stress could have caused it.",
      "Michael Shemansky and others believe that he may have been caused to snap.",
      "Neighbors believe stress may have caused.",
      "Neighbors believe Michael Shemansky could have snapped.",
      "Stress can be caused.",
      "Michael Shemansky may have snapped.",
      "Michael Shemansky was caused to snap."
    ]
  },
  {
    "instance_id": "realsumm-60",
    "summary": "<t> Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday . </t> <t> Pep Guardiola 's side progressed 7 - 4 on aggregate to reach semi - finals . </t> <t> Thomas Muller scored 27th Champions League goal to pass Mario Gomez . </t> <t> Muller is now the leading German scorer in the competition . </t> <t> After game Muller led the celebrations with supporters using a megaphone . </t>",
    "summary_trees": [
      "# ::snt  Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday . \n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Bayern\"\n                  :op2 \"Munich\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Porto\"))\n      :ARG2 (g / game\n            :name (n3 / name\n                  :op1 \"Champions\"\n                  :op2 \"League\"))\n      :time (d / date-entity\n            :weekday (t3 / tuesday))\n      :quant (s / score-entity\n            :op1 6\n            :op2 1))",
      "# ::snt  Pep Guardiola 's side progressed 7 - 4 on aggregate to reach semi - finals . \n(p / progress-01\n      :ARG1 (s / side\n            :poss (p2 / person\n                  :name (n / name\n                        :op1 \"Pep\"\n                        :op2 \"Guardiola\")))\n      :ARG4 (r / reach-01\n            :ARG0 s\n            :ARG1 (f / final\n                  :mod (s2 / semi)))\n      :manner (s3 / score-entity\n            :op1 7\n            :op2 4)\n      :ARG4-of (a / aggregate-01))",
      "# ::snt  Thomas Muller scored 27th Champions League goal to pass Mario Gomez . \n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Thomas\"\n                  :op2 \"Muller\"))\n      :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                  :value 27)\n            :mod (g2 / game\n                  :name (n2 / name\n                        :op1 \"Champions\"\n                        :op2 \"League\")))\n      :ARG2-of (p2 / pass-03\n            :ARG0 p\n            :ARG1 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\"))))",
      "# ::snt  Muller is now the leading German scorer in the competition . \n(p / person\n      :name (n / name\n            :op1 \"Muller\")\n      :ARG0-of (s / score-01\n            :ARG2 (p2 / person\n                  :ARG0-of (c / compete-01))\n            :ARG3 (l / lead-01\n                  :ARG0 p\n                  :ARG1 p2))\n      :mod (c2 / country\n            :name (n2 / name\n                  :op1 \"Germany\"))\n      :time (n3 / now))",
      "# ::snt  After game Muller led the celebrations with supporters using a megaphone . \n(l / lead-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Muller\"))\n      :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                  :ARG0-of (s / support-01)\n                  :ARG0-of (u / use-01\n                        :ARG1 (m / megaphone))))\n      :time (a / after\n            :op1 (g / game)))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\")))",
      "(b / beat-03\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\")))",
      "(b / beat-03\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :quant (s / score-entity\n             :op2 1))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :quant (s / score-entity\n             :op2 1))",
      "(b / beat-03\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))",
      "(b / beat-03\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :quant (s / score-entity\n             :op2 1))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\")))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :quant (s / score-entity\n             :op2 1))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op2 1))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op1 6))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op1 6))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\"))))",
      "(p / progress-01\n   :ARG4 (r / reach-01\n            :ARG0 (s / side)))",
      "(p / progress-01\n   :ARG4 (r / reach-01\n            :ARG1 (f / final\n                     :mod (s2 / semi))))",
      "(p / progress-01\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG0 s))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG1 (f / final\n                     :mod (s2 / semi))))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(p / progress-01\n   :ARG4 (r / reach-01\n            :ARG0 (s / side))\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(p / progress-01\n   :ARG4 (r / reach-01\n            :ARG1 (f / final\n                     :mod (s2 / semi)))\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG0 s)\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG1 (f / final\n                     :mod (s2 / semi)))\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(s / side\n   :poss (p2 / person\n             :name (n / name\n                      :op1 \"Pep\"\n                      :op2 \"Guardiola\")))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\")))",
      "(s / score-01\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)))",
      "(s / score-01\n   :ARG1 (g / goal\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\"))))",
      "(s / score-01\n   :ARG2 (p2 / pass-03\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\"))))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG2 (p2 / pass-03\n             :ARG0 p))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG2 (p2 / pass-03\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))",
      "(s / score-01\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27))\n   :ARG2 (p2 / pass-03\n             :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))))",
      "(s / score-01\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27))\n   :ARG2 (p2 / pass-03\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))",
      "(s / score-01\n   :ARG1 (g / goal\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))))",
      "(s / score-01\n   :ARG1 (g / goal\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27))\n   :ARG2 (p2 / pass-03\n             :ARG0 p))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27))\n   :ARG2 (p2 / pass-03\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG0 p))",
      "(p / person\n   :name (n / name\n            :op1 \"Muller\"))",
      "(p / person\n   :ARG0 (s / score-01\n            :ARG2 (p2 / person\n                      :ARG0 (c / compete-01))))",
      "(p / person\n   :ARG0 (s / score-01\n            :ARG3 (l / lead-01\n                     :ARG0 p)))",
      "(p / person\n   :ARG0 (s / score-01\n            :ARG3 (l / lead-01\n                     :ARG1 (p2 / person))))",
      "(p / person\n   :mod (c2 / country\n            :name (n2 / name\n                      :op1 \"Germany\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Muller\")\n   :ARG0 (s / score-01\n            :ARG2 (p2 / person\n                      :ARG0 (c / compete-01))))",
      "(p / person\n   :name (n / name\n            :op1 \"Muller\")\n   :ARG0 (s / score-01\n            :ARG3 (l / lead-01\n                     :ARG0 p)))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\")))",
      "(l / lead-02\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01))))",
      "(l / lead-02\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone)))))",
      "(l / lead-02\n   :time (a / after\n            :op1 (g / game)))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01))))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone)))))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :time (a / after\n            :op1 (g / game)))",
      "(l / lead-02\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone))))\n   :time (a / after\n            :op1 (g / game)))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01)))\n   :time (a / after\n            :op1 (g / game)))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone))))\n   :time (a / after\n            :op1 (g / game)))",
      "(p / person\n   :name (n / name\n            :op1 \"Muller\"))"
    ],
    "smus": [
      "Bayern Munich beat",
      "beat the Champions League",
      "Beat by 6.",
      "beat one",
      "Bayern Munich beat by 6",
      "Bayern Munich won by 1 point.",
      "The Champions League game was beaten Tuesday.",
      "The Champions League game beat by 6",
      "The Champions League game beat by 1",
      "Bayern Munich beat Porto 6-1.",
      "Bayern Munich beat the Champions League game Tuesday.",
      "Bayern Munich beat the Champions League by 6 goals.",
      "The Champions League game was beaten by six on Tuesday.",
      "Bayern M\u00fcnchen beat Porto 6-1 in the Champions League.",
      "Bayern Munich beat Porto 6-1 on Tuesday.",
      "Bayern Munich beat the Champions League game 6-1 on Tuesday.",
      "Bayern M\u00fcnchen beat Porto 6-1 in the Champions League game Tuesday.",
      "Pep Guardiola's side progressed.",
      "Progressed to reach the side.",
      "Progressed to reach semi-finals.",
      "Progressed 7-4.",
      "Pep Guardiola's side progressed to reach.",
      "Pep Guardiola's side progressed to reach the semi-finals.",
      "Pep Guardiola's side progressed 7-4.",
      "The side progressed to reach by 7-4.",
      "Progressed to reach the semi-finals with 7-4.",
      "Pep Guardiola's side progressed to reach with 7-4.",
      "Pep Guardiola's side progressed to reach the semi-finals with 7-4.",
      "Reach semi-finals",
      "Thomas Muller scored.",
      "The 27th goal scored.",
      "The Champions League goal scored.",
      "Scored to pass Mario Gomez",
      "Thomas Muller scored the 27th goal.",
      "Thomas Muller scored the Champions League goal.",
      "Thomas Muller scored to pass Mario Gomez.",
      "The 27th goal was scored by Thomas Muller.",
      "The 27th goal scored to pass Mario Gomez.",
      "The Champions League goal scored by Thomas Muller.",
      "The Champions League goal scored to pass Mario Gomez.",
      "Thomas Muller scored the 27th goal to pass.",
      "Thomas Muller scored the 27th goal to pass Mario Gomez.",
      "Thomas Muller scored the Champions League goal to pass.",
      "Thomas Muller scored the Champions League goal to pass Mario Gomez.",
      "Muller: Leading score",
      "The leading scorer was German.",
      "Muller is German with the leading score.",
      "Muller is now the leading scorer.",
      "Leading score",
      "The competition's score is now leading.",
      "The competition scored a leading score.",
      "Muller led.",
      "led to celebrations with supporters.",
      "led to celebrations with people using the megaphone.",
      "Lead after the game.",
      "Muller led celebrations with supporters.",
      "Muller led celebrations with people using the megaphone.",
      "Muller led after the game.",
      "After the game, celebrations led to people using the megaphones.",
      "Muller led celebrations with supporters after the game.",
      "After the game, Muller led celebrations with people using the megaphone.",
      "Celebrations with people using a megaphone"
    ]
  },
  {
    "instance_id": "realsumm-61",
    "summary": "<t> Domenico Rancadore given a seven - year sentence by Italian court in 1999 . </t> <t> Rancadore was convicted for role as a ' man of honour ' , taking bribes from builders . </t> <t> In February the Sicilian Mafia fugitive lost battle against extradition to Italy . </t> <t> Today Mafia emerged that the 65-year - old 's case expired in October last year . </t>",
    "summary_trees": [
      "# ::snt  Domenico Rancadore given a seven - year sentence by Italian court in 1999 . \n(s / sentence-01\n      :ARG0 (c / court\n            :mod (c2 / country\n                  :name (n / name\n                        :op1 \"Italy\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Domenico\"\n                  :op2 \"Rancadore\"))\n      :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year))\n      :time (d / date-entity\n            :year 1999))",
      "# ::snt  Rancadore was convicted for role as a ' man of honour ' , taking bribes from builders . \n(c / convict-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Rancadore\"))\n      :ARG2 (a / and\n            :op1 (r / role\n                  :mod (m / man\n                        :mod (h / honor)))\n            :op2 (b / bribe-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :ARG0-of (b2 / build-01)))))",
      "# ::snt  In February the Sicilian Mafia fugitive lost battle against extradition to Italy . \n(l / lose-03\n      :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                  :name (n / name\n                        :op1 \"Mafia\"))\n            :mod (ii / island\n                  :name (n2 / name\n                        :op1 \"Sicily\")))\n      :ARG1 (b / battle-01\n            :ARG0 f\n            :ARG1 (e / extradite-01\n                  :ARG1 f\n                  :ARG3 (c2 / country\n                        :name (n3 / name\n                              :op1 \"Italy\"))))\n      :time (d / date-entity\n            :month 2))",
      "# ::snt  Today Mafia emerged that the 65-year - old 's case expired in October last year . \n(e / emerge-02\n      :ARG0 (c / criminal-organization\n            :name (n / name\n                  :op1 \"Mafia\"))\n      :ARG1 (e2 / expire-01\n            :ARG1 (c2 / case-03\n                  :ARG2 (p / person\n                        :age (t / temporal-quantity\n                              :quant 65\n                              :unit (y / year))))\n            :time (d / date-entity\n                  :month 10\n                  :mod (y2 / year\n                        :mod (l / last))))\n      :time (t2 / today))"
    ],
    "tree": [
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\"))))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\")))",
      "(s / sentence-01\n   :ARG2 (t / temporal-quantity\n            :unit (y / year)))",
      "(s / sentence-01\n   :time (d / date-entity\n            :year 1999))",
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG2 (t / temporal-quantity\n            :quant 7))",
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG2 (t / temporal-quantity\n            :unit (y / year)))",
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :time (d / date-entity\n            :year 1999))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :unit (y / year)))",
      "(s / sentence-01\n   :ARG2 (t / temporal-quantity\n            :unit (y / year))\n   :time (d / date-entity\n            :year 1999))",
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :unit (y / year)))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Rancadore\")))",
      "(c / convict-01\n   :ARG2 (r / role\n            :mod (m / man\n                    :mod (h / honor))))",
      "(c / convict-01\n   :ARG2 (b / bribe-01\n            :ARG0 (p / person :name (n / name :op1 \"Rancadore\"))))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Rancadore\"))\n   :ARG2 (r / role\n            :mod (m / man\n                    :mod (h / honor))))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Rancadore\"))\n   :ARG2 (b / bribe-01\n            :ARG0 p))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Rancadore\"))\n   :ARG2 (b / bribe-01\n            :ARG1 (p2 / person\n                      :ARG0 (b2 / build-01))))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\"))))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (ii / island\n                     :name (n2 / name\n                               :op1 \"Sicily\"))))",
      "(l / lose-03\n   :ARG1 (b / battle-01\n            :ARG0 (f / fugitive)))",
      "(l / lose-03\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG1 (f / fugitive))))",
      "(l / lose-03\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\")))))",
      "(l / lose-03\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :ARG1 (b / battle-01\n            :ARG0 f))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG1 f)))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\")))))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (ii / island\n                     :name (n2 / name\n                               :op1 \"Sicily\")))\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\")))))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG1 (b / battle-01\n            :ARG0 (f / fugitive))\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG1 (f / fugitive)))\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\"))))\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :ARG1 (b / battle-01\n            :ARG0 f)\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG1 f))\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\")))\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\"))))\n   :time (d / date-entity\n            :month 2))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (ii / island\n                     :name (n2 / name\n                               :op1 \"Sicily\")))\n   :ARG1 (b / battle-01\n            :ARG1 (e / extradite-01\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\"))))\n   :time (d / date-entity\n            :month 2))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\")))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :quant 65)))))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :month 10)))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :mod (y2 / year\n                               :mod (l / last)))))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :unit (y / year))))))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :quant 65)))))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :mod (y2 / year\n                               :mod (l / last)))))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :unit (y / year))))))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :quant 65))))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :month 10))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :mod (y2 / year\n                               :mod (l / last))))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :unit (y / year)))))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :quant 65))))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :month 10))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :time (d / date-entity\n                      :mod (y2 / year\n                               :mod (l / last))))\n   :time (t2 / today))",
      "(e / emerge-02\n   :ARG0 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mafia\"))\n   :ARG1 (e2 / expire-01\n             :ARG1 (c2 / case-03\n                       :ARG2 (p / person\n                                :age (t / temporal-quantity\n                                        :unit (y / year)))))\n   :time (t2 / today))",
      "(c / criminal-organization\n   :name (n / name\n            :op1 \"Mafia\"))",
      "(e2 / expire-01\n    :ARG1 (c2 / case-03\n              :ARG2 (p / person\n                       :age (t / temporal-quantity\n                               :quant 65))))",
      "(e2 / expire-01\n    :ARG1 (c2 / case-03\n              :ARG2 (p / person\n                       :age (t / temporal-quantity\n                               :unit (y / year)))))",
      "(e2 / expire-01\n    :time (d / date-entity\n             :month 10))",
      "(e2 / expire-01\n    :time (d / date-entity\n             :mod (y2 / year\n                      :mod (l / last))))",
      "(e2 / expire-01\n    :ARG1 (c2 / case-03\n              :ARG2 (p / person\n                       :age (t / temporal-quantity\n                               :quant 65)))\n    :time (d / date-entity\n             :month 10))",
      "(e2 / expire-01\n    :ARG1 (c2 / case-03\n              :ARG2 (p / person\n                       :age (t / temporal-quantity\n                               :quant 65)))\n    :time (d / date-entity\n             :mod (y2 / year\n                      :mod (l / last))))",
      "(e2 / expire-01\n    :ARG1 (c2 / case-03\n              :ARG2 (p / person\n                       :age (t / temporal-quantity\n                               :unit (y / year))))\n    :time (d / date-entity\n             :month 10))"
    ],
    "smus": [
      "The sentence was given by an Italian court.",
      "The sentence was given to Domenico Rancadore.",
      "The sentence was given by an Italian court in 1999.",
      "Domenico Rancadore received a 7-year sentence.",
      "Domenico Rancadore was sentenced in 1999.",
      "In 1999 there was a 7 sentence.",
      "A court in Italy sentenced Domenico Rancadore to seven years in prison.",
      "A court in Italy sentenced Domenico Rancadore in 1999.",
      "Domenico Rancadore received a seven-year sentence in 1999.",
      "In 1999 an Italian court sentenced Domenico Rancadore to seven years in prison.",
      "Rancadore was convicted.",
      "Convicted for the role of honor man.",
      "Rancadore was convicted of bribery.",
      "Rancadore was convicted of the role of an honorable man.",
      "Rancadore was convicted of bribing builders.",
      "And Rancadore took bribes.",
      "The Mafia fugitive lost.",
      "The fugitive of Sicily lost.",
      "The fugitive battle was lost.",
      "The battle over extradition of the fugitive lost.",
      "The battle for extradition to Italy lost.",
      "Losed in February.",
      "The Mafia fugitive lost the battle.",
      "The Mafia fugitive lost the battle over extradition.",
      "The Mafia fugitive lost the battle over extradition to Italy.",
      "The fugitive of Sicily lost the battle over extradition to Italy.",
      "The Mafia fugitive lost in February.",
      "The fugitive battle lost in February.",
      "The battle over extradition of the fugitive lost in February.",
      "The battle for extradition to Italy lost in February.",
      "The Mafia fugitive lost the battle in February.",
      "The Mafia fugitive lost the extradition battle in February.",
      "The Mafia fugitive lost the battle over extradition to Italy in February.",
      "The fugitive of Sicily lost the battle over extradition to Italy in February.",
      "The Mafia emerged.",
      "The case of the 65-year-old emerged to have expired.",
      "It emerged that the expiration date was October.",
      "It emerged that the expired last year.",
      "The case of the year old emerged as expired.",
      "The Mafia emerged with the case against the 65-year-olds expiring.",
      "The Mafia emerged with an expired last year.",
      "The Mafia emerged with the year old case expiring.",
      "Today, the Mafia emerged.",
      "Today, it emerged that the case of the 65-year-old had expired.",
      "The expiration date for October emerged today.",
      "It emerged today that the last year had expired.",
      "Today, the case of the year old emerged as expired.",
      "Today the Mafia emerged with the case against the 65-year-olds expiring.",
      "The Mafia emerged today with its October expiration.",
      "The Mafia emerged today from an expired last year.",
      "Today, the Mafia emerged with the year-old case expiring.",
      "The case for the 65-year-old has expired.",
      "The case for the year old has expired.",
      "expires October",
      "expired last year.",
      "The case of the 65-year-old expired in October.",
      "The 65-year-old case expired last year.",
      "The case of a year old expired in October.",
      "The case of the year's person expired last year."
    ]
  },
  {
    "instance_id": "realsumm-62",
    "summary": "<t> Baron the German Shepard was filmed as Shepard helped get the dishes done at home in California . </t> <t> The pup was professionally trained at the Hill Country K9 school . </t> <t> To date the clip of Baron dishwashing has been watched over 27,000 times . </t> <t> Many viewers have deemed the dog 's cleaning antics ' cute ' and adorable ' </t>",
    "summary_trees": [
      "# ::snt  Baron the German Shepard was filmed as Shepard helped get the dishes done at home in California . \n(f / film-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Baron\"\n                  :op2 \"the\"\n                  :op3 \"German\"\n                  :op4 \"Shepard\"))\n      :time (h / help-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Shepard\"))\n            :ARG1 (g / get-04\n                  :ARG0 p2\n                  :ARG1 (b / be-done-08\n                        :ARG1 (d / dish))\n                  :location (h2 / home\n                        :location (s / state\n                              :name (n3 / name\n                                    :op1 \"California\"))))))",
      "# ::snt  The pup was professionally trained at the Hill Country K9 school . \n(t / train-01\n      :ARG0 (s / school\n            :name (n / name\n                  :op1 \"Hill\"\n                  :op2 \"Country\"\n                  :op3 \"K9\"))\n      :ARG2 (p / pup)\n      :manner (p2 / professional))",
      "# ::snt  To date the clip of Baron dishwashing has been watched over 27,000 times . \n(w / watch-01\n      :ARG1 (c / clip\n            :topic (w2 / wash-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Baron\"))\n                  :ARG1 (d / dish)))\n      :time (t / to-date)\n      :quant (o / over\n            :op1 27000))",
      "# ::snt  Many viewers have deemed the dog 's cleaning antics ' cute ' and adorable ' \n(d / deem-01\n      :ARG0 (p / person\n            :ARG0-of (v / view-01)\n            :quant (m / many))\n      :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                  :topic (c2 / clean-01\n                        :ARG0 (d2 / dog)))))"
    ],
    "tree": [
      "(f / film-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\")))",
      "(f / film-01\n   :time (h / help-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Shepard\"))))",
      "(f / film-01\n   :time (h / help-01\n            :ARG1 (g / get-04\n                     :ARG0 (p2 / person :name (n2 / name :op1 \"Shepard\")))))",
      "(f / film-01\n   :time (h / help-01\n            :ARG1 (g / get-04\n                     :ARG1 (b / be-done-08\n                              :ARG1 (d / dish)))))",
      "(f / film-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\"))\n   :time (h / help-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Shepard\"))))",
      "(f / film-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\"))\n   :time (h / help-01\n            :ARG1 (g / get-04\n                     :ARG0 (p2 / person :name (n2 / name :op1 \"Shepard\")))))",
      "(f / film-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\"))\n   :time (h / help-01\n            :ARG1 (g / get-04\n                     :ARG1 (b / be-done-08\n                              :ARG1 (d / dish)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Baron\"\n            :op2 \"the\"\n            :op3 \"German\"\n            :op4 \"Shepard\"))",
      "(h / help-01\n   :ARG1 (g / get-04\n            :ARG0 (p2 / person :name (n2 / name :op1 \"Shepard\"))))",
      "(h / help-01\n   :ARG1 (g / get-04\n            :location (h2 / home\n                          :location (s / state\n                                       :name (n3 / name\n                                                 :op1 \"California\")))))",
      "(h / help-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Shepard\"))\n   :ARG1 (g / get-04\n            :ARG1 (b / be-done-08\n                     :ARG1 (d / dish))))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Shepard\"))",
      "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\")))",
      "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\"))\n   :ARG2 (p / pup))",
      "(t / train-01\n   :ARG2 (p / pup)\n   :manner (p2 / professional))",
      "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\"))\n   :ARG2 (p / pup)\n   :manner (p2 / professional))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\")))))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG1 (d / dish))))",
      "(w / watch-01\n   :quant (o / over\n             :op1 27000))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))))\n   :time (t / to-date))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG1 (d / dish)))\n   :time (t / to-date))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))))\n   :quant (o / over\n             :op1 27000))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG1 (d / dish)))\n   :quant (o / over\n             :op1 27000))",
      "(w / watch-01\n   :time (t / to-date)\n   :quant (o / over\n             :op1 27000))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))))\n   :time (t / to-date)\n   :quant (o / over\n             :op1 27000))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG1 (d / dish)))\n   :time (t / to-date)\n   :quant (o / over\n             :op1 27000))",
      "(c / clip\n   :topic (w2 / wash-01\n              :ARG0 (p / person\n                       :name (n / name\n                                :op1 \"Baron\"))))",
      "(c / clip\n   :topic (w2 / wash-01\n              :ARG1 (d / dish)))",
      "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)))",
      "(d / deem-01\n   :ARG0 (p / person\n            :quant (m / many)))",
      "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01))\n   :ARG1 (c / cute))",
      "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01))\n   :ARG1 (a2 / adorable))",
      "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01))\n   :ARG1 (a3 / antics\n             :topic (c2 / clean-01\n                        :ARG0 (d2 / dog))))",
      "(d / deem-01\n   :ARG0 (p / person\n            :quant (m / many))\n   :ARG1 (c / cute))",
      "(d / deem-01\n   :ARG0 (p / person\n            :quant (m / many))\n   :ARG1 (a2 / adorable))",
      "(d / deem-01\n   :ARG0 (p / person\n            :quant (m / many))\n   :ARG1 (a3 / antics\n             :topic (c2 / clean-01\n                        :ARG0 (d2 / dog))))",
      "(p / person\n   :ARG0 (v / view-01)\n   :quant (m / many))",
      "(a / and\n   :domain (a3 / antics\n               :topic (c2 / clean-01\n                          :ARG0 (d2 / dog))))",
      "(a / and\n   :op1 (c / cute)\n   :op2 (a2 / adorable))"
    ],
    "smus": [
      "Baron the German Shepard was filmed.",
      "Filmed as Shepard helped.",
      "Filmed as Shepard helped get.",
      "Filmed as helping get the dishes done.",
      "Baron the German Shepard was filmed as shepard helped.",
      "Baron the German Shepard was filmed as shepard helped get.",
      "Baron the German Shepard was filmed as he helped get the dishes done.",
      "Shepard helped.",
      "Helped get the dishes done.",
      "Shepard helped get the dishes done.",
      "Get the dishes done.",
      "Get the dishes done at home in California.",
      "The Hill Country K9 school was trained.",
      "The Hill Country K9 school has trained the pup.",
      "The pup is professionally trained.",
      "The Hill Country K9 school has professionally trained the pup.",
      "Watched the clip of Baron washing.",
      "Watch the clip on washing the dish.",
      "Over 27,000 watched.",
      "To date, there has been a clip watched about Baron's washing.",
      "To date, there has been a clip watched about dish washing.",
      "Over 27,000 watched the clip of Baron washing.",
      "The dish washing clip has over 27,000 views.",
      "Over 27,000 watched to date.",
      "To date, over 27,000 people have watched the clip of Baron washing.",
      "The dish washing clip has been watched over 27,000 times to date.",
      "Baron washed.",
      "Baron washed the dish.",
      "As deemed by the viewers.",
      "As many have deemed.",
      "Viewers have deemed it cute.",
      "Viewers have deemed it adorable.",
      "Viewers deemed the dog cleaning antics.",
      "Many have deemed it cute.",
      "Many have deemed it adorable.",
      "Many have deemed the dog cleaning antics.",
      "There are many viewers.",
      "And the dog cleaning antics.",
      "Cute and adorable."
    ]
  },
  {
    "instance_id": "realsumm-63",
    "summary": "<t> Jihadis face fines , whipping or even jail time for wearing Nike products . </t> <t> Ban is also partly due to the brand sharing Ban name with a Greek Goddess . </t> <t> Commanders say the name also sounds like sexual slang words in Arabic . </t> <t> Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words . </t>",
    "summary_trees": [
      "# ::snt  Jihadis face fines , whipping or even jail time for wearing Nike products . \n(f / face-01\n      :ARG0 (j / jihadi)\n      :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (j2 / jail-01\n                  :mod (e / even)))\n      :ARG1-of (c / cause-01\n            :ARG0 (w2 / wear-01\n                  :ARG0 j\n                  :ARG1 (p / product\n                        :mod (c2 / company\n                              :name (n / name\n                                    :op1 \"Nike\"))))))",
      "# ::snt  Ban is also partly due to the brand sharing Ban name with a Greek Goddess . \n(c / cause-01\n      :ARG0 (s / share-01\n            :ARG0 (b / brand)\n            :ARG1 (n / name\n                  :poss (p / person\n                        :name (n2 / name\n                              :op1 \"Ban\")))\n            :ARG2 p\n            :name (n3 / name\n                  :op1 \"Goddess\")\n            :mod (c2 / country\n                  :name (n4 / name\n                        :op1 \"Greece\")))\n      :ARG1 p\n      :degree (p2 / part)\n      :mod (a / also))",
      "# ::snt  Commanders say the name also sounds like sexual slang words in Arabic . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / commander)))\n      :ARG1 (s2 / sound-01\n            :ARG1 (n / name)\n            :ARG2 (w / word\n                  :mod (s3 / slang\n                        :mod (s4 / sex))\n                  :medium (l / language\n                        :name (n2 / name\n                              :op1 \"Arabic\")))\n            :mod (a / also)))",
      "# ::snt  Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words . \n(b / ban-01\n      :ARG1 (w / wear-01\n            :ARG0 (p / person\n                  :mod (t / that)\n                  :ARG0-of (l / live-01\n                        :location (u / under\n                              :op1 (c / criminal-organization\n                                    :name (n / name\n                                          :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                  :op1 (j / jeans)\n                  :op2 (ii / item\n                        :ARG2-of (c2 / clothe-01))\n                  :ARG0-of (c3 / carry-01\n                        :ARG1 (o2 / or\n                              :op1 (l2 / language\n                                    :ARG0-of (p2 / provoke-01))\n                              :op2 (w2 / word\n                                    :ARG1-of (s / swear-01))))))\n      :ARG2 p\n      :time (a / already))"
    ],
    "tree": [
      "(f / face-01\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)))",
      "(f / face-01\n   :ARG1 (o / or\n            :op2 (w / whip-01)))",
      "(f / face-01\n   :ARG1 (o / or\n            :op3 (j2 / jail-01\n                     :mod (e / even))))",
      "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)))",
      "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op2 (w / whip-01)))",
      "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op3 (j2 / jail-01\n                     :mod (e / even))))",
      "(o / or\n   :op3 (j2 / jail-01\n            :mod (e / even)))",
      "(o / or\n   :op1 (f2 / fine-01)\n   :op2 (w / whip-01))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand)))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG1 (n / name\n                     :poss (p / person\n                              :name (n2 / name\n                                        :op1 \"Ban\")))))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\"))))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :mod (c2 / country\n                     :name (n4 / name\n                               :op1 \"Greece\"))))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand))\n   :mod (a / also))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG1 (n / name\n                     :poss (p / person\n                              :name (n2 / name\n                                        :op1 \"Ban\"))))\n   :mod (a / also))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\")))\n   :mod (a / also))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :name (n3 / name\n                      :op1 \"Goddess\"))\n   :mod (a / also))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :mod (c2 / country\n                     :name (n4 / name\n                               :op1 \"Greece\")))\n   :mod (a / also))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand))\n   :degree (p2 / part))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG1 (n / name\n                     :poss (p / person\n                              :name (n2 / name\n                                        :op1 \"Ban\"))))\n   :degree (p2 / part))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\")))\n   :degree (p2 / part))",
      "(s / share-01\n   :ARG1 (n / name\n            :poss (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\"))))",
      "(s / share-01\n   :mod (c2 / country\n            :name (n4 / name\n                      :op1 \"Greece\")))",
      "(s / share-01\n   :ARG0 (b / brand)\n   :ARG1 (n / name\n            :poss (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\"))))",
      "(s / share-01\n   :ARG0 (b / brand)\n   :name (n3 / name\n             :op1 \"Goddess\"))",
      "(s / share-01\n   :ARG0 (b / brand)\n   :mod (c2 / country\n            :name (n4 / name\n                      :op1 \"Greece\")))",
      "(s / share-01\n   :ARG1 (n / name\n            :poss (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\")))\n   :mod (c2 / country\n            :name (n4 / name\n                      :op1 \"Greece\")))",
      "(s / share-01\n   :name (n3 / name\n             :op1 \"Goddess\")\n   :mod (c2 / country\n            :name (n4 / name\n                      :op1 \"Greece\")))",
      "(s / share-01\n   :ARG0 (b / brand)\n   :ARG1 (n / name\n            :poss (p / person\n                     :name (n2 / name\n                               :op1 \"Ban\")))\n   :name (n3 / name\n             :op1 \"Goddess\"))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / commander))))",
      "(s / say-01\n   :ARG1 (s2 / sound-01\n             :ARG1 (n / name)))",
      "(s / say-01\n   :ARG1 (s2 / sound-01\n             :ARG2 (w / word\n                      :mod (s3 / slang\n                               :mod (s4 / sex)))))",
      "(s / say-01\n   :ARG1 (s2 / sound-01\n             :mod (a / also)))",
      "(s / say-01\n   :ARG1 (s2 / sound-01\n             :ARG2 (w / word\n                      :medium (l / language\n                                 :name (n2 / name\n                                           :op1 \"Arabic\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / commander)))\n   :ARG1 (s2 / sound-01\n             :ARG1 (n / name)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / commander)))\n   :ARG1 (s2 / sound-01\n             :mod (a / also)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / commander)))\n   :ARG1 (s2 / sound-01\n             :ARG2 (w / word\n                      :medium (l / language\n                                 :name (n2 / name\n                                           :op1 \"Arabic\")))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / commander)))",
      "(s2 / sound-01\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))))",
      "(s2 / sound-01\n    :ARG2 (w / word\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\"))))",
      "(s2 / sound-01\n    :ARG1 (n / name)\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))))",
      "(s2 / sound-01\n    :ARG1 (n / name)\n    :mod (a / also))",
      "(s2 / sound-01\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex)))\n    :mod (a / also))",
      "(s2 / sound-01\n    :ARG2 (w / word\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\")))\n    :mod (a / also))",
      "(s2 / sound-01\n    :ARG1 (n / name)\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex)))\n    :mod (a / also))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :mod (t / that))))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :op1 (j / jeans))))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :ARG0 (l / live-01\n                              :location (u / under\n                                           :op1 (c / criminal-organization\n                                                   :name (n / name\n                                                            :op1 \"ISIS\")))))))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :op2 (ii / item\n                              :ARG2 (c2 / clothe-01)))))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :ARG0 (c3 / carry-01\n                               :ARG1 (o2 / or\n                                         :op1 (l2 / language\n                                                  :ARG0 (p2 / provoke-01)))))))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :ARG0 (c3 / carry-01\n                               :ARG1 (o2 / or\n                                         :op2 (w2 / word\n                                                  :ARG1 (s / swear-01)))))))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :mod (t / that)))\n   :time (a / already))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :op1 (j / jeans)))\n   :time (a / already))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :ARG0 (l / live-01\n                              :location (u / under\n                                           :op1 (c / criminal-organization\n                                                   :name (n / name\n                                                            :op1 \"ISIS\"))))))\n   :time (a / already))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :op2 (ii / item\n                              :ARG2 (c2 / clothe-01))))\n   :time (a / already))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :ARG0 (c3 / carry-01\n                               :ARG1 (o2 / or\n                                         :op1 (l2 / language\n                                                  :ARG0 (p2 / provoke-01))))))\n   :time (a / already))",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG1 (o / or\n                     :ARG0 (c3 / carry-01\n                               :ARG1 (o2 / or\n                                         :op2 (w2 / word\n                                                  :ARG1 (s / swear-01))))))\n   :time (a / already))",
      "(w / wear-01\n   :ARG1 (o / or\n            :op1 (j / jeans)))",
      "(w / wear-01\n   :ARG1 (o / or\n            :op2 (ii / item\n                     :ARG2 (c2 / clothe-01))))",
      "(w / wear-01\n   :ARG1 (o / or\n            :ARG0 (c3 / carry-01\n                      :ARG1 (o2 / or\n                                :op1 (l2 / language\n                                         :ARG0 (p2 / provoke-01))))))",
      "(w / wear-01\n   :ARG1 (o / or\n            :ARG0 (c3 / carry-01\n                      :ARG1 (o2 / or\n                                :op2 (w2 / word\n                                         :ARG1 (s / swear-01))))))",
      "(p / person\n   :ARG0 (l / live-01\n            :location (u / under\n                         :op1 (c / criminal-organization\n                                 :name (n / name\n                                          :op1 \"ISIS\")))))",
      "(p / person\n   :mod (t / that)\n   :ARG0 (l / live-01\n            :location (u / under\n                         :op1 (c / criminal-organization\n                                 :name (n / name\n                                          :op1 \"ISIS\")))))",
      "(l / live-01\n   :location (u / under\n                :op1 (c / criminal-organization\n                        :name (n / name\n                                 :op1 \"ISIS\"))))",
      "(u / under\n   :op1 (c / criminal-organization\n           :name (n / name\n                    :op1 \"ISIS\")))",
      "(c / criminal-organization\n   :name (n / name\n            :op1 \"ISIS\"))",
      "(o / or\n   :op2 (ii / item\n            :ARG2 (c2 / clothe-01)))",
      "(o / or\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op1 (l2 / language\n                                :ARG0 (p2 / provoke-01)))))",
      "(o / or\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op2 (w2 / word\n                                :ARG1 (s / swear-01)))))",
      "(o / or\n   :op1 (j / jeans)\n   :op2 (ii / item\n            :ARG2 (c2 / clothe-01)))",
      "(o / or\n   :op1 (j / jeans)\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op1 (l2 / language\n                                :ARG0 (p2 / provoke-01)))))",
      "(o / or\n   :op1 (j / jeans)\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op2 (w2 / word\n                                :ARG1 (s / swear-01)))))",
      "(o / or\n   :op2 (ii / item\n            :ARG2 (c2 / clothe-01))\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op1 (l2 / language\n                                :ARG0 (p2 / provoke-01)))))",
      "(o / or\n   :op2 (ii / item\n            :ARG2 (c2 / clothe-01))\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op2 (w2 / word\n                                :ARG1 (s / swear-01)))))",
      "(o / or\n   :op1 (j / jeans)\n   :op2 (ii / item\n            :ARG2 (c2 / clothe-01))\n   :ARG0 (c3 / carry-01\n             :ARG1 (o2 / or\n                       :op2 (w2 / word\n                                :ARG1 (s / swear-01)))))"
    ],
    "smus": [
      "Face whipping.",
      "Faced with jail even.",
      "Jihadis face fines or",
      "Jihadis face whipping.",
      "Jihadis face jail or even prison.",
      "Because Jihadis are wearing.",
      "Because wearing NIKE products.",
      "Wearing Nike products.",
      "because the brand is sharing.",
      "Because Ban's name is sharing.",
      "Because of sharing with ban.",
      "Also because the brand is sharing.",
      "Also because Ban's name is sharing.",
      "Also because Ban is sharing the name.",
      "Also because Greece is sharing.",
      "Partly because the brand is sharing.",
      "Partly because Ban's name is sharing.",
      "Partly because Ban is sharing the name.",
      "Partly because Greece is sharing.",
      "Sharing Ban's name.",
      "The brand is sharing Ban's name.",
      "Ban's name is sharing the name of the Goddess.",
      "Ban's name is shared with Greece.",
      "The brand is sharing Ban's name with the name Goddess.",
      "The brand is sharing Ban's name with Greece.",
      "Ban's name is sharing the Greek name Goddess.",
      "The brand is sharing Ban's name with the Greek name Goddess.",
      "Ban",
      "Commanders say --",
      "Sounds like the name.",
      "Sound like slang words, say.",
      "Also sounds.",
      "Sounds like Arabic words, say.",
      "The commanders say the name sounds.",
      "Commanders say it also sounds.",
      "Commanders say it sounds like Arabic words.",
      "Sounds like sex slang words.",
      "Sounds like Arabic words.",
      "The name sounds like slang words.",
      "The name sounds like Arabic words.",
      "Sounds like sex slang also.",
      "Also sounds like Arabic words.",
      "The name also sounds like slang words.",
      "The name also sounds like Arabic words.",
      "Those people are banned from wearing.",
      "Wearing jeans is banned.",
      "People living under ISIS are banned from wearing.",
      "Wearing clothing or items of clothing is banned.",
      "Wearing or carrying provocative language is banned.",
      "Wearing or carrying swearing wors is banned.",
      "Those people are already banned from wearing.",
      "Wearing jeans is already banned.",
      "People living under ISIS are already banned from wearing clothing.",
      "Wearing clothing or items of clothing has already been banned.",
      "Wearing or carrying provocative language has already been banned.",
      "Wearing or carrying swearing wors has already been banned.",
      "Wearing jeans.",
      "Wearing clothing or items of clothing.",
      "Wearing or carrying provocative language.",
      "Wearing or carrying swearing wors.",
      "People living under ISIS.",
      "Those who are living under ISIS.",
      "Living under ISIS.",
      "or carrying provocative language.",
      "or carrying swearing wors.",
      "Carrying provocative language is like wearing jeans.",
      "Carrying swearing or jeans.",
      "Carrying provocative language or clothing items.",
      "Carrying swearing or a wor is clothing items.",
      "Carrying provocative language is like carrying jeans or clothing items.",
      "Carrying swearing or jeans or clothing items.",
      "carrying provocative language.",
      "Carrying or worring swearing.",
      "Provoked language or swearing wor."
    ]
  },
  {
    "instance_id": "realsumm-64",
    "summary": "<t> Lorraine Bracco was asked by The Sopranos creator to be Carmela . </t> <t> The actress turned Bracco down because actress played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 . </t> <t> Convinced showrunner David Chase to let actress play the role of Dr. Jennifer Melfi . </t>",
    "summary_trees": [
      "# ::snt  Lorraine Bracco was asked by The Sopranos creator to be Carmela . \n(a / ask-02\n      :ARG0 (p / person\n            :ARG0-of (c / create-01\n                  :ARG1 (b / broadcast-program\n                        :name (n / name\n                              :op1 \"The\"\n                              :op2 \"Sopranos\"))))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Carmela\")\n            :domain (p3 / person\n                  :name (n3 / name\n                        :op1 \"Lorraine\"\n                        :op2 \"Bracco\")))\n      :ARG2 p3)",
      "# ::snt  The actress turned Bracco down because actress played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 . \n(c / cause-01\n      :ARG0 (p / play-02\n            :ARG0 (p2 / person\n                  :ARG0-of (a / act-01))\n            :ARG1 (p3 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 (m / mobster)\n                        :ARG2 (w / wife)))\n            :time (w2 / work-of-art\n                  :name (n / name\n                        :op1 \"Goodfellas\")\n                  :poss (p4 / person\n                        :name (n2 / name\n                              :op1 \"Martin\"\n                              :op2 \"Scorsese\"))\n                  :time (d / date-entity\n                        :year 1990)))\n      :ARG1 (t / turn-down-05\n            :ARG0 p2\n            :ARG1 (p5 / person\n                  :name (n3 / name\n                        :op1 \"Bracco\"))))",
      "# ::snt  Convinced showrunner David Chase to let actress play the role of Dr. Jennifer Melfi . \n(c / convince-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Chase\")\n            :ARG0-of (r / run-01\n                  :ARG1 (s / show)))\n      :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                  :ARG0 (p3 / person\n                        :ARG0-of (a / act-01))\n                  :ARG1 (d / doctor\n                        :name (n2 / name\n                              :op1 \"Jennifer\"\n                              :op2 \"Melfi\")))))"
    ],
    "tree": [
      "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\")))))",
      "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")))",
      "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG0 (p2 / person\n                      :ARG0 (a / act-01))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :time (w2 / work-of-art\n                      :name (n / name\n                               :op1 \"Goodfellas\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :time (w2 / work-of-art\n                      :poss (p4 / person\n                                :name (n2 / name\n                                          :op1 \"Martin\"\n                                          :op2 \"Scorsese\")))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :time (w2 / work-of-art\n                      :time (d / date-entity\n                               :year 1990))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG1 (p3 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (w / wife)))))",
      "(c / cause-01\n   :ARG1 (t / turn-down-05\n            :ARG0 (p2 / person\n                      :ARG0 (a / act-01))))",
      "(c / cause-01\n   :ARG1 (t / turn-down-05\n            :ARG1 (p5 / person\n                      :name (n3 / name\n                                :op1 \"Bracco\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG0 (p2 / person\n                      :ARG0 (a / act-01)))\n   :ARG1 (t / turn-down-05\n            :ARG0 p2))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG0 (p2 / person\n                      :ARG0 (a / act-01)))\n   :ARG1 (t / turn-down-05\n            :ARG1 (p5 / person\n                      :name (n3 / name\n                                :op1 \"Bracco\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG1 (p3 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (m / mobster))))\n   :ARG1 (t / turn-down-05\n            :ARG0 (p2 / person\n                      :ARG0 (a / act-01))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG1 (p3 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (m / mobster))))\n   :ARG1 (t / turn-down-05\n            :ARG1 (p5 / person\n                      :name (n3 / name\n                                :op1 \"Bracco\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :time (w2 / work-of-art\n                      :name (n / name\n                               :op1 \"Goodfellas\")))\n   :ARG1 (t / turn-down-05\n            :ARG1 (p5 / person\n                      :name (n3 / name\n                                :op1 \"Bracco\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :time (w2 / work-of-art\n                      :poss (p4 / person\n                                :name (n2 / name\n                                          :op1 \"Martin\"\n                                          :op2 \"Scorsese\"))))\n   :ARG1 (t / turn-down-05\n            :ARG1 (p5 / person\n                      :name (n3 / name\n                                :op1 \"Bracco\"))))",
      "(c / cause-01\n   :ARG0 (p / play-02\n            :ARG1 (p3 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (w / wife))))\n   :ARG1 (t / turn-down-05\n            :ARG1 (p5 / person\n                      :name (n3 / name\n                                :op1 \"Bracco\"))))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01)))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (w / wife))))",
      "(p / play-02\n   :time (w2 / work-of-art\n             :name (n / name\n                      :op1 \"Goodfellas\")))",
      "(p / play-02\n   :time (w2 / work-of-art\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Martin\"\n                                 :op2 \"Scorsese\"))))",
      "(p / play-02\n   :time (w2 / work-of-art\n             :time (d / date-entity\n                      :year 1990)))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01))\n   :time (w2 / work-of-art\n             :name (n / name\n                      :op1 \"Goodfellas\")))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01))\n   :time (w2 / work-of-art\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Martin\"\n                                 :op2 \"Scorsese\"))))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01))\n   :time (w2 / work-of-art\n             :time (d / date-entity\n                      :year 1990)))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (m / mobster)))\n   :time (w2 / work-of-art\n             :name (n / name\n                      :op1 \"Goodfellas\")))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (m / mobster)))\n   :time (w2 / work-of-art\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Martin\"\n                                 :op2 \"Scorsese\"))))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (m / mobster)))\n   :time (w2 / work-of-art\n             :time (d / date-entity\n                      :year 1990)))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (w / wife)))\n   :time (w2 / work-of-art\n             :name (n / name\n                      :op1 \"Goodfellas\")))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (w / wife)))\n   :time (w2 / work-of-art\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Martin\"\n                                 :op2 \"Scorsese\"))))",
      "(p / play-02\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (w / wife)))\n   :time (w2 / work-of-art\n             :time (d / date-entity\n                      :year 1990)))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01))\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (m / mobster)))\n   :time (w2 / work-of-art\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Martin\"\n                                 :op2 \"Scorsese\"))))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01))\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (w / wife)))\n   :time (w2 / work-of-art\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Martin\"\n                                 :op2 \"Scorsese\"))))",
      "(p / play-02\n   :ARG0 (p2 / person\n             :ARG0 (a / act-01))\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (w / wife)))\n   :time (w2 / work-of-art\n             :time (d / date-entity\n                      :year 1990)))",
      "(p3 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG1 (m / mobster)))",
      "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\")))",
      "(c / convince-01\n   :ARG1 (p / person\n            :ARG0 (r / run-01\n                     :ARG1 (s / show))))",
      "(c / convince-01\n   :ARG2 (l / let-01\n            :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Chase\")))))",
      "(c / convince-01\n   :ARG2 (l / let-01\n            :ARG1 (p2 / play-02\n                      :ARG0 (p3 / person\n                                :ARG0 (a / act-01)))))",
      "(c / convince-01\n   :ARG2 (l / let-01\n            :ARG1 (p2 / play-02\n                      :ARG1 (d / doctor\n                               :name (n2 / name\n                                         :op1 \"Jennifer\"\n                                         :op2 \"Melfi\")))))",
      "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\"))\n   :ARG2 (l / let-01\n            :ARG0 p))",
      "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\"))\n   :ARG2 (l / let-01\n            :ARG1 (p2 / play-02\n                      :ARG0 (p3 / person\n                                :ARG0 (a / act-01)))))",
      "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\"))\n   :ARG2 (l / let-01\n            :ARG1 (p2 / play-02\n                      :ARG1 (d / doctor\n                               :name (n2 / name\n                                         :op1 \"Jennifer\"\n                                         :op2 \"Melfi\")))))",
      "(c / convince-01\n   :ARG1 (p / person\n            :ARG0 (r / run-01\n                     :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG0 p))",
      "(c / convince-01\n   :ARG1 (p / person\n            :ARG0 (r / run-01\n                     :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG1 (p2 / play-02\n                      :ARG0 (p3 / person\n                                :ARG0 (a / act-01)))))",
      "(c / convince-01\n   :ARG1 (p / person\n            :ARG0 (r / run-01\n                     :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG1 (p2 / play-02\n                      :ARG1 (d / doctor\n                               :name (n2 / name\n                                         :op1 \"Jennifer\"\n                                         :op2 \"Melfi\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"David\"\n            :op2 \"Chase\"))",
      "(p / person\n   :ARG0 (r / run-01\n            :ARG1 (s / show)))",
      "(p / person\n   :name (n / name\n            :op1 \"David\"\n            :op2 \"Chase\")\n   :ARG0 (r / run-01\n            :ARG1 (s / show)))"
    ],
    "smus": [
      "asked the creators of \"The Sopranos\".",
      "The creators of The Sopranos have asked Carmela.",
      "The creators of The Sopranos have asked who Lorraine Bracco is.",
      "Because the actors played.",
      "Because it played in Goodfellas.",
      "Because it played during Martin Scorsese's work of art.",
      "Because it played in a 1990 work of art.",
      "Because the wife played.",
      "Because the actor turned down.",
      "Because the Bracco was turned down.",
      "The actors turned down because they played.",
      "The act played, so Bracco was turned down.",
      "The act turned down because the mobster played.",
      "The reason that Bracco was turned down was because the mobster played.",
      "The Goodfellas played, so Bracco was turned down.",
      "The reason Bracco was turned down was because it played in Martin Scorsese's work of art.",
      "The reason that Bracco was turned down was because the wife played.",
      "The actors played.",
      "Played wife.",
      "Played in Goodfellas.",
      "Played in Martin Scorsese's work of art.",
      "Played in a 1990 work of art.",
      "The actors played in Goodfellas.",
      "The actors played in Martin Scorsese's work of art.",
      "The actor played in a 1990 work of art.",
      "In Goodfellas, the mobster played.",
      "In Martin Scorsese's work of art, the mobster played.",
      "In the 1990 work of art, the mobster played.",
      "In Goodfellas, the wife played.",
      "The wife played in Martin Scorsese's work of art.",
      "In the 1990 work of art, the wife played.",
      "In Martin Scorsese's work of art, the actors played the mobster.",
      "In Martin Scorsese's work of art, the actor played the wife.",
      "In the 1990 work of art the actor played the wife.",
      "Bracco was turned down.",
      "David Chase was convinced.",
      "The show's runters were convinced.",
      "David Chase is convinced to let go.",
      "Convinced to let the actors play.",
      "Let Dr. Jennifer Melfi play, he's convinced.",
      "David Chase was convinced to let go.",
      "David Chase was convinced to let the actors play.",
      "David Chase was convinced to let Dr. Jennifer Melfi play.",
      "The show's runters were convinced to let.",
      "The show's runter was convinced to let the actors play.",
      "The show's producers were convinced to let Dr. Jennifer Melfi play.",
      "Show run by David Chase.",
      "Let the actors play.",
      "Let Dr. Jennifer Melfi play."
    ]
  },
  {
    "instance_id": "realsumm-65",
    "summary": "<t> Kevin Carr set off on Carr epic journey from Haytor , Dartmoor in July 2013 . </t> <t> Carr is now less than 24 hours away from completing Carr epic trip . </t> <t> Mr Carr ran around the world unsupported - taking Carr own tent with Carr . </t> <t> Carr is set to break the previous record held by an Australian by 24 hours . </t>",
    "summary_trees": [
      "# ::snt  Kevin Carr set off on Carr epic journey from Haytor , Dartmoor in July 2013 . \n(s / set-off-06\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Carr\"))\n      :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n      :source (l / location\n            :name (n2 / name\n                  :op1 \"Haytor\")\n            :part-of (ii / island\n                  :name (n3 / name\n                        :op1 \"Dartmoor\")))\n      :time (d / date-entity\n            :month 7\n            :year 2013))",
      "# ::snt  Carr is now less than 24 hours away from completing Carr epic trip . \n(b / be-temporally-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Carr\"))\n      :ARG2 (a / away\n            :op1 (c / complete-01\n                  :ARG0 p\n                  :ARG1 (t / trip-03\n                        :ARG0 p\n                        :mod (e / epic)))\n            :duration (l / less-than\n                  :op1 (t2 / temporal-quantity\n                        :quant 24\n                        :unit (h / hour))))\n      :time (n2 / now))",
      "# ::snt  Mr Carr ran around the world unsupported - taking Carr own tent with Carr . \n(r / run-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Mr\"\n                  :op2 \"Carr\"))\n      :path (a / around\n            :op1 (w / world))\n      :manner (s / support-01\n            :polarity -\n            :ARG1 p)\n      :manner (t / take-01\n            :ARG0 p\n            :ARG1 (t2 / tent\n                  :poss p)\n            :prep-with p))",
      "# ::snt  Carr is set to break the previous record held by an Australian by 24 hours . \n(s / set-08\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Carr\"))\n      :ARG2 (b / break-02\n            :ARG0 p\n            :ARG1 (r / record\n                  :time (p2 / previous)\n                  :ARG1-of (h / hold-01\n                        :ARG0 (p3 / person\n                              :mod (c / country\n                                    :name (n2 / name\n                                          :op1 \"Australia\")))))\n            :extent (t / temporal-quantity\n                  :quant 24\n                  :unit (h2 / hour))))"
    ],
    "tree": [
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\")))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic)))",
      "(s / set-off-06\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")))",
      "(s / set-off-06\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic)))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p)\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :month 7))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\"))\n   :time (d / date-entity\n            :year 2013))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :mod (e / epic))\n   :source (l / location\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG1 (t / trip-03\n                             :ARG0 (p / person :name (n / name :op1 \"Carr\"))))))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG1 (t / trip-03\n                             :mod (e / epic)))))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :duration (l / less-than\n                         :op1 (t2 / temporal-quantity\n                                  :unit (h / hour)))))",
      "(b / be-temporally-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG1 (t / trip-03\n                             :ARG0 p))))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 (p / person :name (n / name :op1 \"Carr\"))))\n   :time (n2 / now))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :duration (l / less-than\n                         :op1 (t2 / temporal-quantity\n                                  :quant 24)))\n   :time (n2 / now))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG1 (t / trip-03\n                             :ARG0 (p / person :name (n / name :op1 \"Carr\")))))\n   :time (n2 / now))",
      "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :duration (l / less-than\n                         :op1 (t2 / temporal-quantity\n                                  :unit (h / hour))))\n   :time (n2 / now))",
      "(b / be-temporally-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 p))\n   :time (n2 / now))",
      "(b / be-temporally-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (a / away\n            :duration (l / less-than\n                         :op1 (t2 / temporal-quantity\n                                  :quant 24)))\n   :time (n2 / now))",
      "(b / be-temporally-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG1 (t / trip-03\n                             :ARG0 p)))\n   :time (n2 / now))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\")))",
      "(r / run-02\n   :path (a / around\n            :op1 (w / world)))",
      "(r / run-02\n   :manner (s / support-01\n              :polarity -\n              :ARG1 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :path (a / around\n            :op1 (w / world)))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :manner (s / support-01\n              :polarity -\n              :ARG1 p))",
      "(r / run-02\n   :path (a / around\n            :op1 (w / world))\n   :manner (s / support-01\n              :polarity -\n              :ARG1 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :path (a / around\n            :op1 (w / world))\n   :manner (s / support-01\n              :polarity -\n              :ARG1 p))",
      "(p / person\n   :name (n / name\n            :op1 \"Mr\"\n            :op2 \"Carr\"))",
      "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\")))",
      "(s / set-08\n   :ARG2 (b / break-02\n            :ARG0 (p / person :name (n / name :op1 \"Carr\"))))",
      "(s / set-08\n   :ARG2 (b / break-02\n            :ARG1 (r / record\n                     :time (p2 / previous))))",
      "(s / set-08\n   :ARG2 (b / break-02\n            :extent (t / temporal-quantity\n                       :quant 24)))",
      "(s / set-08\n   :ARG2 (b / break-02\n            :ARG1 (r / record\n                     :ARG1 (h / hold-01\n                              :ARG0 (p3 / person\n                                        :mod (c / country\n                                                :name (n2 / name\n                                                          :op1 \"Australia\")))))))",
      "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (b / break-02\n            :ARG0 p))",
      "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (b / break-02\n            :ARG1 (r / record\n                     :time (p2 / previous))))",
      "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (b / break-02\n            :ARG1 (r / record\n                     :ARG1 (h / hold-01\n                              :ARG0 (p3 / person\n                                        :mod (c / country\n                                                :name (n2 / name\n                                                          :op1 \"Australia\")))))))",
      "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carr\"))\n   :ARG2 (b / break-02\n            :extent (t / temporal-quantity\n                       :unit (h2 / hour))))",
      "(p / person\n   :name (n / name\n            :op1 \"Carr\"))",
      "(b / break-02\n   :ARG1 (r / record\n            :ARG1 (h / hold-01\n                     :ARG0 (p3 / person\n                               :mod (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Australia\"))))))",
      "(b / break-02\n   :extent (t / temporal-quantity\n              :quant 24))",
      "(b / break-02\n   :extent (t / temporal-quantity\n              :unit (h2 / hour)))",
      "(b / break-02\n   :ARG1 (r / record\n            :time (p2 / previous))\n   :extent (t / temporal-quantity\n              :quant 24))",
      "(b / break-02\n   :ARG1 (r / record\n            :time (p2 / previous))\n   :extent (t / temporal-quantity\n              :unit (h2 / hour)))",
      "(b / break-02\n   :ARG1 (r / record\n            :ARG1 (h / hold-01\n                     :ARG0 (p3 / person\n                               :mod (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Australia\")))))\n   :extent (t / temporal-quantity\n              :quant 24))",
      "(b / break-02\n   :ARG1 (r / record\n            :ARG1 (h / hold-01\n                     :ARG0 (p3 / person\n                               :mod (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Australia\")))))\n   :extent (t / temporal-quantity\n              :unit (h2 / hour)))"
    ],
    "smus": [
      "Kevin Carr set off.",
      "Kevin Carr's journey is set off.",
      "Set off on an epic journey.",
      "Set off from Haytor.",
      "Set off from Dartmoor.",
      "Set off in July.",
      "Set off in 2013.",
      "Kevin Carr has set off on his journey.",
      "Kevin Carr set off on an epic journey.",
      "Kevin Carr set off from Haytor.",
      "Kevin Carr set off from Dartmoor.",
      "Kevin Carr set off in July.",
      "Kevin Carr set off in 2013.",
      "Kevin Carr's journey set off from Haytor.",
      "Kevin Carr's journey set off from Dartmoor.",
      "From Haytor, the epic journey set off.",
      "From Dartmoor, the epic journey is set off.",
      "Kevin Carr's journey set off in July.",
      "Kevin Carr's journey set off in 2013.",
      "The epic journey was set off in July.",
      "The epic journey will set off in 2013.",
      "Set off from Haytor in July.",
      "Set off from Dartmoor in July.",
      "Set off from Dartmoor in 2013",
      "Kevin Carr set off on his journey from Haytor.",
      "Kevin Carr set off on his journey from Dartmoor.",
      "Kevin Carr set off on an epic journey from Haytor.",
      "Kevin Carr set off on an epic journey from Dartmoor.",
      "In July, Kevin Carr set off on a journey.",
      "Kevin Carr set off on his journey in 2013.",
      "In July, Kevin Carr set off on an epic journey.",
      "Kevin Carr set off on an epic journey in 2013.",
      "Kevin Carr set off from Haytor in July.",
      "Kevin Carr set off from Haytor in 2013.",
      "Kevin Carr set off from Dartmoor in July.",
      "Kevin Carr set off from Dartmoor in 2013.",
      "Kevin Carr's journey set off from Haytor in July.",
      "Kevin Carr's journey set off from Haytor in 2013.",
      "Kevin Carr's journey set off from Dartmoor in July.",
      "Kevin Carr's journey set off from Dartmoor in 2013.",
      "The epic journey set off from Haytor in July.",
      "The epic journey set off from Haytor in 2013.",
      "In July, an epic journey set off from Dartmoor.",
      "The epic journey set off from Dartmoor in 2013.",
      "Kevin Carr set off on a journey from Haytor in July.",
      "Kevin Carr set off on a journey from Haytor in 2013.",
      "Kevin Carr set off on a journey from Dartmoor in July.",
      "Kevin Carr set off on a journey from Dartmoor in 2013.",
      "Kevin Carr set off on an epic journey from Haytor in July.",
      "Kevin Carr set off on an epic journey from Haytor in 2013.",
      "Kevin Carr set off on an epic journey from Dartmoor in July.",
      "Kevin Carr set off on an epic journey from Dartmoor in 2013.",
      "Carr is away from completing.",
      "Carr was away from completing his trip.",
      "Carr is away from completing an epic trip.",
      "Now, completing an epic trip is away.",
      "Away from completing Carr's trip.",
      "Away from completing an epic trip.",
      "Carr has been less than 24 hours away from completing.",
      "completing the epic trip is less than 24 hours away.",
      "Completing the epic trip was less than hours away.",
      "Carr is completing his trip.",
      "Completing an epic trip.",
      "Mr Carr ran.",
      "ran around the world.",
      "ran unsupported for Mr Carr.",
      "Mr Carr ran around the world.",
      "Mr Carr ran unsupported.",
      "ran around the world unsupported by Mr Carr.",
      "Mr Carr ran around the world unsupported.",
      "Mr Carr's tent was taken.",
      "Carr is set.",
      "Carr is set to break.",
      "Set to break previous record.",
      "Set to break in 24 hours.",
      "Set to break the record held by the Australians.",
      "Carr has set a previous record to break.",
      "Carr is set to break in 24 hours.",
      "Carr was set to break into hours.",
      "Break previous record",
      "Break the record held by the Australians.",
      "Break for hours.",
      "Break the previous record by 24.",
      "Break previous record by hours.",
      "The Australian record of holding holds 24.",
      "Break the Australian record of hours held.",
      "The Australian record is held.",
      "There is a previous record of Australians being held."
    ]
  },
  {
    "instance_id": "realsumm-66",
    "summary": "<t> David Axelrod masterminded two Obama presidential election victories . </t> <t> Axelrod was hired by Labour leader Ed Miliband amid great fanfare last year . </t> <t> Revealed at a book launch that Axelrod is not resident for tax purposes in UK . </t> <t> Labour confirms Labour pays Mr Axelrod in dollars through consultancy firm . </t>",
    "summary_trees": [
      "# ::snt  David Axelrod masterminded two Obama presidential election victories . \n(m / mastermind-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Axelrod\"))\n      :ARG1 (w / win-01\n            :quant 2\n            :ARG1 (e / elect-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Obama\"))\n                  :ARG2 (p3 / president))))",
      "# ::snt  Axelrod was hired by Labour leader Ed Miliband amid great fanfare last year . \n(h / hire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Ed\"\n                  :op2 \"Miliband\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (p3 / person\n            :name (n3 / name\n                  :op1 \"Axelrod\"))\n      :time (y / year\n            :mod (l2 / last))\n      :manner (f / fanfare\n            :mod (g / great)))",
      "# ::snt  Revealed at a book launch that Axelrod is not resident for tax purposes in UK . \n(r / reveal-01\n      :ARG1 (r2 / reside-01\n            :polarity -\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Axelrod\"))\n            :ARG1 (c / country\n                  :name (n2 / name\n                        :op1 \"UK\"))\n            :purpose (t / tax-01))\n      :location (l / launch-01\n            :ARG1 (b / book)))",
      "# ::snt  Labour confirms Labour pays Mr Axelrod in dollars through consultancy firm . \n(c / confirm-01\n      :ARG0 (p / political-party\n            :name (n / name\n                  :op1 \"Labour\"))\n      :ARG1 (p2 / pay-01\n            :ARG0 p\n            :ARG2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n            :manner (d / dollar)\n            :instrument (f / firm\n                  :ARG0-of (c2 / consult-01))))"
    ],
    "tree": [
      "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\")))",
      "(m / mastermind-01\n   :ARG1 (w / win-01\n            :quant 2))",
      "(m / mastermind-01\n   :ARG1 (w / win-01\n            :ARG1 (e / elect-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Obama\")))))",
      "(m / mastermind-01\n   :ARG1 (w / win-01\n            :ARG1 (e / elect-01\n                     :ARG2 (p3 / president))))",
      "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\"))\n   :ARG1 (w / win-01\n            :quant 2))",
      "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\"))\n   :ARG1 (w / win-01\n            :ARG1 (e / elect-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Obama\")))))",
      "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\"))\n   :ARG1 (w / win-01\n            :ARG1 (e / elect-01\n                     :ARG2 (p3 / president))))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\")))))",
      "(h / hire-01\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\")))",
      "(h / hire-01\n   :time (y / year\n            :mod (l2 / last)))",
      "(h / hire-01\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\")))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\")))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :time (y / year\n            :mod (l2 / last)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last)))",
      "(h / hire-01\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -))",
      "(r / reveal-01\n   :location (l / launch-01\n                :ARG1 (b / book)))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -)\n   :location (l / launch-01\n                :ARG1 (b / book)))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Axelrod\")))\n   :location (l / launch-01\n                :ARG1 (b / book)))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"UK\")))\n   :location (l / launch-01\n                :ARG1 (b / book)))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :purpose (t / tax-01))\n   :location (l / launch-01\n                :ARG1 (b / book)))",
      "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\")))",
      "(c / confirm-01\n   :ARG1 (p2 / pay-01\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Mr\"\n                                 :op2 \"Axelrod\"))))",
      "(c / confirm-01\n   :ARG1 (p2 / pay-01\n             :manner (d / dollar)))",
      "(c / confirm-01\n   :ARG1 (p2 / pay-01\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))",
      "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :ARG0 p))",
      "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Mr\"\n                                 :op2 \"Axelrod\"))))",
      "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :manner (d / dollar)))",
      "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))",
      "(p / political-party\n   :name (n / name\n            :op1 \"Labour\"))",
      "(p2 / pay-01\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\")))",
      "(p2 / pay-01\n    :instrument (f / firm\n                   :ARG0 (c2 / consult-01)))",
      "(p2 / pay-01\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n    :manner (d / dollar))",
      "(p2 / pay-01\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n    :instrument (f / firm\n                   :ARG0 (c2 / consult-01)))",
      "(p2 / pay-01\n    :manner (d / dollar)\n    :instrument (f / firm\n                   :ARG0 (c2 / consult-01)))"
    ],
    "smus": [
      "David Axelrod masterminded.",
      "Masterminded two victories.",
      "Masterminded the victory in the Obama election.",
      "Masterminded the victory in the presidential election.",
      "David Axelrod masterminded the two victories.",
      "David Axelrod masterminded the victory in the Obama election.",
      "David Axelrod masterminded the victory in the presidential election.",
      "Labour leader hired.",
      "Axelrod was hired.",
      "Hired last year.",
      "Hired with great fanfare.",
      "Ed Miliband has hired Axelrod.",
      "A Labour leader has hired Axelrod.",
      "Labour leader hired last year.",
      "Labour leader hired with great fanfare.",
      "Axelrod was hired last year.",
      "Axelrod was hired with great fanfare.",
      "Hired last year with great fanfare.",
      "Ed Miliband hired Axelrod last year.",
      "Last year the Labour leader hired Axelrod.",
      "Ed Miliband has hired Axelrod with great fanfare.",
      "The Labour leader has hired Axelrod with great fanfare.",
      "Labour leader was hired last year with great fanfare.",
      "Axelrod was hired last year with great fanfare.",
      "Ed Miliband hired Axelrod last year with great fanfare.",
      "Last year, the Labour leader hired Axelrod with great fanfare.",
      "It was revealed that the residence was not residing.",
      "revealed at book launch",
      "Not residing was revealed at the book's launch.",
      "Axelrod's residence was revealed at the book's launch.",
      "Residency in the UK revealed at book launch.",
      "The residency for tax purposes was revealed at the book's launch.",
      "Labour confirms.",
      "confirms Mr Axelrod pays",
      "confirms payments are made in dollars.",
      "* confirms that the consulting firm pays.",
      "Labour confirms it pays.",
      "Labour confirms Mr Axelrod pays",
      "Labour confirms dollars payments.",
      "Labour confirms consulting firm pays",
      "Mr Axelrod pays.",
      "The consulting firm pays.",
      "Mr Axelrod pays in dollars.",
      "Mr Axelrod pays by consulting firm.",
      "The consulting firm pays by dollars.",
      "Mr Axelrod pays by dollars through a consulting firm."
    ]
  },
  {
    "instance_id": "realsumm-67",
    "summary": "<t> HBO is the US network behind Game of Thrones and the Sopranos . </t> <t> Service is available on Apple TV and iOS exclusively for three months . </t> <t> Apple has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 . </t>",
    "summary_trees": [
      "# ::snt  HBO is the US network behind Game of Thrones and the Sopranos . \n(n / network\n      :domain (b / broadcast-program\n            :name (n2 / name\n                  :op1 \"HBO\"))\n      :mod (c / country\n            :name (n3 / name\n                  :op1 \"US\"))\n      :location (b2 / behind\n            :op1 (a / and\n                  :op1 (b3 / broadcast-program\n                        :name (n4 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))\n                  :op2 (b4 / broadcast-program\n                        :name (n5 / name\n                              :op1 \"The\"\n                              :op2 \"Sapranos\")))))",
      "# ::snt  Service is available on Apple TV and iOS exclusively for three months . \n(a / available-02\n      :ARG2 (s / service)\n      :location (a2 / and\n            :op1 (p / product\n                  :name (n / name\n                        :op1 \"Apple\"\n                        :op2 \"TV\"))\n            :op2 (p2 / product\n                  :name (n2 / name\n                        :op1 \"iOS\")))\n      :duration (t / temporal-quantity\n            :quant 3\n            :unit (m / month)\n            :ARG0-of (e / exclusive-02)))",
      "# ::snt  Apple has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 . \n(c / cut-02\n      :ARG0 (c2 / company\n            :name (n / name\n                  :op1 \"Apple\"))\n      :ARG1 (p / price-01\n            :ARG1 (s / system\n                  :mod (p2 / product\n                        :name (n2 / name\n                              :op1 \"Apple\"\n                              :op2 \"TV\"))))\n      :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n      :ARG4 (m2 / monetary-quantity\n            :quant 69\n            :unit (d2 / dollar))\n      :mod (a / also))"
    ],
    "tree": [
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\")))",
      "(c / cut-02\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\")))))",
      "(c / cut-02\n   :ARG3 (m / monetary-quantity\n            :quant 99))",
      "(c / cut-02\n   :ARG3 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(c / cut-02\n   :ARG4 (m2 / monetary-quantity\n             :quant 69))",
      "(c / cut-02\n   :ARG4 (m2 / monetary-quantity\n             :unit (d2 / dollar)))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\")))))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :mod (a / also))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG3 (m / monetary-quantity\n            :quant 99))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG3 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG4 (m2 / monetary-quantity\n             :unit (d2 / dollar)))",
      "(c / cut-02\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :mod (a / also))",
      "(c / cut-02\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG3 (m / monetary-quantity\n            :quant 99))",
      "(c / cut-02\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG4 (m2 / monetary-quantity\n             :quant 69))",
      "(c / cut-02\n   :ARG3 (m / monetary-quantity\n            :quant 99)\n   :ARG4 (m2 / monetary-quantity\n             :quant 69))",
      "(c / cut-02\n   :ARG3 (m / monetary-quantity\n            :quant 99)\n   :ARG4 (m2 / monetary-quantity\n             :unit (d2 / dollar)))",
      "(c / cut-02\n   :ARG3 (m / monetary-quantity\n            :unit (d / dollar))\n   :ARG4 (m2 / monetary-quantity\n             :quant 69))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :mod (a / also))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG3 (m / monetary-quantity\n            :quant 99))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG3 (m / monetary-quantity\n            :unit (d / dollar)))"
    ],
    "smus": [
      "Apple has cut.",
      "Apple has cut the price of the Apple TV system.",
      "Apple has also cut.",
      "Apple has cut 99.",
      "Apple has cut $$$.",
      "Apple has cut 69.",
      "Price for Apple TV system was also cut.",
      "The price of the Apple TV system was cut to $$.",
      "The price of the Apple TV system was cut to $.",
      "Apple has also cut the price of the Apple TV system.",
      "Apple has cut the price of the Apple TV system by $$.",
      "Apple has cut the price of the Apple TV system to 69 dollars.",
      "Apple has cut 99 from 69.",
      "Apple has cut $69 from $69.",
      "The price of the Apple TV system was cut from 99 to 69 dollars.",
      "The price of the Apple TV system was cut from 99 to $.",
      "The price of the Apple TV system was cut from $69 to $69.",
      "Apple has cut the price of the Apple TV system from 99 to 69 dollars.",
      "Apple has cut the price of the Apple TV system from 99 to $.",
      "Apple has cut the price of the Apple TV system from $69 to $69."
    ]
  },
  {
    "instance_id": "realsumm-68",
    "summary": "<t> Huma Abedin came under fire for not tipping at Chipotle in Iowa . </t> <t> Abedin is Hillary Clinton 's most trusted aide for the 2016 campaign . </t> <t> On Saturday , aide and husband Anthony Weiner went for Mexican lunch . </t> <t> It is one of aide and Weiner final weekends before the campaign gets into swing . </t>",
    "summary_trees": [
      "# ::snt  Huma Abedin came under fire for not tipping at Chipotle in Iowa . \n(f / fire-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Huma\"\n                  :op2 \"Abedin\"))\n      :ARG2 (t / tip-02\n            :polarity -\n            :ARG0 p\n            :location (c / company\n                  :name (n2 / name\n                        :op1 \"Chipotle\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Iowa\")))))",
      "# ::snt  Abedin is Hillary Clinton 's most trusted aide for the 2016 campaign . \n(h / have-degree-91\n      :ARG1 (a / aide\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Hillary\"\n                        :op2 \"Clinton\"))\n            :domain (p2 / person\n                  :name (n2 / name\n                        :op1 \"Abedin\")))\n      :ARG2 (t / trust-01\n            :ARG0 p\n            :ARG1 a)\n      :ARG3 (m / most)\n      :ARG5 (c / campaign-01\n            :time (d / date-entity\n                  :year 2016)))",
      "# ::snt  On Saturday , aide and husband Anthony Weiner went for Mexican lunch . \n(g / go-02\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Anthony\"\n                        :op2 \"Weiner\")\n                  :ARG0-of (h / have-org-role-91\n                        :ARG2 (a2 / aide)))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Anthony\"\n                        :op2 \"Weiner\")\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG2 (h3 / husband))))\n      :ARG4 (l / lunch\n            :mod (c / country\n                  :name (n3 / name\n                        :op1 \"Mexico\")))\n      :time (d / date-entity\n            :weekday (s / saturday)))",
      "# ::snt  It is one of aide and Weiner final weekends before the campaign gets into swing . \n(w / weekend\n      :ARG1-of (ii / include-91\n            :ARG2 (w2 / weekend\n                  :mod (f / final)\n                  :time (b / before\n                        :op1 (s / swing-06\n                              :ARG1 (c / campaign-01)))\n                  :poss (a / and\n                        :op1 (p / person\n                              :ARG0-of (a2 / aid-01))\n                        :op2 (p2 / person\n                              :name (n / name\n                                    :op1 \"Weiner\")))))\n      :domain (ii2 / it))"
    ],
    "tree": [
      "(f / fire-02\n   :ARG2 (t / tip-02\n            :polarity -))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\"))))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Abedin\"))))",
      "(h / have-degree-91\n   :ARG2 (t / trust-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\"))))",
      "(h / have-degree-91\n   :ARG2 (t / trust-01\n            :ARG1 (a / aide)))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\")))\n   :ARG2 (t / trust-01\n            :ARG0 p))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\")))\n   :ARG2 (t / trust-01\n            :ARG1 a))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Abedin\")))\n   :ARG2 (t / trust-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\"))))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Abedin\")))\n   :ARG2 (t / trust-01\n            :ARG1 a))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\")))\n   :ARG3 (m / most))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Abedin\")))\n   :ARG3 (m / most))",
      "(h / have-degree-91\n   :ARG1 (a / aide\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Abedin\")))\n   :ARG5 (c / campaign-01\n            :time (d / date-entity\n                     :year 2016)))",
      "(h / have-degree-91\n   :ARG2 (t / trust-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\")))\n   :ARG3 (m / most))",
      "(h / have-degree-91\n   :ARG2 (t / trust-01\n            :ARG1 (a / aide))\n   :ARG3 (m / most))",
      "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anthony\"\n                     :op2 \"Weiner\")))",
      "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\")))",
      "(g / go-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a2 / aide))))",
      "(g / go-02\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (h3 / husband))))",
      "(g / go-02\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))",
      "(g / go-02\n   :time (d / date-entity\n            :weekday (s / saturday)))",
      "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anthony\"\n                     :op2 \"Weiner\"))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))",
      "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\"))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))",
      "(g / go-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a2 / aide)))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))",
      "(g / go-02\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (h3 / husband)))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))",
      "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anthony\"\n                     :op2 \"Weiner\"))\n   :time (d / date-entity\n            :weekday (s / saturday)))",
      "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\"))\n   :time (d / date-entity\n            :weekday (s / saturday)))",
      "(g / go-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a2 / aide)))\n   :time (d / date-entity\n            :weekday (s / saturday)))",
      "(g / go-02\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (h3 / husband)))\n   :time (d / date-entity\n            :weekday (s / saturday)))",
      "(g / go-02\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s / saturday)))",
      "(w / weekend\n   :ARG1 (ii / include-91\n             :ARG2 (w2 / weekend\n                       :mod (f / final))))",
      "(w / weekend\n   :ARG1 (ii / include-91\n             :ARG2 (w2 / weekend\n                       :time (b / before\n                                :op1 (s / swing-06\n                                        :ARG1 (c / campaign-01))))))"
    ],
    "smus": [
      "Fired not tipped.",
      "Hillary Clinton is trusted.",
      "The aide was trusted.",
      "Hillary Clinton's aide was trusted.",
      "Abedin was an aide to Hillary Clinton, who was trusted.",
      "Hillary Clinton has trusted the 2016 campaign.",
      "The aide was trusted in the 2016 campaign.",
      "Abedin was Hillary Clinton's most trusted aide.",
      "Abedin is the most trusted aide.",
      "Hillary Clinton's aide was trusted in the 2016 campaign.",
      "Abedin was Hillary Clinton's trusted aide in the 2016 campaign.",
      "The aide was the most trusted aide in the 2016 campaign.",
      "Hillary Clinton's aide was the most trusted in the 2016 campaign.",
      "Abedin was Hillary Clinton's most trusted aide in the 2016 campaign.",
      "Anthony Weiner went.",
      "The aide went.",
      "The husband went.",
      "went to a Mexican lunch.",
      "Saturday went.",
      "Anthony Weiner went to a Mexican lunch.",
      "The aide went to a Mexican lunch.",
      "The husband went to a Mexican lunch.",
      "Anthony Weiner went Saturday.",
      "An aide went Saturday.",
      "The husband went Saturday.",
      "Saturday went to a Mexican lunch.",
      "Anthony Weiner went to a Mexican lunch Saturday.",
      "An aide went to a Mexican lunch Saturday.",
      "The husband went to a Mexican lunch Saturday.",
      "Aid workers have weekends before campaign swings.",
      "Aid workers have final weekends before campaign swing."
    ]
  },
  {
    "instance_id": "realsumm-69",
    "summary": "<t> Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 . </t> <t> Reached height of height popularity in 1964 , when height was ranked 16th . </t> <t> Meanwhile , names including Dexter and Jenson are now in the top 100 . </t>",
    "summary_trees": [
      "# ::snt  Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 . \n(f / fall-01\n      :ARG1 (n / name\n            :name (n2 / name\n                  :op1 \"Gary\"))\n      :ARG3 (r / rank-01\n            :ARG2 147\n            :ARG1 n\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (p / popular-02\n                        :ARG1 n)\n                  :ARG3 (m / most)\n                  :ARG5 (n3 / name\n                        :mod (c / country\n                              :name (n4 / name\n                                    :op1 \"Britain\"))))\n            :time (d / date-entity\n                  :year 1996))\n      :ARG4 (r2 / rank-01\n            :ARG2 1091\n            :ARG1 n\n            :time (d2 / date-entity\n                  :year 2013)))",
      "# ::snt  Reached height of height popularity in 1964 , when height was ranked 16th . \n(r / reach-01\n      :ARG1 (h / high-02\n            :ARG1 (p / popularity)\n            :mod-of p)\n      :time (d / date-entity\n            :year 1964\n            :time-of (r2 / rank-01\n                  :ARG1 h\n                  :ARG2 16)))",
      "# ::snt  Meanwhile , names including Dexter and Jenson are now in the top 100 . \n(b / be-located-at-91\n      :ARG1 (n / name\n            :ARG2-of (ii / include-01\n                  :ARG1 (a / and\n                        :op1 (p / person\n                              :name (n2 / name\n                                    :op1 \"Dexter\"))\n                        :op2 (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Jenson\")))))\n      :ARG2 (t / top\n            :ord (o / ordinal-entity\n                  :value 100))\n      :time (n4 / now)\n      :time (m / meanwhile))"
    ],
    "tree": [
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\")))",
      "(f / fall-01\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG2 (p / popular-02\n                              :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))))))",
      "(f / fall-01\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG5 (n3 / name\n                               :mod (c / country\n                                       :name (n4 / name\n                                                 :op1 \"Britain\"))))))",
      "(f / fall-01\n   :ARG4 (r2 / rank-01\n             :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))))",
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG3 (r / rank-01\n            :ARG2 147))",
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG4 (r2 / rank-01\n             :ARG2 1091))",
      "(f / fall-01\n   :ARG3 (r / rank-01\n            :ARG2 147)\n   :ARG4 (r2 / rank-01\n             :time (d2 / date-entity\n                       :year 2013)))",
      "(f / fall-01\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG2 (p / popular-02\n                              :ARG1 (n / name :name (n2 / name :op1 \"Gary\")))))\n   :ARG4 (r2 / rank-01\n             :time (d2 / date-entity\n                       :year 2013)))",
      "(f / fall-01\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG4 (r2 / rank-01\n             :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))))",
      "(f / fall-01\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG4 (r2 / rank-01\n             :time (d2 / date-entity\n                       :year 2013)))",
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG3 (r / rank-01\n            :ARG1 n)\n   :ARG4 (r2 / rank-01\n             :time (d2 / date-entity\n                       :year 2013)))",
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG3 (r / rank-01\n            :ARG1 (h / have-degree-91\n                     :ARG2 (p / popular-02\n                              :ARG1 n)))\n   :ARG4 (r2 / rank-01\n             :time (d2 / date-entity\n                       :year 2013)))",
      "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :mod h)))",
      "(r / reach-01\n   :time (d / date-entity\n            :year 1964))",
      "(r / reach-01\n   :time (d / date-entity\n            :time (r2 / rank-01\n                      :ARG1 (h / high-02))))",
      "(r / reach-01\n   :time (d / date-entity\n            :time (r2 / rank-01\n                      :ARG2 16)))",
      "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :mod h))\n   :time (d / date-entity\n            :year 1964))",
      "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :mod h))\n   :time (d / date-entity\n            :time (r2 / rank-01\n                      :ARG1 h)))",
      "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :mod h))\n   :time (d / date-entity\n            :time (r2 / rank-01\n                      :ARG2 16)))",
      "(h / high-02\n   :ARG1 (p / popularity\n            :mod h))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p / person\n                               :name (n2 / name\n                                         :op1 \"Dexter\")))))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Jenson\")))))",
      "(b / be-located-at-91\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100)))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p / person\n                               :name (n2 / name\n                                         :op1 \"Dexter\"))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100)))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Jenson\"))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100)))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p / person\n                               :name (n2 / name\n                                         :op1 \"Dexter\"))))\n   :time (n4 / now))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Jenson\"))))\n   :time (n4 / now))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Jenson\"))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100))\n   :time (n4 / now))",
      "(n / name\n   :ARG2 (ii / include-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Dexter\"))))"
    ],
    "smus": [
      "The name Gary fell.",
      "The popular name Gary fell into the ranks.",
      "The British name rank fell.",
      "The rank fell to 2013.",
      "Gary fell into the ranks.",
      "Gary fell to the rank of a British name.",
      "Gary fell to 2013 rank.",
      "Gary fell to 2013",
      "The rank fell from 1996 to 2013.",
      "The British name fell to the rank of Gary.",
      "The British name's ranking fell to 2013",
      "Gary fell from the 2013 popular name list.",
      "Gary fell from 1996 to 2013.",
      "Reached high popularity.",
      "Reached in 1964.",
      "Reached when high-ranking.",
      "Reached 16th in rank.",
      "In 1964, its popularity reached a high.",
      "At the time of its ranking, its popularity reached a high.",
      "At the time of the ranking, popularity reached a high.",
      "when high ranked.",
      "In the names including Dexter.",
      "In the names including Jenson.",
      "Names including Dexter are in the top 100.",
      "Names including Johnson are in the top 100.",
      "Now there are names including Dexter.",
      "Now there are names including Jenson.",
      "The names now in the top 100 include Dexter.",
      "names including jenson",
      "including Dexter."
    ]
  },
  {
    "instance_id": "realsumm-70",
    "summary": "<t> Leanne Mitchell has been dropped by Mitchell label and sings at a holiday camp . </t> <t> Andrea Begley and Jermain Jackman are yet to become household names . </t> <t> Will 2015 winner Stevie become a chart success or another Voice flop ? </t> <t> . </t>",
    "summary_trees": [
      "# ::snt  Leanne Mitchell has been dropped by Mitchell label and sings at a holiday camp . \n(a / and\n      :op1 (d / drop-05\n            :ARG0 (l / label\n                  :mod (p / person\n                        :name (n / name\n                              :op1 \"Mitchell\")))\n            :ARG1 p)\n      :op2 (s / sing-01\n            :ARG0 p\n            :location (c / camp\n                  :mod (h / holiday))))",
      "# ::snt  Andrea Begley and Jermain Jackman are yet to become household names . \n(h / have-11\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Andrea\"\n                        :op2 \"Begley\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Jermain\"\n                        :op2 \"Jackman\")))\n      :ARG1 (y / yet)\n      :ARG2 (b / become-01\n            :ARG1 a\n            :ARG2 (n3 / name\n                  :mod (h2 / household))))",
      "# ::snt  Will 2015 winner Stevie become a chart success or another Voice flop ? \n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Stevie\")\n            :ARG0-of (w / win-01\n                  :time (d / date-entity\n                        :year 2015)))\n      :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                  :ARG0 p\n                  :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                  :ARG1 p\n                  :mod (v / voice-01)\n                  :mod (a2 / another))))",
      "# ::snt  . \n(a / amr-empty)"
    ],
    "tree": [
      "(a / and\n   :op1 (d / drop-05\n           :ARG0 (l / label\n                    :mod (p / person\n                            :name (n / name\n                                     :op1 \"Mitchell\")))))",
      "(a / and\n   :op1 (d / drop-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Mitchell\"))))",
      "(a / and\n   :op2 (s / sing-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Mitchell\"))))",
      "(a / and\n   :op2 (s / sing-01\n           :location (c / camp\n                        :mod (h / holiday))))",
      "(a / and\n   :op1 (d / drop-05\n           :ARG0 (l / label\n                    :mod (p / person\n                            :name (n / name\n                                     :op1 \"Mitchell\"))))\n   :op2 (s / sing-01\n           :ARG0 p))",
      "(a / and\n   :op1 (d / drop-05\n           :ARG0 (l / label\n                    :mod (p / person\n                            :name (n / name\n                                     :op1 \"Mitchell\"))))\n   :op2 (s / sing-01\n           :location (c / camp\n                        :mod (h / holiday))))",
      "(a / and\n   :op1 (d / drop-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Mitchell\")))\n   :op2 (s / sing-01\n           :ARG0 p))",
      "(a / and\n   :op1 (d / drop-05\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Mitchell\")))\n   :op2 (s / sing-01\n           :location (c / camp\n                        :mod (h / holiday))))",
      "(d / drop-05\n   :ARG0 (l / label\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Mitchell\"))))",
      "(h / have-11\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jermain\"\n                       :op2 \"Jackman\"))\n   :ARG2 (b / become-01\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))",
      "(h / have-11\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 (a / and)))",
      "(h / have-11\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))",
      "(h / have-11\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrea\"\n                     :op2 \"Begley\"))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 (a / and)))",
      "(b / become-01\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 (p / person :name (n / name :op1 \"Stevie\"))))))",
      "(b / become-01\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG1 (c / chart-01))))",
      "(b / become-01\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :mod (v / voice-01))))",
      "(b / become-01\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :mod (a2 / another))))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\"))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 p)))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\"))\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :ARG1 p)))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\"))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG1 (c / chart-01))))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\"))\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :mod (v / voice-01))))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\"))\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :mod (a2 / another))))",
      "(b / become-01\n   :ARG1 (p / person\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 p)))",
      "(b / become-01\n   :ARG1 (p / person\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG1 (c / chart-01))))",
      "(b / become-01\n   :ARG1 (p / person\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :mod (v / voice-01))))",
      "(b / become-01\n   :ARG1 (p / person\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op2 (f / flop-01\n                    :mod (a2 / another))))"
    ],
    "smus": [
      "And the Mitchell label has dropped.",
      "And Mitchell was dropped.",
      "And Mitchell sings.",
      "and sings at a holiday camp.",
      "The Mitchell label dropped and he sings.",
      "The Mitchell label has dropped and sings at a holiday camp.",
      "Mitchell drops and sings.",
      "Mitchell dropped and sings at a holiday camp.",
      "The Mitchell label has dropped.",
      "Yet to become.",
      "Yet to become a household name.",
      "Andrea Begley has yet to become a \"...",
      "Andrea Begley has yet to become a household name.",
      "became stevie's success?",
      "became chart success?",
      "became a Voice Flop?",
      "became another flop?",
      "Steve became a success or not?",
      "Steve became a flop or not?",
      "Steve became chart success?",
      "Steve became a Voice Flop?",
      "Steve became another flop or not?",
      "The winner of 2015 became a success or failure?",
      "The winner of 2015 became chart success?",
      "The winner of 2015 became a Voice Flop?",
      "The 2015 winner became one or another flop?"
    ]
  },
  {
    "instance_id": "realsumm-71",
    "summary": "<t> Romanian - born Alexandra Harra , 28 , has become an Instagram star . </t> <t> Model , who 's posed for Playboy , posts selfies with inspirational messages . </t> <t> After dyeing locks black , being hailed as a rival to Kim Kardashian . </t>",
    "summary_trees": [
      "# ::snt  Romanian - born Alexandra Harra , 28 , has become an Instagram star . \n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Alexandra\"\n                  :op2 \"Harra\")\n            :ARG1-of (b2 / bear-02\n                  :location (c / country\n                        :name (n2 / name\n                              :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG2 (s / star\n            :mod (p2 / publication\n                  :name (n3 / name\n                        :op1 \"Instagram\"))))",
      "# ::snt  Model , who 's posed for Playboy , posts selfies with inspirational messages . \n(p / post-01\n      :ARG0 (m / model\n            :ARG0-of (p2 / pose-01\n                  :ARG2 (m2 / magazine\n                        :name (n / name\n                              :op1 \"Playboy\"))))\n      :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                  :ARG0-of (ii / inspire-01))))",
      "# ::snt  After dyeing locks black , being hailed as a rival to Kim Kardashian . \n(h / hail-02\n      :ARG1 (r / rival-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")))\n      :time (a / after\n            :op1 (d / dye-01\n                  :ARG1 (l / lock)\n                  :ARG2 (b / black-04\n                        :ARG1 l))))"
    ],
    "tree": [
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alexandra\"\n                     :op2 \"Harra\")))",
      "(b / become-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 28)))",
      "(b / become-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(b / become-01\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alexandra\"\n                     :op2 \"Harra\"))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))",
      "(b / become-01\n   :ARG1 (p / person\n            :ARG1 (b2 / bear-02\n                      :location (c / country\n                                   :name (n2 / name\n                                             :op1 \"Romania\"))))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))",
      "(b / become-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 28))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))",
      "(b / become-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Alexandra\"\n            :op2 \"Harra\"))",
      "(p / person\n   :ARG1 (b2 / bear-02\n             :location (c / country\n                          :name (n2 / name\n                                    :op1 \"Romania\"))))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 28))",
      "(p / person\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(p / person\n   :name (n / name\n            :op1 \"Alexandra\"\n            :op2 \"Harra\")\n   :ARG1 (b2 / bear-02\n             :location (c / country\n                          :name (n2 / name\n                                    :op1 \"Romania\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Alexandra\"\n            :op2 \"Harra\")\n   :age (t / temporal-quantity\n           :quant 28))",
      "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\")))))",
      "(p / post-01\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))",
      "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\"))))\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))",
      "(m / model\n   :ARG0 (p2 / pose-01\n             :ARG2 (m2 / magazine\n                       :name (n / name\n                                :op1 \"Playboy\"))))",
      "(h / hail-02\n   :ARG1 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\"))))",
      "(h / hail-02\n   :time (a / after\n            :op1 (d / dye-01\n                    :ARG2 (b / black-04\n                             :ARG1 (l / lock)))))",
      "(h / hail-02\n   :ARG1 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\")))\n   :time (a / after\n            :op1 (d / dye-01\n                    :ARG1 (l / lock))))",
      "(h / hail-02\n   :ARG1 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\")))\n   :time (a / after\n            :op1 (d / dye-01\n                    :ARG2 (b / black-04\n                             :ARG1 (l / lock)))))",
      "(r / rival-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kim\"\n                     :op2 \"Kardinez\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Kim\"\n            :op2 \"Kardinez\"))",
      "(a / after\n   :op1 (d / dye-01\n           :ARG1 (l / lock)))",
      "(a / after\n   :op1 (d / dye-01\n           :ARG2 (b / black-04\n                    :ARG1 (l / lock))))"
    ],
    "smus": [
      "Anna Harra has become.",
      "The 28-year-old has become a.",
      "Has become an Instagram star.",
      "Anna Harra has become an Instagram star.",
      "Romanian born has become an Instagram star.",
      "The 28-year-old has become an Instagram star.",
      "The year old has become an Instagram star.",
      "Romanian born",
      "Alexandra Harra was born in Romania.",
      "Romanian born 28",
      "Romanian born at age.",
      "Alexandra Harra is a Romanian born.",
      "Alexandra Harra is a Romanian born woman.",
      "Born in Romania.",
      "Posts selfies with inspiring messages",
      "Model posed for Playboy posts selfies with inspirational messages",
      "Model posed for Playboy",
      "Posing for Playboy.",
      "Kim Kardinez's rivalry was hailed.",
      "Hail a day after locks are dyed black.",
      "Kim Kardinez's rivalry was hailed after the locks were dyed.",
      "Kim Kardinez's rivalry was hailed after the locks were dyed black.",
      "After the locks are dyed.",
      "After the locks are dyed black.",
      "The locks are dyed black.",
      "The locks were dyed black."
    ]
  },
  {
    "instance_id": "realsumm-72",
    "summary": "<t> Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain . </t> <t> However , Ciftci was left blushing as rivals earned impressive victory . </t> <t> Win gave hosts Dundee rivals first derby win in more than a decade . </t> <t> Goals from Greg Stewart , Jake McPake and Paul Heffernen secured win . </t>",
    "summary_trees": [
      "# ::snt  Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain . \n(c / celebrate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nadir\"\n                  :op2 \"Ciftci\"))\n      :manner (b / blow-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Scott\"\n                              :op2 \"Bain\")\n                        :ARG0-of (g / goalkeeper-01)\n                        :ARG0-of (r / rival-01\n                              :ARG1 p)))))",
      "# ::snt  However , Ciftci was left blushing as rivals earned impressive victory . \n(c / contrast-01\n      :ARG2 (l / leave-13\n            :ARG0 (e / earn-01\n                  :ARG0 (r / rival)\n                  :ARG1 (w / win-01\n                        :ARG0 r\n                        :ARG0-of (ii / impress-01)))\n            :ARG1 (b / blush-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Ciftci\")))))",
      "# ::snt  Win gave hosts Dundee rivals first derby win in more than a decade . \n(g / give-01\n      :ARG0 (w / win-01)\n      :ARG1 (w2 / win-01\n            :ARG0 (t / team\n                  :ARG0-of (h / host-01))\n            :mod (d / derby)\n            :ord (o / ordinal-entity\n                  :value 1\n                  :range (m / more-than\n                        :op1 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (d2 / decade)))))\n      :ARG2 (t3 / team\n            :name (n / name\n                  :op1 \"Dundee\")\n            :ARG0-of (r / rival-01\n                  :ARG1 t)))",
      "# ::snt  Goals from Greg Stewart , Jake McPake and Paul Heffernen secured win . \n(s / secure-02\n      :ARG0 (g / goal\n            :source (a / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Greg\"\n                              :op2 \"Stewart\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Jake\"\n                              :op2 \"McPake\"))\n                  :op3 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Paul\"\n                              :op2 \"Heffernen\"))))\n      :ARG1 (w / win-01))"
    ],
    "tree": [
      "(c / celebrate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nadir\"\n                     :op2 \"Ciftci\")))",
      "(c / celebrate-01\n   :manner (b / blow-01\n              :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n              :ARG1 (k / kiss-01)))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nadir\"\n                     :op2 \"Ciftci\"))\n   :manner (b / blow-01\n              :ARG0 p\n              :ARG1 (k / kiss-01)))",
      "(p / person\n   :name (n / name\n            :op1 \"Nadir\"\n            :op2 \"Ciftci\"))",
      "(b / blow-01\n   :ARG1 (k / kiss-01\n            :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))))",
      "(b / blow-01\n   :ARG1 (k / kiss-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Scott\"\n                                :op2 \"Bain\"))))",
      "(b / blow-01\n   :ARG1 (k / kiss-01\n            :ARG1 (p2 / person\n                      :ARG0 (g / goalkeeper-01))))",
      "(b / blow-01\n   :ARG1 (k / kiss-01\n            :ARG1 (p2 / person\n                      :ARG0 (r / rival-01\n                               :ARG1 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))))))",
      "(c / contrast-01\n   :ARG2 (l / leave-13\n            :ARG1 (b / blush-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Ciftci\")))))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG0 (r / rival)))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG1 (w / win-01\n                     :ARG0 (r / rival))))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG1 (w / win-01\n                     :ARG0 (ii / impress-01))))",
      "(l / leave-13\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Ciftci\"))))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG0 (r / rival))\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Ciftci\"))))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG1 (w / win-01\n                     :ARG0 (r / rival)))\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Ciftci\"))))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG1 (w / win-01\n                     :ARG0 (ii / impress-01)))\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Ciftci\"))))",
      "(e / earn-01\n   :ARG1 (w / win-01\n            :ARG0 (r / rival)))",
      "(e / earn-01\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))",
      "(e / earn-01\n   :ARG0 (r / rival)\n   :ARG1 (w / win-01\n            :ARG0 r))",
      "(e / earn-01\n   :ARG0 (r / rival)\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))",
      "(b / blush-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ciftci\")))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :mod (d / derby)))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :unit (d2 / decade))))))",
      "(g / give-01\n   :ARG2 (t3 / team\n             :name (n / name\n                      :op1 \"Dundee\")))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :mod (d / derby)))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :value 1)))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :unit (d2 / decade))))))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG2 (t3 / team\n             :name (n / name\n                      :op1 \"Dundee\")))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team))))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :ARG0 (t / team\n                      :ARG0 (h / host-01)))\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t)))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :mod (d / derby))\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team))))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :value 1))\n   :ARG2 (t3 / team\n             :name (n / name\n                      :op1 \"Dundee\")))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :value 1))\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team))))",
      "(g / give-01\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :unit (d2 / decade)))))\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team))))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :mod (d / derby))\n   :ARG2 (t3 / team\n             :name (n / name\n                      :op1 \"Dundee\")))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :mod (d / derby))\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team))))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :value 1))\n   :ARG2 (t3 / team\n             :name (n / name\n                      :op1 \"Dundee\")))",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ord (o / ordinal-entity\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :unit (d2 / decade)))))\n   :ARG2 (t3 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team))))",
      "(s / secure-02\n   :ARG0 (g / goal\n            :source (p / person\n                       :name (n / name\n                                :op1 \"Greg\"\n                                :op2 \"Stewart\"))))",
      "(s / secure-02\n   :ARG0 (g / goal\n            :source (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Jake\"\n                                  :op2 \"McPake\"))))",
      "(s / secure-02\n   :ARG0 (g / goal\n            :source (p3 / person\n                        :name (n3 / name\n                                  :op1 \"Paul\"\n                                  :op2 \"Heffernen\"))))"
    ],
    "smus": [
      "Nadir Ciftci was celebrated.",
      "Nadir ciftci was celebrated by blowing a kiss.",
      "Nadir ciftci's kiss was blowing.",
      "blowing kiss with Scott Bain",
      "blowing a kiss to the goalkeeper.",
      "A kiss was blowing between rival Nadir Cifitci and the two.",
      "Scott Bain got a kiss.",
      "The goalkeeper got a kiss.",
      "But Ciftci was left blushing.",
      "Leaved by rivals earned.",
      "Leaved because rivals earned victories.",
      "Left with an impressive win earned.",
      "left blushing to Ciftci.",
      "Rivals earned, leaving Cifitci blushing.",
      "The fact that rivals earned a victory left Ciftci blushing.",
      "The impressing win left Ciftci blushing.",
      "Earned the rivals a victory.",
      "Earned an impressive win.",
      "The rivals earned a victory.",
      "The rivals earned an impressive victory.",
      "Ciftci is blushing.",
      "gave a derby win.",
      "gave the first win.",
      "gave a more than a decade-long victory.",
      "gave Dundee",
      "The win gave the derby victory.",
      "The win gave the first victory.",
      "The victory gave the winner a more than a decade-long victory.",
      "The win gave Dundee a win.",
      "The win gave teams against their rivals.",
      "The hosts gave their rivals a victory.",
      "The derby gave teams a win over their rivals.",
      "The first win gave Dundee.",
      "The first victory gave the teams that rivals were.",
      "A more than a decade-long victory gave teams rivals.",
      "The win gave Dundee a derby victory.",
      "The win gave the derby victory to the rivals.",
      "The win gave Dundee their first win.",
      "The win gave the rivals a more than a decade-long victory.",
      "Greg Stewart's goals secured the victory.",
      "Jake McPake's goals secured the victory.",
      "Paul Heffernen's goals secured the victory."
    ]
  },
  {
    "instance_id": "realsumm-73",
    "summary": "<t> Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney . </t> <t> Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson . </t> <t> Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends . </t>",
    "summary_trees": [
      "# ::snt  Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney . \n(c / close-01\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 \"Mercedes-Benz\"\n                  :op2 \"Fashion\"\n                  :op3 \"Week\"\n                  :op4 \"Australia\")\n            :time (d / date-entity\n                  :year 2015\n                  :weekday (t / thursday)\n                  :dayperiod (n2 / night))\n            :location (c2 / city\n                  :name (n3 / name\n                        :op1 \"Sydney\"))))",
      "# ::snt  Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson . \n(ii / include-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Maticevski\"))\n            :op2 (w / work-of-art\n                  :name (n2 / name\n                        :op1 \"Romance\"\n                        :op2 \"Was\"\n                        :op3 \"Born\"))\n            :op3 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Tome\"))\n            :op4 (p3 / person\n                  :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\"))\n            :op5 (p4 / person\n                  :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\")))\n      :ARG2 (s / show-04\n            :ARG1-of (s2 / stand-out-06)))",
      "# ::snt  Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends . \n(t / trend\n      :ARG1-of (r / repeat-01)\n      :domain (a / and\n            :op1 (f / fabric\n                  :mod (s / sheer)\n                  :mod (m / metallic))\n            :op2 (s2 / silhouette\n                  :mod (s3 / slouchy)\n                  :mod (v / voluminous))))"
    ],
    "tree": [
      "(c / close-01\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Mercedes-Benz\"\n                     :op2 \"Fashion\"\n                     :op3 \"Week\"\n                     :op4 \"Australia\")))",
      "(c / close-01\n   :ARG1 (e / event\n            :time (d / date-entity\n                     :year 2015)))",
      "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Maticevski\")))",
      "(ii / include-91\n    :ARG1 (w / work-of-art\n             :name (n2 / name\n                       :op1 \"Romance\"\n                       :op2 \"Was\"\n                       :op3 \"Born\")))",
      "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n3 / name\n                        :op1 \"Tome\")))",
      "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\")))",
      "(ii / include-91\n    :ARG1 (p4 / person\n              :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\")))",
      "(ii / include-91\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))",
      "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Maticevski\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))",
      "(ii / include-91\n    :ARG1 (w / work-of-art\n             :name (n2 / name\n                       :op1 \"Romance\"\n                       :op2 \"Was\"\n                       :op3 \"Born\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))",
      "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n3 / name\n                        :op1 \"Tome\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))",
      "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))",
      "(ii / include-91\n    :ARG1 (p4 / person\n              :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Maticevski\")))",
      "(a / and\n   :op2 (w / work-of-art\n           :name (n2 / name\n                     :op1 \"Romance\"\n                     :op2 \"Was\"\n                     :op3 \"Born\")))",
      "(a / and\n   :op3 (p2 / person\n            :name (n3 / name\n                      :op1 \"Tome\")))",
      "(a / and\n   :op4 (p3 / person\n            :name (n4 / name\n                      :op1 \"Steven\"\n                      :op2 \"Khalil\")))",
      "(a / and\n   :op5 (p4 / person\n            :name (n5 / name\n                      :op1 \"Johanna\"\n                      :op2 \"Johnson\")))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Maticevski\"))\n   :op2 (w / work-of-art\n           :name (n2 / name\n                     :op1 \"Romance\"\n                     :op2 \"Was\"\n                     :op3 \"Born\")))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Maticevski\"))\n   :op3 (p2 / person\n            :name (n3 / name\n                      :op1 \"Tome\")))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Maticevski\"))\n   :op4 (p3 / person\n            :name (n4 / name\n                      :op1 \"Steven\"\n                      :op2 \"Khalil\")))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Maticevski\"))\n   :op5 (p4 / person\n            :name (n5 / name\n                      :op1 \"Johanna\"\n                      :op2 \"Johnson\")))",
      "(a / and\n   :op2 (w / work-of-art\n           :name (n2 / name\n                     :op1 \"Romance\"\n                     :op2 \"Was\"\n                     :op3 \"Born\"))\n   :op3 (p2 / person\n            :name (n3 / name\n                      :op1 \"Tome\")))",
      "(a / and\n   :op2 (w / work-of-art\n           :name (n2 / name\n                     :op1 \"Romance\"\n                     :op2 \"Was\"\n                     :op3 \"Born\"))\n   :op4 (p3 / person\n            :name (n4 / name\n                      :op1 \"Steven\"\n                      :op2 \"Khalil\")))",
      "(a / and\n   :op2 (w / work-of-art\n           :name (n2 / name\n                     :op1 \"Romance\"\n                     :op2 \"Was\"\n                     :op3 \"Born\"))\n   :op5 (p4 / person\n            :name (n5 / name\n                      :op1 \"Johanna\"\n                      :op2 \"Johnson\")))",
      "(a / and\n   :op3 (p2 / person\n            :name (n3 / name\n                      :op1 \"Tome\"))\n   :op4 (p3 / person\n            :name (n4 / name\n                      :op1 \"Steven\"\n                      :op2 \"Khalil\")))",
      "(t / trend\n   :domain (f / fabric\n              :mod (s / sheer)))",
      "(t / trend\n   :domain (s2 / silhouette\n               :mod (s3 / slouchy)))"
    ],
    "smus": [
      "Sydney Closes",
      "The event will close Thursday.",
      "Romance Was Born.",
      "Tome included.",
      "Including Johanna Johnson.",
      "Romance Was Born was one of the standout shows.",
      "The stand out shows included, er, Johanna Johnson.",
      "And Romance Was Born.",
      "and tome.",
      "And so did Johanna Johnson.",
      "Mariuszki and Romance Was Born.",
      "Romance Was Born, Tome.",
      "Romance Was Born, Steven Khalil",
      "Romance Was Born, and Johanna Johnson.",
      "Mariusevski, Romance Was Born, Tome.",
      "Mariusevski, Romance Was Born, Steven Khalil.",
      "Mariusz, Romance Was Born, Johanna Johnson.",
      "Romance Was Born, Tome, Steven Chalil",
      "Romance Was Born, Tome, and Johanna Johnson.",
      "Romance Was Born * Steven Halil * Johanna Johnson",
      "Mariusevski, Romance Was Born, Tome, Steven Chalil.",
      "Mariusz, Romance Was Born, Tome, and Johanna Johnson.",
      "Mariusevski, Romance Was Born, Steven Halil and Johanna Johnson.",
      "Romance Was Born, Tome, Steven Halil, Johanna Johnson.",
      "Mariusevski, Romance Was Born, Tome, Steven Halil, and Johanna Johnson.",
      "Romance Was Born",
      "Louchy silhouettes are trending.",
      "Louchy silhouettes are trending for repeat."
    ]
  },
  {
    "instance_id": "realsumm-74",
    "summary": "<t> Lindsay Sandiford fears Sandiford will be next to face the firing squad . </t> <t> Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal . </t> <t> The 58-year - old has been on death row in Bali since 2012 . </t> <t> Bali was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 . </t>",
    "summary_trees": [
      "# ::snt  Lindsay Sandiford fears Sandiford will be next to face the firing squad . \n(f / fear-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lindsay\"\n                  :op2 \"Sandiford\"))\n      :ARG1 (n2 / next\n            :domain p\n            :prep-to (f2 / face-01\n                  :ARG0 p\n                  :ARG1 (s / squad\n                        :ARG0-of (f3 / fire-01)))))",
      "# ::snt  Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal . \n(k / kill-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Andrew\"\n                        :op2 \"Chan\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Myuran\"\n                        :op2 \"Sukumaran\")))\n      :time (a2 / after\n            :op1 (m / meal\n                  :mod (b / bucket)\n                  :mod (c / company\n                        :name (n3 / name\n                              :op1 \"KFC\"))\n                  :mod (f / final))))",
      "# ::snt  The 58-year - old has been on death row in Bali since 2012 . \n(b / be-located-at-91\n      :ARG1 (p / person\n            :age (t / temporal-quantity\n                  :quant 58\n                  :unit (y / year)))\n      :ARG2 (r / row\n            :mod (d / die-01))\n      :location (ii / island\n            :name (n / name\n                  :op1 \"Bali\"))\n      :time (s / since\n            :op1 (d2 / date-entity\n                  :year 2012)))",
      "# ::snt  Bali was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 . \n(c / convict-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Bali\"))\n      :ARG2 (a / attempt-01\n            :ARG0 p\n            :ARG1 (s / smuggle-01\n                  :ARG0 p\n                  :ARG1 (c2 / cocaine\n                        :quant (m / monetary-quantity\n                              :quant 1600000\n                              :unit (p2 / pound))))\n            :time (d / date-entity\n                  :year 2012)))"
    ],
    "tree": [
      "(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\")))",
      "(f / fear-01\n   :ARG1 (n2 / next\n             :domain (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))))",
      "(f / fear-01\n   :ARG1 (n2 / next\n             :prep-to (f2 / face-01\n                          :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\")))))",
      "(f / fear-01\n   :ARG1 (n2 / next\n             :prep-to (f2 / face-01\n                          :ARG1 (s / squad\n                                   :ARG0 (f3 / fire-01)))))",
      "(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG1 (n2 / next\n             :domain p))",
      "(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG1 (n2 / next\n             :prep-to (f2 / face-01\n                          :ARG0 p)))",
      "(p / person\n   :name (n / name\n            :op1 \"Lindsay\"\n            :op2 \"Sandiford\"))",
      "(n2 / next\n    :prep-to (f2 / face-01\n                 :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))))",
      "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\")))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\")))",
      "(k / kill-01\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket))))",
      "(k / kill-01\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\")))))",
      "(k / kill-01\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (f / final))))",
      "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket))))",
      "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\")))))",
      "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (f / final))))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket))))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\")))))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (f / final))))",
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 58)))",
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bali\")))",
      "(c / convict-01\n   :ARG2 (a / attempt-01\n            :ARG0 (p / person :name (n / name :op1 \"Bali\"))))",
      "(c / convict-01\n   :ARG2 (a / attempt-01\n            :time (d / date-entity\n                     :year 2012)))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bali\"))\n   :ARG2 (a / attempt-01\n            :ARG0 p))",
      "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bali\"))\n   :ARG2 (a / attempt-01\n            :ARG1 (s / smuggle-01\n                     :ARG0 p)))",
      "(a / attempt-01\n   :ARG1 (s / smuggle-01\n            :ARG1 (c2 / cocaine\n                      :quant (m / monetary-quantity\n                                :quant 1600000))))",
      "(a / attempt-01\n   :ARG1 (s / smuggle-01\n            :ARG1 (c2 / cocaine\n                      :quant (m / monetary-quantity\n                                :unit (p2 / pound)))))"
    ],
    "smus": [
      "Lindsay Sandiford fears.",
      "Lindsay Sandiford fears he's the next.",
      "Fears the next to face a firing squad.",
      "Lindsay Sandiford fears for her next.",
      "Lindsay Sandiford fears the next face.",
      "Lindsay Sandiford fears the firing squad will be next.",
      "Next to face the firing squad.",
      "Face the firing squad.",
      "Andrew Chan killed.",
      "Myuran Sukumaran killed.",
      "Killed after bucket meal.",
      "Killed after a KFC meal.",
      "Killed after the final meal.",
      "Andrew Chan killed after a bucket meal.",
      "Andrew Chan killed after a KFC meal.",
      "Andrew Chan killed after the final meal.",
      "Myuran Sukumaran killed after a bucket meal.",
      "Myuran Sukumaran killed after a KFC meal.",
      "Myuran Sukumaran killed after the final meal.",
      "There's a death row.",
      "There is a death row on Bali.",
      "Bali was convicted.",
      "Bali was convicted of attempting.",
      "The attempted in 2012 was convicted.",
      "Bali was convicted of attempting to smuggle.",
      "Bali was convicted of attempting in 2012.",
      "Attempting in 2012.",
      "Bali was attempting to smuggle in 2012."
    ]
  },
  {
    "instance_id": "realsumm-75",
    "summary": "<t> Abby Bishop took in Bishop two - day - old niece Zala in August 2013 . </t> <t> Now Zala is 20 months old and Zala follows Bishop as Zala travels the world playing for professional basketball teams . </t> <t> Bishop said world was a big decision but Zala would n't change anything . </t> <t> Zala will go with Bishop when Zala starts playing in the U.S. WNBA in May. </t>",
    "summary_trees": [
      "# ::snt  Abby Bishop took in Bishop two - day - old niece Zala in August 2013 . \n(t / take-in-06\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abby\"\n                  :op2 \"Bishop\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Zala\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 p\n                  :ARG2 (n3 / niece))\n            :age (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d / day)))\n      :time (d2 / date-entity\n            :month 8\n            :year 2013))",
      "# ::snt  Now Zala is 20 months old and Zala follows Bishop as Zala travels the world playing for professional basketball teams . \n(a / and\n      :op1 (a2 / age-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Zala\"))\n            :ARG2 (t / temporal-quantity\n                  :quant 20\n                  :unit (m / month))\n            :time (n2 / now))\n      :op2 (f / follow-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Bishop\"))\n            :time (t2 / travel-01\n                  :ARG0 p\n                  :ARG1 (w / world)\n                  :manner (p3 / play-01\n                        :ARG0 p\n                        :ARG2 (t3 / team\n                              :mod (b / basketball)\n                              :mod (p4 / professional))))))",
      "# ::snt  Bishop said world was a big decision but Zala would n't change anything . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Bishop\"))\n      :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                  :ARG3 (w / world)\n                  :mod (b / big))\n            :ARG2 (c2 / change-01\n                  :polarity -\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Zala\"))\n                  :ARG1 (a / anything))))",
      "# ::snt  Zala will go with Bishop when Zala starts playing in the U.S. WNBA in May. \n(g / go-21\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Zala\"))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 \"Bishop\"))\n      :time (s / start-01\n            :ARG0 p\n            :ARG1 (p3 / play-01\n                  :ARG0 p\n                  :ARG3 (l / league\n                        :name (n3 / name\n                              :op1 \"WNBA\")\n                        :mod (c / country\n                              :name (n4 / name\n                                    :op1 \"U.S.\"))))\n            :time (d / date-entity\n                  :month 5)))"
    ],
    "tree": [
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\")))",
      "(t / take-in-06\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\")))))",
      "(t / take-in-06\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n3 / niece))))",
      "(t / take-in-06\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (d / day))))",
      "(t / take-in-06\n   :time (d2 / date-entity\n             :year 2013))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p)))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 2)))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n3 / niece))))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (d / day))))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :time (d2 / date-entity\n             :year 2013))",
      "(t / take-in-06\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Zala\"))\n   :time (d2 / date-entity\n             :year 2013))",
      "(t / take-in-06\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))))\n   :time (d2 / date-entity\n             :month 8))",
      "(t / take-in-06\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (d / day)))\n   :time (d2 / date-entity\n             :month 8))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Zala\"))\n   :time (d2 / date-entity\n             :month 8))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p))\n   :time (d2 / date-entity\n             :month 8))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 2))\n   :time (d2 / date-entity\n             :month 8))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (n3 / niece)))\n   :time (d2 / date-entity\n             :month 8))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :quant 20)))",
      "(a / and\n   :op1 (a2 / age-01\n            :time (n2 / now)))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :unit (m / month))))",
      "(a / and\n   :op2 (f / follow-01\n           :ARG2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Bishop\"))))",
      "(a / and\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :ARG0 (p / person :name (n / name :op1 \"Zala\")))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Zala\")))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG0 p))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Zala\")))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG2 (t3 / team\n                                           :mod (b / basketball))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Zala\")))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG2 (t3 / team\n                                           :mod (p4 / professional))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :quant 20))\n   :op2 (f / follow-01\n           :ARG2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Bishop\"))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :quant 20))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :ARG0 (p / person :name (n / name :op1 \"Zala\")))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :quant 20))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG0 (p / person :name (n / name :op1 \"Zala\"))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :quant 20))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG2 (t3 / team\n                                           :mod (b / basketball))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :quant 20))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG2 (t3 / team\n                                           :mod (p4 / professional))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :time (n2 / now))\n   :op2 (f / follow-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Zala\"))))",
      "(a / and\n   :op1 (a2 / age-01\n            :time (n2 / now))\n   :op2 (f / follow-01\n           :ARG2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Bishop\"))))",
      "(a / and\n   :op1 (a2 / age-01\n            :time (n2 / now))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG2 (t3 / team\n                                           :mod (p4 / professional))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :unit (m / month)))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :ARG1 (w / world))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :unit (m / month)))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG0 (p / person :name (n / name :op1 \"Zala\"))))))",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG2 (t / temporal-quantity\n                     :unit (m / month)))\n   :op2 (f / follow-01\n           :time (t2 / travel-01\n                     :manner (p3 / play-01\n                                 :ARG2 (t3 / team\n                                           :mod (b / basketball))))))",
      "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\")))",
      "(a2 / age-01\n    :ARG2 (t / temporal-quantity\n             :quant 20))",
      "(a2 / age-01\n    :ARG2 (t / temporal-quantity\n             :unit (m / month))\n    :time (n2 / now))",
      "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\"))\n    :ARG2 (t / temporal-quantity\n             :quant 20)\n    :time (n2 / now))",
      "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\"))\n    :ARG2 (t / temporal-quantity\n             :unit (m / month))\n    :time (n2 / now))",
      "(p / person\n   :name (n / name\n            :op1 \"Zala\"))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bishop\")))",
      "(s / say-01\n   :ARG1 (c / contrast-01\n            :ARG2 (c2 / change-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                     :mod (b / big))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bishop\"))\n   :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                     :ARG3 (w / world))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bishop\"))\n   :ARG1 (c / contrast-01\n            :ARG2 (c2 / change-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bishop\"))\n   :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                     :mod (b / big))))",
      "(p / person\n   :name (n / name\n            :op1 \"Bishop\"))",
      "(c / contrast-01\n   :ARG2 (c2 / change-01\n             :polarity -))",
      "(c / contrast-01\n   :ARG1 (d / decide-01\n            :ARG3 (w / world))\n   :ARG2 (c2 / change-01\n             :polarity -))",
      "(c / contrast-01\n   :ARG1 (d / decide-01\n            :ARG3 (w / world))\n   :ARG2 (c2 / change-01\n             :ARG1 (a / anything)))",
      "(g / go-21\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\")))",
      "(g / go-21\n   :time (s / start-01\n            :ARG0 (p / person :name (n / name :op1 \"Zala\"))))",
      "(g / go-21\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG0 (p / person :name (n / name :op1 \"Zala\")))))",
      "(g / go-21\n   :time (s / start-01\n            :time (d / date-entity\n                     :month 5)))",
      "(g / go-21\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG3 (l / league\n                               :name (n3 / name\n                                         :op1 \"WNBA\")))))",
      "(g / go-21\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG3 (l / league\n                               :mod (c / country\n                                       :name (n4 / name\n                                                 :op1 \"U.S.\"))))))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\")))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :time (s / start-01\n            :ARG0 p))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG0 p)))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :time (s / start-01\n            :time (d / date-entity\n                     :month 5)))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG3 (l / league\n                               :name (n3 / name\n                                         :op1 \"WNBA\")))))",
      "(g / go-21\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\"))\n   :time (s / start-01\n            :ARG0 (p / person :name (n / name :op1 \"Zala\"))))",
      "(g / go-21\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\"))\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG3 (l / league\n                               :mod (c / country\n                                       :name (n4 / name\n                                                 :op1 \"U.S.\"))))))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\"))\n   :time (s / start-01\n            :ARG0 p))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\"))\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG0 p)))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\"))\n   :time (s / start-01\n            :time (d / date-entity\n                     :month 5)))",
      "(g / go-21\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bishop\"))\n   :time (s / start-01\n            :ARG1 (p3 / play-01\n                      :ARG3 (l / league\n                               :name (n3 / name\n                                         :op1 \"WNBA\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Zala\"))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Bishop\"))",
      "(s / start-01\n   :ARG1 (p3 / play-01\n             :ARG0 (p / person :name (n / name :op1 \"Zala\"))))",
      "(s / start-01\n   :ARG1 (p3 / play-01\n             :ARG3 (l / league\n                      :name (n3 / name\n                                :op1 \"WNBA\"))))",
      "(s / start-01\n   :ARG1 (p3 / play-01\n             :ARG3 (l / league\n                      :mod (c / country\n                              :name (n4 / name\n                                        :op1 \"U.S.\")))))",
      "(s / start-01\n   :time (d / date-entity\n            :month 5))",
      "(s / start-01\n   :ARG1 (p3 / play-01\n             :ARG3 (l / league\n                      :name (n3 / name\n                                :op1 \"WNBA\")))\n   :time (d / date-entity\n            :month 5))"
    ],
    "smus": [
      "Abby Bishop took in.",
      "The two took in.",
      "The day took in.",
      "took in August.",
      "Abby Bishop took in Zala.",
      "Abby Bishop took in two people.",
      "Abby Bishop took in her niece.",
      "Abby Bishop took in a day old.",
      "In August, Abby Bishop took in.",
      "Sala took in August.",
      "Abby Bishop took in in August.",
      "The two were taken in in August.",
      "In August, Abby Bishop took in Zala.",
      "In August, Abby Bishop took her in.",
      "In August, Abby Bishop took in two young people.",
      "In August, Abby Bishop took in her niece.",
      "On August, Abby Bishop took in a day-old.",
      "And follows Bishop.",
      "And follows as Sala travels.",
      "and follows as the world travels.",
      "and follows as it travels playing for basketball teams.",
      "and follows as it travels playing for professional teams.",
      "20 and follows Bishop.",
      "20 and follows when Sala travels",
      "20 and follows as the world travels",
      "20 and follows as it travels playing for basketball teams.",
      "20 and follows as it travels playing for professional teams.",
      "Now is age and follows Bishop.",
      "Now, age is and follows as Sala travels.",
      "It is age now and as the world travels by, it follows.",
      "Now, age is and follows as zala travels playing.",
      "Now, it's age and follows as it travels playing for basketball teams.",
      "It is months old and follows as the world travels by.",
      "Follows Bishop.",
      "Follows as Sala travels.",
      "Follows as the world travels.",
      "Follows as it travels playing for basketball teams.",
      "Follows as it travels playing for professional teams.",
      "Sala travels with teams playing.",
      "Sala travels the world playing for teams.",
      "Playing for basketball teams.",
      "Playing for professional teams.",
      "Bishop said --",
      "But it won't change,\" he said.",
      "But it's a big decision,\" she said.",
      "But the world is in for the decision, Bishop said.",
      "But it won't change,\" Bishop said.",
      "But it was a big decision, Bishop said.",
      "But it won't change.",
      "The world is in the decision but it won't change.",
      "It's a big decision, but it won't change.",
      "It's a big decision, but it doesn't change anything.",
      "Go when Sala starts.",
      "Go when Sala starts playing.",
      "Go when May starts.",
      "Go when playing in the WNBA starts.",
      "When playing in the U.S. league starts, go.",
      "Zala will go with Bishop.",
      "When he starts, Sala will go.",
      "When he starts playing, Sala will go.",
      "Sala will go when May starts.",
      "Sala will go when the WNBA starts.",
      "Sala will go when playing in the U.S. league starts.",
      "When Sala starts playing, Bishop will go.",
      "When he starts, Sala will go to Bishop.",
      "When zala starts playing he will go to bishop.",
      "When May starts, Sala will go to Bishop.",
      "When playing in the WNBA starts, Sala will go to Bishop.",
      "When playing in the U.S. league, Sala will go to Bishop.",
      "Playing in the WNBA starts.",
      "Playing in the U.S. league starts.",
      "Starts May",
      "Sala starts playing in May.",
      "Playing in the WNBA starts in May.",
      "Playing in the U.S. league starts in May.",
      "Playing in the U.S. league."
    ]
  },
  {
    "instance_id": "realsumm-76",
    "summary": "<t> ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins . </t> <t> Tour de Yorkshire runs over three stages starting in Bridlington on May 1 . </t> <t> Prior 's team and Yorkshire race inspired by Tour de France Grand Depart . </t>",
    "summary_trees": [
      "# ::snt  ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins . \n(p / prepare-02\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"One\"\n                  :op2 \"Pro\"\n                  :op3 \"Cycling\"))\n      :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (a / and\n                  :op1 (t2 / team\n                        :name (n2 / name\n                              :op1 \"Team\"\n                              :op2 \"Sky\"))\n                  :op2 (p2 / person\n                        :name (n3 / name\n                              :op1 \"Sir\"\n                              :op2 \"Bradley\"\n                              :op3 \"Wiggins\")))))",
      "# ::snt  Tour de Yorkshire runs over three stages starting in Bridlington on May 1 . \n(r / run-over-04\n      :ARG1 (t / tour\n            :name (n / name\n                  :op1 \"Tour\"\n                  :op2 \"de\"\n                  :op3 \"Yorkshire\"))\n      :ARG2 (s / stage\n            :quant 3)\n      :ARG1-of (s2 / start-01\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Bridlington\"))\n            :time (d / date-entity\n                  :day 1\n                  :month 5)))",
      "# ::snt  Prior 's team and Yorkshire race inspired by Tour de France Grand Depart . \n(ii / inspire-01\n      :ARG0 (t / tour\n            :name (n / name\n                  :op1 \"Tour\"\n                  :op2 \"de\"\n                  :op3 \"France\"\n                  :op4 \"Grand\"\n                  :op5 \"Depart\"))\n      :ARG1 (a / and\n            :op1 (t2 / team\n                  :poss (p / person\n                        :name (n2 / name\n                              :op1 \"Prior\")))\n            :op2 (r / race-02\n                  :ARG0 p\n                  :location (c / county\n                        :name (n3 / name\n                              :op1 \"Yorkshire\")))))"
    ],
    "tree": [
      "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\")))",
      "(p / prepare-02\n   :ARG1 (t / take-on-21\n            :ARG1 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Team\"\n                                :op2 \"Sky\"))))",
      "(p / prepare-02\n   :ARG1 (t / take-on-21\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Sir\"\n                                :op2 \"Bradley\"\n                                :op3 \"Wiggins\"))))",
      "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o))",
      "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG1 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Team\"\n                                :op2 \"Sky\"))))",
      "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Sir\"\n                                :op2 \"Bradley\"\n                                :op3 \"Wiggins\"))))",
      "(o / organization\n   :name (n / name\n            :op1 \"One\"\n            :op2 \"Pro\"\n            :op3 \"Cycling\"))",
      "(t / take-on-21\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Team\"\n                       :op2 \"Sky\")))",
      "(r / run-over-04\n   :ARG1 (t / tour\n            :name (n / name\n                     :op1 \"Tour\"\n                     :op2 \"de\"\n                     :op3 \"Yorkshire\")))",
      "(r / run-over-04\n   :ARG2 (s / stage\n            :quant 3))",
      "(r / run-over-04\n   :ARG1 (t / tour\n            :name (n / name\n                     :op1 \"Tour\"\n                     :op2 \"de\"\n                     :op3 \"Yorkshire\"))\n   :ARG2 (s / stage\n            :quant 3))",
      "(s2 / start-01\n    :location (c / city\n                 :name (n2 / name\n                           :op1 \"Bridlington\")))",
      "(s2 / start-01\n    :time (d / date-entity\n             :day 1))",
      "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\")))",
      "(ii / inspire-01\n    :ARG1 (t2 / team\n              :poss (p / person\n                       :name (n2 / name\n                                 :op1 \"Prior\"))))",
      "(ii / inspire-01\n    :ARG1 (r / race-02\n             :location (c / county\n                          :name (n3 / name\n                                    :op1 \"Yorkshire\"))))",
      "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (t2 / team\n              :poss (p / person\n                       :name (n2 / name\n                                 :op1 \"Prior\"))))",
      "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (r / race-02\n             :location (c / county\n                          :name (n3 / name\n                                    :op1 \"Yorkshire\"))))"
    ],
    "smus": [
      "One Pro Cycling is preparing.",
      "preparing to take on Team Sky.",
      "preparing to take on Sir Bradley Wiggins.",
      "One Pro Cycling is preparing to take on.",
      "One Pro Cycling is preparing to take on Team Sky.",
      "One Pro Cycling is preparing to take on Sir Bradley Wiggins.",
      "Take on Team Sky.",
      "Take on Sir Bradley Wiggins.",
      "Tour de Yorkshire runs over.",
      "Three stages were run over.",
      "Tour de Yorkshire has run over three stages.",
      "Starting on the 1st.",
      "Starting in May.",
      "Inspired by Tour de France Grand D\u00e9part.",
      "Prior's team was inspired.",
      "The race in Yorkshire was inspired.",
      "The Tour de France Grand D\u00e9part has inspired the team of Prior.",
      "The Tour de France Grand Depart has inspired the race in Yorkshire."
    ]
  },
  {
    "instance_id": "realsumm-77",
    "summary": "<t> Woman reported ' someone ' had been run over , but victim was a squirrel . </t> <t> Another man dialled 999 to say man dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives . </t>",
    "summary_trees": [
      "# ::snt  Woman reported ' someone ' had been run over , but victim was a squirrel . \n(c / contrast-01\n      :ARG1 (r / report-01\n            :ARG0 (w / woman)\n            :ARG1 (r2 / run-over-12\n                  :ARG1 (s / someone)))\n      :ARG2 (s2 / squirrel\n            :domain (v / victim)))",
      "# ::snt  Another man dialled 999 to say man dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives . \n(m / multi-sentence\n      :snt1 (d / dial-01\n            :ARG0 (m2 / man\n                  :mod (a / another))\n            :ARG1 (p / phone-number-entity\n                  :value 999)\n            :purpose (s / say-01\n                  :ARG0 m2\n                  :ARG1 (d2 / drop-01\n                        :ARG0 (m3 / man)\n                        :ARG1 (b / burger\n                              :ARG1-of (b2 / bleed-01)))))\n      :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                  :mod (a2 / ambulance)\n                  :mod (c / country-region\n                        :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\")))\n            :ARG1 (p2 / possible-01\n                  :ARG1 (c2 / cost-01\n                        :ARG1 (c3 / call-02\n                              :mod (h / hoax-01))\n                        :ARG2 (l / live-01)))))"
    ],
    "tree": [
      "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG0 (w / woman)))",
      "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG1 (r2 / run-over-12\n                      :ARG1 (s / someone))))",
      "(c / contrast-01\n   :ARG2 (s2 / squirrel\n             :domain (v / victim)))",
      "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG0 (w / woman))\n   :ARG2 (s2 / squirrel\n             :domain (v / victim)))",
      "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG1 (r2 / run-over-12\n                      :ARG1 (s / someone)))\n   :ARG2 (s2 / squirrel\n             :domain (v / victim)))",
      "(r / report-01\n   :ARG1 (r2 / run-over-12\n             :ARG1 (s / someone)))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG0 (m2 / man\n                      :mod (a / another))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG1 (p / phone-number-entity\n                     :value 999)))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG0 (m3 / man)))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG1 (b / burger\n                                           :ARG1 (b2 / bleed-01))))))",
      "(m / multi-sentence\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance))))",
      "(m / multi-sentence\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG1 (c3 / call-02\n                                          :mod (h / hoax-01))))))",
      "(m / multi-sentence\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))))",
      "(m / multi-sentence\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG2 (l / live-01)))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG0 (m2 / man\n                      :mod (a / another)))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG0 (m2 / man\n                      :mod (a / another)))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG1 (p / phone-number-entity\n                     :value 999))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG1 (p / phone-number-entity\n                     :value 999))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG1 (c3 / call-02\n                                          :mod (h / hoax-01))))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG1 (p / phone-number-entity\n                     :value 999))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG1 (p / phone-number-entity\n                     :value 999))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG2 (l / live-01)))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG0 (m2 / man)))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG0 (m2 / man)))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG1 (c3 / call-02\n                                          :mod (h / hoax-01))))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG0 (m2 / man)))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG0 (m2 / man)))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG2 (l / live-01)))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG0 (m3 / man))))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG0 (m3 / man))))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG1 (c3 / call-02\n                                          :mod (h / hoax-01))))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG0 (m3 / man))))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG0 (m3 / man))))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG2 (l / live-01)))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG1 (b / burger\n                                           :ARG1 (b2 / bleed-01)))))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG1 (b / burger\n                                           :ARG1 (b2 / bleed-01)))))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG1 (c3 / call-02\n                                          :mod (h / hoax-01))))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG1 (b / burger\n                                           :ARG1 (b2 / bleed-01)))))\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :purpose (s / say-01\n                        :ARG1 (d2 / drop-01\n                                  :ARG1 (b / burger\n                                           :ARG1 (b2 / bleed-01)))))\n   :snt2 (w / warn-01\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG2 (l / live-01)))))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another)))",
      "(d / dial-01\n   :purpose (s / say-01\n               :ARG0 (m2 / man)))",
      "(d / dial-01\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG0 (m3 / man))))",
      "(d / dial-01\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG1 (b / burger\n                                  :ARG1 (b2 / bleed-01)))))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG0 (m3 / man))))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG1 (b / burger\n                                  :ARG1 (b2 / bleed-01)))))",
      "(d / dial-01\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG0 (m2 / man)))",
      "(d / dial-01\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG0 (m3 / man))))",
      "(d / dial-01\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG1 (b / burger\n                                  :ARG1 (b2 / bleed-01)))))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG0 m2))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG0 (m3 / man))))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG1 (d2 / drop-01\n                         :ARG1 (b / burger\n                                  :ARG1 (b2 / bleed-01)))))",
      "(s / say-01\n   :ARG1 (d2 / drop-01\n             :ARG0 (m3 / man)))",
      "(s / say-01\n   :ARG1 (d2 / drop-01\n             :ARG1 (b / burger\n                      :ARG1 (b2 / bleed-01))))",
      "(d2 / drop-01\n    :ARG1 (b / burger\n             :ARG1 (b2 / bleed-01)))",
      "(d2 / drop-01\n    :ARG0 (m3 / man)\n    :ARG1 (b / burger\n             :ARG1 (b2 / bleed-01)))",
      "(w / warn-01\n   :ARG0 (s2 / service\n             :mod (a2 / ambulance)))",
      "(w / warn-01\n   :ARG0 (s2 / service\n             :mod (c / country-region\n                     :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\"))))",
      "(w / warn-01\n   :ARG1 (p2 / possible-01\n             :ARG1 (c2 / cost-01\n                       :ARG1 (c3 / call-02\n                                 :mod (h / hoax-01)))))",
      "(w / warn-01\n   :ARG1 (p2 / possible-01\n             :ARG1 (c2 / cost-01\n                       :ARG2 (l / live-01))))"
    ],
    "smus": [
      "But the woman reported.",
      "But someone was reported run over.",
      "The woman reported, but the victim was a squirrel.",
      "Someone was reported run over but the victim was a squirrel.",
      "Someone reported run over.",
      "The woman reported someone being run over.",
      "Another man dialed.",
      "dialed 999.",
      "dialed to say the man dropped.",
      "dialed to say the bleedin' burger dropped.",
      "The ambulance service warned --",
      "Warning: Hoax calls could cost.",
      "The East of England service warned --",
      "warned that it could cost lives...",
      "Another man dialled. The ambulance service warned.",
      "Another man dialled. The East of England service warned.",
      "dialled 999; ambulance service warned.",
      "dialled 999, warned that hoax calls could cost.",
      "dialled 999; East of England service warned.",
      "Dialed 999, warned that it could cost lives.",
      "dialed to say a man, an ambulance service warned.",
      "dialed to say a man, warned that hoaxed calls could cost.",
      "dialed to say a man, east of england service warned.",
      "dialed to say a man, warned that it could cost lives.",
      "dialed to say the man dropped, ambulance service warned.",
      "dialed to say the man dropped, warned that hoaxed calls could cost.",
      "dialed to say the man dropped. The East of England service warned.",
      "dialed to say the man dropped, warned that it could cost lives.",
      "Dialed to say the burger was dropping bleeding. Ambulance service warned.",
      "Dialed to say the burger dropped bleedin'.Warned that hoaxed calls could cost.",
      "dialed to say the burger was dropping bleeding. The East of England service warned.",
      "Dialed to say the burger dropped bleedin'. warned that it could cost lives.",
      "Another man dialed 999.",
      "Another man dialed to say the man dropped.",
      "Another man dialed to say \"the bleeding burger dropped.\"",
      "The man dialed 999 to say.",
      "Another man dialed 999 to say.",
      "Another man dialed 999 to say the man dropped.",
      "Another man dialled 999 to say the bleedin' burger had been dropped.",
      "Say the man dropped.",
      "Say, the bleedin' burger dropped.",
      "The bleedin' burger was dropped.",
      "The man dropped a bleeding burger.",
      "warned that hoax calls could cost.",
      "warned that it could cost lives.",
      "The ambulance service warned that hoax calls could cost.",
      "The ambulance service warned that it could cost lives.",
      "The East of England service warned that hoax calls could cost.",
      "The East of England service warned that it could cost lives.",
      "Hoax calls can cost.",
      "It can cost lives.",
      "Hoax calls will cost."
    ]
  },
  {
    "instance_id": "realsumm-78",
    "summary": "<t> Ben Flower returned from Flower six - month ban on Thursday night . </t> <t> Wales forward made first appearance since Flower punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final . </t> <t> 27-year - old received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington . </t>",
    "summary_trees": [
      "# ::snt  Ben Flower returned from Flower six - month ban on Thursday night . \n(r / return-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Ben\"\n                  :op2 \"Flower\"))\n      :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                  :quant 6\n                  :unit (m / month)))\n      :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))",
      "# ::snt  Wales forward made first appearance since Flower punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final . \n(a / appear-01\n      :ARG1 (p / person\n            :ARG0-of (f / forward-01)\n            :part-of (t / team\n                  :name (n / name\n                        :op1 \"Wales\")))\n      :ord (o / ordinal-entity\n            :value 1\n            :range (s / since\n                  :op1 (p2 / punch-01\n                        :ARG0 (p3 / person\n                              :name (n2 / name\n                                    :op1 \"Flower\"))\n                        :ARG1 (p4 / person\n                              :name (n3 / name\n                                    :op1 \"Lance\"\n                                    :op2 \"Hohaia\")\n                              :part-of (t2 / team\n                                    :name (n4 / name\n                                          :op1 \"St\"\n                                          :op2 \"Helens\")))\n                        :time (m / moment\n                              :ARG0-of (o2 / open-02\n                                    :ARG1 (g / game\n                                          :name (n5 / name\n                                                :op1 \"Grand\"\n                                                :op2 \"Final\")\n                                          :time (s2 / season\n                                                :mod (l / last)))))))))",
      "# ::snt  27-year - old received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington . \n(r / receive-01\n      :ARG0 (p / person\n            :age (t / temporal-quantity\n                  :quant 27\n                  :unit (y / year)))\n      :ARG1 (r2 / reception\n            :ARG1-of (b / brilliant-01))\n      :time (w / win-01\n            :ARG0 (t2 / team\n                  :name (n / name\n                        :op1 \"Wigan\"))\n            :ARG4 (t3 / team\n                  :name (n2 / name\n                        :op1 \"Warrington\"))\n            :manner (s / score-entity\n                  :op1 30\n                  :op2 20)))"
    ],
    "tree": [
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\")))",
      "(r / return-01\n   :time (d / date-entity\n            :weekday (t2 / thursday)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :duration (t / temporal-quantity\n                         :quant 6)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :time (d / date-entity\n            :weekday (t2 / thursday)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :time (d / date-entity\n            :dayperiod (n2 / night)))",
      "(r / return-01\n   :ARG3 (b / ban-01\n            :ARG2 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\")))\n   :time (d / date-entity\n            :weekday (t2 / thursday)))",
      "(r / return-01\n   :ARG3 (b / ban-01\n            :duration (t / temporal-quantity\n                         :unit (m / month)))\n   :time (d / date-entity\n            :weekday (t2 / thursday)))",
      "(r / return-01\n   :ARG3 (b / ban-01\n            :duration (t / temporal-quantity\n                         :unit (m / month)))\n   :time (d / date-entity\n            :dayperiod (n2 / night)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p)\n   :time (d / date-entity\n            :weekday (t2 / thursday)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :duration (t / temporal-quantity\n                         :quant 6))\n   :time (d / date-entity\n            :weekday (t2 / thursday)))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :duration (t / temporal-quantity\n                         :unit (m / month)))\n   :time (d / date-entity\n            :dayperiod (n2 / night)))",
      "(a / appear-01\n   :ARG1 (p / person\n            :ARG0 (f / forward-01)))",
      "(a / appear-01\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\"))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :ARG0 (f / forward-01))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(a / appear-01\n   :ARG1 (p / person\n            :ARG0 (f / forward-01))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :time (m / moment\n                                       :ARG0 (o2 / open-02\n                                                 :ARG1 (g / game\n                                                          :name (n5 / name\n                                                                    :op1 \"Grand\"\n                                                                    :op2 \"Final\"))))))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :ARG0 (f / forward-01))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :ARG1 (p4 / person\n                                        :part (t2 / team\n                                                  :name (n4 / name\n                                                            :op1 \"St\"\n                                                            :op2 \"Helens\")))))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :ARG0 (f / forward-01))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :time (m / moment\n                                       :ARG0 (o2 / open-02\n                                                 :ARG1 (g / game\n                                                          :time (s2 / season\n                                                                    :mod (l / last)))))))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(a / appear-01\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :ARG0 (p3 / person\n                                        :name (n2 / name\n                                                  :op1 \"Flower\"))))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :ARG1 (p4 / person\n                                        :name (n3 / name\n                                                  :op1 \"Lance\"\n                                                  :op2 \"Hohaia\"))))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :time (m / moment\n                                       :ARG0 (o2 / open-02\n                                                 :ARG1 (g / game\n                                                          :name (n5 / name\n                                                                    :op1 \"Grand\"\n                                                                    :op2 \"Final\"))))))))",
      "(a / appear-01\n   :ARG1 (p / person\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :ARG1 (p4 / person\n                                        :part (t2 / team\n                                                  :name (n4 / name\n                                                            :op1 \"St\"\n                                                            :op2 \"Helens\")))))))",
      "(p / person\n   :part (t / team\n            :name (n / name\n                     :op1 \"Wales\")))",
      "(p / person\n   :ARG0 (f / forward-01)\n   :part (t / team\n            :name (n / name\n                     :op1 \"Wales\")))",
      "(o / ordinal-entity\n   :range (s / since\n             :op1 (p2 / punch-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Flower\")))))",
      "(o / ordinal-entity\n   :range (s / since\n             :op1 (p2 / punch-01\n                      :ARG1 (p4 / person\n                                :name (n3 / name\n                                          :op1 \"Lance\"\n                                          :op2 \"Hohaia\")))))",
      "(o / ordinal-entity\n   :range (s / since\n             :op1 (p2 / punch-01\n                      :time (m / moment\n                               :ARG0 (o2 / open-02\n                                         :ARG1 (g / game\n                                                  :name (n5 / name\n                                                            :op1 \"Grand\"\n                                                            :op2 \"Final\")))))))",
      "(o / ordinal-entity\n   :range (s / since\n             :op1 (p2 / punch-01\n                      :ARG1 (p4 / person\n                                :part (t2 / team\n                                          :name (n4 / name\n                                                    :op1 \"St\"\n                                                    :op2 \"Helens\"))))))",
      "(o / ordinal-entity\n   :range (s / since\n             :op1 (p2 / punch-01\n                      :time (m / moment\n                               :ARG0 (o2 / open-02\n                                         :ARG1 (g / game\n                                                  :time (s2 / season\n                                                            :mod (l / last))))))))",
      "(s / since\n   :op1 (p2 / punch-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Flower\"))))",
      "(s / since\n   :op1 (p2 / punch-01\n            :ARG1 (p4 / person\n                      :name (n3 / name\n                                :op1 \"Lance\"\n                                :op2 \"Hohaia\"))))",
      "(s / since\n   :op1 (p2 / punch-01\n            :time (m / moment\n                     :ARG0 (o2 / open-02\n                               :ARG1 (g / game\n                                        :name (n5 / name\n                                                  :op1 \"Grand\"\n                                                  :op2 \"Final\"))))))",
      "(s / since\n   :op1 (p2 / punch-01\n            :ARG1 (p4 / person\n                      :part (t2 / team\n                                :name (n4 / name\n                                          :op1 \"St\"\n                                          :op2 \"Helens\")))))",
      "(s / since\n   :op1 (p2 / punch-01\n            :time (m / moment\n                     :ARG0 (o2 / open-02\n                               :ARG1 (g / game\n                                        :time (s2 / season\n                                                  :mod (l / last)))))))",
      "(p2 / punch-01\n    :ARG0 (p3 / person\n              :name (n2 / name\n                        :op1 \"Flower\")))",
      "(p2 / punch-01\n    :ARG1 (p4 / person\n              :name (n3 / name\n                        :op1 \"Lance\"\n                        :op2 \"Hohaia\")))",
      "(p2 / punch-01\n    :ARG1 (p4 / person\n              :part (t2 / team\n                        :name (n4 / name\n                                  :op1 \"St\"\n                                  :op2 \"Helens\"))))",
      "(p2 / punch-01\n    :time (m / moment\n             :ARG0 (o2 / open-02\n                       :ARG1 (g / game\n                                :name (n5 / name\n                                          :op1 \"Grand\"\n                                          :op2 \"Final\")))))",
      "(p2 / punch-01\n    :time (m / moment\n             :ARG0 (o2 / open-02\n                       :ARG1 (g / game\n                                :time (s2 / season\n                                          :mod (l / last))))))",
      "(p2 / punch-01\n    :ARG0 (p3 / person\n              :name (n2 / name\n                        :op1 \"Flower\"))\n    :ARG1 (p4 / person\n              :name (n3 / name\n                        :op1 \"Lance\"\n                        :op2 \"Hohaia\")))",
      "(p2 / punch-01\n    :ARG0 (p3 / person\n              :name (n2 / name\n                        :op1 \"Flower\"))\n    :time (m / moment\n             :ARG0 (o2 / open-02\n                       :ARG1 (g / game\n                                :name (n5 / name\n                                          :op1 \"Grand\"\n                                          :op2 \"Final\")))))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(r / receive-01\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01)))",
      "(r / receive-01\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n / name\n                               :op1 \"Wigan\"))))",
      "(r / receive-01\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30)))",
      "(r / receive-01\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op2 20)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27))\n   :time (w / win-01\n            :ARG4 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Warrington\"))))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op2 20)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op2 20)))",
      "(r / receive-01\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n / name\n                               :op1 \"Wigan\"))))",
      "(r / receive-01\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG4 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Warrington\"))))",
      "(r / receive-01\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30)))",
      "(r / receive-01\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op2 20)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n / name\n                               :op1 \"Wigan\"))))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op2 20)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n / name\n                               :op1 \"Wigan\"))))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG4 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Warrington\"))))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30)))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 27))",
      "(w / win-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Wigan\")))"
    ],
    "smus": [
      "Ben Flower returned.",
      "Then returned Thursday.",
      "Ben Flower returned to his ban.",
      "Ben Flower returned from six-month ban.",
      "Ben Flower returned Thursday.",
      "Ben Flower returned the night of.",
      "Ben Flower's ban returned Thursday.",
      "The month-long ban returned Thursday.",
      "The month-long ban returned at night.",
      "Ben Flower returned to his ban Thursday.",
      "Ben Flower returned Thursday from a six-month ban.",
      "Ben Flower returned to the month-long ban at night.",
      "A forwarder appeared.",
      "Wales appear.",
      "The forwards have made their first appearance since punches at the opening moments of the Grand Final.",
      "Wales have made their first appearance since Flower punched.",
      "Wales have made their first appearance since Lance Hohaia was punched.",
      "Wales have made their first appearance since punches at the opening moments of the Grand Final.",
      "Wales have made their first appearance since St Helens were punched.",
      "Wales have made their first appearance since punches at the opening moments of last season's game.",
      "since Flower punched.",
      "since Lance Hohaia was punched.",
      "Since the punches that came at the opening moments of the Grand Final.",
      "Since the punches that came at the opening moments of last season's games.",
      "since flower punched.",
      "Flower punched.",
      "Lance Hohaia was punched.",
      "St Helens people were punched.",
      "Punched at the moments of the opening of the Grand Final.",
      "Punched at the moments of opening a game of last season.",
      "Flower punched Lanca Hohaia.",
      "Flower punched St Helens.",
      "Flower punched at the moments of the opening of the Grand Final.",
      "Flower punched at the moments of the opening of last season's game.",
      "Lance Hohaia was punched at the opening moments of the Grand Final.",
      "Lance Hohaia was punched at the opening moments of last season's game.",
      "St Helens were punched at the opening moments of the Grand Final.",
      "St Helens players were punched at the opening moments of last season's game.",
      "In the opening moments of the Grand Final, Flower punched Lanca Hohaia.",
      "In the opening moments of last season's game, Flower punched Lanca Hohaia.",
      "In the opening moments of the Grand Final, Flower punched St Helens.",
      "Moments of opening the Grand Final",
      "Received a brilliant reception.",
      "Received during the Wigan win.",
      "Received in the Warrington win.",
      "Received when the 30th win.",
      "The 27-year-old received a brilliant reception.",
      "The year old received a brilliant reception.",
      "The 27-year-old received a victory over Warrington.",
      "The 27-year-old received a victory with 20 points.",
      "The year old received a win over Warrington.",
      "Wigan's win received a brilliant reception.",
      "Winning the Warrington game received a brilliant reception.",
      "The 30th win received a brilliant reception.",
      "The 20th win received a brilliant reception.",
      "The 27-year-old received a brilliant reception in the Wigan victory.",
      "The 27-year-old received a brilliant reception in the Warrington win.",
      "The 27-year-old received a brilliant reception in the 30th win.",
      "The year old received a brilliant reception with the Wigan win.",
      "The year old received a brilliant reception in the Warrington win.",
      "The year old received a brilliant reception in the 30th win.",
      "The year old received a brilliant reception in the 20th win.",
      "Wigan won",
      "Wigan won by 30-20.",
      "Wigan beat Warrington 30-20"
    ]
  },
  {
    "instance_id": "realsumm-79",
    "summary": "<t> Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy . </t> <t> A mix of Arabian and Napoleon III decor , the Pigalle haunt harkens back to the city 's pleasure houses of yesteryear . </t> <t> Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental . </t>",
    "summary_trees": [
      "# ::snt  Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy . \n(a / and\n      :op1 (o / opulent\n            :domain (h / hotel\n                  :ARG1-of (d / design-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Jacques\"\n                                    :op2 \"Garcia\")))))\n      :op2 (e / edgy\n            :domain h)\n      :ARG1-of (ii / inspire-01\n            :ARG0 (a2 / aesthetic\n                  :poss (e2 / era\n                        :name (n2 / name\n                              :op1 \"Belle\"\n                              :op2 \"Epoque\")))))",
      "# ::snt  A mix of Arabian and Napoleon III decor , the Pigalle haunt harkens back to the city 's pleasure houses of yesteryear . \n(h / harken-01\n      :ARG0 (h2 / haunt-01\n            :location (c / city-district\n                  :name (n / name\n                        :op1 \"Pigalle\"))\n            :ARG2-of (m / mix-01\n                  :ARG1 (d / decor\n                        :mod (w / world-region\n                              :name (n2 / name\n                                    :op1 \"Arabia\")))\n                  :ARG3 (d2 / decor\n                        :mod (p / person\n                              :name (n3 / name\n                                    :op1 \"Napoleon\"\n                                    :op2 \"III\")))))\n      :ARG1 (h3 / house\n            :mod (p2 / pleasure)\n            :poss c\n            :time (y / yesteryear))\n      :direction (b / back))",
      "# ::snt  Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental . \n(a / available-02\n      :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (a2 / and\n                  :op1 (c / conservatory\n                        :ARG0-of (c2 / charm-01))\n                  :op2 (b / bar\n                        :mod (l / library))\n                  :op3 (s / spa\n                        :mod (c3 / celestial))\n                  :ARG2-of (a3 / available-02\n                        :ARG2 (r / rent-01\n                              :ARG1 a2\n                              :ARG1-of (p / private-03)))))\n      :mod (a4 / also))"
    ],
    "tree": [
      "(a / and\n   :op1 (o / opulent\n           :domain (h / hotel\n                      :ARG1 (d / design-01\n                               :ARG0 (p / person\n                                        :name (n / name\n                                                 :op1 \"Jacques\"\n                                                 :op2 \"Garcia\"))))))",
      "(a / and\n   :ARG1 (ii / inspire-01\n             :ARG0 (a2 / aesthetic\n                       :poss (e2 / era\n                                 :name (n2 / name\n                                           :op1 \"Belle\"\n                                           :op2 \"Epoque\")))))",
      "(a / and\n   :op2 (e / edgy\n           :domain (h / hotel\n                      :ARG1 (d / design-01\n                               :ARG0 (p / person\n                                        :name (n / name\n                                                 :op1 \"Jacques\"\n                                                 :op2 \"Garcia\"))))))",
      "(a / and\n   :op1 (o / opulent\n           :domain (h / hotel\n                      :ARG1 (d / design-01\n                               :ARG0 (p / person\n                                        :name (n / name\n                                                 :op1 \"Jacques\"\n                                                 :op2 \"Garcia\")))))\n   :ARG1 (ii / inspire-01\n             :ARG0 (a2 / aesthetic\n                       :poss (e2 / era\n                                 :name (n2 / name\n                                           :op1 \"Belle\"\n                                           :op2 \"Epoque\")))))",
      "(a / and\n   :op1 (o / opulent\n           :domain (h / hotel\n                      :ARG1 (d / design-01\n                               :ARG0 (p / person\n                                        :name (n / name\n                                                 :op1 \"Jacques\"\n                                                 :op2 \"Garcia\")))))\n   :op2 (e / edgy\n           :domain h))",
      "(o / opulent\n   :domain (h / hotel\n              :ARG1 (d / design-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Jacques\"\n                                         :op2 \"Garcia\")))))",
      "(h / hotel\n   :ARG1 (d / design-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Jacques\"\n                              :op2 \"Garcia\"))))",
      "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jacques\"\n                     :op2 \"Garcia\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Jacques\"\n            :op2 \"Garcia\"))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\"))))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\"))))))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG3 (d2 / decor\n                                :mod (p / person\n                                        :name (n3 / name\n                                                  :op1 \"Napoleon\"\n                                                  :op2 \"III\"))))))",
      "(h / harken-01\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)))",
      "(h / harken-01\n   :ARG1 (h3 / house\n             :poss (c / city-district\n                      :name (n / name\n                               :op1 \"Pigalle\"))))",
      "(h / harken-01\n   :ARG1 (h3 / house\n             :time (y / yesteryear)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :ARG1 (h3 / house\n             :poss c))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :ARG1 (h3 / house\n             :time (y / yesteryear)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\")))))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\")))))\n   :ARG1 (h3 / house\n             :poss (c / city-district\n                      :name (n / name\n                               :op1 \"Pigalle\"))))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\")))))\n   :ARG1 (h3 / house\n             :time (y / yesteryear)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG3 (d2 / decor\n                                :mod (p / person\n                                        :name (n3 / name\n                                                  :op1 \"Napoleon\"\n                                                  :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG3 (d2 / decor\n                                :mod (p / person\n                                        :name (n3 / name\n                                                  :op1 \"Napoleon\"\n                                                  :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :poss (c / city-district\n                      :name (n / name\n                               :op1 \"Pigalle\"))))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG3 (d2 / decor\n                                :mod (p / person\n                                        :name (n3 / name\n                                                  :op1 \"Napoleon\"\n                                                  :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :time (y / yesteryear)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\")))))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG3 (d2 / decor\n                                :mod (p / person\n                                        :name (n3 / name\n                                                  :op1 \"Napoleon\"\n                                                  :op2 \"III\")))))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG1 (h3 / house\n             :poss (c / city-district\n                      :name (n / name\n                               :op1 \"Pigalle\")))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG1 (h3 / house\n             :time (y / yesteryear))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :ARG1 (h3 / house\n             :poss c)\n   :direction (b / back))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\")))\n   :ARG1 (h3 / house\n             :time (y / yesteryear))\n   :direction (b / back))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\")))))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure))\n   :direction (b / back))"
    ],
    "smus": [
      "And the hotel Jacques Garcia designed was opulent.",
      "And the aesthetic of the Belle Epoque era is inspired by it.",
      "And the hotel Jacques Garcia designed was edgy.",
      "The opulent hotel Jacques Garcia designed is inspired by the aesthetic of the Belle Epoque era.",
      "The hotel Jacques Garcia designed was opulent and edgy.",
      "The opulent hotel Jacques Garcia designed is.",
      "The hotel was designed by Jacques Garcia.",
      "Jacques Garcia designed.",
      "The aesthetic of the Belle Epoque era is inspired.",
      "Haunted in Pigalle harkens.",
      "Haunted by the mix of Arab decor harkens.",
      "Haunted by the mix of Napoleon III decor harkens.",
      "Harkens to pleasure houses.",
      "harkens to the houses of Pigalle",
      "Pigalle's haunt harkens to pleasure houses.",
      "Pigalle's haunt harkens to its houses.",
      "Pigalle's haunt harkens back to yesteryear houses.",
      "Haunted by the mix of Arab decor harkens to pleasure houses.",
      "Haunted by the mix of Arab decor harkens back to yesteryear houses.",
      "The haunting of the mix of Napoleon III decor harkens back to pleasure houses.",
      "The haunting of the Pigalle houses harkens back to the mix of Napoleon III decor.",
      "The haunting of the mix of Napoleon III decor harkens back to houses of yesteryear.",
      "The haunt in Pigalle harkens back.",
      "Haunted by the mix of Arab decor harkens back.",
      "The haunting of the mix of Napoleon III decor harkens back.",
      "The Pigalle houses harken back.",
      "Pigalle's haunt harkens back to pleasure houses.",
      "Pigalle's haunt harkens back to its houses.",
      "Haunted by the mix of Arab decor harkens back to pleasure houses.",
      "The haunting of the mix of Arab decor harkens back to the houses of Pigalle.",
      "The haunting of the mix of Napoleon III decor harkens back to yesteryear houses.",
      "Haunted by the mix of Arab decor.",
      "Haunted by the mix of Napoleon III decor.",
      "Arab decor mixed with Napoleon III decor"
    ]
  },
  {
    "instance_id": "realsumm-80",
    "summary": "<t> Steven Finn was left out of the England squad for the West Indies tour . </t> <t> The Middlesex quick bowler has regained form after a tough 12 months . </t> <t> Finn said Finn 's back to bowling like Finn was as ' a carefree 21-year - old ' Finn last of 23 Test caps came for England back in 2013 . </t>",
    "summary_trees": [
      "# ::snt  Steven Finn was left out of the England squad for the West Indies tour . \n(l / leave-out-03\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Steven\"\n                  :op2 \"Finn\"))\n      :ARG2 (s / squad\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"England\"))\n            :subevent-of (t / tour-01\n                  :ARG0 c\n                  :ARG1 (c2 / country\n                        :name (n3 / name\n                              :op1 \"West\"\n                              :op2 \"Indies\")))))",
      "# ::snt  The Middlesex quick bowler has regained form after a tough 12 months . \n(r / regain-01\n      :ARG0 (b / bowler\n            :ARG1-of (q / quick-02)\n            :mod (t / team\n                  :name (n / name\n                        :op1 \"Middlesex\")))\n      :ARG1 (f / form)\n      :time (a / after\n            :op1 (t2 / temporal-quantity\n                  :quant 12\n                  :unit (m / month)\n                  :ARG1-of (t3 / tough-02))))",
      "# ::snt  Finn said Finn 's back to bowling like Finn was as ' a carefree 21-year - old ' Finn last of 23 Test caps came for England back in 2013 . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Finn\"))\n      :ARG1 (b / back-02\n            :ARG1 p\n            :direction (b2 / bowl-01\n                  :ARG0 p)\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b3 / back-02\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Finn\")\n                              :age (t / temporal-quantity\n                                    :quant 21\n                                    :unit (y / year))\n                              :mod (c / carefree)\n                              :ARG1-of (ii / include-91\n                                    :ARG2 (c2 / cap\n                                          :quant 23\n                                          :mod (t2 / test)\n                                          :ARG1-of (c3 / come-01\n                                                :ARG4 (t3 / team\n                                                      :name (n3 / name\n                                                            :op1 \"England\"))\n                                                :time (d / date-entity\n                                                      :year 2013))\n                                          :mod (l / last))))))))"
    ],
    "tree": [
      "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\")))",
      "(l / leave-out-03\n   :ARG2 (s / squad\n            :subevent (t / tour-01\n                         :ARG1 (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"West\"\n                                             :op2 \"Indies\")))))",
      "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))))",
      "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :subevent (t / tour-01\n                         :ARG0 (c / country :name (n2 / name :op1 \"England\")))))",
      "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :subevent (t / tour-01\n                         :ARG1 (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"West\"\n                                             :op2 \"Indies\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Steven\"\n            :op2 \"Finn\"))",
      "(s / squad\n   :mod (c / country\n           :name (n2 / name\n                     :op1 \"England\")))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02)))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\"))))",
      "(r / regain-01\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :quant 12)))",
      "(r / regain-01\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :unit (m / month))))",
      "(r / regain-01\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :ARG1 (t3 / tough-02))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02))\n   :ARG1 (f / form))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02))\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :unit (m / month))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02))\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :ARG1 (t3 / tough-02))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :unit (m / month))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :ARG1 (t3 / tough-02))))",
      "(r / regain-01\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :quant 12)))",
      "(r / regain-01\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :unit (m / month))))",
      "(r / regain-01\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :ARG1 (t3 / tough-02))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :unit (m / month))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :ARG1 (t3 / tough-02))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :unit (m / month))))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :ARG1 (t3 / tough-02))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :ARG1 (p / person :name (n / name :op1 \"Finn\"))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :direction (b2 / bowl-01\n                           :ARG0 (p / person :name (n / name :op1 \"Finn\")))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :name (n2 / name\n                                                   :op1 \"Finn\"))))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :age (t / temporal-quantity\n                                                 :quant 21))))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :age (t / temporal-quantity\n                                                 :unit (y / year)))))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :ARG1 (ii / include-91\n                                                   :ARG2 (c2 / cap\n                                                             :mod (l / last))))))))",
      "(s / say-01\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :ARG1 (ii / include-91\n                                                   :ARG2 (c2 / cap\n                                                             :ARG1 (c3 / come-01\n                                                                       :time (d / date-entity\n                                                                                :year 2013)))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :direction (b2 / bowl-01\n                           :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :name (n2 / name\n                                                   :op1 \"Finn\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :age (t / temporal-quantity\n                                                 :quant 21))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :mod (c / carefree))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :age (t / temporal-quantity\n                                                 :unit (y / year)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :ARG1 (ii / include-91\n                                                   :ARG2 (c2 / cap\n                                                             :mod (l / last))))))))",
      "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :mod (c / carefree))))",
      "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :ARG1 (ii / include-91\n                                 :ARG2 (c2 / cap\n                                           :quant 23)))))",
      "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :ARG1 (ii / include-91\n                                 :ARG2 (c2 / cap\n                                           :mod (t2 / test))))))",
      "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :ARG1 (ii / include-91\n                                 :ARG2 (c2 / cap\n                                           :ARG1 (c3 / come-01\n                                                     :ARG4 (t3 / team\n                                                               :name (n3 / name\n                                                                         :op1 \"England\"))))))))",
      "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :ARG1 (ii / include-91\n                                 :ARG2 (c2 / cap\n                                           :mod (l / last))))))",
      "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :ARG1 (ii / include-91\n                                 :ARG2 (c2 / cap\n                                           :ARG1 (c3 / come-01\n                                                     :time (d / date-entity\n                                                              :year 2013)))))))",
      "(b3 / back-02\n    :ARG1 (p2 / person\n              :ARG1 (ii / include-91\n                        :ARG2 (c2 / cap\n                                  :quant 23))))",
      "(b3 / back-02\n    :ARG1 (p2 / person\n              :age (t / temporal-quantity\n                      :unit (y / year))))",
      "(b3 / back-02\n    :ARG1 (p2 / person\n              :ARG1 (ii / include-91\n                        :ARG2 (c2 / cap\n                                  :mod (l / last)))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :quant 21))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :unit (y / year)))",
      "(p2 / person\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :quant 23)))",
      "(p2 / person\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :ARG1 (c3 / come-01\n                                  :ARG4 (t3 / team\n                                            :name (n3 / name\n                                                      :op1 \"England\"))))))",
      "(p2 / person\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :ARG1 (c3 / come-01\n                                  :time (d / date-entity\n                                           :year 2013)))))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :age (t / temporal-quantity\n            :quant 21))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :age (t / temporal-quantity\n            :unit (y / year)))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :mod (c / carefree))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :quant 23)))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :mod (t2 / test))))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :ARG1 (c3 / come-01\n                                  :ARG4 (t3 / team\n                                            :name (n3 / name\n                                                      :op1 \"England\"))))))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Finn\")\n    :ARG1 (ii / include-91\n              :ARG2 (c2 / cap\n                        :ARG1 (c3 / come-01\n                                  :time (d / date-entity\n                                           :year 2013)))))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :quant 21)\n    :mod (c / carefree))",
      "(p2 / person\n    :age (t / temporal-quantity\n            :unit (y / year))\n    :mod (c / carefree))"
    ],
    "smus": [
      "Steven Finn was left out.",
      "The squad for the West Indies tour was left out.",
      "Steven Finn was left out of the English squad.",
      "Steven Finn was left out of the England tour squad.",
      "Steven Finn was left out of the squad for the West Indies tour.",
      "England squad for their tour",
      "England squad on tour of West Indies",
      "The quick bowler has regained.",
      "Middlesex bowler regained",
      "Recovered after 12 months.",
      "Recovered after months.",
      "Recovered after tough.",
      "The quick bowler has regained form.",
      "Middlesex bowler has regained form.",
      "The quick bowler has regained after months.",
      "The quick bowler has regained after a tough time.",
      "Middlesex bowler regained after months.",
      "Middlesex bowler regained after tough time",
      "After 12 the form regained.",
      "The form regained after months.",
      "After toughness, form has regained.",
      "The quick bowler has regained form after months.",
      "The quick bowler has regained form after a tough period.",
      "Middlesex bowler has regained form after months.",
      "Middlesex bowler has regained form after tough times.",
      "Back to Finn bowling, he said.",
      "Back like Finn, said.",
      "Back like a 21 year old, said.",
      "Back like a carefree person, said.",
      "Back as to those in the test caps, he said.",
      "Back like those in the 2013 caps, he said.",
      "\"I'm back,\" Finn said.",
      "\"Back to bowling,\" Finn said.",
      "\"Back like Finn,\" Finn said.",
      "Back like a 21 year old, Finn said.",
      "\"Back like a carefree person,\" Finn said.",
      "\"It's back like 23 of the caps,\" Finn said.",
      "\"It's back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being back to being one of the test caps,\" Finn said.",
      "\"It's back to the way it was with the cap that came in 2013,\" Finn said.",
      "Like back to the cap that came in 2013.",
      "Back to one of the caps that came from England.",
      "One of the caps that came from England.",
      "One of the caps that came in 2013.",
      "Finn was one of the caps that came from England.",
      "Finn was one of the caps that came in 2013.",
      "One of the caps came in 2013.",
      "One of the caps that came from England was carefree.",
      "Finn, 21, is one of the caps that came in 2013.",
      "Finn was one of the carefree capes that came from England.",
      "Finn was one of the capes that came in 2013. Carefree",
      "21 is one of the capes that came from England, carefree.",
      "One of the caps that came from England was a carefree year.",
      "Finn, 21, was one of the capes that came from England, carefree.",
      "Finn, 21, was one of the caps that came in 2013. Carefree",
      "Finn was a carefree year old, one of the caps England came out with.",
      "Finn, a carefree year old, was one of the caps that came in 2013.",
      "One of the caps that came from England was",
      "Caps came in 2013.",
      "The test caps came from England.",
      "came from England.",
      "It came in 2013.",
      "England came in 2013"
    ]
  },
  {
    "instance_id": "realsumm-81",
    "summary": "<t> Paul Armstrong flew to Cyprus to celebrate new job as IT project manager . </t> <t> Was stopped at airport with stun gun , baton and knuckle duster in Armstrong bag . </t> <t> Pleaded guilty to possession of a firearm and lost Armstrong job before starting job . </t> <t> 26-year - old was sentenced to eight months in jail , suspended for two years . </t>",
    "summary_trees": [
      "# ::snt  Paul Armstrong flew to Cyprus to celebrate new job as IT project manager . \n(f / fly-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Paul\"\n                  :op2 \"Armstrong\"))\n      :destination (c / country\n            :name (n2 / name\n                  :op1 \"Cyprus\"))\n      :purpose (c2 / celebrate-01\n            :ARG0 p\n            :ARG1 (j / job\n                  :ARG1-of (n3 / new-01)\n                  :topic (p2 / person\n                        :ARG0-of (m / manage-01\n                              :ARG1 (p3 / project\n                                    :mod (t / technology\n                                          :mod (ii / information))))))))",
      "# ::snt  Was stopped at airport with stun gun , baton and knuckle duster in Armstrong bag . \n(s / stop-01\n      :ARG1 (h / have-03\n            :ARG1 (a / and\n                  :op1 (g / gun\n                        :ARG2-of (s2 / stun-01))\n                  :op2 (b / baton)\n                  :op3 (d / duster\n                        :mod (k / knuckle)))\n            :location (b2 / bag\n                  :mod (c / company\n                        :name (n / name\n                              :op1 \"Armstrong\"))))\n      :location (a2 / airport))",
      "# ::snt  Pleaded guilty to possession of a firearm and lost Armstrong job before starting job . \n(a / and\n      :op1 (p / plead-02\n            :ARG2 (g / guilty-01\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Armstrong\"))\n                  :ARG2 (p3 / possess-01\n                        :ARG1 (f / firearm))))\n      :op2 (l / lose-02\n            :ARG1 (j / job\n                  :poss p2)\n            :time (b / before\n                  :op1 (s / start-01\n                        :ARG1 j))))",
      "# ::snt  26-year - old was sentenced to eight months in jail , suspended for two years . \n(s / sentence-01\n      :ARG1 (p / person\n            :age (t / temporal-quantity\n                  :quant 26\n                  :unit (y / year)))\n      :ARG2 (a / and\n            :op1 (t2 / temporal-quantity\n                  :quant 8\n                  :unit (m / month)\n                  :location (j / jail))\n            :op2 (s2 / suspend-01\n                  :ARG1 t2\n                  :duration (t3 / temporal-quantity\n                        :quant 2\n                        :unit (y2 / year)))))"
    ],
    "tree": [
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\")))",
      "(f / fly-01\n   :purpose (c2 / celebrate-01\n                :ARG0 (p / person :name (n / name :op1 \"Paul\" :op2 \"Armstrong\"))))",
      "(f / fly-01\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :ARG1 (n3 / new-01))))",
      "(f / fly-01\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :topic (p2 / person\n                                    :ARG0 (m / manage-01\n                                             :ARG1 (p3 / project\n                                                       :mod (t / technology\n                                                               :mod (ii / information))))))))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :purpose (c2 / celebrate-01\n                :ARG0 p))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :ARG1 (n3 / new-01))))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :topic (p2 / person\n                                    :ARG0 (m / manage-01\n                                             :ARG1 (p3 / project\n                                                       :mod (t / technology\n                                                               :mod (ii / information))))))))",
      "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG0 (p / person :name (n / name :op1 \"Paul\" :op2 \"Armstrong\"))))",
      "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :ARG1 (n3 / new-01))))",
      "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :topic (p2 / person\n                                    :ARG0 (m / manage-01\n                                             :ARG1 (p3 / project\n                                                       :mod (t / technology\n                                                               :mod (ii / information))))))))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG0 p))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :ARG1 (n3 / new-01))))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG1 (j / job\n                         :topic (p2 / person\n                                    :ARG0 (m / manage-01\n                                             :ARG1 (p3 / project\n                                                       :mod (t / technology\n                                                               :mod (ii / information))))))))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :ARG1 (g / gun\n                     :ARG2 (s2 / stun-01))))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :location (b2 / bag\n                          :mod (c / company\n                                  :name (n / name\n                                           :op1 \"Armstrong\")))))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :ARG1 (b / baton)))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :ARG1 (g / gun\n                     :ARG2 (s2 / stun-01)))\n   :location (a2 / airport))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :location (b2 / bag\n                          :mod (c / company\n                                  :name (n / name\n                                           :op1 \"Armstrong\"))))\n   :location (a2 / airport))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :ARG1 (b / baton))\n   :location (a2 / airport))",
      "(s / stop-01\n   :ARG1 (h / have-03\n            :ARG1 (d / duster\n                     :mod (k / knuckle)))\n   :location (a2 / airport))",
      "(h / have-03\n   :ARG1 (g / gun\n            :ARG2 (s2 / stun-01)))",
      "(h / have-03\n   :ARG1 (d / duster\n            :mod (k / knuckle)))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG2 (g / guilty-01\n                    :ARG1 (p2 / person\n                              :name (n / name\n                                       :op1 \"Armstrong\")))))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG2 (g / guilty-01\n                    :ARG2 (p3 / possess-01\n                              :ARG1 (f / firearm)))))",
      "(a / and\n   :op2 (l / lose-02\n           :ARG1 (j / job\n                    :poss (p2 / person\n                              :name (n / name\n                                       :op1 \"Armstrong\")))))",
      "(a / and\n   :op2 (l / lose-02\n           :time (b / before\n                    :op1 (s / start-01\n                            :ARG1 (j / job)))))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG2 (g / guilty-01\n                    :ARG1 (p2 / person\n                              :name (n / name\n                                       :op1 \"Armstrong\"))))\n   :op2 (l / lose-02\n           :ARG1 (j / job\n                    :poss p2)))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG2 (g / guilty-01\n                    :ARG1 (p2 / person\n                              :name (n / name\n                                       :op1 \"Armstrong\"))))\n   :op2 (l / lose-02\n           :time (b / before\n                    :op1 (s / start-01\n                            :ARG1 (j / job)))))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG2 (g / guilty-01\n                    :ARG2 (p3 / possess-01\n                              :ARG1 (f / firearm))))\n   :op2 (l / lose-02\n           :ARG1 (j / job\n                    :poss (p2 / person\n                              :name (n / name\n                                       :op1 \"Armstrong\")))))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG2 (g / guilty-01\n                    :ARG2 (p3 / possess-01\n                              :ARG1 (f / firearm))))\n   :op2 (l / lose-02\n           :time (b / before\n                    :op1 (s / start-01\n                            :ARG1 (j / job)))))",
      "(p / plead-02\n   :ARG2 (g / guilty-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Armstrong\"))))",
      "(p / plead-02\n   :ARG2 (g / guilty-01\n            :ARG2 (p3 / possess-01\n                      :ARG1 (f / firearm))))",
      "(g / guilty-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Armstrong\")))",
      "(g / guilty-01\n   :ARG2 (p3 / possess-01\n             :ARG1 (f / firearm)))",
      "(g / guilty-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Armstrong\"))\n   :ARG2 (p3 / possess-01\n             :ARG1 (f / firearm)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 26)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(s / sentence-01\n   :ARG2 (s2 / suspend-01\n             :ARG1 (t2 / temporal-quantity)))",
      "(s / sentence-01\n   :ARG2 (t2 / temporal-quantity\n             :unit (m / month)))",
      "(s / sentence-01\n   :ARG2 (t2 / temporal-quantity\n             :location (j / jail)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 26))\n   :ARG2 (s2 / suspend-01\n             :ARG1 (t2 / temporal-quantity)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 26))\n   :ARG2 (s2 / suspend-01\n             :duration (t3 / temporal-quantity\n                           :quant 2)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (t2 / temporal-quantity\n             :quant 8))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (t2 / temporal-quantity\n             :unit (m / month)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (t2 / temporal-quantity\n             :location (j / jail)))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG2 (s2 / suspend-01\n             :duration (t3 / temporal-quantity\n                           :quant 2)))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 26))",
      "(p / person\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(a / and\n   :op1 (t2 / temporal-quantity\n            :unit (m / month)))",
      "(a / and\n   :op1 (t2 / temporal-quantity\n            :location (j / jail)))",
      "(a / and\n   :op2 (s2 / suspend-01\n            :duration (t3 / temporal-quantity\n                          :quant 2)))",
      "(a / and\n   :op2 (s2 / suspend-01\n            :duration (t3 / temporal-quantity\n                          :unit (y2 / year))))",
      "(a / and\n   :op1 (t2 / temporal-quantity\n            :quant 8)\n   :op2 (s2 / suspend-01\n            :duration (t3 / temporal-quantity\n                          :quant 2)))"
    ],
    "smus": [
      "Paul Armstrong flew.",
      "The flight flew to celebrate the new job.",
      "The flight flew to celebrate the job of IT project manager.",
      "Paul Armstrong flew to Cyprus.",
      "Paul Armstrong flew to celebrate.",
      "Paul Armstrong flew in to celebrate the new job.",
      "Paul Armstrong flew in to celebrate the job of IT project manager.",
      "Paul Armstrong flew to Cyprus to celebrate.",
      "Flights flew to Cyprus to celebrate the new job.",
      "Flights flew to Cyprus to celebrate the job of IT project manager.",
      "Paul Armstrong flew to Cyprus to celebrate the new job.",
      "Paul Armstrong flew to Cyprus to celebrate the job of managing a project in information technology.",
      "Celebrate the new job.",
      "Celebrate the job of IT project manager.",
      "Had a stun gun stopped.",
      "Had stopped in the Armstrong bag.",
      "The baton was stopped.",
      "The stun gun was stopped at the airport.",
      "Had in the Armstrong bag stopped at the airport.",
      "The baton was stopped at the airport.",
      "Knuckle duster was stopped at the airport.",
      "had a stun gun.",
      "had in an Armstrong bag.",
      "And Armstrong plead guilty.",
      "and pleaded guilty to possession of a firearm.",
      "And Armstrong lost his job.",
      "And lost before starting a job.",
      "Armstrong pleaded guilty and lost his job.",
      "Armstrong pleaded guilty and lost before starting a job.",
      "The plead guilty to possession of a firearm and Armstrong lost his job.",
      "The plead guilty to possession of a firearm and lost before starting the job.",
      "Armstrong pleaded guilty.",
      "Armstrong's job was lost.",
      "Lost before starting a job.",
      "Armstrong's job was lost before starting.",
      "before starting a job.",
      "The two were sentenced.",
      "sentenced to be suspended for two years",
      "sentenced to jail.",
      "sentenced to 2 years suspended",
      "sentenced to be suspended for years",
      "The two were sentenced to jail.",
      "The year old was sentenced to be suspended from the time.",
      "Years old are sentenced to jail.",
      "Years old were sentenced to be suspended for years.",
      "There is jail.",
      "And the amount of time suspended.",
      "and suspended for years.",
      "8; suspended.",
      "8, suspended for 2 years.",
      "Months, suspended.",
      "Months, years suspended.",
      "Jail, suspended.",
      "Jail, suspended for years."
    ]
  },
  {
    "instance_id": "realsumm-82",
    "summary": "<t> Australian fashion designer Alex Perry wo n't show at this year 's MBFWA . </t> <t> The designer is excited to kick back and enjoy the shows from front row . </t> <t> This will be the designer 's second MBFWA designer has missed in two decades . </t> <t> Perry is now focusing on global expansion in Asia and Middle East . </t>",
    "summary_trees": [
      "# ::snt  Australian fashion designer Alex Perry wo n't show at this year 's MBFWA . \n(s / show-01\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Alex\"\n                  :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                  :ARG1 (f / fashion))\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Australia\")))\n      :time (e / event\n            :name (n3 / name\n                  :op1 \"MBFWA\")\n            :mod (y / year\n                  :mod (t / this))))",
      "# ::snt  The designer is excited to kick back and enjoy the shows from front row . \n(e / excite-01\n      :ARG0 (a / and\n            :op1 (k / kick-01\n                  :ARG0 (p / person\n                        :ARG0-of (d / design-01))\n                  :direction (b / back))\n            :op2 (e2 / enjoy-01\n                  :ARG0 p\n                  :ARG1 (s / show-04)\n                  :location (r / row\n                        :mod (f / front))))\n      :ARG1 p)",
      "# ::snt  This will be the designer 's second MBFWA designer has missed in two decades . \n(m / miss-02\n      :ARG0 (p / person\n            :ARG0-of (d / design-01)\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n / name\n                              :op1 \"MBFWA\"))\n                  :ARG2 (p2 / person\n                        :ARG0-of (d2 / design-01))))\n      :ARG1 (t / this)\n      :ord (o2 / ordinal-entity\n            :value 2\n            :range (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d3 / decade))))",
      "# ::snt  Perry is now focusing on global expansion in Asia and Middle East . \n(f / focus-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Perry\"))\n      :ARG1 (e / expand-01\n            :ARG1 p\n            :ARG2 (g / globe)\n            :location (a / and\n                  :op1 (c / continent\n                        :name (n2 / name\n                              :op1 \"Asia\"))\n                  :op2 (w / world-region\n                        :name (n3 / name\n                              :op1 \"Middle\"\n                              :op2 \"East\"))))\n      :time (n4 / now))"
    ],
    "tree": [
      "(e / excite-01\n   :ARG0 (k / kick-01\n            :ARG0 (p / person\n                     :ARG0 (d / design-01))))",
      "(e / excite-01\n   :ARG0 (k / kick-01\n            :direction (b / back)))",
      "(e / excite-01\n   :ARG0 (e2 / enjoy-01\n             :ARG1 (s / show-04)))",
      "(e / excite-01\n   :ARG0 (e2 / enjoy-01\n             :location (r / row\n                          :mod (f / front))))",
      "(a / and\n   :op1 (k / kick-01\n           :ARG0 (p / person\n                    :ARG0 (d / design-01))))",
      "(a / and\n   :op1 (k / kick-01\n           :direction (b / back)))",
      "(a / and\n   :op2 (e2 / enjoy-01\n            :ARG1 (s / show-04)))",
      "(a / and\n   :op2 (e2 / enjoy-01\n            :location (r / row\n                         :mod (f / front))))",
      "(a / and\n   :op1 (k / kick-01\n           :ARG0 (p / person\n                    :ARG0 (d / design-01)))\n   :op2 (e2 / enjoy-01\n            :ARG0 p))",
      "(a / and\n   :op1 (k / kick-01\n           :ARG0 (p / person\n                    :ARG0 (d / design-01)))\n   :op2 (e2 / enjoy-01\n            :location (r / row\n                         :mod (f / front))))",
      "(a / and\n   :op1 (k / kick-01\n           :direction (b / back))\n   :op2 (e2 / enjoy-01\n            :ARG1 (s / show-04)))",
      "(a / and\n   :op1 (k / kick-01\n           :direction (b / back))\n   :op2 (e2 / enjoy-01\n            :location (r / row\n                         :mod (f / front))))",
      "(k / kick-01\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :direction (b / back))",
      "(e2 / enjoy-01\n    :location (r / row\n                 :mod (f / front)))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01)))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"MBFWA\")))))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / person\n                               :ARG0 (d2 / design-01)))))",
      "(m / miss-02\n   :ord (o2 / ordinal-entity\n            :value 2))",
      "(m / miss-02\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :quant 2)))",
      "(m / miss-02\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :unit (d3 / decade))))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ARG1 (t / this))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"MBFWA\"))))\n   :ARG1 (t / this))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / person\n                               :ARG0 (d2 / design-01))))\n   :ARG1 (t / this))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ord (o2 / ordinal-entity\n            :value 2))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :quant 2)))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :unit (d3 / decade))))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"MBFWA\"))))\n   :ord (o2 / ordinal-entity\n            :value 2))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"MBFWA\"))))\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :quant 2)))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / person\n                               :ARG0 (d2 / design-01))))\n   :ord (o2 / ordinal-entity\n            :value 2))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / person\n                               :ARG0 (d2 / design-01))))\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :quant 2)))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (p2 / person\n                               :ARG0 (d2 / design-01))))\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :unit (d3 / decade))))",
      "(m / miss-02\n   :ARG1 (t / this)\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :quant 2)))",
      "(m / miss-02\n   :ARG1 (t / this)\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :unit (d3 / decade))))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ARG1 (t / this)\n   :ord (o2 / ordinal-entity\n            :value 2))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ARG1 (t / this)\n   :ord (o2 / ordinal-entity\n            :range (t2 / temporal-quantity\n                       :quant 2)))",
      "(m / miss-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"MBFWA\"))))\n   :ARG1 (t / this)\n   :ord (o2 / ordinal-entity\n            :value 2))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\")))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG1 (p / person :name (n / name :op1 \"Perry\"))))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG2 (g / globe)))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :location (c / continent\n                         :name (n2 / name\n                                   :op1 \"Asia\"))))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :location (w / world-region\n                         :name (n3 / name\n                                   :op1 \"Middle\"\n                                   :op2 \"East\"))))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :ARG1 p))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :ARG2 (g / globe)))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :location (c / continent\n                         :name (n2 / name\n                                   :op1 \"Asia\"))))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :location (w / world-region\n                         :name (n3 / name\n                                   :op1 \"Middle\"\n                                   :op2 \"East\"))))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :time (n4 / now))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG1 (p / person :name (n / name :op1 \"Perry\")))\n   :time (n4 / now))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG2 (g / globe))\n   :time (n4 / now))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :location (c / continent\n                         :name (n2 / name\n                                   :op1 \"Asia\")))\n   :time (n4 / now))",
      "(f / focus-01\n   :ARG1 (e / expand-01\n            :location (w / world-region\n                         :name (n3 / name\n                                   :op1 \"Middle\"\n                                   :op2 \"East\")))\n   :time (n4 / now))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :ARG1 p)\n   :time (n4 / now))"
    ],
    "smus": [
      "Exciting to see a designer kick in.",
      "Kick back is exciting.",
      "Excited to enjoy the shows.",
      "Enjoy in front row.",
      "And the designer is going to kick.",
      "and kick back.",
      "and enjoy the shows.",
      "and enjoy in front row.",
      "Kick and enjoy the designer.",
      "Kick the designer and enjoy the front row.",
      "Kick back and enjoy the shows.",
      "Kick back and enjoy the front row.",
      "The designer was going to kick back.",
      "Enjoy the shows in front row.",
      "The designer was missing.",
      "The MBFWA people are missing.",
      "The designer has been missing.",
      "Missed second.",
      "Missed by two.",
      "Missed in the last decade.",
      "This is what the designer has missed.",
      "MBFWA has missed this.",
      "The designer has missed this.",
      "The design person missed the second.",
      "The designer has missed two times.",
      "The designer has been missing for decades.",
      "MBFWA's second person has been missing.",
      "The MBFWA has been missing for the second time.",
      "The designer has missed second time.",
      "The designer has been missing for the second time.",
      "This is the second time this has been missed.",
      "This is the second time the designer has missed this.",
      "This has been missed for decades by the designer.",
      "This is the second time the MBFWA has missed this.",
      "MBFWA has missed this for the second time.",
      "The designer has missed this for the second time.",
      "Perry is focusing.",
      "Focusing on Perry's expansion.",
      "focusing on global expansion.",
      "Focusing on expansion in Asia.",
      "Focusing on expansion in the Middle East.",
      "Perry is focusing on expansion.",
      "Perry is focusing on global expansion.",
      "Perry is focusing on expansion in Asia.",
      "Perry is focusing on expansion in the Middle East.",
      "Perry is now focusing.",
      "Now focusing on global expansion.",
      "Perry is now focusing on expansion.",
      "Perry is now focusing on global expansion.",
      "Perry is now focusing on expansion in Asia.",
      "Perry is now focusing on expansion in the Middle East."
    ]
  },
  {
    "instance_id": "realsumm-83",
    "summary": "<t> An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage . </t> <t> More than a dozen people were injured at the Westfield High performance and one student was taken to a hospital in critical condition . </t> <t> Students said there had been no issues when Students previously practiced the song on the stage with the same number of people . </t>",
    "summary_trees": [
      "# ::snt  An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage . \n(e / end-01\n      :ARG1 (p / perform-01\n            :ARG0 (s / school\n                  :location (s2 / state\n                        :name (n / name\n                              :op1 \"Indiana\"))\n                  :ARG1-of (p2 / public-02))\n            :ARG1 (m / music\n                  :name (n2 / name\n                        :op1 \"American\"\n                        :op2 \"Pie\")))\n      :ARG2 (t / tragedy)\n      :time (d / date-entity\n            :weekday (w / wednesday))\n      :time (b / buckle-01\n            :ARG1 (p3 / person\n                  :ARG0-of (r / rise-01))\n            :time (d2 / dance-01\n                  :ARG0 (p4 / person\n                        :quant (m2 / multiple\n                              :op1 12))\n                  :location (s3 / stage))))",
      "# ::snt  More than a dozen people were injured at the Westfield High performance and one student was taken to a hospital in critical condition . \n(a / and\n      :op1 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / more-than\n                        :op1 12))\n            :time (p2 / perform-01\n                  :ARG0 (h / high-school\n                        :name (n / name\n                              :op1 \"Westfield\"\n                              :op2 \"High\"))))\n      :op2 (t / take-01\n            :ARG1 (p3 / person\n                  :quant 1\n                  :ARG0-of (s / study-01))\n            :ARG3 (h2 / hospital)\n            :manner (c / condition\n                  :ARG1-of (c2 / critical-03))))",
      "# ::snt  Students said there had been no issues when Students previously practiced the song on the stage with the same number of people . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (s2 / study-01))\n      :ARG1 (ii / issue-02\n            :polarity -\n            :time (p2 / practice-01\n                  :ARG0 p\n                  :ARG1 (s3 / song)\n                  :location (s4 / stage)\n                  :accompanier (p3 / person\n                        :quant (n / number\n                              :ARG1-of (s5 / same-01)))\n                  :time (p4 / previous))))"
    ],
    "tree": [
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\")))))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\"))))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :ARG1 (p2 / public-02))))",
      "(e / end-01\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))))\n   :ARG2 (t / tragedy))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :ARG1 (p2 / public-02)))\n   :ARG2 (t / tragedy))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))))\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :ARG1 (p2 / public-02)))\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))))\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :ARG1 (p2 / public-02)))\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(p / perform-01\n   :ARG0 (s / school\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"Indiana\"))))",
      "(p / perform-01\n   :ARG0 (s / school\n            :ARG1 (p2 / public-02)))",
      "(p / perform-01\n   :ARG1 (m / music\n            :name (n2 / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))",
      "(p / perform-01\n   :ARG0 (s / school\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"Indiana\")))\n   :ARG1 (m / music\n            :name (n2 / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))",
      "(s / school\n   :location (s2 / state\n                 :name (n / name\n                          :op1 \"Indiana\")))",
      "(s / school\n   :location (s2 / state\n                 :name (n / name\n                          :op1 \"Indiana\"))\n   :ARG1 (p2 / public-02))",
      "(a / and\n   :op1 (ii / injure-01\n            :ARG1 (p / person\n                     :quant (m / more-than\n                               :op1 12))))",
      "(a / and\n   :op1 (ii / injure-01\n            :time (p2 / perform-01\n                      :ARG0 (h / high-school\n                               :name (n / name\n                                        :op1 \"Westfield\"\n                                        :op2 \"High\")))))",
      "(a / and\n   :op2 (t / take-01\n           :ARG1 (p3 / person\n                     :quant 1)))",
      "(a / and\n   :op2 (t / take-01\n           :ARG3 (h2 / hospital)))",
      "(a / and\n   :op2 (t / take-01\n           :manner (c / condition\n                      :ARG1 (c2 / critical-03))))",
      "(a / and\n   :op2 (t / take-01\n           :ARG1 (p3 / person\n                     :ARG0 (s / study-01))))",
      "(a / and\n   :op1 (ii / injure-01\n            :ARG1 (p / person\n                     :quant (m / more-than\n                               :op1 12)))\n   :op2 (t / take-01\n           :ARG1 (p3 / person\n                     :quant 1)))",
      "(a / and\n   :op1 (ii / injure-01\n            :ARG1 (p / person\n                     :quant (m / more-than\n                               :op1 12)))\n   :op2 (t / take-01\n           :ARG3 (h2 / hospital)))",
      "(a / and\n   :op1 (ii / injure-01\n            :ARG1 (p / person\n                     :quant (m / more-than\n                               :op1 12)))\n   :op2 (t / take-01\n           :manner (c / condition\n                      :ARG1 (c2 / critical-03))))",
      "(a / and\n   :op1 (ii / injure-01\n            :ARG1 (p / person\n                     :quant (m / more-than\n                               :op1 12)))\n   :op2 (t / take-01\n           :ARG1 (p3 / person\n                     :ARG0 (s / study-01))))",
      "(a / and\n   :op1 (ii / injure-01\n            :time (p2 / perform-01\n                      :ARG0 (h / high-school\n                               :name (n / name\n                                        :op1 \"Westfield\"\n                                        :op2 \"High\"))))\n   :op2 (t / take-01\n           :ARG1 (p3 / person\n                     :quant 1)))",
      "(a / and\n   :op1 (ii / injure-01\n            :time (p2 / perform-01\n                      :ARG0 (h / high-school\n                               :name (n / name\n                                        :op1 \"Westfield\"\n                                        :op2 \"High\"))))\n   :op2 (t / take-01\n           :ARG3 (h2 / hospital)))",
      "(a / and\n   :op1 (ii / injure-01\n            :time (p2 / perform-01\n                      :ARG0 (h / high-school\n                               :name (n / name\n                                        :op1 \"Westfield\"\n                                        :op2 \"High\"))))\n   :op2 (t / take-01\n           :manner (c / condition\n                      :ARG1 (c2 / critical-03))))",
      "(ii / injure-01\n    :ARG1 (p / person\n             :quant (m / more-than\n                       :op1 12)))",
      "(ii / injure-01\n    :time (p2 / perform-01\n              :ARG0 (h / high-school\n                       :name (n / name\n                                :op1 \"Westfield\"\n                                :op2 \"High\"))))",
      "(ii / injure-01\n    :ARG1 (p / person\n             :quant (m / more-than\n                       :op1 12))\n    :time (p2 / perform-01\n              :ARG0 (h / high-school\n                       :name (n / name\n                                :op1 \"Westfield\"\n                                :op2 \"High\"))))",
      "(p / person\n   :quant (m / more-than\n             :op1 12))",
      "(p2 / perform-01\n    :ARG0 (h / high-school\n             :name (n / name\n                      :op1 \"Westfield\"\n                      :op2 \"High\")))",
      "(h / high-school\n   :name (n / name\n            :op1 \"Westfield\"\n            :op2 \"High\"))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :quant 1))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :ARG0 (s / study-01)))",
      "(t / take-01\n   :manner (c / condition\n              :ARG1 (c2 / critical-03)))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :quant 1)\n   :ARG3 (h2 / hospital))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :ARG0 (s / study-01))\n   :ARG3 (h2 / hospital))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :quant 1)\n   :manner (c / condition\n              :ARG1 (c2 / critical-03)))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :ARG0 (s / study-01))\n   :manner (c / condition\n              :ARG1 (c2 / critical-03)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01)))",
      "(s / say-01\n   :ARG1 (ii / issue-02\n             :polarity -))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (ii / issue-02\n             :polarity -))",
      "(ii / issue-02\n    :time (p2 / practice-01\n              :ARG1 (s3 / song)))",
      "(ii / issue-02\n    :time (p2 / practice-01\n              :location (s4 / stage)))",
      "(ii / issue-02\n    :time (p2 / practice-01\n              :accompanier (p3 / person\n                               :quant (n / number\n                                         :ARG1 (s5 / same-01)))))",
      "(ii / issue-02\n    :time (p2 / practice-01\n              :time (p4 / previous)))",
      "(p2 / practice-01\n    :accompanier (p3 / person\n                     :quant (n / number\n                               :ARG1 (s5 / same-01))))",
      "(p2 / practice-01\n    :ARG1 (s3 / song)\n    :location (s4 / stage))",
      "(p2 / practice-01\n    :ARG1 (s3 / song)\n    :accompanier (p3 / person\n                     :quant (n / number\n                               :ARG1 (s5 / same-01))))"
    ],
    "smus": [
      "The Indiana school's performance ended.",
      "The performance of American Pie ended.",
      "Public school performance ended.",
      "The Indiana school performance ended in tragedy.",
      "The performance of American Pie ended in tragedy.",
      "The public school performance ended in tragedy.",
      "The Indiana school's performance ended Wednesday.",
      "The performance of American Pie ended Wednesday.",
      "Public school performance ended Wednesday.",
      "The tragedy ended Wednesday.",
      "The Indiana school's performance ended in tragedy Wednesday.",
      "The performance of American Pie ended in tragedy Wednesday.",
      "The public school performance ended in tragedy Wednesday.",
      "Indian school performs American Pie.",
      "The risers buckled.",
      "Blown as dozens danced.",
      "Blown as the dancers danced on stage.",
      "The riser buckled as dozens danced.",
      "Dozens danced.",
      "Dozens danced on stage.",
      "And more than one person was injured.",
      "and was injured during Westfield High's performance.",
      "and one person was taken.",
      "and taken to hospital.",
      "and taken in critical condition.",
      "and the student was taken.",
      "More than one person was injured and one was taken.",
      "More than one person was injured and taken to hospital.",
      "More than one person was injured and taken in critical condition.",
      "More than one person was injured and a student was taken.",
      "Injured during Westfield High's performance and one taken.",
      "Injured in Westfield High's performance and taken to hospital.",
      "Injured during Westfield High's performance and taken in critical condition.",
      "More than one person was injured.",
      "Injured in Westfield High's performance.",
      "More than one person was injured during Westfield High's performance.",
      "One person was taken.",
      "The student was taken.",
      "Taken in critical condition.",
      "One person was taken to hospital.",
      "The student was taken to a hospital.",
      "One person was taken in critical condition.",
      "The student was taken in critical condition.",
      "taken to hospital in critical condition.",
      "One person was taken to hospital in critical condition.",
      "The student was taken to a hospital in critical condition.",
      "Students said.",
      "No issues, said.",
      "No issues, said students.",
      "The song is practiced with the same number of people.",
      "The song has previously been practiced.",
      "Practice on stage with the same number of people.",
      "The song is practiced on stage with the same number of people.",
      "The song has previously been practiced on stage.",
      "The song has previously been practiced with the same number of people.",
      "The song has previously been practiced on stage with the same number of people."
    ]
  },
  {
    "instance_id": "realsumm-84",
    "summary": "<t> Manchester City have been linked with summer move for Raheem Sterling . </t> <t> Sterling has two years left on Sterling contract and is stalling on a new deal . </t> <t> Brendan Rodgers says a move to City would not be step up for Sterling . </t> <t> Indicating move will take the Manchester club 20 years to eclipse Liverpool . </t>",
    "summary_trees": [
      "# ::snt  Manchester City have been linked with summer move for Raheem Sterling . \n(l / link-01\n      :ARG1 (m / move-03\n            :ARG0 (t / team\n                  :name (n / name\n                        :op1 \"Manchester\"\n                        :op2 \"City\"))\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 \"Raheem\"\n                        :op2 \"Sterling\"))\n            :time (d / date-entity\n                  :season (s / summer))))",
      "# ::snt  Sterling has two years left on Sterling contract and is stalling on a new deal . \n(a / and\n      :op1 (l / leave-17\n            :ARG1 (c / contract\n                  :poss (p / person\n                        :name (n / name\n                              :op1 \"Sterling\")))\n            :ARG2 (t / temporal-quantity\n                  :quant 2\n                  :unit (y / year)))\n      :op2 (s / stall-01\n            :ARG1 p\n            :ARG2 (d / deal\n                  :ARG1-of (n2 / new-01))))",
      "# ::snt  Brendan Rodgers says a move to City would not be step up for Sterling . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Brendan\"\n                  :op2 \"Rodgers\"))\n      :ARG1 (s2 / step-01\n            :polarity -\n            :ARG4 (m / move-01\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Sterling\"))\n                  :ARG2 (c / city))\n            :direction (u / up)))",
      "# ::snt  Indicating move will take the Manchester club 20 years to eclipse Liverpool . \n(t / take-10\n      :ARG0 (e / eclipse-01\n            :ARG0 (c / club\n                  :mod (t2 / team\n                        :name (n / name\n                              :op1 \"Manchester\")))\n            :ARG1 (t3 / team\n                  :name (n2 / name\n                        :op1 \"Liverpool\")))\n      :ARG1 (t4 / temporal-quantity\n            :quant 20\n            :unit (y / year))\n      :ARG2 (m / move-02\n            :ARG0-of (ii / indicate-01)))"
    ],
    "tree": [
      "(l / link-01\n   :ARG1 (m / move-03\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Manchester\"\n                              :op2 \"City\"))))",
      "(l / link-01\n   :ARG1 (m / move-03\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Raheem\"\n                               :op2 \"Sterling\"))))",
      "(l / link-01\n   :ARG1 (m / move-03\n            :time (d / date-entity\n                     :season (s / summer))))",
      "(m / move-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Manchester\"\n                     :op2 \"City\"))\n   :time (d / date-entity\n            :season (s / summer)))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG2 (t / temporal-quantity\n                    :unit (y / year))))",
      "(a / and\n   :op2 (s / stall-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Sterling\"))))",
      "(a / and\n   :op2 (s / stall-01\n           :ARG2 (d / deal\n                    :ARG1 (n2 / new-01))))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG1 (c / contract\n                    :poss (p / person\n                             :name (n / name\n                                      :op1 \"Sterling\"))))\n   :op2 (s / stall-01\n           :ARG1 p))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG1 (c / contract\n                    :poss (p / person\n                             :name (n / name\n                                      :op1 \"Sterling\"))))\n   :op2 (s / stall-01\n           :ARG2 (d / deal\n                    :ARG1 (n2 / new-01))))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG2 (t / temporal-quantity\n                    :quant 2))\n   :op2 (s / stall-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Sterling\"))))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG2 (t / temporal-quantity\n                    :unit (y / year)))\n   :op2 (s / stall-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Sterling\"))))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG2 (t / temporal-quantity\n                    :unit (y / year)))\n   :op2 (s / stall-01\n           :ARG2 (d / deal\n                    :ARG1 (n2 / new-01))))",
      "(l / leave-17\n   :ARG2 (t / temporal-quantity\n            :unit (y / year)))",
      "(l / leave-17\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Sterling\")))\n   :ARG2 (t / temporal-quantity\n            :unit (y / year)))",
      "(c / contract\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Sterling\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brendan\"\n                     :op2 \"Rodgers\")))",
      "(s / say-01\n   :ARG1 (s2 / step-01\n             :ARG4 (m / move-01\n                      :ARG2 (c / city))))",
      "(s2 / step-01\n    :ARG4 (m / move-01\n             :ARG2 (c / city))\n    :direction (u / up))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG0 (c / club\n                     :mod (t2 / team\n                              :name (n / name\n                                       :op1 \"Manchester\")))))",
      "(t / take-10\n   :ARG1 (t4 / temporal-quantity\n             :unit (y / year)))",
      "(t / take-10\n   :ARG2 (m / move-02\n            :ARG0 (ii / indicate-01)))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG0 (c / club\n                     :mod (t2 / team\n                              :name (n / name\n                                       :op1 \"Manchester\"))))\n   :ARG1 (t4 / temporal-quantity\n             :quant 20))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG0 (c / club\n                     :mod (t2 / team\n                              :name (n / name\n                                       :op1 \"Manchester\"))))\n   :ARG1 (t4 / temporal-quantity\n             :unit (y / year)))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG1 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Liverpool\")))\n   :ARG1 (t4 / temporal-quantity\n             :quant 20))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG1 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Liverpool\")))\n   :ARG1 (t4 / temporal-quantity\n             :unit (y / year)))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG1 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Liverpool\")))\n   :ARG2 (m / move-02\n            :ARG0 (ii / indicate-01)))",
      "(t / take-10\n   :ARG1 (t4 / temporal-quantity\n             :unit (y / year))\n   :ARG2 (m / move-02\n            :ARG0 (ii / indicate-01)))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG1 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Liverpool\")))\n   :ARG1 (t4 / temporal-quantity\n             :unit (y / year))\n   :ARG2 (m / move-02\n            :ARG0 (ii / indicate-01)))"
    ],
    "smus": [
      "Manchester City move linked.",
      "The move of Raheem Sternling was linked.",
      "Link to move in summer.",
      "Raheem Sternling",
      "And Sternling is stalling.",
      "and the new deal is stalled.",
      "Sternling's contract was left and he was stalling.",
      "Sternling's contract was left and the new deal was stalled.",
      "Leaved for two and Sternling stalled.",
      "Leaved two and the new deal stalled.",
      "Leaved for years and the new deal stalling.",
      "Sternling's contract was left.",
      "Sternling's contract was left for two years.",
      "Sternling.",
      "The new deal is stalled.",
      "Says not a step.",
      "Brendan Rodgers says it's not a step.",
      "Sternling.",
      "It will take a Manchester club to eclipse.",
      "It will take years.",
      "It would take a move by indicating.",
      "It will take 20 years for Manchester City to eclipse.",
      "It will take years for Manchester City to eclipse.",
      "It will take 20 years to eclipse Liverpool.",
      "It will take years to eclipse Liverpool.",
      "It will take an indicating move to eclipse Liverpool.",
      "It will take years to make the indicating move.",
      "It will take years to eclipse Liverpool with the indicating move."
    ]
  },
  {
    "instance_id": "realsumm-85",
    "summary": "<t> Up to one in five Chinese eateries could be selling soup using illegal meat . </t> <t> Charity says meat is often disguised on menu or only offered if requested . </t> <t> Loophole lets people bring 20 kg of meat into UK for personal consumption . </t>",
    "summary_trees": [
      "# ::snt  Up to one in five Chinese eateries could be selling soup using illegal meat . \n(p / possible-01\n      :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"China\"))\n                  :ARG1-of (ii / include-91\n                        :ARG2 (p2 / person\n                              :ARG0-of (e / eat-01))\n                        :ARG3 (u / up-to\n                              :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                  :ARG1-of (u2 / use-01\n                        :ARG0 r\n                        :ARG2 (m / meat\n                              :ARG1-of (l / legal-02\n                                    :polarity -))))))",
      "# ::snt  Charity says meat is often disguised on menu or only offered if requested . \n(s / say-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"Charity\"))\n      :ARG1 (o2 / or\n            :op1 (d / disguise-01\n                  :ARG1 (m / meat)\n                  :location (m2 / menu)\n                  :frequency (o3 / often))\n            :op2 (o4 / offer-01\n                  :ARG1 m\n                  :mod (o5 / only)\n                  :condition (r / request-01\n                        :ARG1 m))))",
      "# ::snt  Loophole lets people bring 20 kg of meat into UK for personal consumption . \n(l / let-01\n      :ARG0 (l2 / loophole)\n      :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                  :quant (m2 / mass-quantity\n                        :quant 20\n                        :unit (k / kilogram)))\n            :ARG2 (c / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                  :ARG0 p\n                  :ARG1 m\n                  :ARG1-of (p2 / personal-02))))"
    ],
    "tree": [
      "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"China\")))))",
      "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                     :ARG1 (ii / include-91\n                               :ARG3 (u / up-to\n                                        :op1 \"1/5\")))))",
      "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG1 (s2 / soup\n                      :ARG1 (u2 / use-01\n                                :ARG2 (m / meat\n                                         :ARG1 (l / legal-02\n                                                  :polarity -))))))",
      "(s / sell-01\n   :ARG0 (r / restaurant\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"China\"))))",
      "(s / sell-01\n   :ARG0 (r / restaurant\n            :ARG1 (ii / include-91\n                      :ARG3 (u / up-to\n                               :op1 \"1/5\"))))",
      "(s / sell-01\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG0 (r / restaurant))))",
      "(s / sell-01\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG2 (m / meat\n                                :ARG1 (l / legal-02\n                                         :polarity -)))))",
      "(s / sell-01\n   :ARG0 (r / restaurant\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"China\")))\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG0 r)))",
      "(s / sell-01\n   :ARG0 (r / restaurant\n            :ARG1 (ii / include-91\n                      :ARG2 (p2 / person\n                                :ARG0 (e / eat-01))))\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG2 (m / meat\n                                :ARG1 (l / legal-02\n                                         :polarity -)))))",
      "(s / sell-01\n   :ARG0 (r / restaurant\n            :ARG1 (ii / include-91\n                      :ARG3 (u / up-to\n                               :op1 \"1/5\")))\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG0 r)))",
      "(r / restaurant\n   :ARG1 (ii / include-91\n             :ARG3 (u / up-to\n                      :op1 \"1/5\")))",
      "(r / restaurant\n   :mod (c / country\n           :name (n / name\n                    :op1 \"China\"))\n   :ARG1 (ii / include-91\n             :ARG2 (p2 / person\n                       :ARG0 (e / eat-01))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\")))",
      "(s / say-01\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :location (m2 / menu))))",
      "(s / say-01\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :frequency (o3 / often))))",
      "(s / say-01\n   :ARG1 (o2 / or\n             :op2 (o4 / offer-01\n                      :mod (o5 / only))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :ARG1 (m / meat))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op2 (o4 / offer-01\n                      :ARG1 (m / meat))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :location (m2 / menu))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :frequency (o3 / often))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op2 (o4 / offer-01\n                      :mod (o5 / only))))",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op2 (o4 / offer-01\n                      :condition (r / request-01\n                                    :ARG1 (m / meat)))))",
      "(o / organization\n   :name (n / name\n            :op1 \"Charity\"))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :ARG1 (m / meat)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :location (m2 / menu)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :frequency (o3 / often)))",
      "(o2 / or\n    :op2 (o4 / offer-01\n             :ARG1 (m / meat)))",
      "(o2 / or\n    :op2 (o4 / offer-01\n             :mod (o5 / only)))",
      "(o2 / or\n    :op2 (o4 / offer-01\n             :condition (r / request-01\n                           :ARG1 (m / meat))))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :ARG1 (m / meat))\n    :op2 (o4 / offer-01\n             :ARG1 m))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :ARG1 (m / meat))\n    :op2 (o4 / offer-01\n             :mod (o5 / only)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :ARG1 (m / meat))\n    :op2 (o4 / offer-01\n             :condition (r / request-01\n                           :ARG1 m)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :location (m2 / menu))\n    :op2 (o4 / offer-01\n             :ARG1 (m / meat)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :location (m2 / menu))\n    :op2 (o4 / offer-01\n             :mod (o5 / only)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :location (m2 / menu))\n    :op2 (o4 / offer-01\n             :condition (r / request-01\n                           :ARG1 (m / meat))))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :frequency (o3 / often))\n    :op2 (o4 / offer-01\n             :ARG1 (m / meat)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :frequency (o3 / often))\n    :op2 (o4 / offer-01\n             :mod (o5 / only)))",
      "(o2 / or\n    :op1 (d / disguise-01\n            :frequency (o3 / often))\n    :op2 (o4 / offer-01\n             :condition (r / request-01\n                           :ARG1 (m / meat))))",
      "(d / disguise-01\n   :ARG1 (m / meat)\n   :location (m2 / menu))",
      "(d / disguise-01\n   :ARG1 (m / meat)\n   :frequency (o3 / often))",
      "(d / disguise-01\n   :location (m2 / menu)\n   :frequency (o3 / often))",
      "(d / disguise-01\n   :ARG1 (m / meat)\n   :location (m2 / menu)\n   :frequency (o3 / often))",
      "(l / let-01\n   :ARG1 (b / bring-01\n            :ARG0 (p / person)))",
      "(l / let-01\n   :ARG1 (b / bring-01\n            :purpose (c2 / consume-01\n                         :ARG0 (p / person))))",
      "(l / let-01\n   :ARG1 (b / bring-01\n            :purpose (c2 / consume-01\n                         :ARG1 (m / meat))))",
      "(l / let-01\n   :ARG1 (b / bring-01\n            :purpose (c2 / consume-01\n                         :ARG1 (p2 / personal-02))))",
      "(l / let-01\n   :ARG1 (b / bring-01\n            :ARG1 (m / meat\n                     :quant (m2 / mass-quantity\n                                :unit (k / kilogram)))))",
      "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :ARG2 (c / country\n                     :name (n / name\n                              :op1 \"UK\"))))",
      "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :purpose (c2 / consume-01\n                         :ARG0 (p / person))))",
      "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :purpose (c2 / consume-01\n                         :ARG1 (m / meat))))",
      "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :purpose (c2 / consume-01\n                         :ARG1 (p2 / personal-02))))",
      "(b / bring-01\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :unit (k / kilogram))))",
      "(b / bring-01\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\")))",
      "(b / bring-01\n   :purpose (c2 / consume-01\n                :ARG0 (p / person)))",
      "(b / bring-01\n   :purpose (c2 / consume-01\n                :ARG1 (m / meat)))",
      "(b / bring-01\n   :ARG0 (p / person)\n   :purpose (c2 / consume-01\n                :ARG0 p))",
      "(b / bring-01\n   :ARG0 (p / person)\n   :purpose (c2 / consume-01\n                :ARG1 (p2 / personal-02)))",
      "(b / bring-01\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :unit (k / kilogram)))\n   :purpose (c2 / consume-01\n                :ARG1 m))",
      "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :unit (k / kilogram)))\n   :purpose (c2 / consume-01\n                :ARG1 m))"
    ],
    "smus": [
      "Chinese restaurants can be selling.",
      "Up to one fifth of the restaurants could be selling.",
      "soup selling using illegal meat could",
      "Chinese restaurants selling.",
      "Up to one fifth of the restaurants are selling.",
      "Selling soup for using illegal meat.",
      "Chinese restaurants selling soup for using.",
      "Chinese restaurants selling soup for using illegal meat.",
      "Up to one fifth of the restaurants are selling soup they are using.",
      "Up to one fifth of the restaurants are selling soup using illegal meat.",
      "Soup for using illegal meat.",
      "using illegal meat.",
      "Charity says:",
      "Or disguised in the menu, says the i>",
      "\"Or, it says, \"often disguised.\"",
      "Or only offered, says.",
      "\"Or disguised as meat,\" says Charity.",
      "Charity says the meat will be offered or not.",
      "\"Or disguised in the menu,\" says Charity.",
      "\"Or, as Charity says, \"often disguised.\"",
      "Charity says only offered or offered.",
      "Charity says that if meat is requested it will be offered or offered.",
      "Or disguised as meat.",
      "Or disguised in the menu.",
      "or meat offered.",
      "Or only offered.",
      "or offered if meat is requested.",
      "meat disguised or offered.",
      "The meat is disguised or only offered.",
      "The meat is disguised or offered if requested.",
      "disguised on the menu or offered as meat.",
      "disguised in the menu or only offered.",
      "disguised on the menu or offered if meat is requested.",
      "often disguised or offered as meat.",
      "often disguised or only offered.",
      "often disguised or offered when meat is requested.",
      "meat disguised on the menu.",
      "meat is often disguised.",
      "often disguised in the menu.",
      "meat is often disguised on the menu.",
      "If meat is requested, it will be offered.",
      "Only offered if meat is requested.",
      "lets the people bring.",
      "Lets bring for the consumption of the people.",
      "Lets bring for consumption of meat.",
      "lets bring in a kilos of meat.",
      "Loophole lets people bring.",
      "The Loophole lets the consumer bring.",
      "The Loophole lets the meat be brought in for consumption.",
      "The Loophole lets the consumption of the person bring.",
      "The Loophole lets the kilogram of meat in.",
      "Bring to the UK.",
      "Bring for the consumption of the people.",
      "bring for consumption of meat.",
      "Bring for personal consumption.",
      "Bring the people in for the consumption of meat.",
      "20kg of meat to bring to the UK.",
      "Bring to the UK for consumption of meat.",
      "20kg of meat to be brought to the UK for personal consumption."
    ]
  },
  {
    "instance_id": "realsumm-86",
    "summary": "<t> Two types of cereal in an Easter egg with marshmallows and brownies . </t> <t> Served at Black Milk cafe in Manchester 's Northern Quarter . ' </t> <t> Easter is less about what is used to mean , ' cafe owner Olly Taylor said . </t>",
    "summary_trees": [
      "# ::snt  Two types of cereal in an Easter egg with marshmallows and brownies . \n(c / cereal\n      :mod (t / type\n            :quant 2)\n      :location (e / egg\n            :mod (f / festival\n                  :name (n / name\n                        :op1 \"Easter\")))\n      :accompanier (a / and\n            :op1 (m / marshmallow)\n            :op2 (b / brownie)))",
      "# ::snt  Served at Black Milk cafe in Manchester 's Northern Quarter . ' \n(s / serve-01\n      :location (c / cafe\n            :name (n / name\n                  :op1 \"Black\"\n                  :op2 \"Milk\")\n            :location (q / quarter\n                  :name (n2 / name\n                        :op1 \"Northern\"\n                        :op2 \"Quarter\")\n                  :part-of (c2 / city\n                        :name (n3 / name\n                              :op1 \"Manchester\")))))",
      "# ::snt  Easter is less about what is used to mean , ' cafe owner Olly Taylor said . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Olly\"\n                  :op2 \"Taylor\")\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (c2 / concern-02\n            :ARG0 (f / festival\n                  :name (n2 / name\n                        :op1 \"Easter\"))\n            :ARG1 (t / thing\n                  :ARG2-of (m / mean-01\n                        :ARG1 f\n                        :time (u / use-03)))\n            :mod (l / less)))"
    ],
    "tree": [
      "(c / cereal\n   :mod (t / type\n           :quant 2))",
      "(c / cereal\n   :location (e / egg\n                :mod (f / festival\n                        :name (n / name\n                                 :op1 \"Easter\"))))",
      "(c / cereal\n   :mod (t / type\n           :quant 2)\n   :location (e / egg\n                :mod (f / festival\n                        :name (n / name\n                                 :op1 \"Easter\"))))",
      "(s / serve-01\n   :location (c / cafe\n                :name (n / name\n                         :op1 \"Black\"\n                         :op2 \"Milk\")))",
      "(s / serve-01\n   :location (c / cafe\n                :location (q / quarter\n                             :name (n2 / name\n                                       :op1 \"Northern\"\n                                       :op2 \"Quarter\"))))",
      "(s / serve-01\n   :location (c / cafe\n                :location (q / quarter\n                             :part (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Manchester\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe))))",
      "(s / say-01\n   :ARG1 (c2 / concern-02\n             :mod (l / less)))",
      "(s / say-01\n   :ARG1 (c2 / concern-02\n             :ARG1 (t / thing\n                      :ARG2 (m / mean-01\n                               :time (u / use-03)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Olly\"\n                     :op2 \"Taylor\"))\n   :ARG1 (c2 / concern-02\n             :ARG0 (f / festival\n                      :name (n2 / name\n                                :op1 \"Easter\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Olly\"\n                     :op2 \"Taylor\"))\n   :ARG1 (c2 / concern-02\n             :mod (l / less)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Olly\"\n                     :op2 \"Taylor\"))\n   :ARG1 (c2 / concern-02\n             :ARG1 (t / thing\n                      :ARG2 (m / mean-01\n                               :time (u / use-03)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (c2 / concern-02\n             :ARG0 (f / festival\n                      :name (n2 / name\n                                :op1 \"Easter\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (c2 / concern-02\n             :ARG1 (t / thing\n                      :ARG2 (m / mean-01\n                               :ARG1 (f / festival :name (n2 / name :op1 \"Easter\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (c2 / concern-02\n             :mod (l / less)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (c2 / concern-02\n             :ARG1 (t / thing\n                      :ARG2 (m / mean-01\n                               :time (u / use-03)))))",
      "(c2 / concern-02\n    :ARG1 (t / thing\n             :ARG2 (m / mean-01\n                      :ARG1 (f / festival :name (n2 / name :op1 \"Easter\")))))",
      "(c2 / concern-02\n    :ARG1 (t / thing\n             :ARG2 (m / mean-01\n                      :time (u / use-03))))",
      "(c2 / concern-02\n    :ARG0 (f / festival\n             :name (n2 / name\n                       :op1 \"Easter\"))\n    :ARG1 (t / thing\n             :ARG2 (m / mean-01\n                      :ARG1 f)))",
      "(c2 / concern-02\n    :ARG0 (f / festival\n             :name (n2 / name\n                       :op1 \"Easter\"))\n    :ARG1 (t / thing\n             :ARG2 (m / mean-01\n                      :time (u / use-03))))",
      "(c2 / concern-02\n    :ARG0 (f / festival\n             :name (n2 / name\n                       :op1 \"Easter\"))\n    :mod (l / less))"
    ],
    "smus": [
      "There are two types of cereal in an Easter egg.",
      "There are two types of cereal in an Easter egg with marshmallows.",
      "There are two types of cereal in an Easter egg with brownies.",
      "served in the Black Milk cafe.",
      "served in a cafe in Northern Quarter.",
      "Serving in a cafe in Manchester Quarter.",
      "The owner of the cafe said --",
      "Less concerning, said.",
      "As for what used to mean, said.",
      "\"It's about Easter,\" said Olly Taylor.",
      "Less concerning, said Olly Taylor.",
      "As for what used to mean, Ollie Taylor said:",
      "The owner of the cafe said it was about Easter.",
      "As for what Easter does mean, the owner of the cafe said.",
      "The owner of the cafe said it was less concerning.",
      "As for what used to mean, said the owner of the cafe.",
      "As for what Easter does mean less.",
      "Less about what used to mean.",
      "It's less about what Easter does mean.",
      "There's less about Easter than what it used to mean.",
      "What used to mean."
    ]
  },
  {
    "instance_id": "realsumm-87",
    "summary": "<t> The European Union will accuse Google of illegally abusing Union supremacy . </t> <t> Union could fine Google more than \u00a3 4 billion - 10 per cent of Union annual revenue . </t> <t> Brussels to say Union uses search engine to divert traffic to Union own services . </t> <t> Google boasts a 90 per cent share in Europe 's search engine market . </t>",
    "summary_trees": [
      "# ::snt  The European Union will accuse Google of illegally abusing Union supremacy . \n(a / accuse-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"European\"\n                  :op2 \"Union\"))\n      :ARG1 (c / company\n            :name (n2 / name\n                  :op1 \"Google\"))\n      :ARG2 (a2 / abuse-02\n            :ARG0 c\n            :ARG1 (s / supremacy\n                  :poss o)\n            :manner (l / law\n                  :polarity -)))",
      "# ::snt  Union could fine Google more than \u00a3 4 billion - 10 per cent of Union annual revenue . \n(p / possible-01\n      :ARG1 (f / fine-01\n            :ARG0 (c / company\n                  :name (n / name\n                        :op1 \"Union\"))\n            :ARG1 (m / more-than\n                  :op1 (m2 / monetary-quantity\n                        :quant 4000000000\n                        :unit (p2 / pound)\n                        :ARG1-of (m3 / mean-01\n                              :ARG2 (p3 / percentage-entity\n                                    :value 10\n                                    :ARG3-of (ii / include-91\n                                          :ARG2 (r / revenue\n                                                :poss c\n                                                :frequency (r2 / rate-entity-91\n                                                      :ARG3 (t / temporal-quantity\n                                                            :quant 1\n                                                            :unit (y / year)))))))))\n            :ARG2 (c2 / company\n                  :name (n2 / name\n                        :op1 \"Google\"))))",
      "# ::snt  Brussels to say Union uses search engine to divert traffic to Union own services . \n(s / say-01\n      :ARG0 (c / city\n            :name (n / name\n                  :op1 \"Brussels\"))\n      :ARG1 (u / use-01\n            :ARG0 (o / organization\n                  :name (n2 / name\n                        :op1 \"Union\"))\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                  :ARG0 o\n                  :ARG1 (t / traffic)\n                  :ARG3 (s3 / service\n                        :poss o))))",
      "# ::snt  Google boasts a 90 per cent share in Europe 's search engine market . \n(b / boast-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Google\"))\n      :ARG1 (s / share-01\n            :ARG1 (m / market\n                  :mod (s2 / search-engine)\n                  :location (c2 / continent\n                        :name (n2 / name\n                              :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                  :value 90)))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\")))",
      "(a / accuse-01\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\")))",
      "(a / accuse-01\n   :ARG2 (a2 / abuse-02\n             :ARG0 (c / company :name (n2 / name :op1 \"Google\"))))",
      "(a / accuse-01\n   :ARG2 (a2 / abuse-02\n             :manner (l / law\n                        :polarity -)))",
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\")))",
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG2 (a2 / abuse-02\n             :ARG1 (s / supremacy\n                      :poss o)))",
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG2 (a2 / abuse-02\n             :manner (l / law\n                        :polarity -)))",
      "(a / accuse-01\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c))",
      "(a / accuse-01\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG1 (s / supremacy\n                      :poss (o / organization :name (n / name :op1 \"European\" :op2 \"Union\")))))",
      "(a / accuse-01\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :manner (l / law\n                        :polarity -)))",
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c))",
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG1 (s / supremacy\n                      :poss o)))",
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :manner (l / law\n                        :polarity -)))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG0 (c / company\n                     :name (n / name\n                              :op1 \"Union\"))))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :quant 4000000000))))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :unit (p2 / pound)))))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :ARG1 (m3 / mean-01\n                                        :ARG2 (p3 / percentage-entity\n                                                  :value 10))))))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :ARG1 (m3 / mean-01\n                                        :ARG2 (p3 / percentage-entity\n                                                  :ARG3 (ii / include-91\n                                                            :ARG2 (r / revenue\n                                                                     :poss (c / company :name (n / name :op1 \"Union\"))))))))))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :ARG1 (m3 / mean-01\n                                        :ARG2 (p3 / percentage-entity\n                                                  :ARG3 (ii / include-91\n                                                            :ARG2 (r / revenue\n                                                                     :frequency (r2 / rate-entity-91\n                                                                                    :ARG3 (t / temporal-quantity\n                                                                                             :quant 1))))))))))",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :ARG1 (m3 / mean-01\n                                        :ARG2 (p3 / percentage-entity\n                                                  :ARG3 (ii / include-91\n                                                            :ARG2 (r / revenue\n                                                                     :frequency (r2 / rate-entity-91\n                                                                                    :ARG3 (t / temporal-quantity\n                                                                                             :unit (y / year)))))))))))",
      "(f / fine-01\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p2 / pound))))",
      "(f / fine-01\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :ARG1 (m3 / mean-01\n                               :ARG2 (p3 / percentage-entity\n                                         :value 10)))))",
      "(f / fine-01\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :ARG1 (m3 / mean-01\n                               :ARG2 (p3 / percentage-entity\n                                         :ARG3 (ii / include-91\n                                                   :ARG2 (r / revenue\n                                                            :poss (c / company :name (n / name :op1 \"Union\")))))))))",
      "(f / fine-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Union\"))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p2 / pound))))",
      "(f / fine-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Union\"))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :ARG1 (m3 / mean-01\n                               :ARG2 (p3 / percentage-entity\n                                         :ARG3 (ii / include-91\n                                                   :ARG2 (r / revenue\n                                                            :poss c)))))))",
      "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\")))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG0 (o / organization\n                     :name (n2 / name\n                               :op1 \"Union\"))))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG2 (d / divert-01\n                     :ARG0 (o / organization :name (n2 / name :op1 \"Union\")))))",
      "(s / say-01\n   :ARG1 (u / use-01\n            :ARG2 (d / divert-01\n                     :ARG3 (s3 / service\n                               :poss (o / organization :name (n2 / name :op1 \"Union\"))))))",
      "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\"))\n   :ARG1 (u / use-01\n            :ARG0 (o / organization\n                     :name (n2 / name\n                               :op1 \"Union\"))))",
      "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\"))\n   :ARG1 (u / use-01\n            :ARG1 (s2 / search-engine)))",
      "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\"))\n   :ARG1 (u / use-01\n            :ARG2 (d / divert-01\n                     :ARG0 (o / organization :name (n2 / name :op1 \"Union\")))))",
      "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\"))\n   :ARG1 (u / use-01\n            :ARG2 (d / divert-01\n                     :ARG3 (s3 / service\n                               :poss (o / organization :name (n2 / name :op1 \"Union\"))))))",
      "(c / city\n   :name (n / name\n            :op1 \"Brussels\"))",
      "(u / use-01\n   :ARG0 (o / organization\n            :name (n2 / name\n                      :op1 \"Union\")))",
      "(u / use-01\n   :ARG2 (d / divert-01\n            :ARG0 (o / organization :name (n2 / name :op1 \"Union\"))))",
      "(u / use-01\n   :ARG2 (d / divert-01\n            :ARG1 (t / traffic)))",
      "(u / use-01\n   :ARG2 (d / divert-01\n            :ARG3 (s3 / service\n                      :poss (o / organization :name (n2 / name :op1 \"Union\")))))",
      "(u / use-01\n   :ARG0 (o / organization\n            :name (n2 / name\n                      :op1 \"Union\"))\n   :ARG2 (d / divert-01\n            :ARG1 (t / traffic)))",
      "(u / use-01\n   :ARG0 (o / organization\n            :name (n2 / name\n                      :op1 \"Union\"))\n   :ARG2 (d / divert-01\n            :ARG3 (s3 / service\n                      :poss o)))",
      "(u / use-01\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 (o / organization :name (n2 / name :op1 \"Union\"))))",
      "(u / use-01\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG1 (t / traffic)))",
      "(u / use-01\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG3 (s3 / service\n                      :poss (o / organization :name (n2 / name :op1 \"Union\")))))",
      "(u / use-01\n   :ARG0 (o / organization\n            :name (n2 / name\n                      :op1 \"Union\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 o))",
      "(u / use-01\n   :ARG0 (o / organization\n            :name (n2 / name\n                      :op1 \"Union\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG1 (t / traffic)))",
      "(u / use-01\n   :ARG0 (o / organization\n            :name (n2 / name\n                      :op1 \"Union\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG3 (s3 / service\n                      :poss o)))",
      "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\")))",
      "(b / boast-01\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :mod (s2 / search-engine))))",
      "(b / boast-01\n   :ARG1 (s / share-01\n            :ARG2 (c / company :name (n / name :op1 \"Google\"))))",
      "(b / boast-01\n   :ARG1 (s / share-01\n            :quant (p / percentage-entity\n                      :value 90)))",
      "(b / boast-01\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :location (c2 / continent\n                                   :name (n2 / name\n                                             :op1 \"Europe\")))))",
      "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :mod (s2 / search-engine))))",
      "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG2 c))",
      "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :quant (p / percentage-entity\n                      :value 90)))",
      "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :location (c2 / continent\n                                   :name (n2 / name\n                                             :op1 \"Europe\")))))"
    ],
    "smus": [
      "The European Union will accuse.",
      "accuse google.",
      "accuse Google of abusing.",
      "The European Union will accuse Google.",
      "The European Union will accuse Google of abusing.",
      "The European Union will accuse the abuses of being unlawful.",
      "Google to accuse of abusing the supremacy of the European Union.",
      "accuse Google of illegally abusing.",
      "The European Union will accuse Google of abusing its supremacy.",
      "The European Union will accuse Google of illegally abusing.",
      "Abusing the supremacy of the European Union.",
      "Abusing illegally.",
      "The European Union supremacy is illegally being abused.",
      "Union can fine.",
      "More than 4 billion could be fined.",
      "More than PS100 can be fined.",
      "More than 10% can be fined.",
      "More than a percentage of Union's revenue could be fined.",
      "More than 1% of annual revenue can be fined.",
      "More than a percent of annual revenue can be fined.",
      "More than a percent of Union's revenue will be fined.",
      "More than 1% of annual revenue will be fined.",
      "More than a percent of annual revenue will be fined.",
      "Union will fine more than a percent of its revenue.",
      "Union will fine more than a percent of annual revenue.",
      "Brussels said --",
      "Say the Union uses.",
      "Says Union uses to divert.",
      "Says uses to divert Union services.",
      "Brussels says the Union uses.",
      "Brussels says the search engine uses",
      "Brussels says the Union uses it to divert.",
      "Brussels says it uses the diverter to Union services.",
      "The Union uses...",
      "Union uses it to divert.",
      "uses to divert traffic.",
      "uses to divert Union services.",
      "The Union uses a search engine.",
      "Union uses to divert its services.",
      "The search engine uses the Union to divert.",
      "The search engine uses to divert traffic.",
      "The search engine uses to divert Union services.",
      "Union uses search engine to divert",
      "The Union uses a search engine to divert traffic.",
      "Union uses search engine to divert its services.",
      "Traffic will be diverted to Union services.",
      "Google boasts.",
      "boasts a share of the search engine market.",
      "boasts of Google's share.",
      "boasts a share of 90 percent.",
      "boasts of a market share in Europe.",
      "Google boasts a share of the search engine market.",
      "Google boasts of its share.",
      "Google boasts a 90 percent share.",
      "Google boasts a market share in Europe."
    ]
  },
  {
    "instance_id": "realsumm-88",
    "summary": "<t> Phil Smith , 25 , forgot Smith keys and scaled fence to try to get in Smith flat . </t> <t> But teaching assistant fell and hit Smith head while climbing through window . </t> <t> Smith fractured Smith skull and suffered a bleed on the brain and a blood clot . </t> <t> Parents paid tribute to ' lovely son ' who worked at special needs school . </t>",
    "summary_trees": [
      "# ::snt  Phil Smith , 25 , forgot Smith keys and scaled fence to try to get in Smith flat . \n(f / forget-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Phil\"\n                  :op2 \"Smith\")\n            :age (t / temporal-quantity\n                  :quant 25\n                  :unit (y / year)))\n      :ARG1 (a / and\n            :op1 (k / key\n                  :poss p)\n            :op2 (s / scale-01\n                  :ARG0 p\n                  :ARG1 (f2 / fence)\n                  :purpose (t2 / try-01\n                        :ARG0 p\n                        :ARG1 (g / get-05\n                              :ARG1 p\n                              :ARG2 (f3 / flat\n                                    :poss p))))))",
      "# ::snt  But teaching assistant fell and hit Smith head while climbing through window . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (f / fall-01\n                  :ARG1 (p / person\n                        :ARG0-of (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n            :op2 (h / hit-01\n                  :ARG0 p\n                  :ARG1 (h2 / head\n                        :part-of (p2 / person\n                              :name (n / name\n                                    :op1 \"Smith\"))))\n            :time (c2 / climb-01\n                  :ARG0 p\n                  :path (t2 / through\n                        :op1 (w / window)))))",
      "# ::snt  Smith fractured Smith skull and suffered a bleed on the brain and a blood clot . \n(a / and\n      :op1 (f / fracture-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Smith\")\n                  :part (s / skull))\n            :ARG1 s)\n      :op2 (s2 / suffer-01\n            :ARG0 p\n            :ARG1 (a2 / and\n                  :op1 (b / bleed-01\n                        :ARG1 s)\n                  :op2 (c / clot\n                        :mod (b2 / blood)))))",
      "# ::snt  Parents paid tribute to ' lovely son ' who worked at special needs school . \n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p3 / parent)))\n      :ARG1 (t / tribute)\n      :ARG2 (p4 / person\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG2 (s / son))\n            :mod (l / lovely)\n            :ARG0-of (w / work-01\n                  :ARG2 (s2 / school\n                        :ARG1-of (n / need-01\n                              :ARG1-of (s3 / special-02))))))"
    ],
    "tree": [
      "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")))",
      "(f / forget-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 25)))",
      "(f / forget-01\n   :ARG1 (s / scale-01\n            :purpose (t2 / try-01\n                         :ARG1 (g / get-05\n                                  :ARG1 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))))))",
      "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\"))\n   :ARG1 (s / scale-01\n            :purpose (t2 / try-01\n                         :ARG1 (g / get-05\n                                  :ARG1 p))))",
      "(f / forget-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 25))\n   :ARG1 (s / scale-01\n            :purpose (t2 / try-01\n                         :ARG1 (g / get-05\n                                  :ARG1 p))))",
      "(f / forget-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (s / scale-01\n            :purpose (t2 / try-01\n                         :ARG1 (g / get-05\n                                  :ARG1 p))))",
      "(f / forget-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :unit (y / year)))\n   :ARG1 (s / scale-01\n            :purpose (t2 / try-01\n                         :ARG1 (g / get-05\n                                  :ARG2 (f3 / flat\n                                            :poss p)))))",
      "(p / person\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(p / person\n   :name (n / name\n            :op1 \"Phil\"\n            :op2 \"Smith\")\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(a / and\n   :op1 (k / key\n           :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))))",
      "(a / and\n   :op2 (s / scale-01\n           :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))))",
      "(a / and\n   :op2 (s / scale-01\n           :ARG1 (f2 / fence)))",
      "(a / and\n   :op2 (s / scale-01\n           :purpose (t2 / try-01\n                        :ARG1 (g / get-05\n                                 :ARG1 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))))))",
      "(a / and\n   :op2 (s / scale-01\n           :purpose (t2 / try-01\n                        :ARG1 (g / get-05\n                                 :ARG2 (f3 / flat\n                                           :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\"))))))))",
      "(a / and\n   :op1 (k / key\n           :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\"))))\n   :op2 (s / scale-01\n           :ARG0 p))",
      "(a / and\n   :op1 (k / key\n           :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\"))))\n   :op2 (s / scale-01\n           :ARG1 (f2 / fence)))",
      "(c / contrast-01\n   :ARG2 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t / teach-01)))))",
      "(c / contrast-01\n   :ARG2 (h / hit-01\n            :ARG0 (p / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t / teach-01)))))",
      "(c / contrast-01\n   :ARG2 (c2 / climb-01\n             :ARG0 (p / person\n                      :ARG0 (a2 / assist-01\n                                :ARG1 (t / teach-01)))))",
      "(c / contrast-01\n   :ARG2 (h / hit-01\n            :ARG1 (h2 / head\n                      :part (p2 / person\n                                :name (n / name\n                                         :op1 \"Smith\")))))",
      "(c / contrast-01\n   :ARG2 (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01)))))",
      "(a / and\n   :op2 (h / hit-01\n           :ARG0 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01)))))",
      "(a / and\n   :op2 (h / hit-01\n           :ARG1 (h2 / head\n                     :part (p2 / person\n                               :name (n / name\n                                        :op1 \"Smith\")))))",
      "(a / and\n   :time (c2 / climb-01\n             :ARG0 (p / person\n                      :ARG0 (a2 / assist-01\n                                :ARG1 (t / teach-01)))))",
      "(a / and\n   :time (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :op2 (h / hit-01\n           :ARG0 p))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :op2 (h / hit-01\n           :ARG1 (h2 / head\n                     :part (p2 / person\n                               :name (n / name\n                                        :op1 \"Smith\")))))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :time (c2 / climb-01\n             :ARG0 p))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :time (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(a / and\n   :op2 (h / hit-01\n           :ARG0 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :time (c2 / climb-01\n             :ARG0 p))",
      "(a / and\n   :op2 (h / hit-01\n           :ARG0 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :time (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(a / and\n   :op2 (h / hit-01\n           :ARG1 (h2 / head\n                     :part (p2 / person\n                               :name (n / name\n                                        :op1 \"Smith\"))))\n   :time (c2 / climb-01\n             :ARG0 (p / person\n                      :ARG0 (a2 / assist-01\n                                :ARG1 (t / teach-01)))))",
      "(a / and\n   :op2 (h / hit-01\n           :ARG1 (h2 / head\n                     :part (p2 / person\n                               :name (n / name\n                                        :op1 \"Smith\"))))\n   :time (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :op2 (h / hit-01\n           :ARG0 p)\n   :time (c2 / climb-01\n             :ARG0 p))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :op2 (h / hit-01\n           :ARG0 p)\n   :time (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :op2 (h / hit-01\n           :ARG1 (h2 / head\n                     :part (p2 / person\n                               :name (n / name\n                                        :op1 \"Smith\"))))\n   :time (c2 / climb-01\n             :ARG0 p))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0 (a2 / assist-01\n                              :ARG1 (t / teach-01))))\n   :op2 (h / hit-01\n           :ARG1 (h2 / head\n                     :part (p2 / person\n                               :name (n / name\n                                        :op1 \"Smith\"))))\n   :time (c2 / climb-01\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(f / fall-01\n   :ARG1 (p / person\n            :ARG0 (a2 / assist-01\n                      :ARG1 (t / teach-01))))",
      "(p / person\n   :ARG0 (a2 / assist-01\n             :ARG1 (t / teach-01)))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Smith\"))))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG1 (s / skull)))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :part (s / skull))))",
      "(a / and\n   :op2 (s2 / suffer-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Smith\"))))",
      "(a / and\n   :op2 (s2 / suffer-01\n            :ARG1 (b / bleed-01\n                     :ARG1 (s / skull))))",
      "(a / and\n   :op2 (s2 / suffer-01\n            :ARG0 (p / person\n                     :part (s / skull))))",
      "(a / and\n   :op2 (s2 / suffer-01\n            :ARG1 (c / clot\n                     :mod (b2 / blood))))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Smith\")))\n   :op2 (s2 / suffer-01\n            :ARG0 p))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Smith\")))\n   :op2 (s2 / suffer-01\n            :ARG1 (b / bleed-01\n                     :ARG1 (s / skull))))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Smith\")\n                    :part (s / skull)))\n   :op2 (s2 / suffer-01\n            :ARG0 p))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Smith\")))\n   :op2 (s2 / suffer-01\n            :ARG1 (c / clot\n                     :mod (b2 / blood))))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG1 (s / skull))\n   :op2 (s2 / suffer-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Smith\"))))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG1 (s / skull))\n   :op2 (s2 / suffer-01\n            :ARG1 (b / bleed-01\n                     :ARG1 s)))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG1 (s / skull))\n   :op2 (s2 / suffer-01\n            :ARG0 (p / person\n                     :part s)))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG1 (s / skull))\n   :op2 (s2 / suffer-01\n            :ARG1 (c / clot\n                     :mod (b2 / blood))))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :part (s / skull)\n                    :name (n / name\n                             :op1 \"Smith\")))\n   :op2 (s2 / suffer-01\n            :ARG0 p))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :part (s / skull)))\n   :op2 (s2 / suffer-01\n            :ARG1 (b / bleed-01\n                     :ARG1 s)))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :part (s / skull)))\n   :op2 (s2 / suffer-01\n            :ARG0 p))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (p / person\n                    :part (s / skull)))\n   :op2 (s2 / suffer-01\n            :ARG1 (c / clot\n                     :mod (b2 / blood))))",
      "(f / fracture-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Smith\")))",
      "(f / fracture-01\n   :ARG0 (p / person\n            :part (s / skull)))",
      "(p / person\n   :name (n / name\n            :op1 \"Smith\"))",
      "(p / person\n   :name (n / name\n            :op1 \"Smith\")\n   :part (s / skull))",
      "(s2 / suffer-01\n    :ARG1 (b / bleed-01\n             :ARG1 (s / skull)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent))))",
      "(p / pay-01\n   :ARG2 (p4 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / school\n                                :ARG1 (n / need-01\n                                         :ARG1 (s3 / special-02))))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG2 (p4 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (s / son))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG2 (p4 / person\n             :mod (l / lovely)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG2 (p4 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / school\n                                :ARG1 (n / need-01\n                                         :ARG1 (s3 / special-02))))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute))",
      "(p2 / person\n    :ARG0 (h / have-rel-role-91\n             :ARG2 (p3 / parent)))",
      "(p4 / person\n    :ARG0 (h2 / have-rel-role-91\n              :ARG2 (s / son)))"
    ],
    "smus": [
      "Phil Smith forgot.",
      "Phil Smith's keys were forgotten.",
      "Phil Smith forgot his keys.",
      "The 25-year-old forgot his keys.",
      "The year old forgot his keys.",
      "And Phil Smith has scaled.",
      "and the fence was scaled.",
      "And scaled to try to get Phil Smith flat.",
      "Phil Smith's keys and scaled to try.",
      "Phil Smith's keys and scaled to try and get there.",
      "Phil Smith's keys and scaled to try to get flat.",
      "Scaled to try Phil Smith.",
      "Scaled to try and get Phil Smith flat.",
      "The fence was scaled to try Phil Smith.",
      "The fence was scaled to try to get Phil Smith.",
      "The fence was scaled to try and get Phil Smith flat.",
      "But the teaching assistant fell.",
      "But the teaching assistant was climbing.",
      "But Smith's head hit.",
      "But climbing through the window.",
      "And the teaching assistant fell.",
      "And Smith's head hit.",
      "and while the teaching assistant was climbing.",
      "and climbing through the window.",
      "The teaching assistant fell and hit.",
      "The teaching assistant fell and hit Smith in the head.",
      "And the teaching assistant fell while climbing.",
      "And the teaching assistant fell while climbing through the window.",
      "And the teaching assistant hit while climbing.",
      "And the teaching assistant hit while climbing through the window.",
      "And while the teaching assistant was climbing, Smith's head hit.",
      "And while climbing through the window, Smith's head hit.",
      "Teaching assistant fell and hit while climbing.",
      "Teaching assistant fell and hit while climbing through the window.",
      "Teaching assistant fell and hit Smith's head while climbing.",
      "Teaching assistant fell and hit Smith's head while climbing through the window.",
      "The teaching assistant fell.",
      "Teaching assistant.",
      "Smith's head hit.",
      "Climbing through the window.",
      "And Smith fractured.",
      "and the skull fractured.",
      "And the person with the skull fractured.",
      "And Smith suffered.",
      "and suffered a skull bleed.",
      "and the skull suffered.",
      "and suffered from a blood clot.",
      "Smith fractured and suffered.",
      "Smith fractured and suffered a skull bleed.",
      "Smith fractured his skull and suffered.",
      "Smith fractured and suffered a blood clot.",
      "A skull fractured and Smith suffered.",
      "A skull fractured and suffered bleeding.",
      "A skull fractured and people with the skull suffered.",
      "A skull fracture and a blood clot suffered.",
      "The skull fractured and suffered bleed.",
      "The person fractured his skull and suffered.",
      "The skull fractured and suffered from a blood clot.",
      "Smith fractured.",
      "The skull fractured.",
      "suffered a skull bleed.",
      "suffered from a blood clot.",
      "and a skull bleed.",
      "There is a bleeding in the skull and a blood clot.",
      "Parents paid.",
      "The person who worked in the special needs school was paid.",
      "Parents paid the son.",
      "Parents paid a lovely person.",
      "Parents paid the person who worked in a special needs school.",
      "Parents paid tribute.",
      "Worked for a school with special needs.",
      "Special needs schools."
    ]
  },
  {
    "instance_id": "realsumm-89",
    "summary": "<t> Emmanuel Adebayor 's current Tottenham contract runs out in 2016 . </t> <t> The striker is unwilling to take anything less than striker current \u00a3 5.2million salary before accepting a move out of White Hart Lane . </t> <t> Togolese forward has made just nine league starts this season . </t>",
    "summary_trees": [
      "# ::snt  Emmanuel Adebayor 's current Tottenham contract runs out in 2016 . \n(r / run-out-05\n      :ARG1 (c / contract\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Emmanuel\"\n                        :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Tottenham\")))\n      :time (d / date-entity\n            :year 2016))",
      "# ::snt  The striker is unwilling to take anything less than striker current \u00a3 5.2million salary before accepting a move out of White Hart Lane . \n(w / will-02\n      :polarity -\n      :ARG0 (p / person\n            :ARG0-of (s / strike-02))\n      :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                  :ARG1-of (h / have-quant-91\n                        :ARG3 (l / less)\n                        :ARG4 (s2 / salary\n                              :mod (m / monetary-quantity\n                                    :quant 5500000\n                                    :unit (p2 / pound))\n                              :poss p\n                              :time (c / current)))))\n      :time (b / before\n            :op1 (a2 / accept-01\n                  :ARG0 p\n                  :ARG1 (m2 / move-01\n                        :ARG0 p\n                        :ARG2 (r / road\n                              :name (n / name\n                                    :op1 \"White\"\n                                    :op2 \"Hart\"\n                                    :op3 \"Lane\"))))))",
      "# ::snt  Togolese forward has made just nine league starts this season . \n(s / start-01\n      :ARG0 (f / forward\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Togolese\")))\n      :mod (l / league)\n      :quant (j / just\n            :op1 9)\n      :time (s2 / season\n            :mod (t / this)))"
    ],
    "tree": [
      "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))))",
      "(r / run-out-05\n   :ARG1 (c / contract\n            :time (c2 / current)))",
      "(r / run-out-05\n   :ARG1 (c / contract\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\"))))",
      "(r / run-out-05\n   :time (d / date-entity\n            :year 2016))",
      "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\")))\n   :time (d / date-entity\n            :year 2016))",
      "(r / run-out-05\n   :ARG1 (c / contract\n            :time (c2 / current))\n   :time (d / date-entity\n            :year 2016))",
      "(a / anything\n   :ARG1 (h / have-quant-91\n            :ARG3 (l / less)))",
      "(a / anything\n   :ARG1 (h / have-quant-91\n            :ARG4 (s2 / salary\n                      :mod (m / monetary-quantity\n                              :quant 5500000))))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\"))))",
      "(s / start-01\n   :quant (j / just\n             :op1 9))",
      "(s / start-01\n   :time (s2 / season\n             :mod (t / this)))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :mod (l / league))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :quant (j / just\n             :op1 9))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :time (s2 / season\n             :mod (t / this)))",
      "(s / start-01\n   :mod (l / league)\n   :quant (j / just\n             :op1 9))",
      "(s / start-01\n   :mod (l / league)\n   :time (s2 / season\n             :mod (t / this)))",
      "(s / start-01\n   :quant (j / just\n             :op1 9)\n   :time (s2 / season\n             :mod (t / this)))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :mod (l / league)\n   :quant (j / just\n             :op1 9))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :mod (l / league)\n   :time (s2 / season\n             :mod (t / this)))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :quant (j / just\n             :op1 9)\n   :time (s2 / season\n             :mod (t / this)))"
    ],
    "smus": [
      "Emmanuel Adebayor's contract is running out.",
      "Current contract runs out.",
      "The contract at Tottenham is running out.",
      "Run out in 2016.",
      "Emmanuel Adebayor's contract runs out in 2016.",
      "Current contract runs out in 2016.",
      "before accepting.",
      "Before accepting a move by the person.",
      "The Togolese forwards starts.",
      "This season starts.",
      "The Togolese forward starts in the league.",
      "The Togolese forward just starts with 9.",
      "The Togolese forward starts this season.",
      "The league starts this season.",
      "Just 9 starts this season.",
      "The Togolese forward starts just 9 league starts.",
      "The Togolese forward starts in the league this season.",
      "The Togolese forward starts just 9 starts this season.",
      "Just 9 league starts this season.",
      "The Togolese forward starts just 9 league starts this season."
    ]
  },
  {
    "instance_id": "realsumm-90",
    "summary": "<t> John Helm was commentating on the game the day the fire broke out . </t> <t> Helm gives Helm insight into what cause the blaze 30 years ago . ' </t> <t> From everything I have been told there is n\u2019t a jot of evidence to suggest the blaze was caused deliberately , ' says Helm . </t>",
    "summary_trees": [
      "# ::snt  John Helm was commentating on the game the day the fire broke out . \n(c / commentate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Helm\"))\n      :ARG3 (g / game)\n      :time (b / break-out-30\n            :ARG1 (f / fire)))",
      "# ::snt  Helm gives Helm insight into what cause the blaze 30 years ago . ' \n(g / give-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Helm\"))\n      :ARG1 (ii / insight\n            :topic (t / thing\n                  :ARG0-of (c / cause-01\n                        :ARG1 (b / blaze-01\n                              :time (b2 / before\n                                    :op1 (n2 / now)\n                                    :quant (t2 / temporal-quantity\n                                          :quant 30\n                                          :unit (y / year)))))))\n      :ARG2 p)",
      "# ::snt  From everything I have been told there is n\u2019t a jot of evidence to suggest the blaze was caused deliberately , ' says Helm . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Helm\"))\n      :ARG1 (e / evidence-01\n            :polarity -\n            :quant (j / jot)\n            :ARG0-of (s2 / suggest-01\n                  :ARG1 (c / cause-01\n                        :ARG1 (b / blaze-01)\n                        :manner (d / deliberate)))\n            :source (e2 / everything\n                  :ARG1-of (t / tell-01\n                        :ARG2 (ii / i)))))"
    ],
    "tree": [
      "(c / commentate-01\n   :time (b / break-out-30\n            :ARG1 (f / fire)))",
      "(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG3 (g / game))",
      "(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :time (b / break-out-30\n            :ARG1 (f / fire)))",
      "(c / commentate-01\n   :ARG3 (g / game)\n   :time (b / break-out-30\n            :ARG1 (f / fire)))",
      "(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG3 (g / game)\n   :time (b / break-out-30\n            :ARG1 (f / fire)))",
      "(g / give-01\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :quant 30)))))))",
      "(g / give-01\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :unit (y / year))))))))",
      "(g / give-01\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Helm\")))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :quant 30)))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :unit (y / year))))))))",
      "(g / give-01\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :op1 (n2 / now))))))\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Helm\")))",
      "(g / give-01\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :unit (y / year)))))))\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Helm\")))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :op1 (n2 / now))))))\n   :ARG2 p)",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :quant 30))))))\n   :ARG2 p)",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :quant (t2 / temporal-quantity\n                                                              :unit (y / year)))))))\n   :ARG2 p)",
      "(p / person\n   :name (n / name\n            :op1 \"Helm\"))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\")))",
      "(s / say-01\n   :ARG1 (e / evidence-01\n            :quant (j / jot)))",
      "(s / say-01\n   :ARG1 (e / evidence-01\n            :ARG0 (s2 / suggest-01\n                      :ARG1 (c / cause-01\n                               :manner (d / deliberate)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (e / evidence-01\n            :quant (j / jot)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (e / evidence-01\n            :source (e2 / everything\n                        :ARG1 (t / tell-01\n                                 :ARG2 (ii / i)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Helm\"))"
    ],
    "smus": [
      "Commentating as the fire broke out.",
      "John Helm commentating on the game.",
      "John Helm was commentating when the fire broke out.",
      "Commentating on the game as the fire broke out.",
      "John Hell was commentating on the game when the fire broke out.",
      "gives insight into the cause of the blaze of the past 30 years.",
      "gives insight into the cause of the blaze years earlier.",
      "gives to holm",
      "Helm gives insight into the cause of the blaze of the past 30 years.",
      "Helm gives insight into the cause of the blaze of years earlier.",
      "Helm gives insight into the cause of the blaze years earlier.",
      "Helm gives him insight into the cause of the blaze of the past 30 years.",
      "Helm gives him insight into the cause of the blaze of the past.",
      "An insight into the cause of the blaze that occurred 30 years earlier.",
      "The blaze occurred 30 years earlier.",
      "The blaze occurred years earlier.",
      "\"Helm says.",
      "evi from everythiy I've been told...",
      "evi jot, says Helm.",
      "\"Evi from everythiy I've been told, he says,\" says Helm.",
      "Evi to suggest that the blaze was caused.",
      "evi from everythiy I've been told."
    ]
  },
  {
    "instance_id": "realsumm-91",
    "summary": "<t> Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan . </t> <t> McIlroy and Dornan took part in the first Circular Soccer Showdown of 2015 . </t> <t> McIlroy finished strongly to finish an impressive fourth at the Masters . </t> <t> READ : It wo n't be too long before McIlroy wins a Masters . </t>",
    "summary_trees": [
      "# ::snt  Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan . \n(f / face-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Jamie\"\n                  :op2 \"Dornan\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / book\n                        :name (n3 / name\n                              :op1 \"Fifty\"\n                              :op2 \" Shades\"\n                              :op3 \"of\"\n                              :op4 \"Grey\")))))",
      "# ::snt  McIlroy and Dornan took part in the first Circular Soccer Showdown of 2015 . \n(p / participate-01\n      :ARG0 (a / and\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 \"McIlroy\"))\n            :op2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Dornan\")))\n      :ARG1 (g / game\n            :name (n3 / name\n                  :op1 \"Circular\"\n                  :op2 \"Soccer\"\n                  :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                  :value 1)\n            :time (d / date-entity\n                  :year 2015)))",
      "# ::snt  McIlroy finished strongly to finish an impressive fourth at the Masters . \n(f / finish-07\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McIlroy\"))\n      :ARG1-of (s / strong-02)\n      :purpose (f2 / finish-07\n            :ARG0 p\n            :ARG2 (f3 / fourth\n                  :ARG0-of (ii / impress-01))\n            :location (g / game\n                  :name (n2 / name\n                        :op1 \"Masters\"))))",
      "# ::snt  READ : It wo n't be too long before McIlroy wins a Masters . \n(r / read-01\n      :mode imperative\n      :ARG0 (y / you)\n      :ARG1 (b / before\n            :op1 (w / win-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"McIlroy\"))\n                  :ARG1 (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\")))\n            :ARG1-of (l / long-03\n                  :polarity -\n                  :ARG2-of (h / have-degree-91\n                        :ARG1 b\n                        :ARG3 (t / too)))))"
    ],
    "tree": [
      "(f / face-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")))",
      "(f / face-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (b / book\n                               :name (n3 / name\n                                         :op1 \"Fifty\"\n                                         :op2 \" Shades\"\n                                         :op3 \"of\"\n                                         :op4 \"Grey\")))))",
      "(f / finish-07\n   :purpose (f2 / finish-07\n                :ARG2 (f3 / fourth\n                          :ARG0 (ii / impress-01))))",
      "(f / finish-07\n   :purpose (f2 / finish-07\n                :location (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\"))))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :purpose (f2 / finish-07\n                :ARG2 (f3 / fourth\n                          :ARG0 (ii / impress-01))))",
      "(f / finish-07\n   :ARG1 (s / strong-02)\n   :purpose (f2 / finish-07\n                :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))))",
      "(f / finish-07\n   :ARG1 (s / strong-02)\n   :purpose (f2 / finish-07\n                :ARG2 (f3 / fourth\n                          :ARG0 (ii / impress-01))))",
      "(f / finish-07\n   :ARG1 (s / strong-02)\n   :purpose (f2 / finish-07\n                :location (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"McIlroy\"))",
      "(r / read-01\n   :ARG1 (b / before\n            :op1 (w / win-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"McIlroy\")))))",
      "(r / read-01\n   :ARG1 (b / before\n            :op1 (w / win-01\n                    :ARG1 (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))))",
      "(r / read-01\n   :ARG1 (b / before\n            :ARG1 (l / long-03\n                     :ARG2 (h / have-degree-91\n                              :ARG1 b))))",
      "(r / read-01\n   :ARG1 (b / before\n            :ARG1 (l / long-03\n                     :ARG2 (h / have-degree-91\n                              :ARG3 (t / too)))))",
      "(b / before\n   :op1 (w / win-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"McIlroy\"))))",
      "(b / before\n   :ARG1 (l / long-03\n            :polarity -))",
      "(b / before\n   :op1 (w / win-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"McIlroy\")))\n   :ARG1 (l / long-03\n            :polarity -))",
      "(b / before\n   :op1 (w / win-01\n           :ARG1 (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\")))\n   :ARG1 (l / long-03\n            :polarity -))"
    ],
    "smus": [
      "Jamie Dornan faced.",
      "-Rory McIlroy faced fifty shades of grey.",
      "Finish to finish fourth in impressive.",
      "Finish to finish in the Masters.",
      "McIlroy will finish in fourth place for an impressive finish.",
      "To finish strong, McIlroy.",
      "Finish strong to finish in the top four.",
      "Finish strong to finish in the Masters.",
      "Finish the Masters.",
      "Read before McIlroy wins.",
      "Read before the Masters wins.",
      "Read before it's long.",
      "Read before too long.",
      "Before McIlroy wins.",
      "It won't be long before McIlroy wins.",
      "It won't be long before the Masters wins.",
      "McIlroy wins."
    ]
  },
  {
    "instance_id": "realsumm-92",
    "summary": "<t> Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for Fallon weight jokes about the governor . </t> <t> Later in the program Fallon hoarded a pint of ice cream Fallon brought out for the two to share . </t> <t> When asked if Christie would run for president , Christie said ; ' I \u2019ve got a day job which keeps me busy ' . </t>",
    "summary_trees": [
      "# ::snt  Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for Fallon weight jokes about the governor . \n(a / and\n      :op1 (a2 / appear-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Chris\"\n                        :op2 \"Christie\"))\n            :location (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"The\"\n                        :op2 \"Tonight\"\n                        :op3 \"Show\")))\n      :op2 (c / call-out-15\n            :ARG0 p\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jimmy\"\n                        :op2 \"Fallon\"))\n            :ARG2 (j / joke-01\n                  :ARG0 p2\n                  :ARG2 (p3 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG2 (g / governor)))\n                  :topic (w / weight))))",
      "# ::snt  Later in the program Fallon hoarded a pint of ice cream Fallon brought out for the two to share . \n(h / hoard-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Fallon\"))\n      :ARG1 (ii / ice-cream\n            :quant (p2 / pint)\n            :ARG1-of (b / bring-01\n                  :ARG0 p\n                  :ARG2 (o / out)\n                  :purpose (s / share-01\n                        :ARG0 (p3 / person\n                              :quant 2)\n                        :ARG1 ii)))\n      :time (l / late\n            :part-of (p4 / program)\n            :degree (s2 / somewhat)))",
      "# ::snt  When asked if Christie would run for president , Christie said ; ' I \u2019ve got a day job which keeps me busy ' . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Christie\"))\n      :ARG1 (h / have-03\n            :ARG0 p\n            :ARG1 (j / job\n                  :mod (d / day)\n                  :ARG0-of (k / keep-02\n                        :ARG1 (b / busy-01\n                              :ARG1 p))))\n      :time (a / ask-01\n            :ARG1 (t / truth-value\n                  :polarity-of (r / run-02\n                        :ARG0 p\n                        :ARG1 (p2 / person\n                              :ARG0-of (h2 / have-org-role-91\n                                    :ARG2 (p3 / president)))))\n            :ARG2 p))"
    ],
    "tree": [
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\"))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\"))))",
      "(a / and\n   :op2 (c / call-out-15\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Chris\"\n                             :op2 \"Christie\"))))",
      "(a / and\n   :op2 (c / call-out-15\n           :ARG1 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Jimmy\"\n                               :op2 \"Fallon\"))))",
      "(a / and\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\")))))",
      "(a / and\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :ARG2 (p3 / person\n                              :ARG0 (h / have-org-role-91\n                                       :ARG2 (g / governor))))))",
      "(a / and\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :topic (w / weight))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\")))\n   :op2 (c / call-out-15\n           :ARG0 p))",
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\")))\n   :op2 (c / call-out-15\n           :ARG1 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Jimmy\"\n                               :op2 \"Fallon\"))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\")))\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\")))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\")))\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :ARG2 (p3 / person\n                              :ARG0 (h / have-org-role-91\n                                       :ARG2 (g / governor))))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\")))\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :topic (w / weight))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\")))\n   :op2 (c / call-out-15\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Chris\"\n                             :op2 \"Christie\"))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\")))\n   :op2 (c / call-out-15\n           :ARG1 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Jimmy\"\n                               :op2 \"Fallon\"))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\")))\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\")))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\")))\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :ARG2 (p3 / person\n                              :ARG0 (h / have-org-role-91\n                                       :ARG2 (g / governor))))))",
      "(a / and\n   :op1 (a2 / appear-01\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\")))\n   :op2 (c / call-out-15\n           :ARG2 (j / joke-01\n                    :topic (w / weight))))",
      "(a2 / appear-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Chris\"\n                      :op2 \"Christie\")))",
      "(a2 / appear-01\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))",
      "(a2 / appear-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Chris\"\n                      :op2 \"Christie\"))\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Chris\"\n            :op2 \"Christie\"))",
      "(b / broadcast-program\n   :name (n2 / name\n             :op1 \"The\"\n             :op2 \"Tonight\"\n             :op3 \"Show\"))",
      "(c / call-out-15\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\")))",
      "(c / call-out-15\n   :ARG2 (j / joke-01\n            :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))))",
      "(c / call-out-15\n   :ARG2 (j / joke-01\n            :ARG2 (p3 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (g / governor)))))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\")))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG0 (p / person :name (n / name :op1 \"Fallon\")))))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG2 (o / out))))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG0 (p3 / person\n                                            :quant 2)))))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG1 ii))))",
      "(h / hoard-01\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG0 p)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG2 (o / out))))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG0 (p3 / person\n                                            :quant 2)))))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG1 ii))))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG0 (p / person :name (n / name :op1 \"Fallon\"))))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG0 (p / person :name (n / name :op1 \"Fallon\"))))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG2 (o / out)))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG2 (o / out)))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG0 (p3 / person\n                                            :quant 2))))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG0 (p3 / person\n                                            :quant 2))))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG1 ii)))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG1 ii)))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG0 p))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG0 p))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG2 (o / out)))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :ARG2 (o / out)))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG0 (p3 / person\n                                            :quant 2))))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG0 (p3 / person\n                                            :quant 2))))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG1 ii)))\n   :time (l / late\n            :part (p4 / program)))",
      "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fallon\"))\n   :ARG1 (ii / ice-cream\n             :ARG1 (b / bring-01\n                      :purpose (s / share-01\n                                  :ARG1 ii)))\n   :time (l / late\n            :degree (s2 / somewhat)))",
      "(p / person\n   :name (n / name\n            :op1 \"Fallon\"))",
      "(ii / ice-cream\n    :ARG1 (b / bring-01\n             :ARG0 (p / person :name (n / name :op1 \"Fallon\"))))",
      "(ii / ice-cream\n    :ARG1 (b / bring-01\n             :ARG2 (o / out)))",
      "(ii / ice-cream\n    :ARG1 (b / bring-01\n             :purpose (s / share-01\n                         :ARG0 (p3 / person\n                                   :quant 2))))",
      "(ii / ice-cream\n    :ARG1 (b / bring-01\n             :purpose (s / share-01\n                         :ARG1 ii)))",
      "(ii / ice-cream\n    :quant (p2 / pint)\n    :ARG1 (b / bring-01\n             :ARG0 (p / person :name (n / name :op1 \"Fallon\"))))",
      "(ii / ice-cream\n    :quant (p2 / pint)\n    :ARG1 (b / bring-01\n             :ARG2 (o / out)))",
      "(ii / ice-cream\n    :quant (p2 / pint)\n    :ARG1 (b / bring-01\n             :purpose (s / share-01\n                         :ARG0 (p3 / person\n                                   :quant 2))))",
      "(ii / ice-cream\n    :quant (p2 / pint)\n    :ARG1 (b / bring-01\n             :purpose (s / share-01\n                         :ARG1 ii)))",
      "(b / bring-01\n   :purpose (s / share-01\n               :ARG0 (p3 / person\n                         :quant 2)))",
      "(b / bring-01\n   :purpose (s / share-01\n               :ARG1 (ii / ice-cream)))",
      "(b / bring-01\n   :ARG2 (o / out)\n   :purpose (s / share-01\n               :ARG0 (p3 / person\n                         :quant 2)))",
      "(b / bring-01\n   :ARG2 (o / out)\n   :purpose (s / share-01\n               :ARG1 (ii / ice-cream)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\")))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG0 (p / person :name (n / name :op1 \"Christie\"))))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day))))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 (p / person :name (n / name :op1 \"Christie\")))))))",
      "(s / say-01\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG0 (p / person :name (n / name :op1 \"Christie\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :time (a / ask-01\n            :ARG2 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG1 (p2 / person\n                                            :ARG0 (h2 / have-org-role-91\n                                                      :ARG2 (p3 / president)))))))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG0 (p / person :name (n / name :op1 \"Christie\")))\n   :time (a / ask-01\n            :ARG2 p))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day)))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG0 (p / person :name (n / name :op1 \"Christie\"))))))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day)))\n   :time (a / ask-01\n            :ARG2 (p / person :name (n / name :op1 \"Christie\"))))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day)))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG1 (p2 / person\n                                            :ARG0 (h2 / have-org-role-91\n                                                      :ARG2 (p3 / president)))))))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 (p / person :name (n / name :op1 \"Christie\"))))))\n   :time (a / ask-01\n            :ARG2 p))",
      "(s / say-01\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 (p / person :name (n / name :op1 \"Christie\"))))))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG1 (p2 / person\n                                            :ARG0 (h2 / have-org-role-91\n                                                      :ARG2 (p3 / president)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG0 p)\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG0 p))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG0 p)\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG1 (p2 / person\n                                            :ARG0 (h2 / have-org-role-91\n                                                      :ARG2 (p3 / president)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day)))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG0 p))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day)))\n   :time (a / ask-01\n            :ARG2 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :mod (d / day)))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG1 (p2 / person\n                                            :ARG0 (h2 / have-org-role-91\n                                                      :ARG2 (p3 / president)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 p))))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG0 p))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 p))))\n   :time (a / ask-01\n            :ARG2 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG1 (j / job\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 p))))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity (r / run-02\n                                  :ARG1 (p2 / person\n                                            :ARG0 (h2 / have-org-role-91\n                                                      :ARG2 (p3 / president)))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Christie\"))",
      "(h / have-03\n   :ARG1 (j / job\n            :mod (d / day)))",
      "(h / have-03\n   :ARG1 (j / job\n            :ARG0 (k / keep-02\n                     :ARG1 (b / busy-01\n                              :ARG1 (p / person :name (n / name :op1 \"Christie\"))))))",
      "(j / job\n   :ARG0 (k / keep-02\n            :ARG1 (b / busy-01\n                     :ARG1 (p / person :name (n / name :op1 \"Christie\")))))"
    ],
    "smus": [
      "And Chris Christie appeared.",
      "And appeared on \"The Tonight Show\".",
      "And Chris Christie called out.",
      "And called out Jimmy Fallon.",
      "And called out Jimmy Fallon's jokes.",
      "And called out the jokes about the governor.",
      "and called out the weight-jokes.",
      "Chris Christie appeared and called out.",
      "Chris Christie appeared and called out Jimmy Fallon.",
      "Chris Christie appeared and called out Jimmy Fallon's jokes.",
      "Chris Christie appeared and called out the governor's jokes.",
      "Chris Christie appeared and called out the weight-jokes.",
      "appeared on \"The Tonight Show\" and Chris Christie called out.",
      "appeared on \"The Tonight Show\" and called out Jimmy Fallon.",
      "appeared on the Tonight Show and called out Jimmy Fallon's jokes.",
      "appeared on the Tonight Show and called out jokes about the governor.",
      "appeared on the Tonight Show and called out weight-jokes.",
      "Chris Christie appeared.",
      "appeared on \"The Tonight Show\".",
      "Chris Christie appeared on The Tonight Show.",
      "Jimmy Fallon was called out.",
      "Jimmy Fallon's jokes were called out.",
      "The governor was called out for jokes.",
      "*calls out the weight jokes.",
      "Jimmy Fallon called out for his jokes.",
      "Fallon hoarded.",
      "hoarded a pint of ice-cream.",
      "The ice-cream Fallon brought hoarded.",
      "Ice cream brought out was hoarded.",
      "Ice cream brought to share by two hoarded.",
      "Ice cream brought to share was hoarded.",
      "Hoarded late in the program.",
      "Hoarded somewhat late.",
      "Fallon hoarded a pint of ice-cream.",
      "Fallon hoarded the ice-cream he brought.",
      "Fallon hoarded the ice-cream brought out.",
      "Fallon hoarded ice-cream that the two brought to share.",
      "Fallon hoarded ice-cream he brought to share.",
      "Fallon hoarded late in the program.",
      "Fallon hoarded somewhat late.",
      "Late in the program, hoarded a pint of ice-cream.",
      "A pint of ice-cream was hoarded somewhat late.",
      "Late in the program, Fallon's ice-cream hoarded.",
      "The ice-cream Fallon brought was hoarded somewhat late.",
      "Late in the program, ice-cream hoarded that was brought out.",
      "Quite late, ice-cream hoarded that was brought out.",
      "Late in the program, ice-cream brought to share by two hoarded.",
      "Quite late, ice-cream brought to share was hoarded.",
      "Late in the program, ice-cream hoarded that was brought to share.",
      "Quite late, ice-cream brought to share hoarded.",
      "Fallon hoarded a pint of ice-cream late in the program.",
      "Fallon hoarded a pint of ice-cream somewhat late.",
      "Fallon hoarded the ice-cream he brought late in the program.",
      "Fallon hoarded the ice-cream he brought somewhat late.",
      "Fallon hoarded the ice-cream brought out late in the program.",
      "Fallon hoarded the ice-cream brought out somewhat late.",
      "Fallon hoarded ice-cream that the two brought to share late in the program.",
      "Fallon hoarded ice-cream that was brought to share by two somewhat late.",
      "Fallon hoarded ice-cream to share late in the program.",
      "Fallon hoarded ice-cream to share somewhat late.",
      "ice-cream that Fallon brought.",
      "ice-cream brought out.",
      "ice-cream brought to share by two",
      "ice-cream brought to share.",
      "Fallon brought a pint of ice-cream.",
      "Bringed out was a pint of ice-cream.",
      "Bring two people a pint of ice-cream to share.",
      "Bring a pint of ice-cream to share.",
      "Bring to share with the two.",
      "Brings ice-cream to share.",
      "Bringed out to share with the two.",
      "Brings out to share ice-cream.",
      "Share with two people.",
      "Christie said --",
      "Christie had...",
      "\"It's a day job,\" said the man.",
      "\"It's a job that keeps Christie busy,\" she said.",
      "When asked if Christie would run, said, \"No.",
      "Christie said \"I have a day job.\"",
      "Christie said he has a job that keeps him busy.",
      "Christie said when asked.",
      "Christie said when asked whether the president would run.",
      "When asked, Christie said, \"I have.\"",
      "When asked if Christie would run, she said \"I have a day job\".",
      "When asked by Christie, \"I have a day job.\"",
      "When asked if the president didn't run, he said \"it's a day job.\"",
      "When asked, Christie said she has a job that keeps her busy.",
      "When asked whether the president would run, he said, \"Christie has a job that keeps her busy.\"",
      "Christie said when asked, \"I have.",
      "Christie said \"I have a day job\" when asked if she didn't run.",
      "Christie said \"I have a day job\" when asked.",
      "Christie said \"I have a day job\" when asked if the president didn't run.",
      "When asked if she didn't run, Christie said, \"I have a job that keeps me busy.\"",
      "Christie said when asked, \"I have a job that keeps me busy.\"",
      "When asked whether the president would run, Christie said he has a job that keeps him busy.",
      "has a day job.",
      "has a job that keeps Christie busy.",
      "It's a job that keeps Christie busy.",
      "It's a day job that keeps Christie busy.",
      "Christie keeps busy."
    ]
  },
  {
    "instance_id": "realsumm-93",
    "summary": "<t> Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow . </t> <t> The airline could loose airlines eight landing strips at the popular airport . </t> <t> airlines are also facing a fine in excess of $ 38,000 for every flight that 's late . </t> <t> Qantas blamed air congestion at Heathrow and Dubai airports . </t>",
    "summary_trees": [
      "# ::snt  Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow . \n(s / slip-01\n      :ARG1 (r / rate-01\n            :ARG1 (c / company\n                  :name (n / name\n                        :op1 \"Qantas\"))\n            :ARG3 (o / on-time))\n      :ARG4 (r2 / rank-01\n            :ARG2 75\n            :ARG1 c\n            :ARG5 (a / airline\n                  :quant 80\n                  :ARG0-of (u / use-01\n                        :ARG1 (a2 / airport\n                              :name (n2 / name\n                                    :op1 \"Heathrow\"))))))",
      "# ::snt  The airline could loose airlines eight landing strips at the popular airport . \n(p / possible-01\n      :ARG1 (l / lose-02\n            :ARG0 (a / airline)\n            :ARG1 (s / strip\n                  :quant 8\n                  :purpose (l2 / land-01)\n                  :location (a2 / airport\n                        :ARG1-of (p2 / popular-02)))\n            :ARG2 (a3 / airline)))",
      "# ::snt  airlines are also facing a fine in excess of $ 38,000 for every flight that 's late . \n(f / face-01\n      :ARG0 (a / airline)\n      :ARG1 (f2 / fine-01\n            :ARG1 (ii / in-excess-of\n                  :op1 (m / monetary-quantity\n                        :quant 38000\n                        :unit (d / dollar)))\n            :ARG3 (f3 / fly-01\n                  :mod (e / every)\n                  :ARG1-of (l / late-02)))\n      :mod (a2 / also))",
      "# ::snt  Qantas blamed air congestion at Heathrow and Dubai airports . \n(b / blame-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Qantas\"))\n      :ARG1 (c2 / congest-01\n            :ARG1 (a / air)\n            :location (a2 / and\n                  :op1 (a3 / airport\n                        :name (n2 / name\n                              :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                        :name (n3 / name\n                              :op1 \"Dubai\")))))"
    ],
    "tree": [
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))))",
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG3 (o / on-time)))",
      "(s / slip-01\n   :ARG4 (r2 / rank-01\n             :ARG2 75))",
      "(s / slip-01\n   :ARG4 (r2 / rank-01\n             :ARG1 (c / company\n                      :name (n / name\n                               :op1 \"Qantas\"))))",
      "(s / slip-01\n   :ARG4 (r2 / rank-01\n             :ARG5 (a / airline\n                      :quant 80)))",
      "(s / slip-01\n   :ARG4 (r2 / rank-01\n             :ARG5 (a / airline\n                      :ARG0 (u / use-01\n                               :ARG1 (a2 / airport\n                                         :name (n2 / name\n                                                   :op1 \"Heathrow\"))))))",
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\")))\n   :ARG4 (r2 / rank-01\n             :ARG5 (a / airline\n                      :quant 80)))",
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\")))\n   :ARG4 (r2 / rank-01\n             :ARG5 (a / airline\n                      :ARG0 (u / use-01\n                               :ARG1 (a2 / airport\n                                         :name (n2 / name\n                                                   :op1 \"Heathrow\"))))))",
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG3 (o / on-time))\n   :ARG4 (r2 / rank-01\n             :ARG2 75))",
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG3 (o / on-time))\n   :ARG4 (r2 / rank-01\n             :ARG5 (a / airline\n                      :quant 80)))",
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG3 (o / on-time))\n   :ARG4 (r2 / rank-01\n             :ARG5 (a / airline\n                      :ARG0 (u / use-01\n                               :ARG1 (a2 / airport\n                                         :name (n2 / name\n                                                   :op1 \"Heathrow\"))))))",
      "(r / rate-01\n   :ARG1 (c / company\n            :name (n / name\n                     :op1 \"Qantas\")))",
      "(c / company\n   :name (n / name\n            :op1 \"Qantas\"))",
      "(r2 / rank-01\n    :ARG5 (a / airline\n             :quant 80))",
      "(p / possible-01\n   :ARG1 (l / lose-02\n            :ARG0 (a / airline)))",
      "(p / possible-01\n   :ARG1 (l / lose-02\n            :ARG1 (s / strip\n                     :quant 8)))",
      "(p / possible-01\n   :ARG1 (l / lose-02\n            :ARG2 (a3 / airline)))",
      "(p / possible-01\n   :ARG1 (l / lose-02\n            :ARG1 (s / strip\n                     :purpose (l2 / land-01))))",
      "(p / possible-01\n   :ARG1 (l / lose-02\n            :ARG1 (s / strip\n                     :location (a2 / airport\n                                   :ARG1 (p2 / popular-02)))))",
      "(l / lose-02\n   :ARG1 (s / strip\n            :quant 8))",
      "(l / lose-02\n   :ARG1 (s / strip\n            :purpose (l2 / land-01)))",
      "(l / lose-02\n   :ARG1 (s / strip\n            :location (a2 / airport\n                          :ARG1 (p2 / popular-02))))",
      "(l / lose-02\n   :ARG0 (a / airline)\n   :ARG1 (s / strip\n            :quant 8))",
      "(l / lose-02\n   :ARG0 (a / airline)\n   :ARG1 (s / strip\n            :purpose (l2 / land-01)))",
      "(l / lose-02\n   :ARG0 (a / airline)\n   :ARG1 (s / strip\n            :location (a2 / airport\n                          :ARG1 (p2 / popular-02))))",
      "(l / lose-02\n   :ARG0 (a / airline)\n   :ARG2 (a3 / airline))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000))))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :mod (e / every))))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :ARG1 (l / late-02))))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :unit (d / dollar)))))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000))))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :mod (e / every))))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :ARG1 (l / late-02))))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :unit (d / dollar)))))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000)))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :ARG1 (l / late-02)))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :unit (d / dollar))))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000)))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG3 (f3 / fly-01\n                       :ARG1 (l / late-02)))\n   :mod (a2 / also))",
      "(f / face-01\n   :ARG0 (a / airline)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :unit (d / dollar))))\n   :mod (a2 / also))",
      "(f2 / fine-01\n    :ARG1 (ii / in-excess-of\n              :op1 (m / monetary-quantity\n                      :quant 38000)))",
      "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\")))",
      "(b / blame-01\n   :ARG1 (c2 / congest-01\n             :ARG1 (a / air)))",
      "(b / blame-01\n   :ARG1 (c2 / congest-01\n             :location (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))))",
      "(b / blame-01\n   :ARG1 (c2 / congest-01\n             :location (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))",
      "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :ARG1 (a / air)))",
      "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :location (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))))",
      "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :location (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))",
      "(c / company\n   :name (n / name\n            :op1 \"Qantas\"))"
    ],
    "smus": [
      "Qantas ratings slipped.",
      "Slipped the on-time rating.",
      "Slipped to 75th place.",
      "Slipped to the ranks of 80 airlines.",
      "Slipped into ranks of airlines using Heathrow.",
      "Qantas' ratings slipped to 75th.",
      "Qantas' ratings slipped to the ranks of the airlines using Heathrow.",
      "The on-time rating slipped to #75.",
      "The on-time rating slipped to Qantas's rank.",
      "The on-time rating slipped to the ranks of airlines using Heathrow.",
      "Qantas is rated on time.",
      "ranks 80 airlines.",
      "airlines using Heathrow",
      "Using Heathrow.",
      "The airline could lose.",
      "8 strips could be lost.",
      "Landing strips could be lost.",
      "Strips at the popular airport could be lost.",
      "8 strips lost.",
      "Strips at the popular airport have been lost.",
      "The airline lost 8 strips.",
      "The airline lost the landing strips.",
      "8 strips lost to the airline",
      "Strips at popular airport lost to airline",
      "Airlines Lose Landing Strips to Airlines",
      "There are landing strips at the popular airport.",
      "Facing a fine in excess of 38K.",
      "Faced with a fine for every flight.",
      "Faced with a fine for late flight.",
      "Faced with a fine in excess of $.",
      "Airlines are facing a fine in excess of 38K.",
      "Airlines are facing a fine for every flight.",
      "Airlines are facing a fine for late flights.",
      "Airlines are facing a fine in excess of $.",
      "The airlines are also facing.",
      "Also facing a fine in excess of 38K.",
      "Also facing a fine for every flight.",
      "Also facing a fine for late flight.",
      "Also facing a fine in excess of $.",
      "Airlines are also facing a fine in excess of 38K.",
      "Airlines are also facing a fine for every flight.",
      "Airlines are also facing a fine for late flights.",
      "Airlines are also facing a $ in excess fine.",
      "Every flight in excess of 38,000 will be fined.",
      "Qantas blamed.",
      "blamed air congestion...",
      "Blamed congest at Heathrow airport.",
      "Blamed for congested Dubai airport.",
      "Qantas blamed air congestion.",
      "Qantas blamed congestion at Heathrow airport.",
      "Qantas blamed congest in Dubai.",
      "There was air congest at Heathrow."
    ]
  },
  {
    "instance_id": "realsumm-94",
    "summary": "<t> Christopher Starrs was spared jail in an ' act of mercy ' by judge in January . </t> <t> But senior judge has now said judge colleague took ' judge eye off the ball ' . </t> <t> Nicholas Cooke QC said wheelchair - bound Starrs should have been jailed . </t> <t> But added Starrs should thank QC lucky stars as sentence allowed to stand . </t>",
    "summary_trees": [
      "# ::snt  Christopher Starrs was spared jail in an ' act of mercy ' by judge in January . \n(s / spare-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01)))\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Christopher\"\n                  :op2 \"Starrs\"))\n      :ARG2 (j2 / jail)\n      :manner (a / act-02\n            :ARG0 p\n            :ARG1 (m / mercy))\n      :time (d / date-entity\n            :month 1))",
      "# ::snt  But senior judge has now said judge colleague took ' judge eye off the ball ' . \n(c / contrast-01\n      :ARG2 (s / say-01\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01))\n                  :mod (s2 / senior))\n            :ARG1 (t / take-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (h2 / have-org-role-91\n                              :ARG3 (c2 / colleague\n                                    :poss p)))\n                  :ARG1 (e / eye\n                        :part-of (p3 / person\n                              :ARG0-of (h3 / have-org-role-91\n                                    :ARG3 (j2 / judge-01))))\n                  :ARG2 (b / ball))\n            :time (n / now)))",
      "# ::snt  Nicholas Cooke QC said wheelchair - bound Starrs should have been jailed . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nicholas\"\n                  :op2 \"Cooke\"\n                  :op3 \"Q QC\"))\n      :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Starrs\")\n                        :ARG1-of (b / bind-01\n                              :ARG2 (w / wheelchair))))))",
      "# ::snt  But added Starrs should thank QC lucky stars as sentence allowed to stand . \n(c / contrast-01\n      :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                  :ARG1 (t / thank-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Starrs\"))\n                        :ARG1 (p2 / person\n                              :ARG0-of (h / have-org-role-91\n                                    :ARG1 (g / government-organization\n                                          :name (n2 / name\n                                                :op1 \"Queensland\"\n                                                :op2 \"Court\"))\n                                    :ARG2 (a2 / attorney)))\n                        :ARG2 (s / star\n                              :mod (l / lucky)))\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (a3 / allow-01\n                              :ARG1 (s2 / stand-04\n                                    :ARG1 (s3 / sentence-01)))))))"
    ],
    "tree": [
      "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\")))",
      "(s / spare-01\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\")))",
      "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail))",
      "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG2 (j2 / jail)\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :manner (a / act-02\n              :ARG0 (p / person)\n              :ARG1 (m / mercy))\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :manner (a / act-02\n              :ARG0 p\n              :ARG1 (m / mercy)))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :manner (a / act-02\n              :ARG0 p\n              :ARG1 (m / mercy)))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :manner (a / act-02\n              :ARG0 p\n              :ARG1 (m / mercy))\n   :time (d / date-entity\n            :month 1))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :manner (a / act-02\n              :ARG0 p\n              :ARG1 (m / mercy))\n   :time (d / date-entity\n            :month 1))",
      "(c / contrast-01\n   :ARG2 (s / say-01\n            :ARG0 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG3 (j / judge-01)))))",
      "(c / contrast-01\n   :ARG2 (s / say-01\n            :ARG1 (t / take-01\n                     :ARG0 (p2 / person\n                               :ARG0 (h2 / have-org-role-91\n                                         :ARG3 (c2 / colleague\n                                                   :poss (p / person)))))))",
      "(c / contrast-01\n   :ARG2 (s / say-01\n            :time (n / now)))",
      "(c / contrast-01\n   :ARG2 (s / say-01\n            :ARG0 (p / person\n                     :mod (s2 / senior))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01))))",
      "(s / say-01\n   :ARG0 (p / person\n            :mod (s2 / senior)))",
      "(s / say-01\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-org-role-91\n                                :ARG3 (c2 / colleague\n                                          :poss (p / person))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-org-role-91\n                                :ARG3 (c2 / colleague\n                                          :poss p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (t / take-01\n            :ARG1 (e / eye\n                     :part (p3 / person\n                               :ARG0 (h3 / have-org-role-91\n                                         :ARG3 (j2 / judge-01))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (t / take-01\n            :ARG2 (b / ball)))",
      "(s / say-01\n   :ARG0 (p / person\n            :mod (s2 / senior))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-org-role-91\n                                :ARG3 (c2 / colleague\n                                          :poss p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :time (n / now))",
      "(s / say-01\n   :ARG0 (p / person\n            :mod (s2 / senior))\n   :time (n / now))",
      "(s / say-01\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-org-role-91\n                                :ARG3 (c2 / colleague\n                                          :poss (p / person)))))\n   :time (n / now))",
      "(s / say-01\n   :ARG1 (t / take-01\n            :ARG2 (b / ball))\n   :time (n / now))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-org-role-91\n                                :ARG3 (c2 / colleague\n                                          :poss p))))\n   :time (n / now))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (t / take-01\n            :ARG1 (e / eye\n                     :part (p3 / person\n                               :ARG0 (h3 / have-org-role-91\n                                         :ARG3 (j2 / judge-01)))))\n   :time (n / now))",
      "(s / say-01\n   :ARG0 (p / person\n            :mod (s2 / senior))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-org-role-91\n                                :ARG3 (c2 / colleague\n                                          :poss p))))\n   :time (n / now))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG3 (j / judge-01)))",
      "(t / take-01\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG3 (c2 / colleague\n                                 :poss (p / person)))))",
      "(t / take-01\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG3 (c2 / colleague\n                                 :poss (p / person))))\n   :ARG1 (e / eye\n            :part (p3 / person\n                      :ARG0 (h3 / have-org-role-91\n                                :ARG3 (j2 / judge-01)))))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Starrs\")))))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :ARG1 (b / bind-01\n                                        :ARG2 (w / wheelchair))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nicholas\"\n                     :op2 \"Cooke\"\n                     :op3 \"Q QC\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Starrs\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nicholas\"\n                     :op2 \"Cooke\"\n                     :op3 \"Q QC\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :ARG1 (b / bind-01\n                                        :ARG2 (w / wheelchair))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Nicholas\"\n            :op2 \"Cooke\"\n            :op3 \"Q QC\"))",
      "(r / recommend-01\n   :ARG1 (j / jail-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Starrs\"))))",
      "(j / jail-01\n   :ARG1 (p2 / person\n             :ARG1 (b / bind-01\n                      :ARG2 (w / wheelchair))))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Starrs\"))",
      "(c / contrast-01\n   :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                     :ARG1 (t / thank-01\n                              :ARG0 (p / person\n                                       :name (n / name\n                                                :op1 \"Starrs\"))))))",
      "(c / contrast-01\n   :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                     :ARG1 (t / thank-01\n                              :ARG2 (s / star\n                                       :mod (l / lucky))))))",
      "(a / add-01\n   :ARG1 (r / recommend-01\n            :ARG1 (t / thank-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Starrs\")))))",
      "(a / add-01\n   :ARG1 (r / recommend-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (a3 / allow-01\n                                :ARG1 (s2 / stand-04\n                                          :ARG1 (s3 / sentence-01))))))",
      "(a / add-01\n   :ARG1 (r / recommend-01\n            :ARG1 (t / thank-01\n                     :ARG2 (s / star\n                              :mod (l / lucky)))))",
      "(r / recommend-01\n   :ARG1 (t / thank-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Starrs\"))))",
      "(r / recommend-01\n   :ARG1 (t / thank-01\n            :ARG2 (s / star\n                     :mod (l / lucky))))",
      "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\")))",
      "(t / thank-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g / government-organization\n                               :name (n2 / name\n                                         :op1 \"Queensland\"\n                                         :op2 \"Court\"))))\n   :ARG2 (s / star\n            :mod (l / lucky)))",
      "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g / government-organization\n                               :name (n2 / name\n                                         :op1 \"Queensland\"\n                                         :op2 \"Court\"))))\n   :ARG2 (s / star\n            :mod (l / lucky)))",
      "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (a2 / attorney)))\n   :ARG2 (s / star\n            :mod (l / lucky)))"
    ],
    "smus": [
      "-Christopher Starrs is spared.",
      "Spared in January.",
      "The Judge has spared Christopher Starrs.",
      "Christopher Starrs was spared jail.",
      "Christopher Starrs was spared in January.",
      "In January, the jail was spared.",
      "In January, people were spared by the act of mercy.",
      "A Judge has spared Christopher Starrs from jail.",
      "The Judge has spared Christopher Starrs in the act of mercy.",
      "The Judge spared Christopher Starrs in January.",
      "Christopher Starrs was spared jail in January.",
      "The Judge has spared Christopher Starrs from jail in an act of mercy.",
      "A judge spared Christopher Starrs from jail in January.",
      "In January, the Judge spared Christopher Starrs in the act of mercy.",
      "In January, a Judge spared Christopher Starrs from jail in an act of mercy.",
      "But the Judge has said...",
      "But a colleague of the person has said he took.",
      "But now said.",
      "But senior people have said --",
      "Judges have said --",
      "Senior people said --",
      "It was said that his colleague took.",
      "Judges have said his colleague took.",
      "Judges have said that the eye of the Judge has been taken.",
      "The Judge has said that it took the ball.",
      "A senior person has said his colleague took.",
      "Now the Judge has said...",
      "Now senior people have said:",
      "Now, it's been said that the person's colleague took.",
      "Now it's been said that the ball was taken.",
      "Now, Judges have said that his colleague took.",
      "Now the Judge has said that he took the eye of the Judge.",
      "Now, senior people have said, \"My colleague took me.\"",
      "The person's colleague took.",
      "A colleague of the person took the eye of the Judge.",
      "The Judge took the eye off the ball.",
      "Starrs should have been jailed, he said.",
      "The person bound in a wheelchair should be jailed, the statement said.",
      "Nicholas Cooke Q QC said Starrs should have been jailed.",
      "Nicholas Cooke Q QC said people bound by a wheelchair should be jailed.",
      "Starrs should have been jailed.",
      "The person bound in a wheelchair should be jailed.",
      "Person bound by wheelchair",
      "Starrs is a wheelchair bound.",
      "But Starrs should thank, it was added.",
      "But it should be added that the lucky stars should be thanked.",
      "Starrs should thank, added.",
      "\"The sentence should be allowed to stand,\" added the group.",
      "Added: * Thank the lucky stars.",
      "Starrs should thank.",
      "Thank you, lucky stars.",
      "Thank you Starrs.",
      "Starrs would thank the Queens Court for the lucky stars.",
      "Because the sentence was allowed to stand.",
      "The sentence was allowed to stand."
    ]
  },
  {
    "instance_id": "realsumm-95",
    "summary": "<t> Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend . </t> <t> Cristiano Ronaldo scored five to take Ronaldo league tally to 36 for the season . </t> <t> Real travel to Rayo Vallecano in a Madrid derby on Wednesday night . </t> <t> Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday . </t>",
    "summary_trees": [
      "# ::snt  Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend . \n(t / thrash-01\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Real\"\n                  :op2 \"Madrid\"))\n      :ARG1 (t3 / team\n            :name (n2 / name\n                  :op1 \"Granada\"))\n      :time (w / weekend)\n      :quant (s / score-entity\n            :op1 9\n            :op2 1)\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"La\"\n                  :op2 \"Liga\")))",
      "# ::snt  Cristiano Ronaldo scored five to take Ronaldo league tally to 36 for the season . \n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Cristiano\"\n                  :op2 \"Ronaldo\"))\n      :ARG1 5\n      :ARG0-of (t / take-01\n            :ARG1 (t2 / tally-01\n                  :ARG0 p\n                  :ARG1 (l / league))\n            :ARG3 36\n            :ARG4 (s2 / season)))",
      "# ::snt  Real travel to Rayo Vallecano in a Madrid derby on Wednesday night . \n(t / travel-01\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Real\"))\n      :ARG4 (t3 / team\n            :name (n2 / name\n                  :op1 \"Rayo\"\n                  :op2 \"Vallecano\"))\n      :subevent-of (d / derby\n            :mod (c / city\n                  :name (n3 / name\n                        :op1 \"Madrid\")))\n      :time (d2 / date-entity\n            :weekday (w / wednesday)\n            :dayperiod (n4 / night)))",
      "# ::snt  Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday . \n(w / win-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Juventus\"))\n      :ARG2 (t2 / team\n            :name (n2 / name\n                  :op1 \"Fiorentina\"))\n      :ARG4 (s / score-entity\n            :op1 3\n            :op2 0)\n      :purpose (r / reach-01\n            :ARG0 t\n            :ARG1 (f / final\n                  :subevent-of (g / game\n                        :name (n3 / name\n                              :op1 \"Coppa\"\n                              :op2 \"Italia\")))\n            :time (d / date-entity\n                  :weekday (t3 / tuesday))))"
    ],
    "tree": [
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\")))",
      "(t / thrash-01\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\")))",
      "(t / thrash-01\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\")))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :quant (s / score-entity\n             :op2 1))",
      "(t / thrash-01\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t / thrash-01\n   :time (w / weekend)\n   :quant (s / score-entity\n             :op1 9))",
      "(t / thrash-01\n   :quant (s / score-entity\n             :op2 1)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :quant (s / score-entity\n             :op2 1)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t / thrash-01\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\"))\n   :quant (s / score-entity\n             :op1 9)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t / thrash-01\n   :time (w / weekend)\n   :quant (s / score-entity\n             :op1 9)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :time (w / weekend)\n   :quant (s / score-entity\n             :op1 9)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cristiano\"\n                     :op2 \"Ronaldo\")))",
      "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))))",
      "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\")))\n   :ARG4 (s2 / season))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\")))",
      "(t / travel-01\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\")))",
      "(t / travel-01\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\"))))",
      "(t / travel-01\n   :time (d2 / date-entity\n             :weekday (w / wednesday)))",
      "(t / travel-01\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\")))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(t / travel-01\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)))",
      "(t / travel-01\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(t / travel-01\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)))",
      "(t / travel-01\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\"))))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(t / travel-01\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)))",
      "(t / travel-01\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :dayperiod (n4 / night)))",
      "(w / win-01\n   :purpose (r / reach-01\n               :ARG1 (f / final\n                        :subevent (g / game\n                                     :name (n3 / name\n                                               :op1 \"Coppa\"\n                                               :op2 \"Italia\")))))",
      "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG4 (s / score-entity\n            :op2 0))",
      "(w / win-01\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\"))\n   :purpose (r / reach-01\n               :ARG1 (f / final\n                        :subevent (g / game\n                                     :name (n3 / name\n                                               :op1 \"Coppa\"\n                                               :op2 \"Italia\")))))",
      "(w / win-01\n   :ARG4 (s / score-entity\n            :op1 3)\n   :purpose (r / reach-01\n               :time (d / date-entity\n                        :weekday (t3 / tuesday))))",
      "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\"))\n   :ARG4 (s / score-entity\n            :op1 3)\n   :purpose (r / reach-01\n               :ARG1 (f / final\n                        :subevent (g / game\n                                     :name (n3 / name\n                                               :op1 \"Coppa\"\n                                               :op2 \"Italia\")))))",
      "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\"))\n   :ARG4 (s / score-entity\n            :op2 0)\n   :purpose (r / reach-01\n               :ARG0 t))"
    ],
    "smus": [
      "Real Madrid thrashed",
      "Granada thrashed",
      "Thrashing in La Liga.",
      "Real Madrid thrashed at the weekend.",
      "Real Madrid thrash La Liga",
      "The weekend thrashing took place in La Liga.",
      "La Liga thrashed by 9-1",
      "Real Madrid thrashed Granada in La Liga.",
      "La Liga thrashing Granada 9-1",
      "Real Madrid thrashed Granada 9-1 over the weekend.",
      "Real Madrid thrashed Granada at the weekend in La Liga.",
      "Real Madrid thrashed Granada 9-1 at the weekend in La Liga.",
      "Cristiano Ronaldo scored.",
      "Take the league tally.",
      "Take the league tally to the season.",
      "Travel to Rayo Vallecano",
      "Travel to the Madrid derby",
      "Travel at night.",
      "Real will travel to Rayo Vallecano.",
      "Real will travel to the Madrid derby.",
      "Real will travel Wednesday.",
      "Rayo Vallecano will travel Wednesday.",
      "Madrid derby travels Wednesday",
      "Madrid derby travels at night.",
      "Real will travel to Rayo Vallecano in the Madrid derby.",
      "Real will travel to Rayo Vallecano on Wednesday.",
      "Real will travel to Rayo Vallecano at night.",
      "Real will travel to Madrid derby on Wednesday.",
      "Real will travel to the Madrid derby at night.",
      "Rayo Vallecano will travel to Madrid derby on Wednesday.",
      "Rayo Vallecano will travel to the Madrid derby on the night of",
      "Real will travel to Rayo Vallecano on Wednesday for the Madrid derby.",
      "Real will travel to Rayo Vallecano in the Madrid derby on the night of the game.",
      "The victory was to reach Tuesday.",
      "Juventus won to reach the final in Coppa Italia.",
      "The winner won by 3 to reach the final in Coppa Italia.",
      "To reach Tuesday, the winner won by 0 points.",
      "The final of Coppa Italia will reach.",
      "The final of Coppa Italia will reach Tuesday."
    ]
  },
  {
    "instance_id": "realsumm-96",
    "summary": "<t> Kevin Pietersen was sacked by England 14 months ago after Ashes defeat . </t> <t> Batsman scored 170 on Pietersen county cricket return for Surrey last week . </t> <t> Pietersen wants to make a sensational return to the England side this year . </t> <t> But Andrew Flintoff thinks time is running out for Flintoff to resurrect career . </t>",
    "summary_trees": [
      "# ::snt  Kevin Pietersen was sacked by England 14 months ago after Ashes defeat . \n(s / sack-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"England\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Kevin\"\n                  :op2 \"Pietersen\"))\n      :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                  :quant 14\n                  :unit (m / month)))\n      :time (a / after\n            :op1 (d / defeat-01\n                  :ARG0 t\n                  :ARG2 (g / game\n                        :name (n4 / name\n                              :op1 \"Ashes\")))))",
      "# ::snt  Batsman scored 170 on Pietersen county cricket return for Surrey last week . \n(s / score-01\n      :ARG0 (b / batsman)\n      :ARG1 170\n      :time (w / week\n            :mod (l / last))\n      :ARG1-of (r / return-01\n            :ARG4 (c / county\n                  :name (n / name\n                        :op1 \"Surrey\"))\n            :mod (c2 / cricket\n                  :mod (c3 / county\n                        :name (n2 / name\n                              :op1 \"Pietersen\")))))",
      "# ::snt  Pietersen wants to make a sensational return to the England side this year . \n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Pietersen\"))\n      :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                  :mod (t / this))))",
      "# ::snt  But Andrew Flintoff thinks time is running out for Flintoff to resurrect career . \n(c / contrast-01\n      :ARG2 (t / think-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Andrew\"\n                        :op2 \"Flintoff\"))\n            :ARG1 (r / run-out-05\n                  :ARG1 (t2 / time)\n                  :ARG2 (r2 / resurrect-01\n                        :ARG0 p\n                        :ARG1 (c2 / career\n                              :poss p)))))"
    ],
    "tree": [
      "(s / sack-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\")))",
      "(s / sack-01\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :unit (m / month))))",
      "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\")))",
      "(s / sack-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :unit (m / month))))",
      "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :quant (t2 / temporal-quantity\n                       :unit (m / month))))",
      "(t / team\n   :name (n / name\n            :op1 \"England\"))",
      "(s / score-01\n   :time (w / week\n            :mod (l / last)))",
      "(s / score-01\n   :ARG0 (b / batsman)\n   :time (w / week\n            :mod (l / last)))",
      "(r / return-01\n   :ARG4 (c / county\n            :name (n / name\n                     :op1 \"Surrey\")))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\")))",
      "(w / want-01\n   :ARG1 (r / return-01\n            :ARG4 (s / side\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"England\")))))",
      "(w / want-01\n   :ARG1 (r / return-01\n            :mod (s2 / sensational)))",
      "(w / want-01\n   :ARG1 (r / return-01\n            :time (y / year\n                     :mod (t / this))))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :ARG1 p))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :ARG4 (s / side\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"England\")))))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :mod (s2 / sensational)))",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :time (y / year\n                     :mod (t / this))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Andrew\"\n                              :op2 \"Flintoff\"))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG1 (r / run-out-05\n                     :ARG1 (t2 / time))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG1 (r / run-out-05\n                     :ARG2 (r2 / resurrect-01\n                               :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG1 (r / run-out-05\n                     :ARG2 (r2 / resurrect-01\n                               :ARG1 (c2 / career\n                                         :poss (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\")))))))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\")))",
      "(t / think-01\n   :ARG1 (r / run-out-05\n            :ARG1 (t2 / time)))",
      "(t / think-01\n   :ARG1 (r / run-out-05\n            :ARG2 (r2 / resurrect-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\")))))",
      "(t / think-01\n   :ARG1 (r / run-out-05\n            :ARG2 (r2 / resurrect-01\n                      :ARG1 (c2 / career\n                                :poss (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))))))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\"))\n   :ARG1 (r / run-out-05\n            :ARG1 (t2 / time)))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\"))\n   :ARG1 (r / run-out-05\n            :ARG2 (r2 / resurrect-01\n                      :ARG0 p)))",
      "(r / run-out-05\n   :ARG2 (r2 / resurrect-01\n             :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))))",
      "(r / run-out-05\n   :ARG2 (r2 / resurrect-01\n             :ARG1 (c2 / career\n                       :poss (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\")))))",
      "(r / run-out-05\n   :ARG1 (t2 / time)\n   :ARG2 (r2 / resurrect-01\n             :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))))"
    ],
    "smus": [
      "Kevin Pietersen was sacked.",
      "Sacked months earlier.",
      "England have sacked Kevin Pietersen.",
      "Kevin Pietersen was sacked months earlier.",
      "England had sacked Kevin Pietersen months earlier.",
      "defeat the Ashes",
      "Scored last week.",
      "The batsman scored last week.",
      "Return to Surrey",
      "Pietersen wants.",
      "wants a return to the English side.",
      "Wants sensational return.",
      "wants a return this year.",
      "Pietersen wants to return.",
      "Pietersen wants a return to the English side.",
      "Pietersen wants a sensational return.",
      "Pietersen wants a return this year.",
      "But Andrew Flintoff thinks...",
      "But thinks time is running out.",
      "But thinks it's run out for Andrew Flintoff to resurrect.",
      "But thinks it's run out to resurrect Andrew Flintoff's career.",
      "Andrew Flintoff thinks.",
      "Thinks time is running out.",
      "thinks it's run out for Andrew Flintoff to resurrect.",
      "thinks it's run out of time to resurrect Andrew Flintoff's career.",
      "Andrew Flintoff thinks time is running out.",
      "Andrew Flintoff thinks he's run out of time to resurrect.",
      "Run out of time to resurrect Andrew Flintoff's career.",
      "Time is running out for Andrew Flintoff to resurrect.",
      "Time is running out to resurrect Andrew Flintoff's career."
    ]
  },
  {
    "instance_id": "realsumm-97",
    "summary": "<t> If Carl Froch does n't fight in 2015 I 'm not sure Froch 'll be back at all . </t> <t> A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact . </t> <t> Scott Quigg - Carl Frampton summer fight is dead in the water . </t>",
    "summary_trees": [
      "# ::snt  If Carl Froch does n't fight in 2015 I 'm not sure Froch 'll be back at all . \n(s / sure-02\n      :polarity -\n      :ARG0 (ii / i)\n      :ARG1 (r / return-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Carl\"\n                        :op2 \"Froch\"))\n            :mod (a / at-all))\n      :condition (f / fight-01\n            :polarity -\n            :ARG0 p\n            :time (d / date-entity\n                  :year 2015)))",
      "# ::snt  A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact . \n(l / likely-01\n      :ARG1 (b / blockbuster\n            :mod (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"DeGale\")))\n      :time (a / after\n            :op1 (d / defeat-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Julio\"\n                              :op2 \"Cesar\"\n                              :op3 \"Chavez\"\n                              :op4 \"Jr\"))))\n      :concession (c / contact-01\n            :ARG0 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Anthony\"\n                        :op2 \"Dirrell\")))\n      :ARG2-of (h / have-degree-91\n            :ARG1 b\n            :ARG3 (m / most)))",
      "# ::snt  Scott Quigg - Carl Frampton summer fight is dead in the water . \n(s / say-01\n      :ARG0 (ii / i)\n      :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Scott\"\n                              :op2 \"Quigg\"))\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Carl\"\n                              :op2 \"Frampton\"))\n                  :time (d2 / date-entity\n                        :season (s2 / summer)))\n            :location (w / water))\n      :ARG2 p)"
    ],
    "tree": [
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\"))))",
      "(l / likely-01\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Julio\"\n                                        :op2 \"Cesar\"\n                                        :op3 \"Chavez\"\n                                        :op4 \"Jr\")))))",
      "(l / likely-01\n   :concession (c / contact-01\n                  :ARG0 (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Anthony\"\n                                      :op2 \"Dirrell\"))))",
      "(l / likely-01\n   :ARG2 (h / have-degree-91\n            :ARG1 (b / blockbuster)))",
      "(l / likely-01\n   :ARG2 (h / have-degree-91\n            :ARG3 (m / most)))",
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :concession (c / contact-01\n                  :ARG0 (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Anthony\"\n                                      :op2 \"Dirrell\"))))",
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :ARG2 (h / have-degree-91\n            :ARG1 b))",
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :ARG2 (h / have-degree-91\n            :ARG3 (m / most)))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Scott\"\n                                       :op2 \"Quigg\")))))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :location (w / water)))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Carl\"\n                                         :op2 \"Frampton\")))))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :time (d2 / date-entity\n                               :season (s2 / summer)))))",
      "(s / say-01\n   :ARG0 (ii / i)\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Scott\"\n                                       :op2 \"Quigg\")))))",
      "(s / say-01\n   :ARG0 (ii / i)\n   :ARG1 (d / die-01\n            :location (w / water)))"
    ],
    "smus": [
      "likely after Julio Cesar Chavez Jr. defeats",
      "Probably, but Anthony Dirrell did make contact.",
      "After Julio Cesar Chavez Jr.'s defeat, James DeGale's blockbuster is likely to happen.",
      "After Julio Cesar Chavez Jr. defeats, it is likely to be a blockbuster.",
      "Most likely after Julio Cesar Chavez Jr. defeats",
      "Despite contact with Anthony Dirrell, James DeGale is likely to make a blockbuster after Julio Cesar Chavez Jr. defeats.",
      "After defeating Julio Cesar Chavez Jr., despite contact with Anthony Dirrell, the blockbuster is likely to happen.",
      "After defeating Julio Cesar Chavez Jr.",
      "Death in water, I say.",
      "Scott Quigg's fight died in the water.",
      "The fight against Carl Frampton has died in the water.",
      "The summer fighting has left the dead on the water.",
      "The fight with Carl Frampton happened in the summer.",
      "Scott Quigg and Carl Frampton had a fight in the summer."
    ]
  },
  {
    "instance_id": "realsumm-98",
    "summary": "<t> Clip shows mysterious black cloud hanging over the village of Shortandy . </t> <t> The perfect hoop shape sat in the air not moving for more than 15 minutes . </t> <t> Eerie video has been viewed tens of thousands of times on Youtube . </t> <t> While some viewers are suggesting the cloud was an alien spacecraft , experts think cloud could have been caused by nearby factories . </t>",
    "summary_trees": [
      "# ::snt  Clip shows mysterious black cloud hanging over the village of Shortandy . \n(s / show-01\n      :ARG0 (c / clip)\n      :ARG1 (c2 / cloud\n            :mod (m / mysterious)\n            :ARG1-of (b / black-04)\n            :ARG1-of (h / hang-01\n                  :ARG2 (o / over\n                        :op1 (v / village\n                              :name (n / name\n                                    :op1 \"Shortandy\"))))))",
      "# ::snt  The perfect hoop shape sat in the air not moving for more than 15 minutes . \n(s / sit-01\n      :ARG1 (s2 / shape\n            :mod (h / hoop)\n            :ARG1-of (p / perfect-02))\n      :ARG2 (a / air)\n      :manner (m / move-01\n            :polarity -\n            :ARG1 s2\n            :duration (m2 / more-than\n                  :op1 (t / temporal-quantity\n                        :quant 15\n                        :unit (m3 / minute)))))",
      "# ::snt  Eerie video has been viewed tens of thousands of times on Youtube . \n(v / view-01\n      :ARG1 (v2 / video\n            :mod (e / eerie))\n      :frequency (m / multiple\n            :op1 10000)\n      :medium (p / publication\n            :name (n / name\n                  :op1 \"YouTube\")))",
      "# ::snt  While some viewers are suggesting the cloud was an alien spacecraft , experts think cloud could have been caused by nearby factories . \n(c / contrast-01\n      :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                  :ARG0-of (v / view-01)\n                  :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                  :poss (a / alien-01)\n                  :domain (c2 / cloud)))\n      :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                  :ARG1-of (e / expert-01))\n            :ARG1 (p3 / possible-01\n                  :ARG1 (c3 / cause-01\n                        :ARG0 (f / factory\n                              :location (n / nearby))\n                        :ARG1 (c4 / cloud)))))"
    ],
    "tree": [
      "(s / show-01\n   :ARG1 (c2 / cloud\n             :mod (m / mysterious)))",
      "(s / show-01\n   :ARG1 (c2 / cloud\n             :ARG1 (b / black-04)))",
      "(s / show-01\n   :ARG1 (c2 / cloud\n             :ARG1 (h / hang-01\n                      :ARG2 (o / over\n                               :op1 (v / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\"))))))",
      "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :mod (m / mysterious)))",
      "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :ARG1 (b / black-04)))",
      "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :ARG1 (h / hang-01\n                      :ARG2 (o / over\n                               :op1 (v / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\"))))))",
      "(c2 / cloud\n    :mod (m / mysterious)\n    :ARG1 (b / black-04))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop)))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :ARG1 (p / perfect-02)))",
      "(s / sit-01\n   :manner (m / move-01\n              :polarity -\n              :ARG1 (s2 / shape)\n              :duration (m2 / more-than)))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop))\n   :ARG2 (a / air))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :ARG1 (p / perfect-02))\n   :ARG2 (a / air))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop))\n   :manner (m / move-01\n              :polarity -\n              :ARG1 s2\n              :duration (m2 / more-than)))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :ARG1 (p / perfect-02))\n   :manner (m / move-01\n              :polarity -\n              :ARG1 s2\n              :duration (m2 / more-than)))",
      "(s / sit-01\n   :ARG2 (a / air)\n   :manner (m / move-01\n              :polarity -\n              :ARG1 (s2 / shape)\n              :duration (m2 / more-than)))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop))\n   :ARG2 (a / air)\n   :manner (m / move-01\n              :polarity -\n              :ARG1 s2\n              :duration (m2 / more-than)))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :ARG1 (p / perfect-02))\n   :ARG2 (a / air)\n   :manner (m / move-01\n              :polarity -\n              :ARG1 s2\n              :duration (m2 / more-than)))",
      "(m / move-01\n   :duration (m2 / more-than\n                 :op1 (t / temporal-quantity\n                         :quant 15)))",
      "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie)))",
      "(v / view-01\n   :frequency (m / multiple\n                 :op1 10000))",
      "(v / view-01\n   :medium (p / publication\n              :name (n / name\n                       :op1 \"YouTube\")))",
      "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie))\n   :frequency (m / multiple\n                 :op1 10000))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :poss (a / alien-01))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :quant (s2 / some))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :domain (c2 / cloud))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))))))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG1 (c4 / cloud)))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01)))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG1 (c4 / cloud)))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :poss (a / alien-01)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :poss (a / alien-01)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG1 (c4 / cloud)))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :quant (s2 / some)))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :quant (s2 / some)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :quant (s2 / some)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG1 (c4 / cloud)))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :domain (c2 / cloud)))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :domain (c2 / cloud)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))))))",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG1 (s3 / spacecraft\n                      :domain (c2 / cloud)))\n   :ARG2 (t / think-01\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG1 (c4 / cloud)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :quant (s2 / some)))",
      "(s / suggest-01\n   :ARG1 (s3 / spacecraft\n             :poss (a / alien-01)))",
      "(s / suggest-01\n   :ARG1 (s3 / spacecraft\n             :domain (c2 / cloud)))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01))\n   :ARG1 (s3 / spacecraft\n             :poss (a / alien-01)))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01))\n   :ARG1 (s3 / spacecraft\n             :domain (c2 / cloud)))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :quant (s2 / some))\n   :ARG1 (s3 / spacecraft\n             :poss (a / alien-01)))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :quant (s2 / some))\n   :ARG1 (s3 / spacecraft\n             :domain (c2 / cloud)))",
      "(p / person\n   :ARG0 (v / view-01)\n   :quant (s2 / some))",
      "(s3 / spacecraft\n    :poss (a / alien-01)\n    :domain (c2 / cloud))",
      "(t / think-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG0 (f / factory\n                                :location (n / nearby)))))",
      "(t / think-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG1 (c4 / cloud))))",
      "(t / think-01\n   :ARG0 (p2 / person\n             :ARG1 (e / expert-01))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG0 (f / factory\n                                :location (n / nearby)))))"
    ],
    "smus": [
      "Shows mysterious cloud.",
      "shows a cloud of black.",
      "Shows cloud hanging over Shortandy village.",
      "The clip shows a mysterious cloud.",
      "The clip shows a black cloud.",
      "The clip shows a cloud hanging over Shortandy village.",
      "Hanging over Shortandy village.",
      "The hoop shape sat.",
      "sat in perfect shape.",
      "Sitting without moving in shape for more than a while.",
      "The hoop shape sat in the air.",
      "Perfect shape sat in the air.",
      "The hoop shape sat unmoving for more than a minute.",
      "The perfect shape sat unmoving for more than a minute.",
      "Sitting in the air, not moving in shape for more than a moment,",
      "The hoop shape sat in the air, not moving for more than a few seconds.",
      "Perfect shape sat in the air, not moving for more than a minute.",
      "Moving for more than a minute.",
      "The eerie video was viewed.",
      "Viewed tens of thousands of times.",
      "The eerie video has been viewed thousands of times.",
      "viewed thousands of times on YouTube.",
      "The views are suggesting...",
      "suggesting alien spacecraft.",
      "Some people are suggesting...",
      "suggesting the cloud is a spacecraft.",
      "But experts think...",
      "But think nearby factories may have caused it.",
      "But think maybe the cloud is caused.",
      "Viewers are suggesting, experts think.",
      "Viewers are suggesting, but think nearby factories may have caused it.",
      "Viewers are suggesting, but think the cloud may have been caused by it.",
      "Suggesting alien spacecraft, though think nearby factories may have caused it.",
      "suggesting alien spacecraft, but think cloud may have been caused.",
      "Some people are suggesting, experts think.",
      "Some people are suggesting, others think nearby factories may have caused it.",
      "Some people are suggesting, others think the cloud may have been caused by it.",
      "suggesting the cloud is spacecraft, experts think.",
      "suggesting the cloud is spacecraft, but think nearby factories may have caused it.",
      "suggesting the cloud is spacecraft, but think it might be caused by the cloud.",
      "Viewers are suggesting --",
      "Some people are suggesting.",
      "Viewers are suggesting an alien spacecraft.",
      "Viewers are suggesting the cloud is a spacecraft.",
      "Some people are suggesting alien spacecraft.",
      "Some people are suggesting that the cloud is a spacecraft.",
      "Experts think.",
      "Some think nearby factories may have caused it.",
      "Maybe the cloud is caused, thinks.",
      "Experts think nearby factories may have caused it.",
      "Perhaps it was the nearby factories that caused it.",
      "Clouds can be caused.",
      "Caused by nearby factories."
    ]
  },
  {
    "instance_id": "realsumm-99",
    "summary": "<t> Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses . </t> <t> In total 1,177 were transferred to a different jail where members will mix with members arch rivals - Mara Salvatrucha . </t> <t> The gang members will now no longer be classified by gang affiliation , but by how dangerous members are . </t>",
    "summary_trees": [
      "# ::snt  Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses . \n(s / show-01\n      :ARG0 (ii / image\n            :ARG0-of (a / awe-01))\n      :ARG1 (m / march-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang\n                              :name (n / name\n                                    :op1 \"Barrio\"\n                                    :op2 18)\n                              :ARG1-of (n2 / notorious-01))\n                        :ARG2 (m2 / member))\n                  :ARG1-of (h2 / handcuff-01))\n            :destination (b / bus)))",
      "# ::snt  In total 1,177 were transferred to a different jail where members will mix with members arch rivals - Mara Salvatrucha . \n(t / transfer-01\n      :ARG1 (p / person\n            :quant 1741\n            :ARG2-of (t2 / total-01))\n      :ARG2 (j / jail\n            :ARG1-of (d / differ-02)\n            :location-of (m / mix-01\n                  :ARG1 (m2 / member)\n                  :ARG2 (m3 / member\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / criminal-organization\n                                    :name (n / name\n                                          :op1 \"Mara\"\n                                          :op2 \"Salvatrucha\")\n                                    :ARG0-of (r / rival-01\n                                          :mod (a / arch))))))))",
      "# ::snt  The gang members will now no longer be classified by gang affiliation , but by how dangerous members are . \n(c / contrast-01\n      :ARG1 (c2 / classify-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang)\n                        :ARG2 (m / member)))\n            :ARG2 (a / affiliate-01\n                  :ARG1 p\n                  :ARG2 g))\n      :ARG2 (c3 / classify-01\n            :ARG1 p\n            :ARG2 (t / thing\n                  :degree-of (d / dangerous\n                        :domain p)))\n      :time (n / no-longer)\n      :time (n2 / now))"
    ],
    "tree": [
      "(s / show-01\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG1 (g / gang\n                                       :name (n / name\n                                                :op1 \"Barrio\"\n                                                :op2 18))))))",
      "(s / show-01\n   :ARG1 (m / march-01\n            :destination (b / bus)))",
      "(s / show-01\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG1 (h2 / handcuff-01))))",
      "(s / show-01\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG2 (m2 / member)))))",
      "(s / show-01\n   :ARG0 (ii / image\n             :ARG0 (a / awe-01))\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG1 (g / gang\n                                       :name (n / name\n                                                :op1 \"Barrio\"\n                                                :op2 18))))))",
      "(s / show-01\n   :ARG0 (ii / image\n             :ARG0 (a / awe-01))\n   :ARG1 (m / march-01\n            :destination (b / bus)))",
      "(s / show-01\n   :ARG0 (ii / image\n             :ARG0 (a / awe-01))\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG1 (h2 / handcuff-01))))",
      "(s / show-01\n   :ARG0 (ii / image\n             :ARG0 (a / awe-01))\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG2 (m2 / member)))))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (g / gang\n                              :name (n / name\n                                       :op1 \"Barrio\"\n                                       :op2 18)))))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG1 (h2 / handcuff-01)))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (g / gang\n                              :ARG1 (n2 / notorious-01)))))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (g / gang\n                              :name (n / name\n                                       :op1 \"Barrio\"\n                                       :op2 18))))\n   :destination (b / bus))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG1 (h2 / handcuff-01))\n   :destination (b / bus))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m2 / member)))\n   :destination (b / bus))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (g / gang\n                              :ARG1 (n2 / notorious-01))))\n   :destination (b / bus))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (g / gang\n                     :name (n / name\n                              :op1 \"Barrio\"\n                              :op2 18))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :ARG2 (t2 / total-01)))",
      "(t / transfer-01\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)))",
      "(t / transfer-01\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG1 (m2 / member))))",
      "(t / transfer-01\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG2 (m3 / member\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :name (n / name\n                                                              :op1 \"Mara\"\n                                                              :op2 \"Salvatrucha\")))))))",
      "(t / transfer-01\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG2 (m3 / member\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :ARG0 (r / rival-01\n                                                              :mod (a / arch))))))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741)\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG1 (m2 / member))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741)\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG2 (m3 / member\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :name (n / name\n                                                              :op1 \"Mara\"\n                                                              :op2 \"Salvatrucha\")))))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741)\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG2 (m3 / member\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :ARG0 (r / rival-01\n                                                              :mod (a / arch))))))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :ARG2 (t2 / total-01))\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :ARG2 (t2 / total-01))\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG1 (m2 / member))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :ARG2 (t2 / total-01))\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG2 (m3 / member\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :name (n / name\n                                                              :op1 \"Mara\"\n                                                              :op2 \"Salvatrucha\")))))))",
      "(t / transfer-01\n   :ARG1 (p / person\n            :ARG2 (t2 / total-01))\n   :ARG2 (j / jail\n            :location (m / mix-01\n                         :ARG2 (m3 / member\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :ARG0 (r / rival-01\n                                                              :mod (a / arch))))))))",
      "(j / jail\n   :location (m / mix-01\n                :ARG1 (m2 / member)))",
      "(j / jail\n   :location (m / mix-01\n                :ARG2 (m3 / member\n                          :ARG0 (h / have-rel-role-91\n                                   :ARG1 (c / criminal-organization\n                                            :name (n / name\n                                                     :op1 \"Mara\"\n                                                     :op2 \"Salvatrucha\"))))))",
      "(j / jail\n   :location (m / mix-01\n                :ARG2 (m3 / member\n                          :ARG0 (h / have-rel-role-91\n                                   :ARG1 (c / criminal-organization\n                                            :ARG0 (r / rival-01\n                                                     :mod (a / arch)))))))",
      "(j / jail\n   :ARG1 (d / differ-02)\n   :location (m / mix-01\n                :ARG1 (m2 / member)))",
      "(j / jail\n   :ARG1 (d / differ-02)\n   :location (m / mix-01\n                :ARG2 (m3 / member\n                          :ARG0 (h / have-rel-role-91\n                                   :ARG1 (c / criminal-organization\n                                            :name (n / name\n                                                     :op1 \"Mara\"\n                                                     :op2 \"Salvatrucha\"))))))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g / gang)))))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member)))))",
      "(c / contrast-01\n   :ARG2 (c3 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g / gang)))))",
      "(c / contrast-01\n   :ARG2 (c3 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member)))))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG2 (a / affiliate-01\n                      :ARG2 (g / gang)))\n   :ARG2 (c3 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member)))))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member))))\n   :ARG2 (c3 / classify-01\n             :ARG1 p))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g / gang))))\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG2 (c3 / classify-01\n             :ARG2 (t / thing\n                      :degree (d / dangerous\n                                 :domain (p / person))))\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG2 (c3 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member))))\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g / gang))))\n   :ARG2 (c3 / classify-01\n             :ARG1 p)\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG2 (a / affiliate-01\n                      :ARG1 (p / person)))\n   :ARG2 (c3 / classify-01\n             :ARG2 (t / thing\n                      :degree (d / dangerous\n                                 :domain p)))\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG2 (a / affiliate-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (m / member)))))\n   :ARG2 (c3 / classify-01\n             :ARG1 p)\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG2 (a / affiliate-01\n                      :ARG2 (g / gang)))\n   :ARG2 (c3 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member))))\n   :time (n / no-longer))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (m / member)\n                               :ARG1 (g / gang))))\n   :ARG2 (c3 / classify-01\n             :ARG1 p)\n   :time (n / no-longer))",
      "(c2 / classify-01\n    :ARG1 (p / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (m / member))))",
      "(c2 / classify-01\n    :ARG2 (a / affiliate-01\n             :ARG2 (g / gang)))",
      "(c2 / classify-01\n    :ARG1 (p / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g / gang)))\n    :ARG2 (a / affiliate-01\n             :ARG1 p))"
    ],
    "smus": [
      "Show marches to buses.",
      "Show that handcuffed people are marching.",
      "Members show to be marched.",
      "Shows marching by notorious gang.",
      "The awe inspiring images show the marching buses.",
      "The awe inspiring images show the handcuffed people marching.",
      "The awe inspiring images show members marching.",
      "The awe inspiring images show the marching of the notorious gang.",
      "Handcuffed people marched.",
      "Members marched.",
      "The gang of Barrio 18 marched to the buses.",
      "Handcuffed people marched to buses.",
      "Members marched to buses.",
      "A notorious gang was marched to the buses.",
      "The gang is called Barrio 18.",
      "The Barrio 18 gang were handcuffed.",
      "Transferred to total.",
      "Transferred to a different jail.",
      "Transferred to jail where members mix.",
      "Transferred to jail to mix with members of the Mara Salvatrucha.",
      "Transferred to jail to mix with members of arch rivals.",
      "174 people were transferred to jail to mix with members.",
      "174 people were transferred to jail to mix with members of the Mara Salvatrucha.",
      "174 people were transferred to jail to mix with members of arch rivals.",
      "The total was transferred to a different jail.",
      "The total was transferred to jail where members could mix.",
      "The total was transferred to a jail where members of the Mara Salvatrucha were mixed.",
      "The total was transferred to a jail where members of arch rivals' criminal organizations were mixed in.",
      "Jail to mix members.",
      "There is a different jail where members mix.",
      "There is a different jail where members of the Mara Salvatrucha mix.",
      "There is a different jail where members of arch rivals' criminal organizations mix.",
      "Mix with members of the Mara Salvatrucha.",
      "But the gang is classified.",
      "But members are classified.",
      "But people are classified as dangerous.",
      "The gang is classified, but the gang is classified as dangerous.",
      "Members are classified, but dangerous.",
      "But the person is no longer classified as an affiliate.",
      "But it is no longer classified as gang affiliation.",
      "Gang members are no longer classified, but are now classified.",
      "The gang is no longer classified as an affiliate, but as a classified.",
      "People are no longer classified as affiliates, but as dangerous.",
      "The gang affiliation is no longer classified as gang affiliation, but as members.",
      "The members of the gang are no longer classified but are now classified.",
      "The gang is classified.",
      "Members are classified.",
      "Members are classified as affiliated.",
      "The gang is made up of members.",
      "People are classified as dangerous."
    ]
  }
]