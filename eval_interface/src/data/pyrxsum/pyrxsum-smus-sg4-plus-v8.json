[{"instance_id": "pyrxsum-0", "summary": "Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.", "summary_trees": ["# ::snt Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.\n(j / join-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Wesley\"\n                  :op2 \"Sneijder\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Netherlands\"))\n                  :ARG3 (m / midfielder)))\n      :ARG1 (t2 / team\n            :name (n3 / name\n                  :op1 \"Nice\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Ligue\"\n                        :op2 1)\n                  :mod (c / country\n                        :name (n5 / name\n                              :op1 \"France\"))))\n      :manner (t3 / transfer-01\n            :ARG1 p\n            :ARG1-of (f / free-03)))"], "tree": ["(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))", "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))", "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))", "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))", "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))"], "smus": ["Wesley Sneijder has joined the Ligue 1 team.", "The Dutch have joined the French league team.", "The midfielder has joined the French league team.", "The Dutch have joined the Ligue 1 side on a free transfer.", "The midfielder has joined Nice on a free transfer."]}, {"instance_id": "pyrxsum-1", "summary": "A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.", "summary_trees": ["# ::snt A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.\n(s / say-01\n      :ARG0 (d / document\n            :source (g / government-organization\n                  :name (n / name\n                        :op1 \"FBI\")))\n      :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g2 / government-organization\n                              :name (n2 / name\n                                    :op1 \"State\"\n                                    :op2 \"Department\"))\n                        :ARG2 (o / official)))\n            :ARG1 g\n            :ARG2 (c / change-01\n                  :ARG0 g\n                  :ARG1 (c2 / classify-01\n                        :ARG1 (e / email-01\n                              :ARG0 (p3 / person\n                                    :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\"))))\n                  :manner (q / quid-pro-quo))))"], "tree": ["(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 g)))", "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG1 (c2 / classify-01\n                      :ARG1 (e / email-01\n                               :ARG0 (p3 / person\n                                         :name (n3 / name\n                                                   :op1 \"Hillary\"\n                                                   :op2 \"Clinton\"))))))"], "smus": ["The FBI documents said pressure was on to change.", "The State Department pressured to change the classification of Hillary Clinton's email."]}, {"instance_id": "pyrxsum-2", "summary": "American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.", "summary_trees": ["# ::snt American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.\n(t / take-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jason\"\n                  :op2 \"Dufner\")\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"America\")))\n      :ARG1 (l / lead-01\n            :ARG0 p\n            :ARG2 (s / shot\n                  :quant 5))\n      :ARG2 (r / round\n            :ord (o / ordinal-entity\n                  :value 3)\n            :subevent-of (g / game\n                  :name (n3 / name\n                        :op1 \"Memorial\"\n                        :op2 \"Tournament\")))\n      :time (a / after\n            :op1 (c2 / card-01\n                  :ARG0 p\n                  :ARG1 (e / eagle)\n                  :time (h / hole\n                        :ord (o2 / ordinal-entity\n                              :value 18))\n                  :time (d / date-entity\n                        :weekday (f / friday)))))"], "tree": ["(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))", "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))", "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))"], "smus": ["Jason Dufner will take after carding.", "Jason Dufner will take the lead with five shots in the third round after carding on Friday.", "After carding Friday, the Americans will take the lead with 5 shots into the 3rd round."]}, {"instance_id": "pyrxsum-3", "summary": "A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.", "summary_trees": ["# ::snt A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.\n(s / say-01\n      :ARG0 (p / police\n            :ARG1-of (l / local-02))\n      :ARG1 (q / question-01\n            :ARG1 (m / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 \"Peru\"))\n            :time (a / after\n                  :op1 (p2 / pose-01\n                        :ARG0 m\n                        :manner (n3 / naked)\n                        :location (r / ruin\n                              :name (n4 / name\n                                    :op1 \"Machu\"\n                                    :op2 \"Picchu\"))))))"], "tree": ["(s / say-01\n   :ARG1 (q / question-01\n            :ARG1 (m / man\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"Britain\")))))", "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))", "(q / question-01\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :location (r / ruin\n                                  :name (n4 / name\n                                            :op1 \"Machu\"\n                                            :op2 \"Picchu\")))))"], "smus": ["The British man was said to be questioned.", "Questioned after posing as a naked man, said.", "Questioned after posing in the Ruins of Machu Picchu."]}, {"instance_id": "pyrxsum-4", "summary": "Great Britain skeleton racer David Swift has retired from the sport.", "summary_trees": ["# ::snt Great Britain skeleton racer David Swift has retired from the sport.\n(r / retire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Swift\")\n            :ARG0-of (r2 / race-02\n                  :ARG3 (s / skeleton))\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Great\"\n                        :op2 \"Britain\")))\n      :ARG1 (s2 / sport))"], "tree": ["(r / retire-01\n   :ARG0 (p / person\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Great\"\n                              :op2 \"Britain\"))))", "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton)))\n   :ARG1 (s2 / sport))", "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\")\n            :ARG0-of (r2 / race-02\n                         :ARG3 (s / skeleton))\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Great\"\n                              :op2 \"Britain\")))\n   :ARG1 (s2 / sport))"], "smus": ["Great Britain retires.", "Skeletal racers have retired from sport.", "Great Britain's skeleton racer David Swift has retired from sport."]}, {"instance_id": "pyrxsum-5", "summary": "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.", "summary_trees": ["# ::snt Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.\n(s / set-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\"\n                  :op2 \"Dunlop\"))\n      :ARG1 (t / time\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (f / fast-02)\n                  :ARG3 (m / most)))\n      :beneficiary (a / and\n            :op1 (c / class\n                  :name (n2 / name\n                        :op1 \"Ulster\"\n                        :op2 \"Grand\"\n                        :op3 \"Prix\"\n                        :op4 \"Superbike\"))\n            :op2 (c2 / class\n                  :name (n3 / name\n                        :op1 \"Superstock\")))\n      :time (s2 / session\n            :mod (p2 / practice-01)\n            :ARG1-of (d / delay-01)\n            :location (c3 / city\n                  :name (n4 / name\n                        :op1 \"Dundrod\"))\n            :time (d2 / date-entity\n                  :weekday (t2 / thursday))))"], "tree": ["(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))", "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))", "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))"], "smus": ["Fast times were set for Thursday sessions.", "Fast times were set for Ulster Grand Prix Superbike classes during delayed sessions.", "Michael Dunlop set the fastest times for Ulster Grand Prix Superbike classes during the delayed sessions."]}, {"instance_id": "pyrxsum-6", "summary": "Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.", "summary_trees": ["# ::snt Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.\n(s / sign-02\n      :ARG0 (c / club\n            :name (n / name\n                  :op1 \"Old\"\n                  :op2 \"Boys\")\n            :mod (c2 / country\n                  :name (n2 / name\n                        :op1 \"Argentina\"))\n            :poss (t / team\n                  :name (n3 / name\n                        :op1 \"Newell's\")))\n      :ARG1 (p / person\n            :name (n4 / name\n                  :op1 \"Ignacio\"\n                  :op2 \"Scocco\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t2 / team\n                        :name (n5 / name\n                              :op1 \"Sunderland\"))\n                  :ARG3 (s2 / striker)))\n      :ARG3 (c3 / contract\n            :duration (t3 / temporal-quantity\n                  :quant 5\n                  :unit (y / year)))\n      :mod (a / again))"], "tree": ["(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :mod (a / again))", "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))"], "smus": ["The Argentinian club has signed again.", "Newell's club has signed Ignacio Scocco for a five-year contract."]}, {"instance_id": "pyrxsum-7", "summary": "West Ham say Ham are \"disappointed\" with a ruling that the terms of terms rental of the Olympic Stadium from next season should be made public.", "summary_trees": ["# ::snt West Ham say Ham are \"disappointed\" with a ruling that the terms of terms rental of the Olympic Stadium from next season should be made public.\n(s / say-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"West\"\n                  :op2 \"Ham\"))\n      :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                  :ARG1 (r2 / recommend-01\n                        :ARG1 (p / public-02\n                              :ARG1 (t2 / term\n                                    :mod (r3 / rent-01\n                                          :ARG1 (s2 / stadium\n                                                :name (n2 / name\n                                                      :op1 \"Olympic\"\n                                                      :op2 \"Stadium\"))\n                                          :time (s3 / season\n                                                :mod (n3 / next)))))))\n            :ARG1 t))"], "tree": ["(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG1 (t / team :name (n / name :op1 \"West\" :op2 \"Ham\"))))", "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :ARG1 (s2 / stadium\n                                                                     :name (n2 / name\n                                                                               :op1 \"Olympic\"\n                                                                               :op2 \"Stadium\")))))))))", "(r2 / recommend-01\n    :ARG1 (p / public-02\n             :ARG1 (t2 / term\n                       :mod (r3 / rent-01\n                                :time (s3 / season\n                                          :mod (n3 / next))))))", "(r3 / rent-01\n    :ARG1 (s2 / stadium\n              :name (n2 / name\n                        :op1 \"Olympic\"\n                        :op2 \"Stadium\"))\n    :time (s3 / season\n              :mod (n3 / next)))"], "smus": ["West Ham are disappointed, say", "West Ham say the ruling that the terms of the Olympic Stadium's rental should be public was disappointing.", "Rent terms for next season should be public.", "The Olympic Stadium will be rented next season."]}, {"instance_id": "pyrxsum-8", "summary": "Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.", "summary_trees": ["# ::snt Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.\n(v / vow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abdul\"\n                  :op2 \"Fattah\"\n                  :op3 \"al-Sisi\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (a / army)\n                  :ARG2 (c / chief)\n                  :time (e / ex)))\n      :ARG1 (a2 / and\n            :op1 (t / tackle-01\n                  :ARG0 p\n                  :ARG1 (t2 / terrorism))\n            :op2 (b / bring-01\n                  :ARG0 p\n                  :ARG1 (s / security)))\n      :time (a3 / after\n            :op1 (s2 / swear-in-06\n                  :ARG1 p\n                  :ARG2 (p2 / person\n                        :ARG0-of (h2 / have-org-role-91\n                              :ARG1 (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"Egypt\"))\n                              :ARG2 (p3 / president\n                                    :ARG1-of (n3 / new-01)))))))"], "tree": ["(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))", "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))", "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))", "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))"], "smus": ["Abdul Fattah al-Sisi vowed to bring security after the new president is sworn in.", "The chief vowed to tackle terrorism after Egypt's swearing-in.", "The chief vowed to bring security after the new president is sworn in.", "After being sworn in, the Ex vowed to bring security."]}, {"instance_id": "pyrxsum-9", "summary": "Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in McCoy honour at Cheltenham as 'flattering.'", "summary_trees": ["# ::snt Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in McCoy honour at Cheltenham as 'flattering.'\n(d / describe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Anthony\"\n                  :op3 \"McCoy\")\n            :ARG0-of (r / ride-01\n                  :ARG1 (j / jump-03))\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / champion\n                        :frequency 20)))\n      :ARG1 (h2 / have-04\n            :ARG1 (s / statue\n                  :ARG1-of (p2 / put-up-13\n                        :ARG2 (h3 / honor-01\n                              :ARG1 p)\n                        :location (s2 / sports-facility\n                              :name (n2 / name\n                                    :op1 \"Cheltenham\")))))\n      :ARG2 (f / flatter-01))"], "tree": ["(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))", "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG2 (f / flatter-01))"], "smus": ["Sir Anthony McCoy has described having a statue put up in his honor.", "Jumper describe it as flattering."]}, {"instance_id": "pyrxsum-10", "summary": "A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.", "summary_trees": ["# ::snt A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.\n(d / defend-01\n      :ARG0 (p / person\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (s / sign\n            :ARG0-of (u / urge-01\n                  :ARG1 (p2 / person)\n                  :ARG2 (e / eat-01\n                        :ARG0 p2\n                        :ARG1 (c2 / cake)\n                        :purpose (a / avoid-01\n                              :ARG0 p2\n                              :ARG1 (k / kidnap-01\n                                    :ARG1 p2\n                                    :location (t / town\n                                          :location-of (a2 / and\n                                                :op1 (a3 / abduct-01\n                                                      :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                  :op1 \"April\"\n                                                                  :op2 \"Jones\")))\n                                                :op2 (m / murder-01\n                                                      :ARG1 p3)\n                                                :time (d2 / date-entity\n                                                      :year 2012)))))))))"], "tree": ["(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))", "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :purpose (a / avoid-01\n                                 :ARG1 (k / kidnap-01\n                                          :ARG1 (p2 / person))))))", "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (m / murder-01\n                                                  :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                     :op1 \"April\"\n                                                                     :op2 \"Jones\")))))))", "(a2 / and\n    :op1 (a3 / abduct-01\n             :ARG1 (p3 / person\n                       :name (n / name\n                                :op1 \"April\"\n                                :op2 \"Jones\")))\n    :time (d2 / date-entity\n              :year 2012))", "(d / defend-01\n   :ARG0 (p / person\n            :ARG0-of (o / own-01\n                        :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0-of (u / urge-01\n                        :ARG1 (p2 / person)\n                        :ARG2 (e / eat-01\n                                 :ARG0 p2\n                                 :ARG1 (c2 / cake)\n                                 :purpose (a / avoid-01\n                                             :ARG0 p2\n                                             :ARG1 (k / kidnap-01\n                                                      :ARG1 p2\n                                                      :location (t / town\n                                                                   :location-of (m / murder-01\n                                                                                   :ARG1 (p3 / person :name (n / name :op1 \"April\" :op2 \"Jones\"))\n                                                                                   :time (d2 / date-entity\n                                                                                             :year 2012)\n                                                                                   :time d2))))))))"], "smus": ["The cafe owner has defended the sign urging people to eat.", "A sign urging people to eat to avoid being kidnapped.", "Eat the cake to avoid being kidnapped in the town where April Jones was murdered.", "And April Jones was abducted in 2012.", "The cafe owner defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was murdered in 2012."]}, {"instance_id": "pyrxsum-11", "summary": "Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.", "summary_trees": ["# ::snt Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.\n(s / say-01\n      :ARG0 (o / official)\n      :ARG1 (a / and\n            :op1 (k / kill-01\n                  :ARG0 (e / explode-01\n                        :quant 2\n                        :ARG1 (b / bus\n                              :mod (p / passenger))\n                        :location (c / city\n                              :name (n / name\n                                    :op1 \"Nairobi\")\n                              :ARG0-of (h / have-org-role-91\n                                    :ARG1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Kenya\"))\n                                    :ARG2 (c3 / capital))))\n                  :ARG1 (p2 / person\n                        :quant 3))\n            :op2 (w / wound-01\n                  :ARG0 e\n                  :ARG1 (p3 / person\n                        :quant (a2 / at-least\n                              :op1 62)\n                        :mod (o2 / other)))))"], "tree": ["(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital))\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG0 e))", "(k / kill-01\n   :ARG1 (p2 / person\n             :quant 3))"], "smus": ["Explosions in Nairobi city have killed and wounded.", "Three people were killed."]}, {"instance_id": "pyrxsum-12", "summary": "Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.", "summary_trees": ["# ::snt Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.\n(o / obligate-01\n      :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                  :quant 30))\n      :time (a / after\n            :op1 (d / damage-01\n                  :ARG0 (f / fire\n                        :ARG1-of (s / start-01\n                              :manner (d2 / deliberate)))\n                  :ARG1 (p / pipe\n                        :mod (g / gas)))))"], "tree": ["(o / obligate-01\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG0 (f / fire\n                             :ARG1 (s / start-01\n                                      :manner (d2 / deliberate))))))", "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30))\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG1 (p / pipe\n                             :mod (g / gas)))))", "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate)))\n   :ARG1 (p / pipe\n            :mod (g / gas)))"], "smus": ["After the fire was damaged by deliberate starting of the fire,", "30 homes had to be evacuated after gas pipe was damaged.", "A fire deliberately started damaged the gas pipe."]}, {"instance_id": "pyrxsum-13", "summary": "Friends of Keith Harris have joined his family at his funeral in Blackpool.", "summary_trees": ["# ::snt Friends of Keith Harris have joined his family at his funeral in Blackpool.\n(j / join-04\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Keith\"\n                              :op2 \"Harris\"))\n                  :ARG2 (f / friend)))\n      :ARG1 (f2 / family\n            :poss p2)\n      :location (f3 / funeral\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Blackpool\"))))"], "tree": ["(j / join-04\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\"))))", "(j / join-04\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\")))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))"], "smus": ["Keith Harris' family has joined him.", "Keith Harris' family were joined at a funeral in Blackpool."]}, {"instance_id": "pyrxsum-14", "summary": "Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".", "summary_trees": ["# ::snt Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".\n(d / defect-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Bob\"\n                  :op2 \"Marshall-Andrews\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member)\n                  :time (f / former))\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (p4 / political-party\n            :name (n3 / name\n                  :op1 \"Liberal\"\n                  :op2 \"Democrat\"))\n      :time (a / after\n            :op1 (d2 / describe-01\n                  :ARG0 p\n                  :ARG1 (p5 / party\n                        :poss (p6 / person\n                              :name (n4 / name\n                                    :op1 \"Jeremy\"\n                                    :op2 \"Corbyn\")))\n                  :ARG2 (c / case\n                        :mod (b / basket)\n                        :mod (p7 / politics)))))"], "tree": ["(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))", "(d / defect-01\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))", "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))", "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))", "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))"], "smus": ["Parliamentarians have defected.", "Defective occurred after describing a political case.", "After describing Jeremy Corbyn's party, parliamentarians have defected.", "After describing the political case, the members defected.", "After describing the defect, the MP has defected to the Lib Dem party."]}, {"instance_id": "pyrxsum-15", "summary": "Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.", "summary_trees": ["# ::snt Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.\n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Castleford\"\n                  :op2 \"Tigers\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Wakefield\"\n                  :op2 \"Trinity\")\n            :ARG0-of (r / rival-01\n                  :ARG1 t)\n            :ARG1-of (l / local-02))\n      :purpose (c / clinch-01\n            :ARG0 t\n            :ARG1 (s / shield\n                  :name (n3 / name\n                        :op1 \"League\"\n                        :op2 \"Leaders'\"\n                        :op3 \"Shield\"))))"], "tree": ["(b / beat-03\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))", "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t))\n   :purpose (c / clinch-01\n               :ARG0 t))"], "smus": ["Beat to clinch the League Leaders' shield.", "The Castleford Tigers beat their rivals to clinch."]}, {"instance_id": "pyrxsum-16", "summary": "At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.", "summary_trees": ["# ::snt At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.\n(t / tell-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (p2 / parliament)\n                        :ARG2 (m / member)))\n            :op2 (s / source\n                  :mod (a2 / army)))\n      :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                  :quant (a3 / at-least\n                        :op1 23))\n            :location (t2 / town\n                  :name (n / name\n                        :op1 \"Monguno\")\n                  :location (n2 / northeast\n                        :part-of (c / country\n                              :name (n3 / name\n                                    :op1 \"Nigeria\"))))\n            :time (a4 / after\n                  :op1 (e / explode-01\n                        :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                    :name (n4 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Haram\"))\n                              :ARG1-of (c3 / confiscate-01\n                                    :ARG0 (v / vigilante))))))\n      :ARG2 (p4 / publication\n            :name (n5 / name\n                  :op1 \"BBC\")))"], "tree": ["(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))", "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))", "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\")))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))", "(e / explode-01\n   :ARG1 (b / bomb-01\n            :ARG0 (c2 / criminal-organization\n                      :name (n4 / name\n                                :op1 \"Boko\"\n                                :op2 \"Haram\"))))", "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\")\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\"))))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))"], "smus": ["Parliament has told of the killings that occurred after a bomb that exploded on a confiscated by vigilantes.", "Members have told the BBC:", "A member has told the BBC that the killings took place in a town in the northeastern Nigeria.", "The bombing by Boko Haram exploded.", "At least 23 people were killed in the town of Monguno in northeastern Nigeria after a bombing by Boko Haram exploded that was confiscated by vigilantes."]}, {"instance_id": "pyrxsum-17", "summary": "The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.", "summary_trees": ["# ::snt The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (a / architect-01))\n      :ARG1 (a2 / and\n            :op1 (h / homage)\n            :op2 (s2 / symphony\n                  :location (s3 / steel))\n            :domain (c / center\n                  :mod (s4 / sport)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Ravenscraig\")))))"], "tree": ["(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01)))", "(s / say-01\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (a / architect-01))\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)\n             :domain (c / center\n                        :mod (s4 / sport)\n                        :location (c2 / city\n                                      :name (n / name\n                                               :op1 \"Ravenscraig\")))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (a2 / and\n             :op1 (h / homage)\n             :op2 (s2 / symphony)\n             :domain (c / center\n                        :mod (s4 / sport))))"], "smus": ["Architectural say --", "Say, a symphony in steel.", "The Ravenscraig sports centre is a symphony in steel, architects say.", "The sports center is a homage and a symphony, architects say."]}, {"instance_id": "pyrxsum-18", "summary": "The winner of The Jump 2017 is Spencer Matthews.", "summary_trees": ["# ::snt The winner of The Jump 2017 is Spencer Matthews.\n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Spencer\"\n                  :op2 \"Matthews\"))\n      :ARG1 (e / event\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Jump\")\n            :time (d / date-entity\n                  :year 2017)))"], "tree": ["(w / win-01\n   :ARG1 (e / event\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Jump\")\n            :time (d / date-entity\n                     :year 2017)))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\"))\n   :ARG1 (e / event\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Jump\")\n            :time (d / date-entity\n                     :year 2017)))"], "smus": ["The Jump 2017 won", "Spencer Matthews won the 2017 The Jump."]}, {"instance_id": "pyrxsum-19", "summary": "Fifa presidential candidate Gianni Infantino says Infantino would press for the World Cup to be held in a whole region rather than one or two countries.", "summary_trees": ["# ::snt Fifa presidential candidate Gianni Infantino says Infantino would press for the World Cup to be held in a whole region rather than one or two countries.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Gianni\"\n                  :op2 \"Infantino\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"Fifa\"))\n                  :ARG2 (c / candidate\n                        :mod (p2 / president))))\n      :ARG1 (p3 / press-01\n            :ARG0 p\n            :ARG2 (h2 / hold-04\n                  :ARG1 (g / game\n                        :name (n3 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\"))\n                  :location (r / region\n                        :mod (w / whole)\n                        :ARG1-of (ii / instead-of-91\n                              :ARG2 (h3 / hold-04\n                                    :ARG1 g\n                                    :location (c2 / country\n                                          :quant (o2 / or\n                                                :op1 1\n                                                :op2 2))))))))"], "tree": ["(ii / instead-of-91\n    :ARG2 (h3 / hold-04\n              :location (c2 / country\n                            :quant (o2 / or\n                                       :op2 2))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (o / organization\n                                 :name (n2 / name\n                                           :op1 \"Fifa\"))\n                        :ARG2 (c / candidate\n                                 :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG0 p\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\"))\n                       :location (r / region\n                                    :mod (w / whole)\n                                    :ARG1-of (ii / instead-of-91\n                                                 :ARG2 (h3 / hold-04\n                                                           :ARG1 g\n                                                           :location (c2 / country\n                                                                         :quant (o2 / or\n                                                                                    :op1 1\n                                                                                    :op2 2))))))))"], "smus": ["Instead, held in one or two countries.", "FIFA president-candidate Gianni Infantino says he will press for the Wor Cup to be held in the whole region rather than in one or two countries."]}, {"instance_id": "pyrxsum-20", "summary": "Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as Swinney prepares to set out Swinney budget.", "summary_trees": ["# ::snt Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as Swinney prepares to set out Swinney budget.\n(w / warn-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (s / secretary\n                        :topic (f / finance))))\n      :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Scotland\"))\n            :ARG1-of (t / tough-02)\n            :ARG1-of (f2 / face-01\n                  :ARG0 c2))\n      :time (p2 / prepare-02\n            :ARG0 p\n            :ARG1 p\n            :ARG2 (s2 / set-out-06\n                  :ARG0 p\n                  :ARG1 (b / budget\n                        :poss p))))"], "tree": ["(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))", "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))", "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))", "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 p))", "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))"], "smus": ["John Swinney has warned that tough choices are a choice.", "John Swinney has warned as he prepares to set out his budget.", "As he prepares to set out, John Swinney has warned that Scotland is a choice to face.", "As he prepares, the Finance Secretary has warned Scotland that Scotland will make a choice.", "As the Secretary of State prepares, he is warned of tough choices."]}, {"instance_id": "pyrxsum-21", "summary": "The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for fire terms of reference.", "summary_trees": ["# ::snt The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for fire terms of reference.\n(w / write-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01))\n            :ARG0-of (l / lead-02\n                  :ARG2 (ii / inquire-01\n                        :ARG2 (f / fire\n                              :location (b / building\n                                    :name (n / name\n                                          :op1 \"Grenfell\"\n                                          :op2 \"Tower\"))))))\n      :ARG1 (r / recommend-01\n            :ARG0 p\n            :ARG1 (t / term\n                  :mod f)\n            :ARG2-of (r2 / reference-04))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p3 / prime)))))"], "tree": ["(w / write-01\n   :ARG1 (r / recommend-01\n            :ARG0 (p / person)))", "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG0 p))", "(w / write-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01))\n            :ARG0-of (l / lead-02\n                        :ARG2 (ii / inquire-01\n                                  :ARG2 (f / fire\n                                           :location (b / building\n                                                        :name (n / name\n                                                                 :op1 \"Grenfell\"\n                                                                 :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG0 p\n            :ARG1 (t / term\n                     :mod f)\n            :ARG2-of (r2 / reference-04))\n   :ARG2 (p2 / person\n             :ARG0-of (h2 / have-org-role-91\n                          :ARG2 (m / minister\n                                   :mod (p3 / prime)))))", "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG3 (j / judge-01))\n   :ARG0-of (l / lead-02\n               :ARG2 (ii / inquire-01\n                         :ARG2 (f / fire\n                                  :location (b / building\n                                               :name (n / name\n                                                        :op1 \"Grenfell\"\n                                                        :op2 \"Tower\"))))))"], "smus": ["People's recommendations are written.", "The judge has written his recommendations.", "A judge leading an inquiry into the fire at Glenfell Tower has written to the prime minister that he recommends the terms as a reference.", "A judge leads an inquiry into the fire at Glenfell Tower."]}, {"instance_id": "pyrxsum-22", "summary": "Police in a small Alaska town mistakenly told a couple Police son had been killed in a car crash, leading to an extraordinary reunion hours later.", "summary_trees": ["# ::snt Police in a small Alaska town mistakenly told a couple Police son had been killed in a car crash, leading to an extraordinary reunion hours later.\n(l / lead-03\n      :ARG0 (t / tell-01\n            :ARG0 (p / police\n                  :location (t2 / town\n                        :mod (s / small)\n                        :location (s2 / state\n                              :name (n / name\n                                    :op1 \"Alaska\"))))\n            :ARG1 (k / kill-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG1 (p3 / police)\n                              :ARG2 (s3 / son))\n                        :quant (c / couple))\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (c3 / crash-01\n                              :ARG1 (c4 / car))))\n            :ARG2 p2\n            :ARG1-of (m / mistake-01))\n      :ARG2 (r / reunite-01\n            :mod (e / extraordinary)\n            :time (a / after\n                  :quant (m2 / multiple\n                        :op1 (t3 / temporal-quantity\n                              :quant 1\n                              :unit (h2 / hour))))))"], "tree": ["(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))", "(r / reunite-01\n   :time (a / after\n            :quant (m2 / multiple\n                       :op1 (t3 / temporal-quantity\n                                :unit (h2 / hour)))))", "(l / lead-03\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1\n                                         :unit (h2 / hour))))))", "(k / kill-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (p3 / police)\n                      :ARG2 (s3 / son))\n             :quant (c / couple)))", "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police)\n                               :ARG2 (s3 / son))\n                      :quant (c / couple))\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / crash-01\n                                :ARG1 (c4 / car))))\n   :ARG2 p2\n   :ARG1 (m / mistake-01))"], "smus": ["Telling that the son had been killed led to a reunification hours later.", "Reunion took hours.", "leading to an extraordinary reunification hours later.", "A couple of police sons were killed.", "A small town in Alaska, police told them that a couple of sons had been killed in a car crash, mistakenly."]}, {"instance_id": "pyrxsum-23", "summary": "South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.", "summary_trees": ["# ::snt South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.\n(s / show-01\n      :ARG0 (p / paper\n            :mod (c / court))\n      :ARG1 (s2 / seek-01\n            :ARG0 (p2 / person\n                  :ARG0-of (p3 / prosecute-01)\n                  :mod (c2 / country\n                        :name (n / name\n                              :op1 \"South\"\n                              :op2 \"Africa\")))\n            :ARG1 (p4 / permit-01\n                  :ARG1 (a / appeal-01\n                        :ARG0 p2\n                        :ARG1 (s3 / sentence-01\n                              :ARG1 (p5 / person\n                                    :name (n2 / name\n                                          :op1 \"Oscar\"\n                                          :op2 \"Pistorius\")\n                                    :mod (a2 / athlete))\n                              :ARG1-of (l / light-06\n                                    :ARG0-of (s4 / shock-01)))))))"], "tree": ["(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))", "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01)\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\")))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 p2\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :name (n2 / name\n                                                     :op1 \"Oscar\"\n                                                     :op2 \"Pistorius\")\n                                           :mod (a2 / athlete))))))"], "smus": ["Court papers show South Africans sought.", "South African prosecutors have sought permission to appeal the sentence given to athlete Oscar Pistorius."]}, {"instance_id": "pyrxsum-24", "summary": "The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.", "summary_trees": ["# ::snt The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.\n(o / open-01\n      :ARG1 (c / clinic\n            :mod (m / maternity)\n            :ord (o2 / ordinal-entity\n                  :value 1)\n            :location (c2 / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :beneficiary (w / woman\n                  :ARG1-of (v / victimize-01\n                        :ARG0 (a / and\n                              :op1 (r / rape-01\n                                    :ARG1 w)\n                              :op2 (a2 / assault-01\n                                    :ARG1 w\n                                    :manner (s / sex)))))))"], "tree": ["(o / open-01\n   :ARG1 (c / clinic\n            :mod (m / maternity)))", "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :manner (s / sex))))))", "(c / clinic\n   :mod (m / maternity)\n   :location (c2 / country\n                 :name (n / name\n                          :op1 \"UK\")))", "(c / clinic\n   :mod (m / maternity)\n   :location (c2 / country\n                 :name (n / name\n                          :op1 \"UK\"))\n   :beneficiary (w / woman\n                   :ARG1 (v / victimize-01\n                            :ARG0 (r / rape-01\n                                     :ARG1 w))))", "(a / and\n   :op2 (a2 / assault-01\n            :ARG1 (w / woman)))"], "smus": ["A maternity clinic has opened.", "A clinic was opened for women who have been victims of sexual assault.", "There is a maternity clinic in the UK.", "There is a maternity clinic in the UK for women who have been rape victims.", "and assault on women."]}, {"instance_id": "pyrxsum-25", "summary": "The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.", "summary_trees": ["# ::snt The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.\n(s / say-01\n      :ARG0 (f / figure\n            :ARG1-of (o / obtain-01\n                  :ARG0 (p / publication\n                        :name (n / name\n                              :op1 \"BBC\"))))\n      :ARG1 (ii / increase-01\n            :ARG1 (n2 / number\n                  :quant-of (c / child\n                        :ARG1-of (r / refer-02\n                              :ARG2 (g / government-organization\n                                    :name (n3 / name\n                                          :op1 \"NHS\"))\n                              :ARG1-of (c2 / cause-01\n                                    :ARG0 (ii2 / issue-02\n                                          :ARG0 (ii3 / identity\n                                                :mod (g2 / gender))\n                                          :ARG1 c)))))\n            :ARG2 (s2 / significant-02)\n            :time (y / year\n                  :mod (r2 / recent))))"], "tree": ["(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))", "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender))))))))", "(ii / increase-01\n    :time (y / year\n             :mod (r2 / recent)))", "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02))", "(r / refer-02\n   :ARG2 (g / government-organization\n            :name (n3 / name\n                      :op1 \"NHS\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG0 (ii3 / identity\n                                   :mod (g2 / gender)))))"], "smus": ["According to figures obtained by the BBC, the number has increased significantly.", "The number of children referred to as \"gender identity issues\" has increased.", "In recent years, it has increased.", "The number of children referred to the NHS has increased significantly.", "The NHS referred to gender identity issues."]}, {"instance_id": "pyrxsum-26", "summary": "The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.", "summary_trees": ["# ::snt The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / borough\n                        :location (e / east\n                              :part-of (c / city\n                                    :name (n / name\n                                          :op1 \"London\"))))\n                  :ARG2 (m / mayor)))\n      :ARG2 (p2 / practice-01\n            :ARG0 p\n            :ARG1-of (c2 / corrupt-01)\n            :ARG1-of (l / legal-02\n                  :polarity -))\n      :time (h2 / hearing-02\n            :ARG0 (c3 / court)\n            :ARG1 p\n            :ARG1-of (s / special-02)))"], "tree": ["(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))", "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))", "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))", "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person)\n             :ARG1-of (c2 / corrupt-01)\n             :ARG1-of (l / legal-02\n                         :polarity -)))", "(a / accuse-01\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)\n             :ARG1 (p / person)\n             :ARG1-of (s / special-02)))"], "smus": ["During the special hearing, people were accused of their practices.", "At a court hearing the borough of East London has been accused of illegal practices.", "The mayor has been accused of illegal practices at a court hearing.", "accused of illegal and corrupt practices.", "Accused at a special court hearing."]}, {"instance_id": "pyrxsum-27", "summary": "A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.", "summary_trees": ["# ::snt A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.\n(a / appear-01\n      :ARG1 (m / man\n            :age (t / temporal-quantity\n                  :quant 21\n                  :unit (y / year))\n            :ARG1-of (c / charge-05\n                  :ARG2 (s / stab-01\n                        :ARG1 (p / person\n                              :name (n / name\n                                    :op1 \"Karl\"\n                                    :op2 \"Haugh\"))\n                        :mod (f / fatal)\n                        :location (c2 / city\n                              :name (n2 / name\n                                    :op1 \"Kilkee\"))\n                        :time (w / weekend))))\n      :location (c3 / court\n            :location (c4 / county\n                  :name (n3 / name\n                        :op1 \"Clare\"))))"], "tree": ["(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal)))))", "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\"))))))", "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))", "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :mod (f / fatal)\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\"))\n   :time (w / weekend))", "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21\n                    :unit (y / year))\n            :ARG1-of (c / charge-05\n                        :ARG2 (s / stab-01\n                                 :ARG1 (p / person\n                                          :name (n / name\n                                                   :op1 \"Karl\"\n                                                   :op2 \"Haugh\"))\n                                 :mod (f / fatal)\n                                 :location (c2 / city\n                                               :name (n2 / name\n                                                         :op1 \"Kilkee\"))\n                                 :time (w / weekend)))))"], "smus": ["The man was apparently charged with fatal stab.", "The man charged with the stabbery in Kilkee has appeared.", "The man charged with Karl Haugh's stabbing appeared in Clare County court.", "Karl Haugh was fatally stabbed in Kilkee over the weekend.", "A 21-year-old man was appeared charged with fatally stabbing Karl Haugh in Kilkee over the weekend."]}, {"instance_id": "pyrxsum-28", "summary": "Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, workers union says.", "summary_trees": ["# ::snt Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, workers union says.\n(s / say-01\n      :ARG0 (u / union\n            :mod (p / person\n                  :ARG0-of (w / work-01)))\n      :ARG1 (s2 / strike-02\n            :ARG0 (p2 / person\n                  :ARG0-of (w2 / work-01\n                        :ARG2 (g / government-organization\n                              :name (n / name\n                                    :op1 \"Post\"\n                                    :op2 \"Office\"))))\n            :duration (t / temporal-quantity\n                  :quant 5\n                  :unit (d / day))\n            :time (f / from\n                  :op1 (d2 / date-entity\n                        :weekday (m / monday)))\n            :ARG1-of (c / cause-01\n                  :ARG0 (d3 / dispute-01\n                        :ARG2 (a / and\n                              :op1 (j / job)\n                              :op2 (p3 / pension)\n                              :op3 (c2 / close-01\n                                    :ARG1 (b / branch)))\n                        :ARG1-of (c3 / continue-01)))))"], "tree": ["(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))", "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG0 (p2 / person\n                       :ARG0 (w2 / work-01\n                                 :ARG2 (g / government-organization\n                                          :name (n / name\n                                                   :op1 \"Post\"\n                                                   :op2 \"Office\"))))\n             :duration (t / temporal-quantity\n                          :quant 5\n                          :unit (d / day))\n             :time (f / from\n                      :op1 (d2 / date-entity\n                               :weekday (m / monday)))\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (c2 / close-01\n                                          :ARG1 (b / branch))\n                                :ARG1 (c3 / continue-01)\n                                :ARG1 c3))))"], "smus": ["The Workers Union says strikes are being made over a continuing dispute.", "Workers Union says Post Office workers will take five-day strikes from Monday over a continuing dispute over branch closures."]}, {"instance_id": "pyrxsum-29", "summary": "Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.", "summary_trees": ["# ::snt Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.\n(r / regulate-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Education\"\n                  :op2 \"Workforce\"\n                  :op3 \"Council\"))\n      :ARG1 (p / person\n            :ARG0-of (w / work-01\n                  :ARG2 (y / youth))\n            :location (c / country\n                  :name (n2 / name\n                        :op1 \"Wales\")))\n      :ord (o / ordinal-entity\n            :value 1)\n      :time (f / from\n            :op1 (d / date-entity\n                  :month 4\n                  :day 1)))"], "tree": ["(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))", "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth))\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4\n                    :day 1)))"], "smus": ["Youth workers are the first to be regulated from April.", "Youth workers in Wales are the first to be regulated by the Education Workforce Council from April 1."]}, {"instance_id": "pyrxsum-30", "summary": "Liberal Democrat leader Tim Farron says Farron does not believe gay sex is a sin, following questions about Farron views on the subject.", "summary_trees": ["# ::snt Liberal Democrat leader Tim Farron says Farron does not believe gay sex is a sin, following questions about Farron views on the subject.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Farron\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Liberal\"\n                              :op2 \"Democrat\"))))\n      :ARG1 (b / believe-01\n            :polarity -\n            :ARG0 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Farron\"))\n            :ARG1 (s2 / sin-01\n                  :ARG0 (s3 / sex-01\n                        :ARG1 (p4 / person\n                              :ARG1-of (g / gay-01)))))\n      :ARG1-of (f / follow-01\n            :ARG2 (q / question-01\n                  :ARG1 (v / view-02\n                        :ARG0 p3\n                        :ARG1 (s4 / subject)))))"], "tree": ["(q / question-01\n   :ARG1 (v / view-02\n            :ARG1 (s4 / subject)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\")\n            :ARG0-of (l / lead-02\n                        :ARG1 (p2 / political-party\n                                  :name (n2 / name\n                                            :op1 \"Liberal\"\n                                            :op2 \"Democrat\"))))\n   :ARG1 (b / believe-01\n            :polarity -\n            :ARG0 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Farron\"))\n            :ARG1 (s2 / sin-01\n                      :ARG0 (s3 / sex-01\n                                :ARG1 (p4 / person\n                                          :ARG1-of (g / gay-01)))))\n   :ARG1-of (f / follow-01\n               :ARG2 (q / question-01\n                        :ARG1 (v / view-02\n                                 :ARG0 p3\n                                 :ARG1 (s4 / subject)))))", "(b / believe-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Farron\"))\n   :ARG1 (s2 / sin-01\n             :ARG0 (s3 / sex-01\n                       :ARG1 (p4 / person\n                                 :ARG1-of (g / gay-01))))\n   :polarity -)", "(f / follow-01\n   :ARG2 (q / question-01\n            :ARG1 (v / view-02\n                     :ARG0 (p3 / person :name (n3 / name :op1 \"Farron\"))\n                     :ARG1 (s4 / subject))))"], "smus": ["The views on the subject are questioned.", "Liberal Democrat leader Tim Farron says he does not believe that having sex with gay people is a sin following questioning his views on the subject.", "Farron does not believe that having sex with gay people is a sin.", "Following questioning of Ferran's views on the subject:"]}, {"instance_id": "pyrxsum-31", "summary": "Paint has been thrown over an Orange hall in north Belfast.", "summary_trees": ["# ::snt Paint has been thrown over an Orange hall in north Belfast.\n(t / throw-01\n      :ARG1 (p / paint)\n      :ARG2 (o / over\n            :op1 (h / hall\n                  :mod (o2 / organization\n                        :name (n / name\n                              :op1 \"Society\"\n                              :op2 \"of\"\n                              :op3 \"Orange\"))\n                  :location (n2 / north\n                        :part-of (c / city\n                              :name (n3 / name\n                                    :op1 \"Belfast\"))))))"], "tree": ["(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\")))))", "(t / throw-01\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\"))\n                    :location (n2 / north\n                                  :part-of (c / city\n                                              :name (n3 / name\n                                                        :op1 \"Belfast\"))))))"], "smus": ["Paint was thrown over the Orange Hall.", "Thrown over the Orange Society hall in northern Belfast."]}, {"instance_id": "pyrxsum-32", "summary": "Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after Mignolet latest uncertain display in the draw with Arsenal at Anfield.", "summary_trees": ["# ::snt Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after Mignolet latest uncertain display in the draw with Arsenal at Anfield.\n(d / defend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Liverpool\"))\n                  :ARG2 (b / boss)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Simon\"\n                  :op2 \"Mignolet\")\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (g / goalkeeper))\n            :ARG1-of (f / fire-02\n                  :mod (u / under)))\n      :time (a / after\n            :op1 (d2 / display-01\n                  :ARG0 p2\n                  :ARG1 (t2 / thing\n                        :ARG1-of (k / know-01\n                              :polarity -))\n                  :mod (l / last)\n                  :subevent-of (d3 / draw-01\n                        :ARG0 t\n                        :ARG1 (t3 / team\n                              :name (n4 / name\n                                    :op1 \"Arsenal\"))\n                        :location (s / sports-facility\n                              :name (n5 / name\n                                    :op1 \"Anfield\"))))))"], "tree": ["(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))", "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))", "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))"], "smus": ["Liverpool defender defended after last display.", "The goalkeeper defended after a display in the Liverpool draw.", "After a display of ignorance, the boss defended the under fire person."]}, {"instance_id": "pyrxsum-33", "summary": "Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.", "summary_trees": ["# ::snt Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.\n(l / leave-11\n      :ARG0 (p / person\n            :quant (m / multiple\n                  :op1 1000))\n      :ARG1 (d / district\n            :location (e / east)\n            :ARG1-of (b / besiege-01)\n            :ARG1-of (h / hold-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (r / rebel-01)))\n            :part-of (c / city\n                  :name (n / name\n                        :op1 \"Aleppo\")\n                  :location (c2 / country\n                        :name (n2 / name\n                              :op1 \"Syria\"))))\n      :ARG1-of (f / follow-01\n            :ARG2 (r2 / resume-01\n                  :ARG1 (e2 / evacuate-01\n                        :ARG1-of (a / agree-01\n                              :part-of (d2 / deal-01\n                                    :ARG2 (c3 / cease-01\n                                          :ARG1 (f2 / fire-01))\n                                    :time (w / week\n                                          :mod (l2 / last))))))))"], "tree": ["(l / leave-11\n   :ARG1 (d / district\n            :location (e / east)\n            :ARG1-of (b / besiege-01)\n            :ARG1-of (h / hold-01\n                        :ARG0 (p2 / person\n                                  :ARG0-of (r / rebel-01)))\n            :part-of (c / city\n                        :name (n / name\n                                 :op1 \"Aleppo\")\n                        :location (c2 / country\n                                      :name (n2 / name\n                                                :op1 \"Syria\")))))", "(l / leave-11\n   :ARG1-of (f / follow-01\n               :ARG2 (r2 / resume-01\n                         :ARG1 (e2 / evacuate-01\n                                   :ARG1-of (a / agree-01\n                                               :part-of (d2 / deal-01\n                                                            :ARG2 (c3 / cease-01\n                                                                      :ARG1 (f2 / fire-01))\n                                                            :time (w / week\n                                                                     :mod (l2 / last))))))))"], "smus": ["The besieged eastern districts held by the rebels are leaving the Syrian city of Aleppo.", "The evacuations were leaving following the resume of evacuations agreed as part of last week's cease-fire deal."]}, {"instance_id": "pyrxsum-34", "summary": "Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.", "summary_trees": ["# ::snt Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.\n(m / march-01\n      :ARG0 (p / person\n            :quant (m2 / multiple\n                  :op1 1000))\n      :purpose (o / oppose-01\n            :ARG0 p\n            :ARG1 (p2 / plan-01\n                  :ARG1 (d / downgrade-02\n                        :ARG1 (s / service\n                              :poss (h / hospital\n                                    :name (n / name\n                                          :op1 \"Stafford\"\n                                          :op2 \"Hospital\")))))))"], "tree": ["(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000)))", "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG1 (p2 / plan-01\n                         :ARG1 (d / downgrade-02\n                                  :ARG1 (s / service\n                                           :poss (h / hospital\n                                                    :name (n / name\n                                                             :op1 \"Stafford\"\n                                                             :op2 \"Hospital\")))))))"], "smus": ["Thousands marched.", "Thousands marched in opposition to plans to downgrade Stafford Hospital's services."]}, {"instance_id": "pyrxsum-35", "summary": "Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.", "summary_trees": ["# ::snt Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.\n(e / embark-01\n      :ARG0 (y / you\n            :ARG1-of (f / fill-01\n                  :ARG2 (a / and\n                        :op1 (g / goodwill)\n                        :op2 (o / optimism\n                              :ARG1-of (c / conceive-01\n                                    :polarity -))\n                        :op3 (h / heart\n                              :mod (h2 / heavy\n                                    :degree (s / slight))))))\n      :ARG1 (k / kick-01\n            :ARG0 y\n            :ARG1 (h3 / health)))"], "tree": ["(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill)))\n   :ARG1 (k / kick-01\n            :ARG0 y))", "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (h / heart\n                              :mod (h2 / heavy\n                                       :degree (s / slight)))))\n   :ARG1 (k / kick-01\n            :ARG1 (h3 / health)))", "(f / fill-01\n   :ARG2 (h / heart\n            :mod (h2 / heavy\n                     :degree (s / slight))))", "(e / embark-01\n   :ARG0 (y / you\n            :ARG1-of (f / fill-01\n                        :ARG2 (a / and\n                                 :op1 (g / goodwill)\n                                 :op2 (o / optimism\n                                         :ARG1-of (c / conceive-01\n                                                     :polarity -))\n                                 :op3 (h / heart\n                                         :mod (h2 / heavy\n                                                  :degree (s / slight)))))))", "(k / kick-01\n   :ARG0 (y / you)\n   :ARG1 (h3 / health))"], "smus": ["You embark on a kick, full of goodwill.", "You embark on a health kick, filled with a slightly heavy heart.", "A slightly heavy heart is filled.", "You embark filled with goodwill, unconcerned optimism and a slightly heavy heart.", "You're kicking health."]}, {"instance_id": "pyrxsum-36", "summary": "Russia and Qatar may have had to pay bribes to secure bribes World Cups, Sepp Blatter's former special advisor has suggested.", "summary_trees": ["# ::snt Russia and Qatar may have had to pay bribes to secure bribes World Cups, Sepp Blatter's former special advisor has suggested.\n(s / suggest-01\n      :ARG0 (p / person\n            :ARG0-of (a / advise-01\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Sepp\"\n                              :op2 \"Blatter\"))\n                  :time (f / former)\n                  :ARG1-of (s2 / special-02)))\n      :ARG1 (p3 / possible-01\n            :ARG1 (o / obligate-01\n                  :ARG1 (a2 / and\n                        :op1 (c / country\n                              :name (n2 / name\n                                    :op1 \"Russia\"))\n                        :op2 (c2 / country\n                              :name (n3 / name\n                                    :op1 \"Qatar\")))\n                  :ARG2 (p4 / pay-01\n                        :ARG0 a2\n                        :ARG1 (b / bribe-01)\n                        :purpose (s3 / secure-01\n                              :ARG0 a2\n                              :ARG1 (g / game\n                                    :name (n4 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")\n                                    :mod (b2 / bribe-01)))))))"], "tree": ["(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))", "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"Russia\"))\n             :ARG2 (p4 / pay-01\n                       :ARG0 c\n                       :ARG1 (b / bribe-01)\n                       :purpose (s3 / secure-01\n                                    :ARG0 c\n                                    :ARG1 (g / game\n                                             :name (n4 / name\n                                                       :op1 \"World\"\n                                                       :op2 \"Cup\")\n                                             :mod (b2 / bribe-01))))))"], "smus": ["Special advisers have suggested that it might have to pay to secure the World Cup.", "Russia may have to pay bribes to secure the World Cup bribes."]}, {"instance_id": "pyrxsum-37", "summary": "The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.", "summary_trees": ["# ::snt The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.\n(b / begin-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"High\"\n                  :op2 \"Court\"))\n      :ARG1 (h / hear-01\n            :ARG0 g\n            :ARG1 (c / challenge-01\n                  :ARG0 (m / man\n                        :ARG1-of (ii / ill-01\n                              :mod (t / terminal))\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"UK\"))\n                        :ARG0-of (w / want-01\n                              :ARG1 (r / right-05\n                                    :ARG1 m\n                                    :ARG2 (d / die-01\n                                          :ARG1 m))))\n                  :ARG1-of (l / legal-02))))"], "tree": ["(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :mod (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"UK\"))))))", "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG0 (w / want-01\n                              :ARG1 (r / right-05\n                                       :ARG2 (d / die-01\n                                                :ARG1 m))))))"], "smus": ["The High Court has begun hearing the challenge from a British man.", "hearing the challenge from a man who wants the right to die."]}, {"instance_id": "pyrxsum-38", "summary": "An online appeal set up to help the family of a five-year-old girl who died when girl head became stuck in a lift in Dorset has raised more than \u00a312,000.", "summary_trees": ["# ::snt An online appeal set up to help the family of a five-year-old girl who died when girl head became stuck in a lift in Dorset has raised more than \u00a312,000.\n(r / raise-02\n      :ARG0 (a / appeal-02\n            :mod (o / online)\n            :ARG1-of (s / set-up-03\n                  :purpose (h / help-01\n                        :ARG0 a\n                        :ARG1 (f / family\n                              :poss (g / girl\n                                    :age (t / temporal-quantity\n                                          :quant 5\n                                          :unit (y / year))\n                                    :ARG1-of (d / die-01\n                                          :ARG1-of (c / cause-01\n                                                :ARG0 (b / become-01\n                                                      :ARG1 (h2 / head\n                                                            :part-of (g2 / girl))\n                                                      :ARG2 (s2 / stick-01\n                                                            :ARG1 h2\n                                                            :ARG2 (l / lift)\n                                                            :location (c2 / county\n                                                                  :name (n / name\n                                                                        :op1 \"Dorset\")))))))))))\n      :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                  :quant 12000\n                  :unit (p / pound))))"], "tree": ["(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))", "(f / family\n   :poss (g / girl\n            :ARG1 (d / die-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (b / become-01\n                                       :ARG1 (h2 / head\n                                                 :part (g2 / girl)))))))"], "smus": ["An appeal to set up to help the family of the girl who died when her head became stuck has raised more than PS1,000.", "The family of the girl who died because her head became a'spin."]}, {"instance_id": "pyrxsum-39", "summary": "Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.", "summary_trees": ["# ::snt Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.\n(b / beat-03\n      :ARG0 (m / man\n            :source (c / city\n                  :name (n / name\n                        :op1 \"Swindon\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Mountain\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b2 / broadcast-program\n                        :name (n3 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))))\n      :ARG2 (t / title-01\n            :ARG1 p\n            :ARG2 (s / strong-02\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 m\n                        :ARG3 (m2 / most)\n                        :ARG5 (c2 / continent\n                              :name (n4 / name\n                                    :op1 \"Europe\"))))))"], "tree": ["(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))", "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))"], "smus": ["The Mountain was beaten by a Swindon man for the title of strongest.", "A Swindon man has beaten the Game of Thrones host to the title of Strongest European."]}, {"instance_id": "pyrxsum-40", "summary": "Labour leadership contender Andy Burnham has told supporters Burnham has an \"outside but realistic chance\" of winning the contest.", "summary_trees": ["# ::snt Labour leadership contender Andy Burnham has told supporters Burnham has an \"outside but realistic chance\" of winning the contest.\n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Andy\"\n                  :op2 \"Burnham\")\n            :ARG0-of (c / contend-02\n                  :ARG1 (l / lead-02\n                        :ARG1 (p2 / political-party\n                              :name (n2 / name\n                                    :op1 \"Labour\")))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (w / win-01\n                  :ARG0 p\n                  :ARG2 (c3 / contest-02))\n            :ARG2 (o / outside)\n            :ARG1-of (c4 / contrast-01\n                  :ARG2 (r / realistic-03\n                        :ARG1 c2)))\n      :ARG2 (p3 / person\n            :ARG0-of (s / support-01)))"], "tree": ["(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))))", "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2))))", "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))", "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 p))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))", "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))"], "smus": ["Andy Burnham's chance of winning was told.", "Andy Burnham has told the story that there is a chance but it is realistic.", "Supporters were told there was an outside chance.", "Andy Burnham has told supporters that he has a chance of winning.", "Labour's leadership contendors have told supporters there is a chance of winning the contest."]}, {"instance_id": "pyrxsum-41", "summary": "Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.", "summary_trees": ["# ::snt Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.\n(c / close-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Belfast\"\n                  :op2 \"Giants\"))\n      :ARG1 (g / gap)\n      :ARG4 (t2 / team\n            :name (n2 / name\n                  :op1 \"Cardiff\"\n                  :op2 \"Devils\")\n            :ARG0-of (l / lead-01\n                  :ARG1 (l2 / league\n                        :name (n3 / name\n                              :op1 \"Elite\"\n                              :op2 \"League\"))))\n      :extent (p / point\n            :quant 6)\n      :manner (w / win-01\n            :ARG0 t\n            :ARG4 (t3 / team\n                  :name (n4 / name\n                        :op1 \"Capitals\"))\n            :ARG0-of (c2 / comfortable-02)\n            :location (s / sports-facility\n                  :name (n5 / name\n                        :op1 \"SSE\"\n                        :op2 \"Arena\"))\n            :mod (t4 / this)))"], "tree": ["(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))", "(c / close-01\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6))", "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6))", "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :extent (p / point\n              :quant 6)\n   :manner (w / win-01\n              :ARG0 t\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))"], "smus": ["Belfast Giants have closed on the Carliff Devils.", "The gap has closed by six points.", "The Belfast Giants have closed the Elite League leaders by six points.", "The Belfast Giants have closed the gap to six points with this comfortable win over the Capitals at the SSE Arena."]}, {"instance_id": "pyrxsum-42", "summary": "Hayley Turner, Britain's most successful female jockey, believes Turner career has helped inspire other women to progress in the sport.", "summary_trees": ["# ::snt Hayley Turner, Britain's most successful female jockey, believes Turner career has helped inspire other women to progress in the sport.\n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Hayley\"\n                  :op2 \"Turner\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"Britain\"))\n                  :ARG2 (j / jockey\n                        :mod (f / female)\n                        :ARG1-of (s / succeed-01\n                              :ARG2-of (h2 / have-degree-91\n                                    :ARG1 j\n                                    :ARG3 (m / most))))))\n      :ARG1 (h3 / help-01\n            :ARG0 (c2 / career\n                  :poss p)\n            :ARG1 (ii / inspire-01\n                  :ARG0 c2\n                  :ARG1 (w / woman\n                        :mod (o / other))\n                  :ARG2 (p2 / progress-01\n                        :ARG1 w\n                        :ARG4 (s2 / sport)))))"], "tree": ["(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j)))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))", "(h3 / help-01\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG1 (w / woman))))", "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n             :ARG1 (ii / inspire-01\n                       :ARG0 c2\n                       :ARG1 (w / woman\n                                :mod (o / other))\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 w\n                                 :ARG4 (s2 / sport)))))"], "smus": ["A successful jockey believes that it has helped inspire women to progress.", "Helped inspire women to progress.", "Hayley Turner believes her career has helped inspire other women to progress in sport."]}, {"instance_id": "pyrxsum-43", "summary": "An elderly woman has died in a house fire in Enniskillen.", "summary_trees": ["# ::snt An elderly woman has died in a house fire in Enniskillen.\n(d / die-01\n      :ARG1 (w / woman\n            :mod (e / elderly))\n      :ARG1-of (c / cause-01\n            :ARG0 (f / fire\n                  :location (h / house)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Enniskillen\")))))"], "tree": ["(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly))\n   :ARG1-of (c / cause-01\n               :ARG0 (f / fire\n                        :location (h / house)\n                        :location (c2 / city\n                                      :name (n / name\n                                               :op1 \"Enniskillen\")))))", "(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly))\n   :ARG1 (c / cause-01\n            :ARG0 (f / fire)))"], "smus": ["An elderly woman died in a house fire in Enniskillen.", "An elderly woman died in the fire."]}, {"instance_id": "pyrxsum-44", "summary": "Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.", "summary_trees": ["# ::snt Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.\n(s / sign-02\n      :ARG0 (s2 / side\n            :name (n / name\n                  :op1 \"Fulham\")\n            :mod (c / championship))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Gohi\"\n                  :op2 \"Cyriac\")\n            :ARG0-of (s3 / strike-02))\n      :ARG3 (s4 / side\n            :name (n3 / name\n                  :op1 \"KV\"\n                  :op2 \"Oostende\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Pro\"\n                        :op2 \"League\")\n                  :mod (c2 / country\n                        :name (n5 / name\n                              :op1 \"Belgium\"))))\n      :manner (l2 / loan)\n      :time (u / until\n            :op1 (e / end-01\n                  :ARG1 (s5 / season))))"], "tree": ["(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))", "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))", "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))", "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))", "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))"], "smus": ["The championship side have signed a striker from the Pro League side.", "Fulham have signed Gohi Cyriac from a Pro League side until the end of the season.", "The striker was signed on loan from the Pro League side until the end of the season.", "Fulham have signed a striker on loan from the Pro League side until the end of the season.", "The championship side have signed a striker on loan from KV Oostende until the end of the season."]}, {"instance_id": "pyrxsum-45", "summary": "Wales started Wales 2018 World Cup qualifying campaign in confident fashion as Wales convincingly beat Moldova.", "summary_trees": ["# ::snt Wales started Wales 2018 World Cup qualifying campaign in confident fashion as Wales convincingly beat Moldova.\n(s / start-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Wales\"))\n      :ARG1 (c / campaign-01\n            :ARG0 t\n            :ARG1 (q / qualify-02\n                  :ARG2 (g / game\n                        :name (n2 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\")\n                        :time (d / date-entity\n                              :year 2018))))\n      :manner (c2 / confident-01\n            :ARG1 t)\n      :time (b / beat-03\n            :ARG0 t\n            :ARG1 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Moldova\"))\n            :ARG0-of (c3 / convince-01)))"], "tree": ["(s / start-01\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))", "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))", "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")\n                              :time (d / date-entity\n                                       :year 2018))))\n   :manner (c2 / confident-01\n               :ARG1 t))"], "smus": ["Wales started confident.", "Wales started their campaign when they beat Moldova.", "Wales started their campaign confidently for qualification for the 2018 World Cup."]}, {"instance_id": "pyrxsum-46", "summary": "The BBC's director general has accused the Iranian authorities of intimidating those working for general Persian service.", "summary_trees": ["# ::snt The BBC's director general has accused the Iranian authorities of intimidating those working for general Persian service.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / publication\n                        :name (n / name\n                              :op1 \"BBC\"))\n                  :ARG2 (d / director\n                        :mod (g / general))))\n      :ARG1 (a2 / authority\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Iran\")))\n      :ARG2 (ii / intimidate-01\n            :ARG0 a2\n            :ARG1 (p3 / person\n                  :ARG0-of (w / work-01\n                        :ARG2 (s / service\n                              :mod c\n                              :name (n3 / name\n                                    :op1 \"Persia\"))\n                        :mod (g2 / general)))))"], "tree": ["(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :name (n3 / name\n                                                   :op1 \"Persia\"))))))", "(w / work-01\n   :ARG2 (s / service\n            :mod (c / country :name (n2 / name :op1 \"Iran\"))\n            :name (n3 / name\n                      :op1 \"Persia\"))\n   :mod (g2 / general))"], "smus": ["Iranian authorities have been accused of intimidating people working in the Persian service.", "Working in general for the Iranian service."]}, {"instance_id": "pyrxsum-47", "summary": "A mother of six with an IQ of 70 should be sterilised for mother own safety, the Court of Protection has ruled.", "summary_trees": ["# ::snt A mother of six with an IQ of 70 should be sterilised for mother own safety, the Court of Protection has ruled.\n(r / rule-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Court\"\n                  :op2 \"of\"\n                  :op3 \"Protection\"))\n      :ARG3 (r2 / recommend-01\n            :ARG1 (s / sterilize-01\n                  :ARG1 (p / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / child\n                                    :quant 6)\n                              :ARG2 (m / mother))\n                        :ARG0-of (h2 / have-03\n                              :ARG1 (q / quotient\n                                    :quant 70\n                                    :degree-of (ii / intelligent-01))))\n                  :purpose (s2 / safe-01\n                        :ARG1 p))))"], "tree": ["(h / have-rel-role-91\n   :ARG1 (c / child\n            :quant 6))", "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG1 (c / child\n                                                 :quant 6)\n                                        :ARG2 (m / mother))\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :quant 70\n                                                  :degree (ii / intelligent-01)))))))"], "smus": ["has six children.", "The Court of Protection has ruled that a mother with six children with 70 intelligences should be sterilized."]}, {"instance_id": "pyrxsum-48", "summary": "China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).", "summary_trees": ["# ::snt China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).\n(j / join-01\n      :ARG0 (c / conglomerate\n            :name (n / name\n                  :op1 \"Fosun\")\n            :ARG1-of (o / own-01\n                  :ARG1-of (p / private-03))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (b / big)\n                  :ARG3 (m / most)\n                  :ARG5 (c2 / country\n                        :name (n2 / name\n                              :op1 \"China\"))))\n      :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                  :ARG3 (c3 / company\n                        :name (n3 / name\n                              :op1 \"Espirito\"\n                              :op2 \"Santo\"\n                              :op3 \"Saude\")\n                        :ARG0-of (o2 / operate-01\n                              :ARG1 (h2 / hospital))\n                        :mod (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Portugal\"))))))"], "tree": ["(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))", "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))"], "smus": ["The most conglomerate has joined the war over the bid for Espirito Santo Saude.", "The largest conglomerate has joined a war over a bid for the hospital operating company."]}, {"instance_id": "pyrxsum-49", "summary": "Bosses have been urged not to indulge in invasive surveillance by reading Bosses employees' private messages.", "summary_trees": ["# ::snt Bosses have been urged not to indulge in invasive surveillance by reading Bosses employees' private messages.\n(u / urge-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (b / boss)))\n      :ARG2 (ii / indulge-01\n            :polarity -\n            :ARG0 p\n            :ARG1 (s / surveil-01\n                  :ARG0 p\n                  :ARG0-of (ii2 / invade-01)\n                  :manner (r / read-01\n                        :ARG0 p\n                        :ARG1 (m / message-01\n                              :ARG0 (p2 / person\n                                    :ARG1-of (e / employ-01\n                                          :ARG0 p))\n                              :ARG1-of (p3 / private-02))))))"], "tree": ["(u / urge-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG2 (ii / indulge-01\n             :polarity -))", "(p2 / person\n    :ARG1 (e / employ-01\n             :ARG0 (p / person)))", "(u / urge-01\n   :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (b / boss)))\n   :ARG2 (ii / indulge-01\n             :polarity -\n             :ARG0 p\n             :ARG1 (s / surveil-01\n                      :ARG0 p\n                      :ARG0-of (ii2 / invade-01)\n                      :manner (r / read-01\n                                 :ARG0 p\n                                 :ARG1 (m / message-01\n                                          :ARG0 (p2 / person\n                                                    :ARG1-of (e / employ-01\n                                                                :ARG0 p))\n                                          :ARG1-of (p3 / private-02))))))"], "smus": ["Bosses are urged not to indulge.", "Employed.", "Bosses are urged not to indulge in invading surveillance by reading private employer messages."]}, {"instance_id": "pyrxsum-50", "summary": "Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.", "summary_trees": ["# ::snt Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.\n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01\n                  :ARG2 (ii / industry\n                        :mod (r / retail-01))))\n      :ARG1 (ii2 / increase-01\n            :ARG0 (c / chain\n                  :name (n / name\n                        :op1 \"Morrisons\")\n                  :mod (s2 / supermarket))\n            :ARG1 (c2 / cost-01\n                  :ARG1 (j / jar\n                        :consist-of (p2 / product\n                              :name (n2 / name\n                                    :op1 \"Mariane\"))))\n            :ARG2 (p3 / percentage-entity\n                  :value 12.5)))"], "tree": ["(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :mod (s2 / supermarket))))", "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\")\n              :mod (s2 / supermarket))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))"], "smus": ["Retail industry experts say supermarket chain has increased.", "The supermarket chain Morrisons has increased the cost of a jar of Mariane by 12.5%."]}, {"instance_id": "pyrxsum-51", "summary": "More should be done to help deaf people into work in Wales, a charity has said.", "summary_trees": ["# ::snt More should be done to help deaf people into work in Wales, a charity has said.\n(s / say-01\n      :ARG0 (c / charity)\n      :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                  :ARG1 (m / more)\n                  :ARG2 (h / help-01\n                        :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                    :ARG0-of (d2 / deaf-02))\n                              :location (c2 / country\n                                    :name (n / name\n                                          :op1 \"Wales\")))\n                        :ARG2 p))))"], "tree": ["(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG1 (m / more)))", "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG2 (p / person\n                              :ARG0 (d2 / deaf-02)))))", "(h / help-01\n   :ARG1 (w / work-01\n            :location (c2 / country\n                          :name (n / name\n                                   :op1 \"Wales\"))))", "(s / say-01\n   :ARG0 (c / charity))", "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more)\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :ARG0 (p / person\n                                                :ARG0-of (d2 / deaf-02))\n                                       :location (c2 / country\n                                                     :name (n / name\n                                                              :op1 \"Wales\")))\n                              :ARG2 p))))"], "smus": ["More should be done.", "It should be done to help the deaf.", "Help work in Wales.", "Charity said.", "The charity has said more should be done to help deaf people in Wales work."]}, {"instance_id": "pyrxsum-52", "summary": "Five teenagers have been sentenced after admitting teenagers part in a \"riot\" which saw part of Newport city centre \"under siege\".", "summary_trees": ["# ::snt Five teenagers have been sentenced after admitting teenagers part in a \"riot\" which saw part of Newport city centre \"under siege\".\n(s / sentence-01\n      :ARG1 (t / teenager\n            :quant 5)\n      :time (a / after\n            :op1 (a2 / admit-01\n                  :ARG0 t\n                  :ARG1 (p / participate-01\n                        :ARG0 (t2 / teenager)\n                        :ARG1 (r / riot-01\n                              :ARG0-of (s2 / see-01\n                                    :ARG1 (s3 / siege-01\n                                          :ARG1 (p2 / part\n                                                :part-of (c / center\n                                                      :part-of (c2 / city\n                                                            :name (n / name\n                                                                  :op1 \"Newport\")))))))))))"], "tree": ["(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG0 t)))", "(p / participate-01\n   :ARG0 (t2 / teenager)\n   :ARG1 (r / riot-01\n            :ARG0 (s2 / see-01\n                      :ARG1 (s3 / siege-01\n                                :ARG1 (p2 / part\n                                          :part (c / center\n                                                   :part (c2 / city\n                                                             :name (n / name\n                                                                      :op1 \"Newport\"))))))))"], "smus": ["Five teenagers were sentenced after admitting.", "Teenagers took part in a riot that saw the siege of part of the city center of Newport."]}, {"instance_id": "pyrxsum-53", "summary": "Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.", "summary_trees": ["# ::snt Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.\n(a / and\n      :op1 (f / fetch-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG2 (d / dog\n                  :poss y))\n      :op2 (s / sit-01\n            :mode imperative\n            :ARG1 y\n            :ARG2 d)\n      :op3 (r / roll-01\n            :mode imperative\n            :ARG0 y\n            :ARG2 (o / over))\n      :domain (t / thing\n            :ARG1-of (n / normal-02)\n            :mod (k / kind\n                  :mod (a2 / all))\n            :ARG1-of (s2 / say-01\n                  :ARG0 y\n                  :ARG2 d)))"], "tree": ["(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative))", "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))", "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))"], "smus": ["fetch your dog, sit and roll.", "Things to say to your dog are to fetch, sit on your dog and roll.", "All kinds of things are to fetch your dog, sit and roll."]}, {"instance_id": "pyrxsum-54", "summary": "A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.", "summary_trees": ["# ::snt A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.\n(d / decide-01\n      :ARG0 (j / jury\n            :mod (g / grand))\n      :ARG1 (ii / indict-01\n            :polarity -\n            :ARG0 j\n            :ARG1 (a / anyone)\n            :topic (c / case-04\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Sandra\"\n                              :op2 \"Bland\")\n                        :ARG1-of (d2 / die-01\n                              :location (j2 / jail\n                                    :location (s / state\n                                          :name (n2 / name\n                                                :op1 \"Texas\")))\n                              :time (b / before)\n                              :time (y / year\n                                    :mod (t / this)))))))"], "tree": ["(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :ARG1 (a / anyone)))", "(ii / indict-01\n    :polarity -\n    :ARG0 (j / jury)\n    :ARG1 (a / anyone)\n    :topic (c / case-04\n              :ARG1 (p / person\n                       :name (n / name\n                                :op1 \"Sandra\"\n                                :op2 \"Bland\")\n                       :ARG1 (d2 / die-01\n                                 :location (j2 / jail\n                                               :location (s / state\n                                                            :name (n2 / name\n                                                                      :op1 \"Texas\")))\n                                 :time (b / before)\n                                 :time (y / year\n                                          :mod (t / this))))))"], "smus": ["The grand jury has decided not to indict anyone.", "The jury did not indict anyone in the case of Sandra Land, who died earlier this year in jail in Texas."]}, {"instance_id": "pyrxsum-55", "summary": "A man was limp \"like a teddy bear\" after man was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.", "summary_trees": ["# ::snt A man was limp \"like a teddy bear\" after man was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.\n(h / hear-01\n      :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n      :ARG1 (l / limp-01\n            :ARG1 (m2 / man)\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b / bear\n                        :mod (t2 / teddy)))\n            :time (a / after\n                  :op1 (r2 / restrain-01\n                        :ARG0 (p / person\n                              :ARG0-of (h2 / have-org-role-91\n                                    :ARG2 (b2 / bouncer)))\n                        :ARG1 m2\n                        :location (g / ground\n                              :location (o / outside\n                                    :op1 (b3 / bar\n                                          :location (c / city\n                                                :name (n / name\n                                                      :op1 \"Aberdeen\")))))))))"], "tree": ["(l / limp-01\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG1 (m2 / man))))", "(h / hear-01\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)\n            :ARG1-of (r / resemble-01\n                        :ARG2 (b / bear\n                                 :mod (t2 / teddy)))\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG0 (p / person\n                                       :ARG0-of (h2 / have-org-role-91\n                                                    :ARG2 (b2 / bouncer)))\n                              :ARG1 m2\n                              :location (g / ground\n                                           :location (o / outside\n                                                        :op1 (b3 / bar\n                                                                 :location (c / city\n                                                                              :name (n / name\n                                                                                       :op1 \"Aberdeen\")))))))))"], "smus": ["After the man was restrained, he was limping.", "The man was heard limping like a teddy bear after being restrained by bouncers on the ground outside an Aberdeen bar."]}, {"instance_id": "pyrxsum-56", "summary": "A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking busker was collecting for a Hillsborough charity.", "summary_trees": ["# ::snt A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking busker was collecting for a Hillsborough charity.\n(c / convict-01\n      :ARG1 (b / busker\n            :ARG0-of (p / play-11\n                  :ARG2 (b2 / bagpipe)))\n      :ARG2 (d / dupe-01\n            :ARG0 b\n            :ARG1 (p2 / person\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Liverpool\")))\n            :ARG2 (t / think-01\n                  :ARG0 p2\n                  :ARG1 (c3 / collect-01\n                        :ARG0 b\n                        :ARG3 (c4 / charity\n                              :mod (e / event\n                                    :name (n2 / name\n                                          :op1 \"Hillsborough\")))))))"], "tree": ["(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG0 b))", "(b / busker\n   :ARG0 (p / play-11\n            :ARG2 (b2 / bagpipe)))", "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 (b / busker))))", "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG0 p2))", "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG0 b\n            :ARG1 (p2 / person\n                      :location (c2 / city\n                                    :name (n / name\n                                             :op1 \"Liverpool\")))\n            :ARG2 (t / think-01\n                     :ARG0 p2\n                     :ARG1 (c3 / collect-01\n                               :ARG0 b\n                               :ARG3 (c4 / charity\n                                         :mod (e / event\n                                                 :name (n2 / name\n                                                           :op1 \"Hillsborough\")))))))"], "smus": ["A busker playing the bagpipe was convicted of duping.", "Playing bagpipes is a busker.", "Dupeing the thought of the busker collecting.", "Duping Liverpool people for their thinking.", "A busker playing bagpipes was convicted of duping a Liverpool person into thinking he was collecting for a Hillsborough charity."]}, {"instance_id": "pyrxsum-57", "summary": "New Morocco coach Herve Renard begins Renard quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.", "summary_trees": ["# ::snt New Morocco coach Herve Renard begins Renard quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.\n(b / begin-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Herve\"\n                  :op2 \"Renard\")\n            :ARG0-of (c / coach-01\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Morocco\")))\n            :ARG1-of (n3 / new-01))\n      :ARG1 (q / quest-01\n            :ARG0 p\n            :ARG1 (q2 / qualify-02\n                  :ARG2 (g / game\n                        :name (n4 / name\n                              :op1 \"Africa\"\n                              :op2 \"Cup\"\n                              :op3 \"of\"\n                              :op4 \"Nations\")\n                        :ord (o / ordinal-entity\n                              :value 3)\n                        :ARG0-of (e / equal-01\n                              :ARG1 (r / record)))))\n      :time (r2 / resume-01\n            :ARG1 q2\n            :time (w / week\n                  :mod (t2 / this))))"], "tree": ["(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))", "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))", "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))", "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))"], "smus": ["When qualifying for the record-equaling game resumes, Herve Renard's quest begins.", "The quest for qualifying for the Africa Cup of Nations begins when it resumes.", "Morocco coach begins quest for qualifying for third game with record equaling as quest resumes.", "The new person begins the quest for qualifying for the record-equaling game when it resumes."]}, {"instance_id": "pyrxsum-58", "summary": "Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.", "summary_trees": ["# ::snt Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.\n(t / top-01\n      :ARG1 (l / list\n            :name (n / name\n                  :op1 \"Sound\"\n                  :op2 \"Of\"\n                  :op3 \"2017\")\n            :poss (p / publication\n                  :name (n2 / name\n                        :op1 \"BBC\"))\n            :ARG0-of (a / aim-01\n                  :ARG1 (p2 / predict-01\n                        :ARG1 (m / music\n                              :ARG1-of (n3 / new-01)\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (e / excite-01\n                                          :ARG0 m)\n                                    :ARG3 (m2 / most))\n                              :time (y / year\n                                    :mod (a2 / ahead))))))\n      :ARG2 (p3 / person\n            :name (n4 / name\n                  :op1 \"Ray\"\n                  :op2 \"BlK\")\n            :ARG0-of (s / sing-01\n                  :ARG1 (s2 / soul))))"], "tree": ["(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :time (y / year\n                                                 :mod (a2 / ahead))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))", "(l / list\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (n3 / new-01)))))", "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :time (y / year\n                               :mod (a2 / ahead)))))", "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\"))\n   :ARG0-of (a / aim-01\n               :ARG1 (p2 / predict-01\n                         :ARG1 (m / music\n                                  :ARG1-of (n3 / new-01)\n                                  :ARG1-of (h / have-degree-91\n                                              :ARG2 (e / excite-01\n                                                       :ARG0 m)\n                                              :ARG3 (m2 / most))\n                                  :time (y / year\n                                           :mod (a2 / ahead))))))"], "smus": ["Ray Blak tops list that aims to predict music for the year ahead", "a list that aims to predict new music", "aims to predict the music for the year ahead.", "The BBC's Sound of 2017 list aims to predict the new music that will be the most exciting ahead year."]}, {"instance_id": "pyrxsum-59", "summary": "Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.", "summary_trees": ["# ::snt Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / protest-01)\n            :quant (m / multiple\n                  :op1 100)\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Kabul\")))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 \"Iran\"))\n      :ARG2 (s / stop-03\n            :ARG0 c2\n            :ARG1 (t / tanker\n                  :mod (f / fuel))\n            :ARG2 (c3 / cross-02\n                  :ARG0 t\n                  :ARG1 (b / border-01\n                        :ARG2 (c4 / country\n                              :name (n3 / name\n                                    :op1 \"Afghanistan\"))))))"], "tree": ["(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))", "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))\n            :ARG1 (t / tanker\n                     :mod (f / fuel))\n            :ARG2 (c3 / cross-02\n                      :ARG0 t\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))"], "smus": ["Hundreds have accused Iran of stopping.", "Iran is accused of stopping fuel tankers from crossing the border with Afghanistan."]}, {"instance_id": "pyrxsum-60", "summary": "Some police forces are putting the public at risk by rationing forces response as forces struggle with cutbacks, the police standards watchdog has warned.", "summary_trees": ["# ::snt Some police forces are putting the public at risk by rationing forces response as forces struggle with cutbacks, the police standards watchdog has warned.\n(w / warn-01\n      :ARG0 (w2 / watchdog\n            :mod (s / standard\n                  :mod (p / police)))\n      :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                  :quant (s2 / some)\n                  :mod p)\n            :ARG1 (p2 / public)\n            :manner (r / ration-01\n                  :ARG0 f\n                  :ARG1 (t / thing\n                        :ARG2-of (r2 / respond-01\n                              :ARG0 f))\n                  :time (s3 / struggle-02\n                        :ARG0 f\n                        :ARG1 (c / cut-back-05)))))"], "tree": ["(w / warn-01\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))", "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))", "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))", "(r / ration-01\n   :ARG1 (t / thing\n            :ARG2 (r2 / respond-01\n                      :ARG0 (f / force)))\n   :time (s3 / struggle-02\n             :ARG1 (c / cut-back-05)))", "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some)\n            :mod (p / police))\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG0 f\n              :ARG1 (t / thing\n                       :ARG2-of (r2 / respond-01\n                                    :ARG0 f))\n              :time (s3 / struggle-02\n                        :ARG0 f\n                        :ARG1 (c / cut-back-05))))"], "smus": ["Some forces have been warned to be in danger.", "Rationing as forces struggle is warned of danger.", "A police standards watchdog has warned of dangers from forces rationing.", "Rationing of forces response as they struggle to cut back", "Some police forces are putting the public in danger by rationing their response while they struggle to cut back."]}, {"instance_id": "pyrxsum-61", "summary": "Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.", "summary_trees": ["# ::snt Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chris\"\n                  :op2 \"Read\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Nottinghamshire\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jake\"\n                        :op2 \"Ball\")\n                  :ARG0-of (b / bowl-01\n                        :manner (p3 / pace-01)))\n            :ARG1-of (l / lively-00)\n            :ARG1-of (f / follow-01\n                  :ARG2 (p4 / play-01\n                        :ARG0 p2\n                        :ARG3 (t2 / team\n                              :name (n4 / name\n                                    :op1 \"England\"\n                                    :op2 \"Lions\"))\n                        :time (d / date-entity\n                              :season (w / winter))))))"], "tree": ["(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))", "(p4 / play-01\n    :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))\n    :ARG3 (t2 / team\n              :name (n4 / name\n                        :op1 \"England\"\n                        :op2 \"Lions\"))\n    :time (d / date-entity\n             :season (w / winter)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\")\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\")\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))\n            :ARG1 (l / lively-00)\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG0 p2\n                               :ARG3 (t2 / team\n                                         :name (n4 / name\n                                                   :op1 \"England\"\n                                                   :op2 \"Lions\"))\n                               :time (d / date-entity\n                                        :season (w / winter))))))"], "smus": ["\"A lively return,\" says Chris Read.", "The captain says the return will be following winter play.", "Jake Ball played for the England Lions in the winter.", "Chris Read, captain of Nottinghamshire, says Jake Ball's pace bowling return will be \"liveable\" following his winter play against the England Lions."]}, {"instance_id": "pyrxsum-62", "summary": "A serial robber who threatened an 18-year-old shop worker with a knife was caught after robber streak of grey hair was recognised in CCTV footage.", "summary_trees": ["# ::snt A serial robber who threatened an 18-year-old shop worker with a knife was caught after robber streak of grey hair was recognised in CCTV footage.\n(c / catch-01\n      :ARG1 (p / person\n            :ARG0-of (r / rob-01\n                  :mod (s / serial))\n            :ARG0-of (t / threaten-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (w / work-01\n                              :ARG2 (s2 / shop))\n                        :age (t2 / temporal-quantity\n                              :quant 18\n                              :unit (y / year)))\n                  :ARG2 (k / knife))\n            :ARG0-of (s3 / streak-01\n                  :ARG1 (h / hair\n                        :ARG1-of (g / gray-02))))\n      :time (a / after\n            :op1 (r2 / recognize-02\n                  :ARG1 p\n                  :location (f / footage\n                        :mod (t3 / television\n                              :mod (c2 / circuit\n                                    :ARG1-of (c3 / close-01)))))))"], "tree": ["(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))", "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))", "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop))))", "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial))\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop))\n                               :age (t2 / temporal-quantity\n                                        :quant 18\n                                        :unit (y / year)))\n                     :ARG2 (k / knife))\n            :ARG0 (s3 / streak-01\n                      :ARG1 (h / hair\n                               :ARG1 (g / gray-02)))))", "(c / catch-01\n   :time (a / after\n            :op1 (r2 / recognize-02)))"], "smus": ["The person who threatened the shop worker was caught after being recognized.", "The knife-threatened people were caught after the CCTV footage was recognized.", "The shop worker threatened.", "A serial robber was caught with a gray hair streak when a 18 year old shop worker threatened with a knife.", "Catched after being recognized."]}, {"instance_id": "pyrxsum-63", "summary": "A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.", "summary_trees": ["# ::snt A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.\n(r / report-01\n      :ARG0 (m / media\n            :ARG1-of (l / local-02))\n      :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :ARG1 (f / fall-01\n                  :ARG1 m2\n                  :ARG3 (f2 / floor\n                        :ord (o / ordinal-entity\n                              :value 15)\n                        :part-of (b / building\n                              :location (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"New\"\n                                          :op2 \"Zealand\")))))))"], "tree": ["(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :ord (o / ordinal-entity\n                              :value 15))))", "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG1 m2))", "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))\n            :ARG1 (f / fall-01\n                     :ARG1 m2\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)\n                               :part (b / building\n                                        :location (c2 / country\n                                                      :name (n2 / name\n                                                                :op1 \"New\"\n                                                                :op2 \"Zealand\")))))))"], "smus": ["The fall from the 15th floor has survived.", "The British man survived the fall.", "Local media reports that a British man has survived a fall from the 15th floor of a New Zealand building."]}, {"instance_id": "pyrxsum-64", "summary": "The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.", "summary_trees": ["# ::snt The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.\n(r / release-01\n      :ARG0 (m / military\n            :name (n / name\n                  :op1 \"Royal\"\n                  :op2 \"Navy\"))\n      :ARG1 (ii / image\n            :topic (ii2 / improve-01\n                  :ARG1 (j / jetty\n                        :location (f / facility\n                              :name (n2 / name\n                                    :op1 \"Portsmouth\"\n                                    :op2 \"Naval\"\n                                    :op3 \"Base\")))\n                  :ARG1-of (p / plan-01))))"], "tree": ["(r / release-01\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))", "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\"))\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (j / jetty\n                                  :location (f / facility\n                                               :name (n2 / name\n                                                         :op1 \"Portsmouth\"\n                                                         :op2 \"Naval\"\n                                                         :op3 \"Base\")))\n                         :ARG1-of (p / plan-01))))"], "smus": ["The image was released of planned improvements.", "The Royal Navy has released an image of planned improvements to the jetty at Portsmouth Naval Base."]}, {"instance_id": "pyrxsum-65", "summary": "China has said Japan is endangering peace in the region after China passed controversial laws expanding the role of China military abroad.", "summary_trees": ["# ::snt China has said Japan is endangering peace in the region after China passed controversial laws expanding the role of China military abroad.\n(s / say-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 \"China\"))\n      :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Japan\"))\n            :ARG1 (p / peace\n                  :location (r / region)))\n      :time (a / after\n            :op1 (p2 / pass-01\n                  :ARG0 c\n                  :ARG2 (l / law\n                        :mod (c3 / controversy)\n                        :ARG0-of (e2 / expand-01\n                              :ARG1 (r2 / role\n                                    :poss (m / military\n                                          :poss c\n                                          :location (a2 / abroad))))))))"], "tree": ["(s / say-01\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))", "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c / country :name (n / name :op1 \"China\")))))))))"], "smus": ["said after laws expanding the role of the military abroad passed.", "Endangering peace in the region was said after laws expanding the role of China's military passed."]}, {"instance_id": "pyrxsum-66", "summary": "Celtic restored Celtic 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.", "summary_trees": ["# ::snt Celtic restored Celtic 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.\n(r / restore-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Celtic\"))\n      :ARG1 (l / lead-01\n            :ARG0 t\n            :ARG2 (p / point\n                  :quant 10)\n            :location (t2 / top\n                  :part-of (t3 / table)))\n      :time (a / after\n            :op1 (o / overcome-01\n                  :ARG0 t\n                  :ARG1 (t4 / team\n                        :name (n2 / name\n                              :op1 \"Inverness\"\n                              :op2 \"Cedonian\"\n                              :op3 \"Thistle\")))))"], "tree": ["(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t))", "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))"], "smus": ["Celtic restored leadership.", "After defeating Inverness Celtic thistle, the lead was restored to 10 points."]}, {"instance_id": "pyrxsum-67", "summary": "England captain Sean O'Loughlin says O'Loughlin would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.", "summary_trees": ["# ::snt England captain Sean O'Loughlin says O'Loughlin would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sean\"\n                  :op2 \"O'Loughlin\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"England\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (c2 / contrast-01\n            :ARG1 (p2 / prefer-01\n                  :ARG0 p\n                  :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                              :mod (c4 / country)\n                              :ARG2 (t2 / team\n                                    :mod (n3 / nation))))\n                  :ARG2 (l / look-forward-03\n                        :ARG0 p\n                        :ARG1 (w / work-01\n                              :ARG3 (p3 / person\n                                    :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")\n                                    :mod c4\n                                    :name (n5 / name\n                                          :op1 \"Australia\")))))))"], "tree": ["(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))", "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :ARG2 (t2 / team\n                                 :mod (n3 / nation))))\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))", "(l / look-forward-03\n   :ARG1 (w / work-01\n            :ARG3 (p3 / person\n                      :name (n5 / name\n                                :op1 \"Australia\"))))"], "smus": ["But it would be preferable to have a national team man in charge, says an Englishman.", "The national team's man in charge would be preferred over Sean O'Loughlin looking forward.", "Looking forward to working with Australians."]}, {"instance_id": "pyrxsum-68", "summary": "Promotion-chasing Stevenage were held to a by Cambridge in League Two.", "summary_trees": ["# ::snt Promotion-chasing Stevenage were held to a by Cambridge in League Two.\n(h / hold-04\n      :ARG0 (u / university\n            :name (n / name\n                  :op1 \"Cambridge\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Stevenage\")\n            :ARG0-of (c / chase-01\n                  :ARG1 (p / promote-01\n                        :ARG1 t)))\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"League\"\n                  :op2 \"Two\")))"], "tree": ["(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))", "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")\n            :ARG0-of (c / chase-01\n                        :ARG1 (p / promote-01\n                                 :ARG1 t))))", "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")\n            :ARG0-of (c / chase-01\n                        :ARG1 (p / promote-01\n                                 :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))"], "smus": ["The team chasing promotion is held in the League Two.", "Cambridge has held Stevenage chasing promotion.", "Cambridge has held Stevenage in the League Two chasing promotion."]}, {"instance_id": "pyrxsum-69", "summary": "Yet again, we are looking at shocking pictures of a plane crash.", "summary_trees": ["# ::snt Yet again, we are looking at shocking pictures of a plane crash.\n(l / look-01\n      :ARG0 (w / we)\n      :ARG1 (p / picture\n            :topic (c / crash-01\n                  :ARG1 (p2 / plane))\n            :ARG0-of (s / shock-01))\n      :mod (a / again\n            :mod (y / yet)))"], "tree": ["(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))", "(l / look-01\n   :ARG0 (w / we)\n   :mod (a / again\n           :mod (y / yet)))", "(l / look-01\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))\n            :ARG0-of (s / shock-01)))", "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))\n            :ARG0 (s / shock-01)))"], "smus": ["We're looking at shocking pictures.", "We are looking yet again.", "Looking at the shocking pictures of the plane crash.", "We are looking at the shocking pictures of the plane crash."]}, {"instance_id": "pyrxsum-70", "summary": "Prime Minister David Cameron will later attempt to halt the civil war in Cameron party caused by Iain Duncan Smith's resignation from the cabinet.", "summary_trees": ["# ::snt Prime Minister David Cameron will later attempt to halt the civil war in Cameron party caused by Iain Duncan Smith's resignation from the cabinet.\n(a / attempt-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Cameron\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p2 / prime))))\n      :ARG1 (h2 / halt-01\n            :ARG0 p\n            :ARG1 (w / war-01\n                  :ARG0 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Cameron\"))\n                  :mod (c / civil)\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (r / resign-01\n                              :ARG0 (p4 / person\n                                    :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\"))\n                              :ARG1 (c3 / cabinet)))))\n      :time (a2 / after))"], "tree": ["(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\")))", "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))", "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))", "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG1 (c3 / cabinet)))))", "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))"], "smus": ["David Cameron will attempt.", "attempt to halt the Cameron war.", "David Cameron will later attempt to halt the war caused by the resignation of the cabinet.", "halt the war caused by the resignation of the cabinet.", "The war was caused by the resignation of Iain Duncan Smith."]}, {"instance_id": "pyrxsum-71", "summary": "The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.", "summary_trees": ["# ::snt The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.\n(s / say-01\n      :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                  :name (n / name\n                        :op1 \"US\"\n                        :op2 \"Census\")))\n      :ARG1 (c / change-01\n            :polarity -\n            :ARG1 (p / percentage\n                  :quant-of (p2 / person\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"America\"))\n                        :ARG0-of (l / live-01\n                              :manner (p3 / poor))))\n            :ARG2 (h / high-02\n                  :ARG1 p\n                  :mod (r2 / record)\n                  :time (d / date-entity\n                        :year 2010))\n            :mod (s2 / statistical)\n            :concession (e / even-as\n                  :op1 (f / fall-01\n                        :ARG1 (ii / income\n                              :mod (h2 / household))))))"], "tree": ["(p2 / person\n    :ARG0 (l / live-01\n             :manner (p3 / poor)))", "(e / even-as\n   :op1 (f / fall-01\n           :ARG1 (ii / income\n                     :mod (h2 / household))))", "(s / say-01\n   :ARG1 (c / change-01\n            :polarity -\n            :ARG1 (p / percentage\n                     :quant-of (p2 / person\n                                   :mod (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"America\"))\n                                   :ARG0-of (l / live-01\n                                               :manner (p3 / poor))))\n            :ARG2 (h / high-02\n                     :ARG1 p\n                     :mod (r2 / record)\n                     :time (d / date-entity\n                              :year 2010))\n            :mod (s2 / statistical)\n            :concession (e / even-as\n                           :op1 (f / fall-01\n                                   :ARG1 (ii / income\n                                             :mod (h2 / household))))))", "(s / say-01\n   :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"US\"\n                              :op2 \"Census\")))\n   :ARG1 (c / change-01\n            :polarity -\n            :ARG1 (p / percentage)))"], "smus": ["People living in poverty.", "Even as household income fell.", "The percentage of Americans living in poverty hasn't statistically changed from the record high of 2010 even as household income fell.", "The US Census report says the percentage is unchanged."]}, {"instance_id": "pyrxsum-72", "summary": "A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.", "summary_trees": ["# ::snt A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (d / die-01\n            :ARG1 (w / woman\n                  :ARG1-of (ii / injure-01\n                        :ARG0 (a / attack-01\n                              :ARG0 (k / knifeman)\n                              :ARG1 w\n                              :location (t / train\n                                    :mod (c / country\n                                          :name (n / name\n                                                :op1 \"Switzerland\")))))\n                  :age (t2 / temporal-quantity\n                        :quant 34\n                        :unit (y / year)))\n            :location (h / hospital)))"], "tree": ["(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :age (t2 / temporal-quantity\n                              :quant 34))))", "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :location (t / train\n                                   :mod (c / country\n                                           :name (n / name\n                                                    :op1 \"Switzerland\"))))))", "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :ARG1 w))\n   :age (t2 / temporal-quantity\n            :quant 34))"], "smus": ["The 34-year-old woman has died, the say.", "A woman was injured in the attack on a Swiss train.", "The 34-year-old woman was injured in the attack."]}, {"instance_id": "pyrxsum-73", "summary": "Boeing has shown off Boeing \"space bins\" that can hold 50% more luggage than existing designs.", "summary_trees": ["# ::snt Boeing has shown off Boeing \"space bins\" that can hold 50% more luggage than existing designs.\n(s / show-off-03\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Boeing\"))\n      :ARG1 (b / bin\n            :mod (s2 / space)\n            :poss c\n            :ARG0-of (h / hold-01\n                  :ARG1 (l / luggage\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (m / more\n                                    :quant (p / percentage-entity\n                                          :value 50))\n                              :ARG4 (l2 / luggage\n                                    :ARG1-of (d / design-01\n                                          :ARG1-of (e / exist-01)))))\n                  :ARG1-of (p2 / possible-01))))"], "tree": ["(s / show-off-03\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (p2 / possible-01))))", "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :poss c))", "(b / bin\n   :ARG0 (h / hold-01\n            :ARG1 (l / luggage\n                     :ARG1 (h2 / have-quant-91\n                               :ARG3 (m / more\n                                        :quant (p / percentage-entity\n                                                  :value 50))))))", "(b / bin\n   :mod (s2 / space)\n   :poss (c / company :name (n / name :op1 \"Boeing\"))\n   :ARG0-of (h / hold-01\n               :ARG1 (l / luggage\n                        :ARG1-of (h2 / have-quant-91\n                                     :ARG3 (m / more\n                                              :quant (p / percentage-entity\n                                                        :value 50))\n                                     :ARG4 (l2 / luggage\n                                               :ARG1-of (d / design-01\n                                                           :ARG1-of (e / exist-01)))))\n               :ARG1-of (p2 / possible-01)))", "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG3 (m / more\n                               :quant (p / percentage-entity\n                                         :value 50))\n                      :ARG4 (l2 / luggage))))"], "smus": ["Bins to hold a possible were shown off.", "Boeing has shown off its bins.", "There are bins to hold 50 percent more luggage.", "Boeing's space bins may hold 50 percent more luggage than existing designs.", "Hold 50 percent more luggage than the luggage."]}, {"instance_id": "pyrxsum-74", "summary": "Australia is a step closer to exporting live cattle to China, opening a new market for Australia farmers.", "summary_trees": ["# ::snt Australia is a step closer to exporting live cattle to China, opening a new market for Australia farmers.\n(c / close-06\n      :ARG1 (c2 / country\n            :name (n / name\n                  :op1 \"Australia\"))\n      :ARG2 (e / export-01\n            :ARG0 c2\n            :ARG1 (c3 / cattle\n                  :mod (l / live))\n            :ARG2 (c4 / country\n                  :name (n2 / name\n                        :op1 \"China\")))\n      :ARG1-of (h / have-degree-91\n            :ARG2 (c5 / close-10)\n            :ARG3 (m / more))\n      :ARG0-of (o / open-01\n            :ARG1 (m2 / market\n                  :ARG1-of (n3 / new-01))\n            :ARG2 (p / person\n                  :ARG0-of (f / farm-01)\n                  :mod c2)))"], "tree": ["(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\")))\n   :ARG0 (o / open-01\n            :ARG1 (m2 / market\n                      :ARG1 (n3 / new-01))))", "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live))\n   :ARG2 (c4 / country\n             :name (n2 / name\n                       :op1 \"China\")))", "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1-of (n3 / new-01))\n   :ARG2 (p / person\n            :ARG0-of (f / farm-01)\n            :mod (c2 / country :name (n / name :op1 \"Australia\"))))"], "smus": ["Opening the new market, Australia is close to exporting to China.", "Live cattle exporting to China", "Opening a new market for Australian farmers."]}, {"instance_id": "pyrxsum-75", "summary": "Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.", "summary_trees": ["# ::snt Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lennox\"\n                  :op2 \"Lewis\"))\n      :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Anthony\"\n                              :op2 \"Joshua\"))\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Wladimir\"\n                              :op2 \"Klitschko\"))\n                  :ARG3 (t / title\n                        :mod (w / world)))\n            :ARG3 (t2 / time\n                  :ARG1-of (p4 / perfect-02)))\n      :ARG2 (c2 / champion\n            :mod (h / heavyweight)\n            :ARG1-of (d / dispute-01\n                  :polarity -)\n            :domain p2\n            :time (f / former)))"], "tree": ["(s / say-01\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))", "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :time (f / former)))", "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))", "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))"], "smus": ["Anthony Joshua is a champion, says", "\"It's time for perfection,\" says the former champion.", "The bout with Vladimir Klitschko comes as the heavyweight champion says.", "The bout for the world title comes, says the heavyweight champion.", "\"The bout with Anthony Joshua comes as the heavyweight champion,\" says Lewis Lewis."]}, {"instance_id": "pyrxsum-76", "summary": "People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease People suffering on London transport.", "summary_trees": ["# ::snt People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease People suffering on London transport.\n(o / offer-01\n      :ARG1 (b / badge\n            :mod (o2 / offer-01\n                  :mode imperative\n                  :polite +\n                  :ARG0 (y / you)\n                  :ARG1 (s / seat)\n                  :ARG3 (p / person\n                        :ARG0-of (h / have-03\n                              :ARG1 (c / condition\n                                    :mod (h2 / health)\n                                    :ARG1-of (h3 / hide-01))))))\n      :ARG3 p\n      :purpose (b2 / bid-01\n            :ARG1 (h4 / help-01\n                  :ARG0 p\n                  :ARG1 (e / ease-02\n                        :ARG0 p\n                        :ARG1 (p2 / person\n                              :ARG0-of (s2 / suffer-01\n                                    :ARG1 (t / transport\n                                          :mod (c2 / city\n                                                :name (n / name\n                                                      :op1 \"London\")))))))))"], "tree": ["(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))", "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))", "(b2 / bid-01\n    :ARG1 (h4 / help-01\n              :ARG0 (p / person)\n              :ARG1 (e / ease-02\n                       :ARG0 p\n                       :ARG1 (p2 / person\n                                 :ARG0-of (s2 / suffer-01\n                                              :ARG1 (t / transport\n                                                       :mod (c2 / city\n                                                                :name (n / name\n                                                                         :op1 \"London\"))))))))"], "smus": ["Offer badges to people with health conditions in bid to help.", "Offer people with hiding conditions.", "A bid to help people suffering from London transport."]}, {"instance_id": "pyrxsum-77", "summary": "Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.", "summary_trees": ["# ::snt Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.\n(s / sign-02\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Leicester\"\n                  :op2 \"Tigers\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Ellis\"\n                  :op2 \"Genge\")\n            :ARG0-of (p2 / prop-01)\n            :mod (l / loose-head)\n            :mod (t2 / team\n                  :name (n3 / name\n                        :op1 \"England\"))\n            :ARG1-of (n4 / new-02))\n      :ARG3 (t3 / team\n            :name (n5 / name\n                  :op1 \"Bristol\")\n            :ARG1-of (p3 / promote-01\n                  :ARG1-of (n6 / new-02))))"], "tree": ["(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))", "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))"], "smus": ["Ellis Genge was signed.", "Leicester Tigers have signed Ellis Genge from Bristol."]}, {"instance_id": "pyrxsum-78", "summary": "Keith Farmer followed up Farmer double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.", "summary_trees": ["# ::snt Keith Farmer followed up Farmer double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.\n(f / follow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Keith\"\n                  :op2 \"Farmer\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :ARG2 (r / race-02\n                  :mod (s / sprint)\n                  :mod (e / event\n                        :name (n2 / name\n                              :op1 \"Supersport\"))\n                  :location (c / city-district\n                        :name (n3 / name\n                              :op1 \"Snetterton\")))\n            :time (d / date-entity\n                  :weekday (s2 / saturday)))\n      :ARG4 (d2 / double-01\n            :ARG0 p\n            :location (l / location\n                  :name (n4 / name\n                        :op1 \"Knockhill\"))))"], "tree": ["(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday))))", "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 p))"], "smus": ["Keith Farmer followed up by winning Saturday.", "Keith Farmer followed by doubling his victory in the Snetterton race."]}, {"instance_id": "pyrxsum-79", "summary": "Northern Ireland striker Conor Washington counts Washington a lucky man as man prepares to head to Euro 2016.", "summary_trees": ["# ::snt Northern Ireland striker Conor Washington counts Washington a lucky man as man prepares to head to Euro 2016.\n(c / count-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Conor\"\n                  :op2 \"Washington\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Northern\"\n                              :op2 \"Ireland\"))\n                  :ARG3 (s / striker)))\n      :ARG1 p\n      :ARG2 (m / man\n            :mod (l / lucky))\n      :time (p2 / prepare-02\n            :ARG1 m)\n      :ARG2 (h2 / head-02\n            :ARG0 m\n            :ARG1 (g / game\n                  :name (n3 / name\n                        :op1 \"Euro\"\n                        :op2 \"2016\"))))"], "tree": ["(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky)))", "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))", "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (t / team\n                                 :name (n2 / name\n                                           :op1 \"Northern\"\n                                           :op2 \"Ireland\"))\n                        :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :ARG2 (h2 / head-02\n             :ARG0 m\n             :ARG1 (g / game\n                      :name (n3 / name\n                                :op1 \"Euro\"\n                                :op2 \"2016\"))))", "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :ARG2 (h2 / head-02))", "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :time (p2 / prepare-02\n             :ARG1 m))"], "smus": ["Conor Washington counts as a lucky man.", "The striker counts as the man prepares.", "Northern Ireland striker Coron Washington counts himself a lucky man to head to Euro 2016.", "Northern Ireland striker Coron Washington counts himself a lucky man to head.", "When the Northern Ireland striker prepares, Conor Washington counts himself a lucky man."]}, {"instance_id": "pyrxsum-80", "summary": "The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.", "summary_trees": ["# ::snt The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.\n(a / answer-01\n      :ARG0 (t / team\n            :ARG0-of (c / check-01\n                  :ARG1 (r / reality)))\n      :ARG1 (q / question-01\n            :ARG0 (y / you)\n            :ARG1 (ii / implicate-01\n                  :ARG2 (v / vote-01\n                        :ARG0 (c2 / country\n                              :name (n / name\n                                    :op1 \"UK\"))\n                        :ARG1 (l / leave-15\n                              :ARG0 c2\n                              :ARG1 (o / organization\n                                    :name (n2 / name\n                                          :op1 \"European\"\n                                          :op2 \"Union\")))))\n            :quant (m / more)))"], "tree": ["(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))", "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG1 (o / organization\n                                        :name (n2 / name\n                                                  :op1 \"European\"\n                                                  :op2 \"Union\")))))\n   :quant (m / more))"], "smus": ["Reality check team answers your questions.", "More questions about the implications of the vote to leave the European Union."]}, {"instance_id": "pyrxsum-81", "summary": "Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.", "summary_trees": ["# ::snt Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.\n(r / relish-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Martyn\"\n                  :op2 \"Phillips\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (s / stadium\n                        :name (n2 / name\n                              :op1 \"Principality\"\n                              :op2 \"Stadium\"))\n                  :ARG2 (e / executive\n                        :mod (c / chief))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (h2 / host-01\n                  :ARG0 p\n                  :ARG1 (b / bout\n                        :mod (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Anthony\"\n                                    :op2 \"Joshua\")))\n                  :location (v / venue\n                        :ARG0-of (h3 / have-03\n                              :ARG1 (c3 / capacity\n                                    :quant 74500))\n                        :location (c4 / city\n                              :name (n4 / name\n                                    :op1 \"Cardiff\"))))))"], "tree": ["(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))", "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :ARG0 (h3 / have-03\n                                              :ARG1 (c3 / capacity\n                                                        :quant 74500))))))"], "smus": ["Martyn Phillips would relish the chance to host.", "Martyn Phillips would relish the chance to host at a venue with a capacity of 74500."]}, {"instance_id": "pyrxsum-82", "summary": "Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.", "summary_trees": ["# ::snt Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.\n(r / rise-01\n      :ARG1 (ii / income\n            :mod (n / net)\n            :poss (c / company\n                  :name (n2 / name\n                        :op1 \"Google\")))\n      :ARG2 (p / percentage-entity\n            :value 17)\n      :ARG4 (m / monetary-quantity\n            :quant 3393000000000\n            :unit (d / dollar))\n      :time (d2 / date-entity\n            :month 6)\n      :time (q / quarter\n            :mod (l / last))\n      :ARG1-of (b / boost-01\n            :ARG0 (r2 / rise-01\n                  :ARG1 (r3 / revenue\n                        :poss c)\n                  :ARG2 (p2 / percentage-entity\n                        :value 11)\n                  :ARG4 (m2 / monetary-quantity\n                        :quant 170000000000\n                        :unit (d3 / dollar)))))"], "tree": ["(r / rise-01\n   :time (d2 / date-entity\n             :month 6))", "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17))", "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar))\n   :time (d2 / date-entity\n             :month 6))", "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\"))))", "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net)\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :time (d2 / date-entity\n             :month 6))"], "smus": ["The rise occurred in June.", "Net income rose 17%.", "In June, net income rose 17% to $.", "Google's revenues have seen a rise.", "Google's net income rose 17% in June."]}, {"instance_id": "pyrxsum-83", "summary": "Pregnant women should visit countries with a risk of malaria only if experts trip is essential, experts are warning.", "summary_trees": ["# ::snt Pregnant women should visit countries with a risk of malaria only if experts trip is essential, experts are warning.\n(w / warn-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01))\n      :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                  :ARG0 (w2 / woman\n                        :ARG1-of (ii / impregnate-01))\n                  :ARG1 (c / country\n                        :ARG0-of (r2 / risk-01\n                              :ARG2 (m / malaria))))\n            :condition (e2 / essential\n                  :domain (t / trip-03\n                        :ARG0 (p2 / person\n                              :ARG1-of (e3 / expert-01)))\n                  :mod (o / only))))"], "tree": ["(w / warn-01\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :mod (o / only))))", "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG0 (w2 / woman\n                      :ARG1 (ii / impregnate-01)))\n   :condition (e2 / essential\n                  :domain (t / trip-03\n                             :ARG0 (p2 / person\n                                       :ARG1 (e3 / expert-01)))))", "(w / warn-01\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :ARG0 (w2 / woman\n                               :ARG1-of (ii / impregnate-01))\n                     :ARG1 (c / country\n                              :ARG0-of (r2 / risk-01\n                                           :ARG2 (m / malaria))))\n            :condition (e2 / essential\n                           :domain (t / trip-03\n                                      :ARG0 (p2 / person\n                                                :ARG1-of (e3 / expert-01)))\n                           :mod (o / only))))"], "smus": ["Warning: Only if essential.", "Women who are pregnant should visit if experts trip is essential.", "Warning: Pregnancy women should visit malaria-risk countries only if experts trip is essential."]}, {"instance_id": "pyrxsum-84", "summary": "In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.", "summary_trees": ["# ::snt In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.\n(r / replace-01\n      :ARG1 (t / textbook\n            :mod (d / dusty)\n            :mod (f / fashion\n                  :mod (o / old)))\n      :ARG2 (a / and\n            :op1 (t2 / tablet)\n            :op2 (c / computer)\n            :op3 (p / phone\n                  :ARG1-of (m / mobile-02)))\n      :manner (g / gradual)\n      :location (s / school\n            :location (c2 / continent\n                  :name (n / name\n                        :op1 \"Africa\"))))"], "tree": ["(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet))", "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))"], "smus": ["Old-fashion textbooks are replaced with tablets.", "Dusty textbooks are gradually replaced by computers in African schools."]}, {"instance_id": "pyrxsum-85", "summary": "More than half of Scots have run out of money before pay day, according to a new report.", "summary_trees": ["# ::snt More than half of Scots have run out of money before pay day, according to a new report.\n(s / say-01\n      :ARG0 (r / report\n            :ARG1-of (n / new-01))\n      :ARG1 (r2 / run-out-05\n            :ARG1 (m / money)\n            :ARG2 (p / person\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"Scotland\"))\n                  :quant (m2 / more-than\n                        :op1 \"1/2\"))\n            :time (b / before\n                  :op1 (d / day\n                        :time-of (p2 / pay-01)))))"], "tree": ["(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))", "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))", "(r2 / run-out-05\n    :ARG1 (m / money)\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))", "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)\n             :ARG2 (p / person\n                      :mod (c / country\n                              :name (n2 / name\n                                        :op1 \"Scotland\"))\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))\n             :time (b / before\n                      :op1 (d / day\n                              :time (p2 / pay-01)))))"], "smus": ["More than half have run out, according to the new report.", "The Scots are running out of money.", "ran out of money before the pay day.", "The new report said more than half the Scots ran out of money before the day of the pay."]}, {"instance_id": "pyrxsum-86", "summary": "The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give group control of an important supply line with the provincial capital Lashkar Gah", "summary_trees": ["# ::snt The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give group control of an important supply line with the provincial capital Lashkar Gah\n(a / and\n      :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                  :ARG0 (c2 / criminal-organization\n                        :name (n / name\n                              :op1 \"Taliban\"))\n                  :ARG1 (c3 / city\n                        :name (n2 / name\n                              :op1 \"Sangin\")\n                        :ARG1-of (l / locate-01\n                              :manner (s / strategic))\n                        :ARG1-of (c4 / consider-02\n                              :ARG2 (b / battlefield\n                                    :location (c5 / country\n                                          :name (n3 / name\n                                                :op1 \"Afghanistan\")\n                                          :part (n4 / north))\n                                    :beneficiary (a2 / and\n                                          :op1 (t / troop\n                                                :mod (c6 / country\n                                                      :name (n5 / name\n                                                            :op1 \"United\"\n                                                            :op2 \"States\")))\n                                          :op2 (t2 / troop\n                                                :mod (c7 / country\n                                                      :name (n6 / name\n                                                            :op1 \"Britain\"))))\n                                    :ARG1-of (h / have-degree-91\n                                          :ARG2 (k / kill-01\n                                                :ARG0 b)\n                                          :ARG3 (m / most)))\n                              :time (o / once))))\n            :ARG1 (m2 / mobility\n                  :poss c2\n                  :location n4))\n      :op2 (g / give-01\n            :ARG0 c\n            :ARG1 (c8 / control-01\n                  :ARG0 c2\n                  :ARG1 (l2 / line\n                        :ARG1-of (ii2 / important-01)\n                        :ARG3-of (s2 / supply-01\n                              :ARG2 (c9 / city\n                                    :name (n7 / name\n                                          :op1 \"Lashkar\"\n                                          :op2 \"Gah\")\n                                    :ARG0-of (h2 / have-org-role-91\n                                          :ARG1 (p / province\n                                                :ARG2 (c10 / capital))))))\n                  :ARG2 c2)))"], "tree": ["(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))", "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))"], "smus": ["Capture of cities considered a battlefield for American troops would increase and give control to the Taliban.", "Capture of a city considered a battlefield in the north for British troops would increase and give."]}, {"instance_id": "pyrxsum-87", "summary": "Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.", "summary_trees": ["# ::snt Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.\n(a / area\n      :ARG1-of (p / populate-01\n            :manner (s / sparse))\n      :consist-of (d / desert\n            :quant (m / most))\n      :domain (c / country-region\n            :name (n / name\n                  :op1 \"Western\"\n                  :op2 \"Sahara\"))\n      :ARG1-of (s2 / situate-01\n            :ARG2 (c2 / coast\n                  :mod (n2 / northwest)\n                  :part-of (c3 / continent\n                        :name (n3 / name\n                              :op1 \"Africa\")))))"], "tree": ["(s2 / situate-01\n    :ARG2 (c2 / coast\n              :mod (n2 / northwest)))", "(a / area\n   :ARG1-of (p / populate-01\n               :manner (s / sparse))\n   :ARG1-of (s2 / situate-01\n                :ARG2 (c2 / coast\n                          :mod (n2 / northwest)\n                          :part-of (c3 / continent\n                                       :name (n3 / name\n                                                 :op1 \"Africa\")))))"], "smus": ["located on the northwest coast.", "A sparsely populated area situated on Africa's northwest coast."]}, {"instance_id": "pyrxsum-88", "summary": "Deputy First Minister John Swinney will give MSPs Swinney response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.", "summary_trees": ["# ::snt Deputy First Minister John Swinney will give MSPs Swinney response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.\n(g / give-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (d / deputy)\n                        :ord (o / ordinal-entity\n                              :value 1))))\n      :ARG1 (r / respond-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                  :ARG1 (d2 / die-01\n                        :ARG1 (s / schoolboy\n                              :name (n2 / name\n                                    :op1 \"Bailey\"\n                                    :op2 \"Gwynne\")\n                              :mod (c / city\n                                    :name (n3 / name\n                                          :op1 \"Aberdeen\"))))))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n4 / name\n                              :op1 \"MSP\"))))\n      :time (w / week\n            :mod (n5 / next)))"], "tree": ["(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p))", "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\"))))\n   :time (w / week\n            :mod (n5 / next)))", "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\")\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))"], "smus": ["John Swinney will give a response.", "The Deputy Minister will give the MSPs next week.", "John Swinney will give a response to the report of the death of Aberdeen schoolboy Bailey Gwynne."]}, {"instance_id": "pyrxsum-89", "summary": "Police at the Download Festival have kept Police promise and have been posing for fan photos despite extra security.", "summary_trees": ["# ::snt Police at the Download Festival have kept Police promise and have been posing for fan photos despite extra security.\n(a / and\n      :op1 (k / keep-01\n            :ARG0 (p / police\n                  :location (f / festival\n                        :name (n / name\n                              :op1 \"Download\"\n                              :op2 \"Festival\")))\n            :ARG1 (p2 / promise-01\n                  :ARG0 p))\n      :op2 (p3 / pose-01\n            :ARG0 p\n            :ARG2 (p4 / photo\n                  :mod (f2 / fan))\n            :concession (s / security\n                  :mod (e / extra))))"], "tree": ["(a / and\n   :op1 (k / keep-01\n           :ARG1 (p2 / promise-01\n                     :ARG0 (p / police))))", "(k / keep-01\n   :ARG0 (p / police\n            :location (f / festival\n                         :name (n / name\n                                  :op1 \"Download\"\n                                  :op2 \"Festival\")))\n   :ARG1 (p2 / promise-01\n             :ARG0 p))", "(p3 / pose-01\n    :ARG2 (p4 / photo\n              :mod (f2 / fan)))", "(p3 / pose-01\n    :concession (s / security\n                   :mod (e / extra)))", "(a / and\n   :op1 (k / keep-01\n           :ARG0 (p / police)\n           :ARG1 (p2 / promise-01\n                     :ARG0 p))\n   :op2 (p3 / pose-01\n            :ARG0 p\n            :ARG2 (p4 / photo\n                      :mod (f2 / fan))\n            :concession (s / security\n                           :mod (e / extra))))"], "smus": ["And the police have kept their promise.", "Police at the Download Festival have kept their promise.", "Posing for fan photos.", "Posing despite extra security.", "The police have kept their promise and are posing with fan photos despite extra security."]}, {"instance_id": "pyrxsum-90", "summary": "Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.", "summary_trees": ["# ::snt Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.\n(p / possible-01\n      :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                  :ARG2 (s / site\n                        :location-of (n / nest-01)))\n            :ARG1 (t / thing\n                  :ARG0-of (c2 / cause-01\n                        :ARG1 (d / decline-01\n                              :ARG1 (a / and\n                                    :op1 (b / bird\n                                          :mod (s2 / some))\n                                    :op2 (b2 / bee\n                                          :mod s2))\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (f / fast-02)\n                                    :ARG3 (m / more)\n                                    :ARG4 (o / other)))))))"], "tree": ["(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m / more))))))", "(d / decline-01\n   :ARG1 (a / and\n            :op1 (b / bird\n                    :mod (s2 / some))\n            :op2 (b2 / bee\n                     :mod s2)))", "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (b2 / bee\n                       :mod (s2 / some))\n             :ARG1 (h / have-degree-91\n                      :ARG2 (f / fast-02)\n                      :ARG3 (m / more)\n                      :ARG4 (o / other))\n             :ARG1 h))", "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                     :ARG2 (s / site\n                              :location (n / nest-01)))\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (b / bird\n                                                 :mod (s2 / some))\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (f / fast-02)\n                                                 :ARG3 (m / more)\n                                                 :ARG4 (o / other)))))))"], "smus": ["Explain why it is declining more.", "Some birds and bees are declining.", "So some bees are declining faster than others.", "Competition for nest sites can explain why some birds are declining faster than others."]}, {"instance_id": "pyrxsum-91", "summary": "The UK should not have to pay \"large\" sums to the EU to trade with EU after Brexit, Boris Johnson has said.", "summary_trees": ["# ::snt The UK should not have to pay \"large\" sums to the EU to trade with EU after Brexit, Boris Johnson has said.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Boris\"\n                  :op2 \"Johnson\"))\n      :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                  :polarity -\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"UK\"))\n                  :ARG2 (p2 / pay-01\n                        :ARG0 c\n                        :ARG1 (s2 / sum\n                              :mod (l / large))\n                        :ARG2 (o2 / organization\n                              :name (n3 / name\n                                    :op1 \"EU\"))\n                        :purpose (t / trade-01\n                              :ARG0 c\n                              :ARG2 o2\n                              :time (a / after\n                                    :op1 (l2 / leave-15\n                                          :ARG0 c\n                                          :ARG1 o2)))))))"], "tree": ["(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Boris\"\n                     :op2 \"Johnson\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                     :polarity -)))", "(p2 / pay-01\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))))", "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))", "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                     :polarity -\n                     :ARG1 (c / country\n                              :name (n2 / name\n                                        :op1 \"UK\"))\n                     :ARG2 (p2 / pay-01\n                               :ARG0 c\n                               :ARG1 (s2 / sum\n                                         :mod (l / large))\n                               :ARG2 (o2 / organization\n                                         :name (n3 / name\n                                                   :op1 \"EU\"))\n                               :purpose (t / trade-01\n                                           :ARG0 c\n                                           :ARG2 o2\n                                           :time (a / after\n                                                    :op1 (l2 / leave-15\n                                                             :ARG0 c\n                                                             :ARG1 o2)))))))", "(p2 / pay-01\n    :ARG0 (c / country :name (n2 / name :op1 \"UK\"))\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\")))"], "smus": ["Boris Johnson has said that it should not.", "Payment for trade after the UK leaves.", "Paying large sums for the UK trade.", "It is said that the UK should not have to pay large sums to the EU to trade with the EU after leaving the EU.", "The UK is paying large sums to the EU."]}, {"instance_id": "pyrxsum-92", "summary": "A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.", "summary_trees": ["# ::snt A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / and\n            :op1 (a2 / attack-01\n                  :ARG0 (b / bear\n                        :mod (g / grizzly))\n                  :ARG1 (p2 / person\n                        :ARG0-of (c / cycle-01)))\n            :op2 (k / kill-01\n                  :ARG0 b\n                  :ARG1 p2)\n            :location (o / outside\n                  :op1 (p3 / park\n                        :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\")\n                        :location (n2 / north\n                              :part-of (s2 / state\n                                    :name (n3 / name\n                                          :op1 \"Montana\")\n                                    :location (c2 / country\n                                          :name (n4 / name\n                                                :op1 \"US\")))))\n                  :mod (j / just))))"], "tree": ["(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly))))", "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))", "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))"], "smus": ["The grizzly bear killed, they say.", "And a cyclist was attacked outside a park in northern Montana.", "A cyclist was attacked and a grizzly bear killed outside a park in northern Montana."]}, {"instance_id": "pyrxsum-93", "summary": "A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.", "summary_trees": ["# ::snt A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (m / man)\n            :ARG2 (a2 / and\n                  :op1 (a3 / assault-01\n                        :ARG0 m\n                        :ARG1 (w / woman)\n                        :mod (v / violent))\n                  :op2 (r / rape-01\n                        :ARG0 m\n                        :ARG1 w)\n                  :location (p2 / park\n                        :mod (c / car)\n                        :mod (s2 / station\n                              :mod (r2 / railway))))))"], "tree": ["(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG2 (r / rape-01\n                     :ARG0 (m / man))))", "(a2 / and\n    :op2 (r / rape-01\n            :ARG1 (w / woman))\n    :location (p2 / park\n                  :mod (c / car)))", "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (m / man)\n            :ARG2 (a2 / and\n                      :op1 (a3 / assault-01\n                               :ARG0 m\n                               :ARG1 (w / woman)\n                               :mod (v / violent))\n                      :op2 (r / rape-01\n                              :ARG0 m\n                              :ARG1 w)\n                      :location (p2 / park\n                                    :mod (c / car)\n                                    :mod (s2 / station\n                                             :mod (r2 / railway))))))"], "smus": ["Police said the man was arrested for rape.", "and a woman was raped in a car park.", "Police said the man was arrested for a violent assault and rape against a woman in a car park at a railway station."]}, {"instance_id": "pyrxsum-94", "summary": "A diabetic MP who asked Coca-Cola not to take MP Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.", "summary_trees": ["# ::snt A diabetic MP who asked Coca-Cola not to take MP Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member))\n            :mod (d / diabetes)\n            :ARG0-of (a2 / ask-02\n                  :ARG1 (t / take-01\n                        :polarity -\n                        :ARG0 (c / company\n                              :name (n / name\n                                    :op1 \"Coke-Cola\"))\n                        :ARG1 (t2 / truck\n                              :mod (f / festival\n                                    :name (n2 / name\n                                          :op1 \"Christmas\"))\n                              :poss p2)\n                        :ARG3 (c2 / city\n                              :name (n3 / name\n                                    :op1 \"Leicester\")))\n                  :ARG2 c))\n      :ARG2 (h2 / hypocrisy)\n      :ARG1-of (c3 / cause-01\n            :ARG0 (o / open-01\n                  :ARG0 p\n                  :ARG1 (s / shop\n                        :mod (s2 / sweet))\n                  :location c2)))"], "tree": ["(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG2 (c / company\n                               :name (n / name\n                                        :op1 \"Coke-Cola\"))))\n   :ARG2 (h2 / hypocrisy))", "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member))", "(a / accuse-01\n   :ARG2 (h2 / hypocrisy))", "(c3 / cause-01\n    :ARG0 (o / open-01\n             :ARG0 (p / person)\n             :ARG1 (s / shop\n                      :mod (s2 / sweet))\n             :location (c2 / city :name (n3 / name :op1 \"Leicester\"))))", "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)\n                     :ARG2 (m / member))\n            :mod (d / diabetes)\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -\n                               :ARG0 (c / company\n                                        :name (n / name\n                                                 :op1 \"Coke-Cola\"))\n                               :ARG1 (t2 / truck\n                                         :mod (f / festival\n                                                 :name (n2 / name\n                                                           :op1 \"Christmas\"))\n                                         :poss p2)\n                               :ARG3 (c2 / city\n                                         :name (n3 / name\n                                                   :op1 \"Leicester\")))\n                      :ARG2 c))\n   :ARG2 (h2 / hypocrisy)\n   :ARG1 (c3 / cause-01\n             :ARG0 (o / open-01\n                      :ARG0 p\n                      :ARG1 (s / shop\n                               :mod (s2 / sweet))\n                      :location c2)))"], "smus": ["The people who asked Coke-Cola were accused of hypocrisy.", "Parliament has a member.", "Hypocrisy is accused.", "Because people open a sweet shop in Leicester city.", "A diabetic MP who asked Coke-Cola not to take his Christmas truck to Leicester was accused of hypocrisy for opening a sweet shop there."]}, {"instance_id": "pyrxsum-95", "summary": "An Orlando mother who was found not guilty of murdering mother two-year old daughter Caylee has broken Caylee silence six years later.", "summary_trees": ["# ::snt An Orlando mother who was found not guilty of murdering mother two-year old daughter Caylee has broken Caylee silence six years later.\n(b / break-13\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother))\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Orlando\"))\n            :ARG0-of (f / find-02\n                  :ARG1 (g / guilty-01\n                        :polarity -\n                        :ARG1 p\n                        :ARG2 (m2 / murder-01\n                              :ARG0 p\n                              :ARG1 (p2 / person\n                                    :name (n2 / name\n                                          :op1 \"Caylee\")\n                                    :ARG0-of (h2 / have-rel-role-91\n                                          :ARG1 p\n                                          :ARG2 (d / daughter))\n                                    :age (t / temporal-quantity\n                                          :quant 2\n                                          :unit (y / year)))))))\n      :ARG1 (s / silence\n            :poss p2)\n      :time (a / after\n            :quant (t2 / temporal-quantity\n                  :quant 6\n                  :unit (y2 / year))))"], "tree": ["(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))", "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))", "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))", "(m2 / murder-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Caylee\")))", "(b / break-13\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (m / mother))\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\"))\n            :ARG0-of (f / find-02\n                        :ARG1 (g / guilty-01\n                                 :polarity -\n                                 :ARG1 p\n                                 :ARG2 (m2 / murder-01\n                                           :ARG0 p\n                                           :ARG1 (p2 / person\n                                                     :name (n2 / name\n                                                               :op1 \"Caylee\")\n                                                     :ARG0-of (h2 / have-rel-role-91\n                                                                  :ARG1 p\n                                                                  :ARG2 (d / daughter))\n                                                     :age (t / temporal-quantity\n                                                             :quant 2\n                                                             :unit (y / year)))))))\n   :ARG1 (s / silence\n            :poss p2))"], "smus": ["The person who is not found guilty is broken after years.", "Years later, people in Orlando have broken the silence of years.", "Six years later, people who have not been found guilty have broken the silence of the years.", "Caylee was murdered.", "The mother in Orlando, who has been found not guilty of murdering her two-year-old daughter, Caylee, has broken her silence."]}, {"instance_id": "pyrxsum-96", "summary": "The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.", "summary_trees": ["# ::snt The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Wales\"))\n                  :ARG2 (a / archbishop)))\n      :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                  :mod (d / devolve-01)\n                  :beneficiary c)\n            :ARG2-of (h2 / have-degree-91\n                  :ARG1 s2\n                  :ARG3 (l / less)\n                  :ARG4 (s3 / settlement\n                        :ARG1-of (o / offer-01\n                              :ARG3 (a2 / and\n                                    :op1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Scotland\"))\n                                    :op2 (c3 / country\n                                          :name (n3 / name\n                                                :op1 \"Northern\"\n                                                :op2 \"Ireland\"))))))))"], "tree": ["(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (c2 / country\n                                                   :name (n2 / name\n                                                             :op1 \"Scotland\")))))))", "(h2 / have-degree-91\n    :ARG4 (s3 / settlement\n              :ARG1 (o / offer-01\n                       :ARG3 (c3 / country\n                                 :name (n3 / name\n                                           :op1 \"Northern\"\n                                           :op2 \"Ireland\")))))", "(o / offer-01\n   :ARG3 (c3 / country\n             :name (n3 / name\n                       :op1 \"Northern\"\n                       :op2 \"Ireland\")))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Wales\"))\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                      :mod (d / devolve-01)\n                      :beneficiary c)\n            :ARG2 (h2 / have-degree-91\n                      :ARG1 s2\n                      :ARG3 (l / less)\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (a2 / and\n                                                   :op1 (c2 / country\n                                                            :name (n2 / name\n                                                                      :op1 \"Scotland\"))\n                                                   :op2 (c3 / country\n                                                            :name (n3 / name\n                                                                      :op1 \"Northern\"\n                                                                      :op2 \"Ireland\"))))))))", "(h2 / have-degree-91\n    :ARG1 (s2 / settlement)\n    :ARG3 (l / less)\n    :ARG4 (s3 / settlement\n              :ARG1 (o / offer-01\n                       :ARG3 (c3 / country\n                                 :name (n3 / name\n                                           :op1 \"Northern\"\n                                           :op2 \"Ireland\")))))"], "smus": ["The Archbishop has said that the settlement offered to Scotland is fair.", "settlement offered to Northern Ireland", "Northern Ireland is offered.", "Wales' Archbishop has said that a devolved settlement for Wales would be less fair than the settlement offered to Scotland and Northern Ireland.", "The settlement is less than the settlement offered to Northern Ireland."]}, {"instance_id": "pyrxsum-97", "summary": "Labour will keep Labour election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.", "summary_trees": ["# ::snt Labour will keep Labour election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.\n(w / warn-01\n      :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                  :polarity -\n                  :ARG1 (a / avoid-01\n                        :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                    :mod (s2 / some)))))\n            :ARG2 (k / keep-01\n                  :ARG0 (p2 / political-party\n                        :name (n / name\n                              :op1 \"Labour\"))\n                  :ARG1 (p3 / promise-01\n                        :ARG0 p2\n                        :mod (e / elect-01))\n                  :concession (c2 / certain\n                        :polarity -\n                        :domain (l / leave-15\n                              :ARG1 (c3 / country\n                                    :name (n2 / name\n                                          :op1 \"Great\"\n                                          :op2 \"Britain\")))))))"], "tree": ["(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG0 (p2 / political-party\n                               :name (n / name\n                                        :op1 \"Labour\")))))", "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))))"], "smus": ["warned, Labour will keep.", "The first minister has warned that Labour will keep its promises."]}, {"instance_id": "pyrxsum-98", "summary": "A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.", "summary_trees": ["# ::snt A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.\n(h / hear-01\n      :ARG0 (c / court)\n      :ARG1 (u / use-01\n            :ARG0 (p / person\n                  :ARG0-of (d / defraud-01)\n                  :ARG1-of (c2 / convict-01))\n            :ARG1 (p2 / plot-01\n                  :ARG0 p\n                  :ARG1 (e / escape-01\n                        :ARG0 p)\n                  :mod (ii / ingenious))\n            :ARG2 (t / trick-01\n                  :ARG0 p\n                  :ARG1 (w / warden\n                        :mod (p3 / prison))\n                  :ARG2 (l / let-01\n                        :ARG0 w\n                        :ARG1 (f / free-04\n                              :ARG1 p)))))"], "tree": ["(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))", "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))"], "smus": ["The convicted used a plot.", "Fraudsters used the escape plot to trick the wardens into letting them in."]}, {"instance_id": "pyrxsum-99", "summary": "The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.", "summary_trees": ["# ::snt The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.\n(r / reopen-01\n      :ARG1 (r2 / road\n            :name (n / name\n                  :op1 \"M6\")\n            :location (b / between\n                  :op1 (c / city\n                        :name (n2 / name\n                              :op1 \"Wolverhampton\"))\n                  :op2 (c2 / city\n                        :name (n3 / name\n                              :op1 \"Walsall\")))\n            :mod (m / motorway))\n      :time (a / after\n            :op1 (c3 / crash-01\n                  :mod (f / fatal))))"], "tree": ["(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway)))", "(r / reopen-01\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))", "(r / reopen-01\n   :ARG1 (r2 / road\n             :location (b / between\n                          :op1 (c / city\n                                  :name (n2 / name\n                                            :op1 \"Wolverhampton\"))))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))", "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\")\n             :location (b / between\n                          :op1 (c / city\n                                  :name (n2 / name\n                                            :op1 \"Wolverhampton\"))\n                          :op2 (c2 / city\n                                   :name (n3 / name\n                                             :op1 \"Walsall\")))\n             :mod (m / motorway)))"], "smus": ["Motorway roads reopened", "Reopened after fatal crash", "The road between Wolverhampton was reopened after a fatal crash.", "The M6 motorway between Wolverhampton and Walsall has been reopened."]}]