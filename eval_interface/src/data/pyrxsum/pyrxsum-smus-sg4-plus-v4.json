[
  {
    "instance_id": "pyrxsum-0",
    "summary": "Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.",
    "summary_trees": [
      "# ::snt Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.\n(j / join-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Wesley\"\n                  :op2 \"Sneijder\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Netherlands\"))\n                  :ARG3 (m / midfielder)))\n      :ARG1 (t2 / team\n            :name (n3 / name\n                  :op1 \"Nice\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Ligue\"\n                        :op2 1)\n                  :mod (c / country\n                        :name (n5 / name\n                              :op1 \"France\"))))\n      :manner (t3 / transfer-01\n            :ARG1 p\n            :ARG1-of (f / free-03)))"
    ],
    "tree": [
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Netherlands\"))\n   :ARG3 (m / midfielder))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Netherlands\"))\n   :ARG3 (m / midfielder))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))"
    ],
    "smus": [
      "Wesley Sneijder has joined.",
      "The midfielder has joined.",
      "The Dutch midfielder is.",
      "joined the Ligue 1 team.",
      "Nice were joined by Wesley Sneijder on transfer.",
      "The Dutch have joined.",
      "Wesley Sneijder has joined by transfer.",
      "The midfielder has joined on transfer.",
      "joined the French league team.",
      "Nice were joined by a free transfer.",
      "Wesley Sneijder has joined by free transfer.",
      "The midfielder has joined on a free transfer.",
      "Wesley Sneijder has joined Nice.",
      "The midfielder has joined Nice.",
      "The Ligue 1 team was joined by a transfer to Wesley Sneijder.",
      "The Dutch have joined on transfer.",
      "The Ligue 1 team was joined by a free transfer.",
      "The French league team was joined by a transfer to Wesley Sneijder.",
      "The Dutch have joined on a free transfer.",
      "The French league team was joined by a free transfer.",
      "Wesley Sneijder has joined the Ligue 1 team.",
      "The Dutch have joined Nice.",
      "The midfielder has joined the Ligue 1 team.",
      "Wesley Sneijder has joined Nice on a transfer.",
      "The midfielder has joined Nice on a transfer.",
      "Wesley Sneijder has joined the French league team.",
      "The midfielder has joined the French league team.",
      "Wesley Sneijder has joined Nice on a free transfer.",
      "The midfielder has joined Nice on a free transfer.",
      "The Dutch have joined the Ligue 1 side.",
      "Wesley Sneijder has joined the Ligue 1 team on a transfer.",
      "The Dutch have joined Nice on transfer.",
      "The midfielder has joined the Ligue 1 team on a transfer.",
      "The Dutch have joined the French league team.",
      "Wesley Sneijder has joined the Ligue 1 team on a free transfer.",
      "Wesley sneijder has joined the French league side on a transfer.",
      "The Dutch have joined Nice on a free transfer.",
      "The midfielder has joined the Ligue 1 team on a free transfer.",
      "The midfielder has joined the French league team on a transfer.",
      "Wesley sneijder has joined the French league side on a free transfer.",
      "The midfielder has joined the French league team on a free transfer.",
      "The Dutch have joined the Ligue 1 side on a transfer.",
      "The Dutch have joined the Ligue 1 team on a free transfer.",
      "The Dutch have joined the French league team on transfer.",
      "The Dutch have joined the French league team on a free transfer."
    ]
  },
  {
    "instance_id": "pyrxsum-1",
    "summary": "A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.",
    "summary_trees": [
      "# ::snt A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.\n(s / say-01\n      :ARG0 (d / document\n            :source (g / government-organization\n                  :name (n / name\n                        :op1 \"FBI\")))\n      :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g2 / government-organization\n                              :name (n2 / name\n                                    :op1 \"State\"\n                                    :op2 \"Department\"))\n                        :ARG2 (o / official)))\n            :ARG1 g\n            :ARG2 (c / change-01\n                  :ARG0 g\n                  :ARG1 (c2 / classify-01\n                        :ARG1 (e / email-01\n                              :ARG0 (p3 / person\n                                    :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\"))))\n                  :manner (q / quid-pro-quo))))"
    ],
    "tree": [
      "(p / pressure-01\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 (g / government-organization :name (n / name :op1 \"FBI\")))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :manner (q / quid-pro-quo))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official))))",
      "(h / have-org-role-91\n   :ARG1 (g2 / government-organization\n             :name (n2 / name\n                       :op1 \"State\"\n                       :op2 \"Department\")))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\"))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG1 (g / government-organization\n                     :name (n / name\n                              :op1 \"FBI\"))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (o / official)))))",
      "(h / have-org-role-91\n   :ARG1 (g2 / government-organization\n             :name (n2 / name\n                       :op1 \"State\"\n                       :op2 \"Department\"))\n   :ARG2 (o / official))",
      "(h / have-org-role-91\n   :ARG1 (g2 / government-organization\n             :name (n2 / name\n                       :op1 \"State\"\n                       :op2 \"Department\"))\n   :ARG2 (o / official))",
      "(c2 / classify-01\n    :ARG1 (e / email-01\n             :ARG0 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Hillary\"\n                                 :op2 \"Clinton\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG1 g))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG1 g))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\")))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(c / change-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (e / email-01\n                      :ARG0 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\")))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 g)))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g2 / government-organization\n                                         :name (n2 / name\n                                                   :op1 \"State\"\n                                                   :op2 \"Department\"))))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 g)))",
      "(p / pressure-01\n   :ARG2 (c / change-01\n            :ARG1 (c2 / classify-01\n                      :ARG1 (e / email-01\n                               :ARG0 (p3 / person\n                                         :name (n3 / name\n                                                   :op1 \"Hillary\"\n                                                   :op2 \"Clinton\"))))))",
      "(c / change-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (e / email-01\n                      :ARG0 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\"))))\n   :manner (q / quid-pro-quo))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :manner (q / quid-pro-quo))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :manner (q / quid-pro-quo))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))"
    ],
    "smus": [
      "Pressure was put on the FBI to change.",
      "Pressure was on to change with quid pro quo.",
      "Pressure was put on the FBI to change, they said.",
      "Pressure was put on change, with quid pro quo.",
      "The official pressured.",
      "The State Department.",
      "According to the FBI documents --",
      "Pressure on the FBI, said.",
      "The official said pressure was on.",
      "State Department official",
      "Clinton email classified.",
      "The official pressured the FBI to change.",
      "The FBI documents say they were under pressure.",
      "Pressure from the State Department.",
      "The official pressured for a quid pro quo change.",
      "Change the classification of Hillary Clinton's email.",
      "The FBI documents said pressure was on to change.",
      "Pressure from the State Department, they said.",
      "Pressured to change the classification of Hillary Clinton's email.",
      "Hillary Clinton's email classification would change quid pro quo.",
      "The FBI documents said pressure was on to change \"quid pro quo.\"",
      "The State Department pressured the FBI to change.",
      "Pressure was put on Hillary Clinton's email classification to change.",
      "The State Department pressured for a quid pro quo change.",
      "According to FBI documents, the official exerted pressure.",
      "The official pressured to change the classification of Hillary Clinton's email.",
      "According to the FBI documents, the State Department pressured.",
      "According to the FBI documents, pressure was exerted to change the classification of Hillary Clinton's email.",
      "The State Department pressured to change the classification of Hillary Clinton's email."
    ]
  },
  {
    "instance_id": "pyrxsum-2",
    "summary": "American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.",
    "summary_trees": [
      "# ::snt American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.\n(t / take-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jason\"\n                  :op2 \"Dufner\")\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"America\")))\n      :ARG1 (l / lead-01\n            :ARG0 p\n            :ARG2 (s / shot\n                  :quant 5))\n      :ARG2 (r / round\n            :ord (o / ordinal-entity\n                  :value 3)\n            :subevent-of (g / game\n                  :name (n3 / name\n                        :op1 \"Memorial\"\n                        :op2 \"Tournament\")))\n      :time (a / after\n            :op1 (c2 / card-01\n                  :ARG0 p\n                  :ARG1 (e / eagle)\n                  :time (h / hole\n                        :ord (o2 / ordinal-entity\n                              :value 18))\n                  :time (d / date-entity\n                        :weekday (f / friday)))))"
    ],
    "tree": [
      "(l / lead-01\n   :ARG2 (s / shot\n            :quant 5))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\")))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\"))))",
      "(c2 / card-01\n    :ARG1 (e / eagle)\n    :time (h / hole\n             :ord (o2 / ordinal-entity\n                      :value 18)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))"
    ],
    "smus": [
      "lead by 5 shots",
      "Take the lead with 5 shots.",
      "Take the third round.",
      "Jason Dufner will take.",
      "Americans will take.",
      "Carding an eagle at the 18th hole.",
      "Jason Dufner will take the lead in the third round.",
      "After carding Jason Dufner will take the lead.",
      "Jason Dufner will take the lead.",
      "After carding an eagle, Jason Dufner will take the lead.",
      "The Americans will take the lead.",
      "Take the lead on 5 shots in round 3.",
      "Jason Dufner will take the lead with 5 shots.",
      "Jason Dufner will take after carding.",
      "Jason Dufner will take the lead in the Memorial Tournament round.",
      "After carding on Friday, Jason Dufner will take the lead.",
      "After carding the eagle, take the lead on 5 shots.",
      "After carding the eagle, take the third round.",
      "Americans will take the lead with 5 shots.",
      "Jason Dufner will take after carding an eagle.",
      "The Americans will take after carding.",
      "After carding at the 18th hole, Jason Dufner will take the lead.",
      "America will take after carding an eagle.",
      "After carding on Friday, take the lead with 5 shots.",
      "Take the third round after carding on Friday.",
      "Jason Dufner will take the lead in the third round after carding.",
      "Jason Dufner will take after carding on Friday.",
      "After carding on the 18th hole, take the lead with 5 shots.",
      "Take the third round after carding at the 18th hole.",
      "After carding an eagle, take the round of the Memorial Tournament.",
      "Jason Dufner will take the lead after carding.",
      "Jason Dufner will take the lead in the third round after carding an eagle.",
      "Jason Dufner will take after carding at the 18th hole.",
      "After Friday's carding, Americans will take.",
      "America will take the lead in the third round.",
      "Jason Dufner will take the lead after carding an eagle.",
      "After carding, the Americans will take the lead.",
      "After carding Jason Dufner, the lead of five shots will take the third round.",
      "After carding at the 18th hole, the Americans will take.",
      "After carding on Friday, take round of the Memorial Tournament.",
      "Jason Dufner will take the lead with five shots in the third round.",
      "Jason Dufner will take the lead with 5 shots after carding.",
      "After carding the eagle, the Americans will take the lead.",
      "Jason Dufner will take the third round after carding.",
      "Jason Dufner will take the lead in the third round after carding on Friday.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding.",
      "After carding the eagle, take the lead on five shots into the third round.",
      "After carding on the 18th hole, take the round of the Memorial Tournament.",
      "Jason Dufner will take the lead in the round of the Memorial Tournament.",
      "The Americans will take the lead with five shots in the third round.",
      "Jason Dufner will take the lead after carding on Friday.",
      "Jason Dufner will take the lead with five shots after carding an eagle.",
      "After carding, the Americans will take the lead with 5 shots.",
      "Jason Dufner will take the third round after carding an eagle.",
      "After carding, the Americans will take the third round.",
      "Jason Dufner will take the lead into the third round after carding at the 18th hole.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding an eagle.",
      "The Americans will take the lead in the Memorial Tournament round.",
      "Jason Dufner will take the lead after carding at the 18th hole.",
      "After carding Friday, the Americans will take the lead.",
      "After carding an eagle, the Americans will take the lead with 5 shots.",
      "After carding the eagle, the Americans will take the third round.",
      "After carding Friday, take the lead on five shots into the third round.",
      "After carding Jason Dufner, it will take the lead with 5 shots in the Memorial Tournament round.",
      "Jason Dufner will take the lead with five shots in the round of the Memorial Tournament.",
      "Jason Dufner will take the lead with five shots after carding on Friday.",
      "After carding in the 18th hole, the Americans will take the lead.",
      "Jason Dufner will take the third round after carding on Friday.",
      "Jason Dufner will take the Memorial Tournament round after carding.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding on Friday.",
      "After carding at the 18th hole, take the lead with 5 shots into the third round.",
      "The Americans will take the lead with 5 shots in the round of the Memorial Tournament.",
      "Jason Dufner will take the lead with a 5-shot after carding at the 18th hole.",
      "After carding Friday, the Americans will take the lead with 5 shots.",
      "Jason Dufner will take the third round after carding on the 18th hole.",
      "Jason Dufner will take the Memorial Tournament round after carding an eagle.",
      "After carding Friday, the Americans will take the third round.",
      "After carding, the Americans will take the Memorial Tournament round.",
      "Jason Dufner will take the lead into the Memorial Tournament round after carding at the 18th hole.",
      "After carding, the Americans will take the lead in the third round.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots.",
      "After carding at the 18th hole, the Americans will take the 3rd round.",
      "Jason Dufner will take the lead with five shots in the third round after carding.",
      "After carding an eagle, the Americans will take the lead in the third round.",
      "Jason Dufner will take the Memorial Tournament round after carding on Friday.",
      "After carding at the 18th hole, take the lead with 5 shots into the round of the Memorial Tournament.",
      "Jason Dufner will take the lead on five shots in the third round after carding an eagle.",
      "After carding, the Americans will take the lead with five shots into the third round.",
      "Jason Dufner will take the Memorial Tournament round after carding on the 18th hole.",
      "After carding on Friday, the Americans will take the lead in the third round.",
      "After carding, the Americans will take the lead into the Memorial Tournament round.",
      "After carding the eagle, the Americans will take the lead with five shots into the third round.",
      "Jason Dufner will take the lead with five shots in the third round after carding on Friday.",
      "After carding at the 18th hole, the Americans will take the lead into the 3rd round.",
      "After carding an eagle, the Americans will take the lead into the Memorial Tournament round.",
      "Jason Dufner will take the lead with five shots in the third round after carding at the 18th hole.",
      "Jason Dufner will take the lead with five shots in the Memorial Tournament round after carding an eagle.",
      "After carding Friday, the Americans will take the lead with 5 shots into the 3rd round.",
      "After carding, the Americans will take the lead with 5 shots into the Memorial Tournament round.",
      "After carding on Friday, the Americans will take the lead into the Memorial Tournament round.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots into the 3rd round.",
      "After carding an eagle, the Americans will take the lead with 5 shots in the Memorial Tournament round.",
      "After carding at the 18th hole, the Americans will take the lead into the Memorial Tournament round.",
      "Jason Dufner will take the lead with five shots in the Memorial Tournament round after carding at the 18th hole.",
      "After carding Friday, the Americans will take the lead with 5 shots in the Memorial Tournament round.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots in the Memorial Tournament round."
    ]
  },
  {
    "instance_id": "pyrxsum-3",
    "summary": "A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.",
    "summary_trees": [
      "# ::snt A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.\n(s / say-01\n      :ARG0 (p / police\n            :ARG1-of (l / local-02))\n      :ARG1 (q / question-01\n            :ARG1 (m / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 \"Peru\"))\n            :time (a / after\n                  :op1 (p2 / pose-01\n                        :ARG0 m\n                        :manner (n3 / naked)\n                        :location (r / ruin\n                              :name (n4 / name\n                                    :op1 \"Machu\"\n                                    :op2 \"Picchu\"))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02)))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Peru\"))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :ARG0 (m / man)))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\"))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :ARG1 (m / man\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"Britain\")))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Peru\"))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :ARG0 (m / man)))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Peru\"))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :ARG0 (m / man)))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :location (r / ruin\n                                           :name (n4 / name\n                                                     :op1 \"Machu\"\n                                                     :op2 \"Picchu\"))))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\")))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :ARG0 m)))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :ARG1 (m / man\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"Britain\")))))"
    ],
    "smus": [
      "Local police said --",
      "Questioned in Peru, said.",
      "Questioned after man posing, said.",
      "The British man was questioned.",
      "Questioned after posing as a naked man, said.",
      "The British man was said to be questioned.",
      "Local police said the question was being questioned in Peru.",
      "Local police said the question was asked after the man was posing.",
      "Local police said the questioning occurred after the naked man was posing.",
      "Questioned after posing in the Ruins of Machu Picchu, said.",
      "The British man was questioned in Peru.",
      "The British man was questioned after posing.",
      "Local police said the British man was questioned.",
      "The British man was questioned after posing naked.",
      "Local police said the question was posed after posing in the Ruins of Machu Picchu.",
      "The British man was questioned after posing in the Machu Picchu ruin."
    ]
  },
  {
    "instance_id": "pyrxsum-4",
    "summary": "Great Britain skeleton racer David Swift has retired from the sport.",
    "summary_trees": [
      "# ::snt Great Britain skeleton racer David Swift has retired from the sport.\n(r / retire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Swift\")\n            :ARG0-of (r2 / race-02\n                  :ARG3 (s / skeleton))\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Great\"\n                        :op2 \"Britain\")))\n      :ARG1 (s2 / sport))"
    ],
    "tree": [
      "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\")))",
      "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton))))",
      "(r / retire-01\n   :ARG0 (p / person\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Great\"\n                              :op2 \"Britain\"))))",
      "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\"))\n   :ARG1 (s2 / sport))",
      "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton)))\n   :ARG1 (s2 / sport))"
    ],
    "smus": [
      "David Swift retired.",
      "The skeleton race has retired.",
      "Great Britain retires.",
      "David Swift has retired from the sport.",
      "Skeletal racers have retired from sport."
    ]
  },
  {
    "instance_id": "pyrxsum-5",
    "summary": "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.",
    "summary_trees": [
      "# ::snt Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.\n(s / set-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\"\n                  :op2 \"Dunlop\"))\n      :ARG1 (t / time\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (f / fast-02)\n                  :ARG3 (m / most)))\n      :beneficiary (a / and\n            :op1 (c / class\n                  :name (n2 / name\n                        :op1 \"Ulster\"\n                        :op2 \"Grand\"\n                        :op3 \"Prix\"\n                        :op4 \"Superbike\"))\n            :op2 (c2 / class\n                  :name (n3 / name\n                        :op1 \"Superstock\")))\n      :time (s2 / session\n            :mod (p2 / practice-01)\n            :ARG1-of (d / delay-01)\n            :location (c3 / city\n                  :name (n4 / name\n                        :op1 \"Dundrod\"))\n            :time (d2 / date-entity\n                  :weekday (t2 / thursday))))"
    ],
    "tree": [
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG3 (m / most))",
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG3 (m / most))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))"
    ],
    "smus": [
      "Fastest.",
      "Michael Dunlop set.",
      "Set the fastest times.",
      "Michael Dunlop set the times for the practice sessions.",
      "Michael Dunlop set the times for the delayed sessions.",
      "Fast times were set during practice sessions.",
      "Fast times were set for delayed sessions.",
      "Michael Dunlop set the class Superstock.",
      "Fast times were set for the Superstock classes.",
      "The quickest times were set for the Superstock classes.",
      "Michael Dunlop set fast times.",
      "Michael Dunlop set the sessions Thursday.",
      "Fast times were set for Thursday sessions.",
      "Michael Dunlop set the sessions in Dundrod.",
      "Fast times were set during sessions in Dundrod.",
      "Sessions in Dundrod set the fastest times.",
      "Michael Dunlop set the classes for Ulster Grand Prix Superbike.",
      "Fast times were set for the Ulster Grand Prix Superbike classes.",
      "The fastest times were set for the Ulster Grand Prix Superbike classes.",
      "Michael Dunlop set fast times during practice sessions.",
      "Michael Dunlop set fast times for delayed sessions.",
      "Michael Dunlop set the fastest times for delayed sessions.",
      "Michael Dunlop set fast times for the Superstock classes.",
      "Michael Dunlop set the fastest times for the Superstock classes.",
      "Michael Dunlop set fast times for Thursday sessions.",
      "Michael Dunlop set fast times during sessions in Dundrod.",
      "Michael Dunlop set the most times for the sessions in Dundrod.",
      "Michael Dunlop set fast times for the Ulster Grand Prix Superbike classes.",
      "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike classes."
    ]
  },
  {
    "instance_id": "pyrxsum-6",
    "summary": "Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.",
    "summary_trees": [
      "# ::snt Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.\n(s / sign-02\n      :ARG0 (c / club\n            :name (n / name\n                  :op1 \"Old\"\n                  :op2 \"Boys\")\n            :mod (c2 / country\n                  :name (n2 / name\n                        :op1 \"Argentina\"))\n            :poss (t / team\n                  :name (n3 / name\n                        :op1 \"Newell's\")))\n      :ARG1 (p / person\n            :name (n4 / name\n                  :op1 \"Ignacio\"\n                  :op2 \"Scocco\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t2 / team\n                        :name (n5 / name\n                              :op1 \"Sunderland\"))\n                  :ARG3 (s2 / striker)))\n      :ARG3 (c3 / contract\n            :duration (t3 / temporal-quantity\n                  :quant 5\n                  :unit (y / year)))\n      :mod (a / again))"
    ],
    "tree": [
      "(h / have-org-role-91\n   :ARG1 (t2 / team\n             :name (n5 / name\n                       :op1 \"Sunderland\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\"))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\"))))",
      "(s / sign-02\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5))\n   :mod (a / again))",
      "(h / have-org-role-91\n   :ARG1 (t2 / team\n             :name (n5 / name\n                       :op1 \"Sunderland\"))\n   :ARG3 (s2 / striker))",
      "(h / have-org-role-91\n   :ARG1 (t2 / team\n             :name (n5 / name\n                       :op1 \"Sunderland\"))\n   :ARG3 (s2 / striker))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\")))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\")))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\")))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))"
    ],
    "smus": [
      "Underland",
      "Old Boys have signed.",
      "Ignacio Scocco was signed.",
      "The striker has signed.",
      "The Argentinian club has signed.",
      "Newell's club has signed.",
      "The 5 year contract was again signed.",
      "-Sunderland striker",
      "Old Boys have signed again.",
      "Again signed by Ignacio Scocco.",
      "The striker has been signed again.",
      "The year contract was signed again.",
      "The Argentinian club has signed again.",
      "Newell's club has signed again.",
      "Ignacio Scocco has signed a 5-year contract.",
      "The striker has signed a five-year contract.",
      "The Old Boys have signed Ignacio Scocco.",
      "Old Boys have signed a striker.",
      "Ignacio Scocco was signed by an Argentinian club.",
      "The striker has been signed by an Argentinian club.",
      "Ignacio Scocco was signed by Newell's club.",
      "The striker has been signed by Newell's club.",
      "Old Boys have again signed a 5 year contract.",
      "Again, Ignacio Scocco has signed a 5-year contract.",
      "The striker has again signed a five-year contract.",
      "The Old Boys have signed Ignacio Scocco again.",
      "Old Boys have signed a striker again.",
      "The Argentinian club has again signed a five-year contract.",
      "Newell's club has again signed a five-year contract.",
      "The Argentinian club has signed Ignacio Scocco again.",
      "The Argentinian club have again signed a striker.",
      "Newell's club has signed Ignacio Scocco again.",
      "The striker has been signed again by Newell's club.",
      "The Old Boys have signed Ignacio Scocco for a five-year contract.",
      "Old Boys have signed a striker on a five-year contract.",
      "The Argentinian club have again signed the Swans.",
      "The Argentinian club has signed Ignacio Scocco for a five-year contract.",
      "The Argentinian club have signed the striker a five-year contract.",
      "Newell's club has signed Ignacio Scocco for a five-year contract.",
      "Newell's club have signed the striker on a five-year contract.",
      "The Old Boys have again signed Ignacio Scocco for a five-year contract.",
      "The Old Boys have again signed a striker on a five-year contract.",
      "Old Boys have again signed a striker on a year contract.",
      "The Argentinian club has again signed Ignacio Scocco for a five-year contract.",
      "The Argentinian club has again signed the striker on a five-year contract.",
      "Newell's club has again signed Ignacio Scocco to a five-year contract.",
      "The striker has again been signed by Newell's club on a five-year contract.",
      "Newell's club have again signed a striker on a year contract."
    ]
  },
  {
    "instance_id": "pyrxsum-7",
    "summary": "West Ham say Ham are \"disappointed\" with a ruling that the terms of terms rental of the Olympic Stadium from next season should be made public.",
    "summary_trees": [
      "# ::snt West Ham say Ham are \"disappointed\" with a ruling that the terms of terms rental of the Olympic Stadium from next season should be made public.\n(s / say-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"West\"\n                  :op2 \"Ham\"))\n      :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                  :ARG1 (r2 / recommend-01\n                        :ARG1 (p / public-02\n                              :ARG1 (t2 / term\n                                    :mod (r3 / rent-01\n                                          :ARG1 (s2 / stadium\n                                                :name (n2 / name\n                                                      :op1 \"Olympic\"\n                                                      :op2 \"Stadium\"))\n                                          :time (s3 / season\n                                                :mod (n3 / next)))))))\n            :ARG1 t))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG1 (t / team :name (n / name :op1 \"West\" :op2 \"Ham\"))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\")))",
      "(r3 / rent-01\n    :ARG1 (s2 / stadium\n              :name (n2 / name\n                        :op1 \"Olympic\"\n                        :op2 \"Stadium\")))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG1 t))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG1 t))",
      "(p / public-02\n   :ARG1 (t2 / term\n             :mod (r3 / rent-01\n                      :ARG1 (s2 / stadium\n                                :name (n2 / name\n                                          :op1 \"Olympic\"\n                                          :op2 \"Stadium\")))))",
      "(r3 / rent-01\n    :ARG1 (s2 / stadium\n              :name (n2 / name\n                        :op1 \"Olympic\"\n                        :op2 \"Stadium\"))\n    :time (s3 / season\n              :mod (n3 / next)))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :time (s3 / season\n                                                   :mod (n3 / next)))))))",
      "(r2 / recommend-01\n    :ARG1 (p / public-02\n             :ARG1 (t2 / term\n                       :mod (r3 / rent-01\n                                :ARG1 (s2 / stadium\n                                          :name (n2 / name\n                                                    :op1 \"Olympic\"\n                                                    :op2 \"Stadium\"))))))",
      "(d / disappoint-01\n   :ARG0 (r / rule-01\n            :ARG1 (r2 / recommend-01\n                      :ARG1 (p / public-02\n                               :ARG1 (t2 / term\n                                         :mod (r3 / rent-01\n                                                  :time (s3 / season\n                                                            :mod (n3 / next))))))))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :ARG1 (s2 / stadium\n                                                   :name (n2 / name\n                                                             :op1 \"Olympic\"\n                                                             :op2 \"Stadium\")))))))",
      "(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :time (s3 / season\n                                                                     :mod (n3 / next)))))))))",
      "(d / disappoint-01\n   :ARG0 (r / rule-01\n            :ARG1 (r2 / recommend-01\n                      :ARG1 (p / public-02\n                               :ARG1 (t2 / term\n                                         :mod (r3 / rent-01\n                                                  :ARG1 (s2 / stadium\n                                                            :name (n2 / name\n                                                                      :op1 \"Olympic\"\n                                                                      :op2 \"Stadium\"))))))))",
      "(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :ARG1 (s2 / stadium\n                                                                     :name (n2 / name\n                                                                               :op1 \"Olympic\"\n                                                                               :op2 \"Stadium\")))))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :time (s3 / season\n                                                                     :mod (n3 / next)))))))))"
    ],
    "smus": [
      "West Ham are disappointed, say",
      "West Ham say --",
      "The Olympic Stadium is rented.",
      "West Ham say they are disappointed.",
      "Rent terms for next season should be public.",
      "The Olympic Stadium will be rented next season.",
      "The ruling is that the terms of the next season's rental should be public.",
      "The terms of the Olympic Stadium's rental should be public.",
      "The ruling that the rent terms for next season should be public was disappointing.",
      "The ruling is that the terms of the Olympic Stadium's rental should be public.",
      "The ruling that the rent terms for next season should be public, they say, is disappointing.",
      "The ruling that the terms of the Olympic Stadium's rental should be public was disappointing.",
      "The ruling that the terms of the Olympic Stadium's rental should be public said to be disappointing.",
      "West Ham say the ruling that the rental terms for next season should be public was disappointing.",
      "West Ham say the ruling that the terms of the Olympic Stadium's rental should be public was disappointing."
    ]
  },
  {
    "instance_id": "pyrxsum-8",
    "summary": "Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.",
    "summary_trees": [
      "# ::snt Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.\n(v / vow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abdul\"\n                  :op2 \"Fattah\"\n                  :op3 \"al-Sisi\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (a / army)\n                  :ARG2 (c / chief)\n                  :time (e / ex)))\n      :ARG1 (a2 / and\n            :op1 (t / tackle-01\n                  :ARG0 p\n                  :ARG1 (t2 / terrorism))\n            :op2 (b / bring-01\n                  :ARG0 p\n                  :ARG1 (s / security)))\n      :time (a3 / after\n            :op1 (s2 / swear-in-06\n                  :ARG1 p\n                  :ARG2 (p2 / person\n                        :ARG0-of (h2 / have-org-role-91\n                              :ARG1 (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"Egypt\"))\n                              :ARG2 (p3 / president\n                                    :ARG1-of (n3 / new-01)))))))"
    ],
    "tree": [
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\")))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\")))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(h / have-org-role-91\n   :ARG1 (a / army)\n   :ARG2 (c / chief))",
      "(h / have-org-role-91\n   :ARG1 (a / army)\n   :time (e / ex))",
      "(h / have-org-role-91\n   :ARG2 (c / chief)\n   :time (e / ex))",
      "(h / have-org-role-91\n   :ARG1 (a / army)\n   :ARG2 (c / chief))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex))))",
      "(h / have-org-role-91\n   :ARG1 (a / army)\n   :ARG2 (c / chief)\n   :time (e / ex))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\")))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(s2 / swear-in-06\n    :ARG2 (p2 / person\n              :ARG0 (h2 / have-org-role-91\n                        :ARG1 (c2 / country\n                                  :name (n2 / name\n                                            :op1 \"Egypt\")))))",
      "(h2 / have-org-role-91\n    :ARG1 (c2 / country\n              :name (n2 / name\n                        :op1 \"Egypt\"))\n    :ARG2 (p3 / president\n              :ARG1 (n3 / new-01)))",
      "(h2 / have-org-role-91\n    :ARG1 (c2 / country\n              :name (n2 / name\n                        :op1 \"Egypt\"))\n    :ARG2 (p3 / president\n              :ARG1 (n3 / new-01)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))"
    ],
    "smus": [
      "Abdul Fattah al-Sisi vowed to tackle the situation.",
      "Abdul Fattah al-Sisi vowed to bring --",
      "The government vowed to tackle terrorism.",
      "The vp vowed to bring security.",
      "The Army chief",
      "Ex-Army.",
      "Ex-chief",
      "New president",
      "The chief vowed --",
      "Ex-Army Chief",
      "Abdul Fattah al-Sisi vowed --",
      "After being sworn in, Abdul Fattah al-Sisi vowed to tackle the situation.",
      "After being sworn in, Abdul Fattah al-Sisi vowed to bring.",
      "The new president is sworn in.",
      "The chief vowed to tackle the situation.",
      "The chief vowed to bring the matter to the fore.",
      "Ex vows to tackle",
      "Ex vows to bring",
      "After Abdul Fattah al-Sisi was sworn in, he vowed to tackle terrorism.",
      "After Abdul Fattah al-Sisi was sworn in, he vowed to bring security.",
      "Egyptians are sworn in.",
      "Egypt has a new president.",
      "Abdul Fattah al-Sisi vowed to bring.",
      "The chief vowed to tackle terrorism.",
      "The chief vowed to bring security.",
      "Ex vows to tackle terrorism",
      "Ex vows to bring security",
      "Abdul Fattah al-Sisi vowed to tackle terrorism.",
      "Abdul Fattah al-Sisi vowed to bring security.",
      "The chief vowed after being sworn in.",
      "After being sworn in, the Ex vowed to.",
      "Abdul Fattah al-Sisi vowed after being sworn in.",
      "The chief vowed to tackle after being sworn in.",
      "The chief vowed to bring after being sworn in.",
      "After being sworn in, the ex vowed to tackle.",
      "After being sworn in, the Ex vowed to bring.",
      "After the new president is sworn in, Abdul Fattah al-Sisi vowed to tackle the issue.",
      "Abdul Fattah al-Sisi vowed to tackle after being sworn in.",
      "The chief vowed to tackle terrorism after being sworn in.",
      "The chief vowed to bring security after being sworn in.",
      "Ex vows to tackle terrorism after swearing in",
      "After being sworn in, the Ex vowed to bring security.",
      "After Egypt's swearing-in, Abdul Fattah al-Sisi vowed to tackle the situation.",
      "After the new president is sworn in, he vowed to tackle terrorism.",
      "After the new president is sworn in, he vowed to bring security.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after being sworn in.",
      "Abdul Fattah al-Sisi vowed to bring security after being sworn in.",
      "After Egypt's swearing-in, the country vowed to tackle terrorism.",
      "The chief vowed after the new president is sworn in.",
      "Ex-spokes vowed after the new president is sworn in.",
      "Abdul Fattah al-Sisi vowed after the new president is sworn in.",
      "The chief vowed after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed after Egypt's swearing-in.",
      "After the new president is sworn in, the Army vows to bring in.",
      "The chief vowed to tackle after the new president is sworn in.",
      "After the new president is sworn in, the chief vowed to bring in.",
      "Abdul Fattah al-Sisi vowed to tackle after the new president is sworn in.",
      "After the new president is sworn in Abdul Fattah al-Sisi vowed to bring.",
      "After the new president is sworn in, the Army vows to bring security.",
      "The chief vowed to tackle after Egypt's swearing-in.",
      "The chief vowed to tackle terrorism after the new president is sworn in.",
      "The chief vowed to bring security after the new president is sworn in.",
      "Ex vows to tackle after Egypt is sworn in",
      "After Egypt's swearing-in, the ex vowed to bring.",
      "Abdul Fattah al-Sisi vowed to tackle after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after the new president is sworn in.",
      "Abdul Fattah al-Sisi vowed to bring security after the new president is sworn in.",
      "The chief vowed to tackle terrorism after Egypt's swearing-in.",
      "The chief vowed to bring security after Egypt's sworn in.",
      "Ex vows to tackle terrorism after Egypt's swearing-in",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to bring security after Egypt's swearing-in."
    ]
  },
  {
    "instance_id": "pyrxsum-9",
    "summary": "Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in McCoy honour at Cheltenham as 'flattering.'",
    "summary_trees": [
      "# ::snt Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in McCoy honour at Cheltenham as 'flattering.'\n(d / describe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Anthony\"\n                  :op3 \"McCoy\")\n            :ARG0-of (r / ride-01\n                  :ARG1 (j / jump-03))\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / champion\n                        :frequency 20)))\n      :ARG1 (h2 / have-04\n            :ARG1 (s / statue\n                  :ARG1-of (p2 / put-up-13\n                        :ARG2 (h3 / honor-01\n                              :ARG1 p)\n                        :location (s2 / sports-facility\n                              :name (n2 / name\n                                    :op1 \"Cheltenham\")))))\n      :ARG2 (f / flatter-01))"
    ],
    "tree": [
      "(h / have-org-role-91\n   :ARG2 (c / champion\n            :frequency 20))",
      "(p2 / put-up-13\n    :ARG2 (h3 / honor-01\n              :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\")))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20))))",
      "(h2 / have-04\n    :ARG1 (s / statue\n             :ARG1 (p2 / put-up-13\n                       :ARG2 (h3 / honor-01\n                                 :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG2 (f / flatter-01))",
      "(p2 / put-up-13\n    :ARG2 (h3 / honor-01\n              :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\"))))\n    :location (s2 / sports-facility\n                  :name (n2 / name\n                            :op1 \"Cheltenham\")))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :location (s2 / sports-facility\n                                              :name (n2 / name\n                                                        :op1 \"Cheltenham\"))))))",
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :location (s2 / sports-facility\n                                              :name (n2 / name\n                                                        :op1 \"Cheltenham\")))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))"
    ],
    "smus": [
      "20 times champion.",
      "Put up in honor of Sir Anthony McCoy.",
      "Jumper described:",
      "Sir Anthony McCoy has described --",
      "The champion has described -- 20 times.",
      "having a statue put up in honor of Sir Anthony McCoy.",
      "Jumper describe it as flattering.",
      "Sir Anthony McCoy has described it as flattering.",
      "The champion has described it as flattering.",
      "Having a statue put up in honor of Sir Anthony McCoy is described as :",
      "Having a statue put up in honor of Sir Anthony McCoy was described as flattering.",
      "The jump rider has described having a statue put up in his honor.",
      "Sir Anthony McCoy has described having a statue put up in his honor.",
      "The champion, who has won 20 times, has described having a statue put up in his honor.",
      "A jumper has described having a statue put up in his honor as flattering.",
      "Sir Anthony McCoy has described having a statue put up in his honor as flattering.",
      "The champion, who has won 20 times, has described having a statue put up in his honor as flattering."
    ]
  },
  {
    "instance_id": "pyrxsum-10",
    "summary": "A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.",
    "summary_trees": [
      "# ::snt A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.\n(d / defend-01\n      :ARG0 (p / person\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (s / sign\n            :ARG0-of (u / urge-01\n                  :ARG1 (p2 / person)\n                  :ARG2 (e / eat-01\n                        :ARG0 p2\n                        :ARG1 (c2 / cake)\n                        :purpose (a / avoid-01\n                              :ARG0 p2\n                              :ARG1 (k / kidnap-01\n                                    :ARG1 p2\n                                    :location (t / town\n                                          :location-of (a2 / and\n                                                :op1 (a3 / abduct-01\n                                                      :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                  :op1 \"April\"\n                                                                  :op2 \"Jones\")))\n                                                :op2 (m / murder-01\n                                                      :ARG1 p3)\n                                                :time (d2 / date-entity\n                                                      :year 2012)))))))))"
    ],
    "tree": [
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :ARG0 (p2 / person)))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :ARG1 (p2 / person)))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :ARG0 p2))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG0 (p2 / person))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :ARG0 p2))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG0 (p2 / person)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :ARG1 (c2 / cake)))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :ARG1 (c2 / cake)))",
      "(a3 / abduct-01\n    :ARG1 (p3 / person\n              :name (n / name\n                       :op1 \"April\"\n                       :op2 \"Jones\")))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG0 p2)))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :ARG1 (p2 / person)))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG0 p2)))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :ARG1 (p2 / person))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (d2 / date-entity\n                                       :year 2012))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :ARG1 p2))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :ARG1 p2))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :ARG1 (p2 / person)))))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (d2 / date-entity\n                                                            :year 2012))))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (d2 / date-entity\n                                                   :year 2012)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (a3 / abduct-01\n                                       :ARG1 (p3 / person\n                                                 :name (n / name\n                                                          :op1 \"April\"\n                                                          :op2 \"Jones\"))))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (m / murder-01\n                                      :ARG1 (p3 / person\n                                                :name (n / name\n                                                         :op1 \"April\"\n                                                         :op2 \"Jones\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (d2 / date-entity\n                                                            :year 2012))))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (d2 / date-entity\n                                                            :year 2012))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (d2 / date-entity\n                                                                              :year 2012))))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (a3 / abduct-01\n                                                            :ARG1 (p3 / person\n                                                                      :name (n / name\n                                                                               :op1 \"April\"\n                                                                               :op2 \"Jones\"))))))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (m / murder-01\n                                                           :ARG1 (p3 / person\n                                                                     :name (n / name\n                                                                              :op1 \"April\"\n                                                                              :op2 \"Jones\"))))))))"
    ],
    "smus": [
      "Impressed people to eat.",
      "To avoid people being kidnapped.",
      "People are urging them to eat.",
      "urging people to eat to avoid",
      "Eat the cake to avoid people.",
      "The cafe owners have defended.",
      "The urging sign was defended.",
      "Urging people to eat the cake.",
      "April Jones was abducted.",
      "The sign urging people to eat was defended.",
      "People are urging to eat to avoid.",
      "urging people to eat to avoid being kidnapped",
      "Eat the cake to avoid people being kidnapped.",
      "To avoid being kidnapped in a 2012 town.",
      "The sign urging people to eat the cake was defended.",
      "The sign urging people to eat to avoid was defended.",
      "The sign urging people to eat to avoid being kidnapped was defended.",
      "urging people to eat to avoid being kidnapped in a town in 2012.",
      "Eat the cake to avoid being kidnapped in a 2012 town.",
      "The cafe owner has defended the urging sign.",
      "To avoid being kidnapped in the town where April Jones was abducted.",
      "To avoid being kidnapped in a town where April Jones was murdered.",
      "The cafe owner has defended the sign urging people to eat.",
      "People are urging to eat to avoid being kidnapped in a town in 2012.",
      "The cafe owner has defended the sign urging people to eat the cake.",
      "The cafe owner has defended the sign urging people to eat to avoid.",
      "The sign urging people to eat to avoid being kidnapped in the town of 2012 was defended.",
      "Urging to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "urging people to eat to avoid being kidnapped in the town where April Jones was murdered.",
      "Eat the cake to avoid being kidnapped in the town where April Jones was abducted.",
      "Eat the cake to avoid being kidnapped in the town where April Jones was murdered.",
      "The cafe owner has defended the sign urging people to eat to avoid being kidnapped.",
      "People are urging to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "People are urging to eat to avoid being kidnapped in the town where April Jones was murdered.",
      "The sign urging people to eat to avoid being kidnapped in the town where April Jones was abducted was defended.",
      "The sign urging people to eat to avoid being kidnapped in the town where April Jones was murdered was defended.",
      "The cafe owner has defended a sign urging people to eat to avoid being kidnapped in the town of 2012",
      "The cafe owner defended a sign urging people to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "The cafe owner defended a sign urging people to eat to avoid being kidnapped in the town where April Jones was murdered."
    ]
  },
  {
    "instance_id": "pyrxsum-11",
    "summary": "Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.",
    "summary_trees": [
      "# ::snt Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.\n(s / say-01\n      :ARG0 (o / official)\n      :ARG1 (a / and\n            :op1 (k / kill-01\n                  :ARG0 (e / explode-01\n                        :quant 2\n                        :ARG1 (b / bus\n                              :mod (p / passenger))\n                        :location (c / city\n                              :name (n / name\n                                    :op1 \"Nairobi\")\n                              :ARG0-of (h / have-org-role-91\n                                    :ARG1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Kenya\"))\n                                    :ARG2 (c3 / capital))))\n                  :ARG1 (p2 / person\n                        :quant 3))\n            :op2 (w / wound-01\n                  :ARG0 e\n                  :ARG1 (p3 / person\n                        :quant (a2 / at-least\n                              :op1 62)\n                        :mod (o2 / other)))))"
    ],
    "tree": [
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :quant 3))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger)))",
      "(w / wound-01\n   :ARG1 (p3 / person\n             :mod (o2 / other)))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG1 (w / wound-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant 3)))",
      "(w / wound-01\n   :ARG1 (p3 / person\n             :quant (a2 / at-least\n                        :op1 62)))",
      "(s / say-01\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :mod (o2 / other))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2)\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2)\n   :ARG1 (p2 / person\n             :quant 3))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant 3)))",
      "(s / say-01\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :quant (a2 / at-least\n                                 :op1 62))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Nairobi\"))))",
      "(h / have-org-role-91\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Kenya\"))\n   :ARG2 (c3 / capital))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :mod (o2 / other))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :ARG1 (b / bus\n                              :mod (p / passenger)))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG2 (c3 / capital)))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :quant (a2 / at-least\n                                 :op1 62))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Nairobi\")))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :quant (a2 / at-least\n                                 :op1 62))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :ARG1 (b / bus\n                     :mod (p / passenger)))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :ARG1 (b / bus\n                     :mod (p / passenger)))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger))\n   :location (c / city\n                :name (n / name\n                         :op1 \"Nairobi\")))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :ARG1 (b / bus\n                              :mod (p / passenger)))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :ARG0 (h / have-org-role-91\n                                           :ARG2 (c3 / capital))))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :ARG1 (b / bus\n                              :mod (p / passenger)))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Nairobi\")))\n   :ARG1 (p2 / person\n             :quant 3))"
    ],
    "smus": [
      "Two explosions have killed.",
      "Three people were killed.",
      "Passenger buses explode.",
      "Others were wounded.",
      "Two explosions say killed.",
      "Two explosions say, wounded.",
      "Three people are said to have been killed.",
      "At least 62 people were wounded.",
      "Others say they were wounded.",
      "Two explosions have killed three people.",
      "Officials say two explosions killed.",
      "Officials say two explosions have wounded.",
      "At least 62 people are said to have been wounded.",
      "The explosions in Nairobi have killed",
      "Kenya is the capital.",
      "Explosions in the capital have killed",
      "Officials say at least 62 people were wounded.",
      "Three people were killed in explosions on passenger buses.",
      "Passenger buses explode in Nairobi",
      "Explosions in the capital have killed, say the officials.",
      "Three people were killed in the Nairobi explosions.",
      "Passenger buses explode in capital",
      "Officials say the explosions in Nairobi have killed.",
      "Explosions in Kenyan cities have killed",
      "Three people have been killed in explosions in the capital.",
      "Officials say explosions in the capital have killed.",
      "Explosions in Kenyan cities have killed, say authorities.",
      "Kenyan passenger buses explode",
      "Three people have been killed in explosions in the Kenyan cities.",
      "Officials say explosions in Kenyan cities have killed."
    ]
  },
  {
    "instance_id": "pyrxsum-12",
    "summary": "Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.",
    "summary_trees": [
      "# ::snt Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.\n(o / obligate-01\n      :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                  :quant 30))\n      :time (a / after\n            :op1 (d / damage-01\n                  :ARG0 (f / fire\n                        :ARG1-of (s / start-01\n                              :manner (d2 / deliberate)))\n                  :ARG1 (p / pipe\n                        :mod (g / gas)))))"
    ],
    "tree": [
      "(e / evacuate-01\n   :ARG1 (h / home\n            :quant 30))",
      "(d / damage-01\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30)))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate))))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate)))\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30))\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG1 (p / pipe\n                             :mod (g / gas)))))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30))\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG0 (f / fire\n                             :ARG1 (s / start-01\n                                      :manner (d2 / deliberate))))))"
    ],
    "smus": [
      "30 homes were evacuated.",
      "Gas pipe damaged.",
      "30 homes had to be evacuated.",
      "The fire was damaged by deliberately started fires.",
      "A fire deliberately started damaged the gas pipe.",
      "30 homes had to be evacuated after gas pipe was damaged.",
      "30 homes had to be evacuated after a fire deliberately started was damaged."
    ]
  },
  {
    "instance_id": "pyrxsum-13",
    "summary": "Friends of Keith Harris have joined his family at his funeral in Blackpool.",
    "summary_trees": [
      "# ::snt Friends of Keith Harris have joined his family at his funeral in Blackpool.\n(j / join-04\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Keith\"\n                              :op2 \"Harris\"))\n                  :ARG2 (f / friend)))\n      :ARG1 (f2 / family\n            :poss p2)\n      :location (f3 / funeral\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Blackpool\"))))"
    ],
    "tree": [
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend))))",
      "(h / have-rel-role-91\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Keith\"\n                      :op2 \"Harris\")))",
      "(j / join-04\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\"))))",
      "(h / have-rel-role-91\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Keith\"\n                      :op2 \"Harris\"))\n   :ARG2 (f / friend))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Keith\"\n                                        :op2 \"Harris\"))))\n   :ARG1 (f2 / family\n             :poss p2))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Keith\"\n                                        :op2 \"Harris\"))))\n   :ARG1 (f2 / family\n             :poss p2))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\"))))",
      "(j / join-04\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\")))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))"
    ],
    "smus": [
      "Friends have joined.",
      "Keith Harris",
      "Keith Harris' family has joined him.",
      "Keith Harris is one of his friends.",
      "Friends have joined the funeral in Blackpool.",
      "Friends have joined Keith Harris family.",
      "Keith Harris' family were joined at a funeral in Blackpool.",
      "Keith Harris will be joined at a funeral in Blackpool.",
      "Friends have joined Keith Harris family at a funeral in Blackpool."
    ]
  },
  {
    "instance_id": "pyrxsum-14",
    "summary": "Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".",
    "summary_trees": [
      "# ::snt Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".\n(d / defect-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Bob\"\n                  :op2 \"Marshall-Andrews\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member)\n                  :time (f / former))\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (p4 / political-party\n            :name (n3 / name\n                  :op1 \"Liberal\"\n                  :op2 \"Democrat\"))\n      :time (a / after\n            :op1 (d2 / describe-01\n                  :ARG0 p\n                  :ARG1 (p5 / party\n                        :poss (p6 / person\n                              :name (n4 / name\n                                    :op1 \"Jeremy\"\n                                    :op2 \"Corbyn\")))\n                  :ARG2 (c / case\n                        :mod (b / basket)\n                        :mod (p7 / politics)))))"
    ],
    "tree": [
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member))",
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :time (f / former))",
      "(h / have-org-role-91\n   :ARG2 (m / member)\n   :time (f / former))",
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member))",
      "(d2 / describe-01\n    :ARG2 (c / case\n             :mod (b / basket)))",
      "(d2 / describe-01\n    :ARG2 (c / case\n             :mod (p7 / politics)))",
      "(h2 / have-org-role-91\n    :ARG1 (p3 / political-party\n              :name (n2 / name\n                        :op1 \"Labour\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member)\n   :time (f / former))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\")))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 (p / person :name (n / name :op1 \"Bob\" :op2 \"Marshall-Andrews\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d2 / describe-01\n    :ARG1 (p5 / party\n              :poss (p6 / person\n                        :name (n4 / name\n                                  :op1 \"Jeremy\"\n                                  :op2 \"Corbyn\")))\n    :ARG2 (c / case\n             :mod (b / basket)))",
      "(d2 / describe-01\n    :ARG1 (p5 / party\n              :poss (p6 / person\n                        :name (n4 / name\n                                  :op1 \"Jeremy\"\n                                  :op2 \"Corbyn\")))\n    :ARG2 (c / case\n             :mod (b / basket)))",
      "(d2 / describe-01\n    :ARG1 (p5 / party\n              :poss (p6 / person\n                        :name (n4 / name\n                                  :op1 \"Jeremy\"\n                                  :op2 \"Corbyn\")))\n    :ARG2 (c / case\n             :mod (p7 / politics)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))"
    ],
    "smus": [
      "Parliamentarian.",
      "Former parliament",
      "Former member",
      "describing the basket case.",
      "describing a political case.",
      "Labour.",
      "Bob Marshall-Andrews defected.",
      "Parliamentarians have defected.",
      "Members have defected.",
      "Former parliamentarian.",
      "describing Jeremy Corbyn's party",
      "After describing, Bob Marshall-Andrews defected.",
      "After describing, parliamentarians defected.",
      "After describing, the members have defected.",
      "The former defected after describing.",
      "Bob Marshall-Andrews has defected to the Lib Dem party.",
      "The MP has defected to the lib dem party.",
      "The members have defected to the lib dem party.",
      "describing Jeremy Corbyn's party as a basket case.",
      "describing Jeremy Corbyn's party as a political case.",
      "After describing the basket case, Bob Marshall-Andrews defected.",
      "After describing the political case, Bob Marshall-Andrews defected.",
      "After describing the basket case, parliamentarians defected.",
      "After describing the political case, parliamentarians defected.",
      "After describing the basket case, the members have defected.",
      "After describing the political case, the members defected.",
      "After describing the basket case the former defected.",
      "After describing the political case, the former defected.",
      "After describing, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing the defect, the MP has defected to the Lib Dem party.",
      "After describing, the members have defected to the Lib Dem party.",
      "After describing the defect, the former defectors have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, Bob Marshall-Andrews defected.",
      "After describing Jeremy Corbyn's party, parliamentarians have defected.",
      "After describing Jeremy Corbyn's party, the members have defected.",
      "The former defected after describing Jeremy Corbyn's party.",
      "After describing the basket case, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing the political case, Bob Marshall-Andrews defected to the Lib Dem party.",
      "After describing the basket case a MP has defected to the Lib Dem party.",
      "After describing the political case a MP has defected to the Lib Dem party.",
      "After describing the basket case, the members have defected to the Lib Dem party.",
      "After describing the political case, the members have defected to the Lib Dem party.",
      "After describing the basket case the former defected to the lib dem party.",
      "After describing the political case, the former defectors have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, parliamentarians have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, the members have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, the former has defected to the Lib Dems."
    ]
  },
  {
    "instance_id": "pyrxsum-15",
    "summary": "Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.",
    "summary_trees": [
      "# ::snt Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.\n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Castleford\"\n                  :op2 \"Tigers\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Wakefield\"\n                  :op2 \"Trinity\")\n            :ARG0-of (r / rival-01\n                  :ARG1 t)\n            :ARG1-of (l / local-02))\n      :purpose (c / clinch-01\n            :ARG0 t\n            :ARG1 (s / shield\n                  :name (n3 / name\n                        :op1 \"League\"\n                        :op2 \"Leaders'\"\n                        :op3 \"Shield\"))))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02)))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team :name (n / name :op1 \"Castleford\" :op2 \"Tigers\")))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\")))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\")))",
      "(c / clinch-01\n   :ARG1 (s / shield\n            :name (n3 / name\n                      :op1 \"League\"\n                      :op2 \"Leaders'\"\n                      :op3 \"Shield\")))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team :name (n / name :op1 \"Castleford\" :op2 \"Tigers\"))))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\")))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\"))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\"))\n   :purpose (c / clinch-01\n               :ARG0 t))"
    ],
    "smus": [
      "beat local team",
      "The rivals of the Castleford Tigers beat each other.",
      "The Castleford Tigers beat",
      "beat Wakefield Trinity",
      "The League Leaders' shield will clinch.",
      "The rivals of the Castleford Tigers beat each other to clinch.",
      "Castleford Tigers beat local team",
      "Castleford Tigers beat their rivals",
      "The local team beat to clinch the League Leaders' shield.",
      "The Castleford Tigers beat the local team to clinch.",
      "The Castleford Tigers beat their rivals to clinch.",
      "The Castleford Tigers beat Wakefield Trinity to clinch.",
      "The Castleford Tigers beat the local team to clinch the League Leaders' shield.",
      "The Castleford Tigers beat their rivals to clinch the League Leaders' shield.",
      "The Castleford Tigers beat Wakefield Trinity to clinch the League Leaders' shield."
    ]
  },
  {
    "instance_id": "pyrxsum-16",
    "summary": "At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.",
    "summary_trees": [
      "# ::snt At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.\n(t / tell-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (p2 / parliament)\n                        :ARG2 (m / member)))\n            :op2 (s / source\n                  :mod (a2 / army)))\n      :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                  :quant (a3 / at-least\n                        :op1 23))\n            :location (t2 / town\n                  :name (n / name\n                        :op1 \"Monguno\")\n                  :location (n2 / northeast\n                        :part-of (c / country\n                              :name (n3 / name\n                                    :op1 \"Nigeria\"))))\n            :time (a4 / after\n                  :op1 (e / explode-01\n                        :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                    :name (n4 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Haram\"))\n                              :ARG1-of (c3 / confiscate-01\n                                    :ARG0 (v / vigilante))))))\n      :ARG2 (p4 / publication\n            :name (n5 / name\n                  :op1 \"BBC\")))"
    ],
    "tree": [
      "(b / bomb-01\n   :ARG1 (c3 / confiscate-01\n             :ARG0 (v / vigilante)))",
      "(t / tell-01\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member))))",
      "(e / explode-01\n   :ARG1 (b / bomb-01\n            :ARG1 (c3 / confiscate-01\n                      :ARG0 (v / vigilante))))",
      "(b / bomb-01\n   :ARG0 (c2 / criminal-organization\n             :name (n4 / name\n                       :op1 \"Boko\"\n                       :op2 \"Haram\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(e / explode-01\n   :ARG1 (b / bomb-01\n            :ARG0 (c2 / criminal-organization\n                      :name (n4 / name\n                                :op1 \"Boko\"\n                                :op2 \"Haram\"))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(b / bomb-01\n   :ARG0 (c2 / criminal-organization\n             :name (n4 / name\n                       :op1 \"Boko\"\n                       :op2 \"Haram\"))\n   :ARG1 (c3 / confiscate-01\n             :ARG0 (v / vigilante)))",
      "(b / bomb-01\n   :ARG0 (c2 / criminal-organization\n             :name (n4 / name\n                       :op1 \"Boko\"\n                       :op2 \"Haram\"))\n   :ARG1 (c3 / confiscate-01\n             :ARG0 (v / vigilante)))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\")))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))"
    ],
    "smus": [
      "The BBC were told.",
      "At least 23 people were killed.",
      "Parliamentarians have told --",
      "Members have told.",
      "The bomb that exploded was a confiscated by the vigilantes.",
      "The bombing occurred by the Boko Haram group.",
      "told at least 23 people have been killed.",
      "The bombing by Boko Haram exploded.",
      "An army source told the BBC:",
      "At least 23 people were killed in the town of Monguno.",
      "An army source has told the story of the killing in the town of Monguno.",
      "MPs have told the BBC:",
      "Members have told the BBC:",
      "The killing took place in a town in the northeastern Nigeria, it was told.",
      "At least 23 people have been told the BBC.",
      "Parliament has told that at least 23 people have been killed.",
      "Members have told of the killings, which have killed at least 23 people.",
      "Members have told the story of the killing in the town of Monguno.",
      "At least 23 people were killed in a town in northeast Nigeria.",
      "An army source has told of the killings in a town in the northeastern Nigeria.",
      "At least 23 people were killed after a bomb that was exploded on a seized by vigilantes.",
      "An army source has told of being killed after a bomb exploded that was confiscated by vigilantes.",
      "The BBC has been told that a town in the northeastern Nigeria was killed.",
      "At least 23 people were killed, an army source has told the BBC.",
      "An army source has told the BBC that the killings took place in the town of Monguno.",
      "Parliament has told of the killings in a town in the northeastern Nigeria.",
      "The members have told of the killings in a town in the northeastern Nigeria.",
      "At least 23 people were killed after a bomb from Boko Haram exploded.",
      "Parliament has told of the killings that occurred after a bomb that exploded on a confiscated by vigilantes.",
      "An army source has told of the deaths, which occurred after a bombing by Boko Haram exploded.",
      "Members have told of being killed after a bomb exploded that confiscated by vigilantes.",
      "MPs have told the BBC that at least 23 people have been killed.",
      "Parliament has told the BBC that the killings took place in the town of Monguno.",
      "At least 23 people have been killed, the BBC have been told by members.",
      "Members have told the BBC that the killings took place in the town of Monguno.",
      "Parliament has told of the killings that occurred after a bomb by Boko Haram exploded.",
      "Members have told how the killings occurred after the bombing by Boko Haram exploded.",
      "An army source has told the BBC that the killings occurred in a town in the northeastern Nigeria.",
      "A parliamentarian has told the BBC that the killings took place in a town in the northeastern Nigeria.",
      "A member has told the BBC that the killings took place in a town in the northeastern Nigeria.",
      "An army source has told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "Members have told the BBC that the killings occurred after a bomb exploded on a vigilant confiscated property.",
      "Parliamentarians have told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "Members have told the BBC that the killings occurred after a bomb from Boko Haram exploded."
    ]
  },
  {
    "instance_id": "pyrxsum-17",
    "summary": "The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.",
    "summary_trees": [
      "# ::snt The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (a / architect-01))\n      :ARG1 (a2 / and\n            :op1 (h / homage)\n            :op2 (s2 / symphony\n                  :location (s3 / steel))\n            :domain (c / center\n                  :mod (s4 / sport)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Ravenscraig\")))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01)))",
      "(s / say-01\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (h / homage))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (h / homage))",
      "(s / say-01\n   :ARG1 (c / center\n            :location (c2 / city\n                          :name (n / name\n                                   :op1 \"Ravenscraig\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (c / center\n            :mod (s4 / sport)))"
    ],
    "smus": [
      "Architectural say --",
      "Say, a symphony in steel.",
      "The architects say homage.",
      "Ravenscraig centre, say",
      "Architectural say a symphony in steel.",
      "The architects say the sports center is.",
      "The architects say the centre is in Ravenscraig."
    ]
  },
  {
    "instance_id": "pyrxsum-18",
    "summary": "The winner of The Jump 2017 is Spencer Matthews.",
    "summary_trees": [
      "# ::snt The winner of The Jump 2017 is Spencer Matthews.\n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Spencer\"\n                  :op2 \"Matthews\"))\n      :ARG1 (e / event\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Jump\")\n            :time (d / date-entity\n                  :year 2017)))"
    ],
    "tree": [
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\"))\n   :ARG1 (e / event\n            :time (d / date-entity\n                     :year 2017)))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\"))\n   :ARG1 (e / event\n            :time (d / date-entity\n                     :year 2017)))"
    ],
    "smus": [
      "Spencer Matthews won.",
      "Spencer Matthews won the 2017 event.",
      "Spencer Matthews won The Jump."
    ]
  },
  {
    "instance_id": "pyrxsum-19",
    "summary": "Fifa presidential candidate Gianni Infantino says Infantino would press for the World Cup to be held in a whole region rather than one or two countries.",
    "summary_trees": [
      "# ::snt Fifa presidential candidate Gianni Infantino says Infantino would press for the World Cup to be held in a whole region rather than one or two countries.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Gianni\"\n                  :op2 \"Infantino\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"Fifa\"))\n                  :ARG2 (c / candidate\n                        :mod (p2 / president))))\n      :ARG1 (p3 / press-01\n            :ARG0 p\n            :ARG2 (h2 / hold-04\n                  :ARG1 (g / game\n                        :name (n3 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\"))\n                  :location (r / region\n                        :mod (w / whole)\n                        :ARG1-of (ii / instead-of-91\n                              :ARG2 (h3 / hold-04\n                                    :ARG1 g\n                                    :location (c2 / country\n                                          :quant (o2 / or\n                                                :op1 1\n                                                :op2 2))))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (p3 / press-01\n             :ARG0 (p / person :name (n / name :op1 \"Gianni\" :op2 \"Infantino\")))))",
      "(h / have-org-role-91\n   :ARG2 (c / candidate\n            :mod (p2 / president)))",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"Fifa\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\")))",
      "(p3 / press-01\n    :ARG2 (h2 / hold-04\n              :location (r / region\n                           :mod (w / whole))))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\")))",
      "(ii / instead-of-91\n    :ARG2 (h3 / hold-04\n              :location (c2 / country\n                            :quant (o2 / or\n                                       :op1 1))))",
      "(ii / instead-of-91\n    :ARG2 (h3 / hold-04\n              :location (c2 / country\n                            :quant (o2 / or\n                                       :op2 2))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president)))))",
      "(p3 / press-01\n    :ARG2 (h2 / hold-04\n              :ARG1 (g / game\n                       :name (n3 / name\n                                 :op1 \"World\"\n                                 :op2 \"Cup\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"Fifa\"))\n   :ARG2 (c / candidate\n            :mod (p2 / president)))",
      "(s / say-01\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :ARG1 (g / game :name (n3 / name :op1 \"World\" :op2 \"Cup\"))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\"))\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :ARG1 g))))",
      "(s / say-01\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :ARG1 (g / game :name (n3 / name :op1 \"World\" :op2 \"Cup\"))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\"))\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :location (c2 / country\n                                                   :quant (o2 / or\n                                                              :op1 1))))))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\"))\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :location (c2 / country\n                                                   :quant (o2 / or\n                                                              :op2 2))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))"
    ],
    "smus": [
      "Gianni Infantino says press.",
      "President-candidate",
      "FIFA or whatever.",
      "Gianni Infantino says --",
      "Press for holding in the whole region.",
      "The Wor Cup was held.",
      "Instead, held in one or more countries.",
      "Instead, held in one or two countries.",
      "According to the presidential candidate,",
      "Press hold for Wor Cup.",
      "\"Fifa\" or \"Fifa\" says...",
      "Gianni Infantino says he will press.",
      "Press to be held to the Wor Cup, says.",
      "The president's candidate says he will press.",
      "Fifa or FIFA says it will press.",
      "Press for holding in the region rather than in one country.",
      "Press for holding in the region rather than in two countries.",
      "Gianni Infantino says press for the holding in the whole region.",
      "Gianni Infantino says press to be held to the Wor Cup.",
      "FIFA or FIFA supporters say press for the holding in the whole region.",
      "The president's candidate says he will press for the Wor Cup to be held.",
      "\"Press to be held to the Wor Cup,\" says a FIFA or FIFAr.",
      "Gianni Infantino says press for the holdings to be held in the region rather than in one country.",
      "Gianni Infantino says press for the holdings to be held in the region rather than in two countries.",
      "The president's candidate says he will press for the holdings to be held in the region rather than in one or two countries.",
      "The president's candidate says he will press for the holdings to be held in the region rather than in two countries.",
      "FIFA or FIFA officials say they will press for the holdings to be held in the region rather than in one or two countries.",
      "FIFA or FIFA officials say they will press for the holdings to be held in the region rather than in two countries."
    ]
  },
  {
    "instance_id": "pyrxsum-20",
    "summary": "Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as Swinney prepares to set out Swinney budget.",
    "summary_trees": [
      "# ::snt Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as Swinney prepares to set out Swinney budget.\n(w / warn-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (s / secretary\n                        :topic (f / finance))))\n      :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Scotland\"))\n            :ARG1-of (t / tough-02)\n            :ARG1-of (f2 / face-01\n                  :ARG0 c2))\n      :time (p2 / prepare-02\n            :ARG0 p\n            :ARG1 p\n            :ARG2 (s2 / set-out-06\n                  :ARG0 p\n                  :ARG1 (b / budget\n                        :poss p))))"
    ],
    "tree": [
      "(c / choose-01\n   :ARG1 (f2 / face-01\n             :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))",
      "(p2 / prepare-02\n    :ARG2 (s2 / set-out-06\n              :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(h / have-org-role-91\n   :ARG2 (s / secretary\n            :topic (f / finance)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\")))",
      "(p2 / prepare-02\n    :ARG2 (s2 / set-out-06\n              :ARG1 (b / budget\n                       :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\")))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (t / tough-02))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (t / tough-02))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (t / tough-02))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (f2 / face-01\n             :ARG0 c2))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))"
    ],
    "smus": [
      "Faced with Scotland is a choice.",
      "As John Swinney prepares to set out.",
      "Tough choice is being warned.",
      "The Secretary of State is Finance.",
      "Scotland's choice in facing the odds has been warned.",
      "Scotland is a choice.",
      "As preparations for John Swinney's budget are made.",
      "John Swinney has warned --",
      "Scotland's choice was warned.",
      "As John Swinney prepares, he is warned that tough choices are to be made.",
      "As John Swinney prepares, he is warned that it will be a tough choice.",
      "Scotland is a tough choice.",
      "The Finance Secretary has warned --",
      "As John Swinney prepares, Scotland is being warned to make the choice of facing Scotland.",
      "John Swinney has warned as he prepares.",
      "As John Swinney prepares to set out, he is warned that it will be a tough choice.",
      "John Swinney has warned that tough choices are a choice.",
      "Scotland is being warned about its choices as John Swinney prepares.",
      "As John Swinney prepares Scotland is being warned of Scotland's choice.",
      "As John Swinney prepares to set out, Scotland is being warned that it is a choice to face.",
      "John Swinney has warned that facing Scotland is a choice.",
      "John Swinney has warned as he prepares to set out.",
      "As the Secretary of State prepares, he is being warned.",
      "As John Swinney's budget is set out, tough choices are being warned.",
      "The Finance Secretary has warned of a tough choice.",
      "As John Swinney sets out, Scotland is being warned to make a choice.",
      "As John Swinney's budget is set out, Scotland is being warned that it is a choice to face.",
      "John Swinney has warned that Scotland is a choice.",
      "The Finance Secretary has warned that Scotland is a choice in facing.",
      "John Swinney has warned as he prepares to set out his budget.",
      "As the Secretary of State prepares to set out, he is being warned.",
      "John Swinney has warned of tough choices as he prepares.",
      "John Swinney has warned that as he prepares, the choice will be tough.",
      "Scotland is being warned about its choices as it prepares to set out John Swinney's budget.",
      "As he prepares, John Swinney has warned that Scotland is a choice to face.",
      "As he prepares John Swinney has warned that Scotland is a choice to face.",
      "The Finance Secretary has warned that Scotland is a choice.",
      "As the Secretary of State prepares his budget, he is warned.",
      "John Swinney has warned of tough choices as he prepares to set out.",
      "As the Secretary of State prepares, he is warned of tough choices.",
      "John Swinney has warned that Scotland will make a choice as he prepares.",
      "As he prepares to set out, John Swinney has warned that Scotland is a choice to face.",
      "As the Secretary of State prepares, he has warned that Scotland is a choice to face.",
      "John Swinney has warned of tough choices as he prepares his budget.",
      "As the Secretary of State prepares to set out, he has warned of a tough choice.",
      "John Swinney has warned that Scotland will make a choice as Scotland prepares to set out.",
      "As his budget prepares, John Swinney has warned that Scotland is a choice to face.",
      "As he prepares, the Finance Secretary has warned Scotland that Scotland will make a choice.",
      "As the Secretary of State prepares, he has warned that Scotland will make a choice.",
      "As the Secretary of State prepares to set out, he has warned that Scotland is a choice to face.",
      "As the Secretary of State prepares his budget, he is warned that tough choices will be made.",
      "John Swinney has warned that Scotland will make a choice as Scotland prepares to set out his budget.",
      "As the Secretary of State prepares to set out, he has warned that Scotland will make a choice.",
      "As Scotland prepares to set out its budget, the Finance Secretary has warned that Scotland is a choice to face.",
      "As Scotland prepares to set out its budget, the Finance Secretary has warned that Scotland will make a choice."
    ]
  },
  {
    "instance_id": "pyrxsum-21",
    "summary": "The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for fire terms of reference.",
    "summary_trees": [
      "# ::snt The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for fire terms of reference.\n(w / write-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01))\n            :ARG0-of (l / lead-02\n                  :ARG2 (ii / inquire-01\n                        :ARG2 (f / fire\n                              :location (b / building\n                                    :name (n / name\n                                          :op1 \"Grenfell\"\n                                          :op2 \"Tower\"))))))\n      :ARG1 (r / recommend-01\n            :ARG0 p\n            :ARG1 (t / term\n                  :mod f)\n            :ARG2-of (r2 / reference-04))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p3 / prime)))))"
    ],
    "tree": [
      "(w / write-01\n   :ARG1 (r / recommend-01\n            :ARG0 (p / person)))",
      "(h2 / have-org-role-91\n    :ARG2 (m / minister\n             :mod (p3 / prime)))",
      "(w / write-01\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(ii / inquire-01\n    :ARG2 (f / fire\n             :location (b / building\n                          :name (n / name\n                                   :op1 \"Grenfell\"\n                                   :op2 \"Tower\"))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04)))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04)))",
      "(w / write-01\n   :ARG1 (r / recommend-01\n            :ARG0 (p / person))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG1 (r / recommend-01\n            :ARG1 (t / term\n                     :mod (f / fire\n                             :location (b / building\n                                          :name (n / name\n                                                   :op1 \"Grenfell\"\n                                                   :op2 \"Tower\"))))))",
      "(w / write-01\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\")))))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04)))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG1 (t / term\n                     :mod (f / fire\n                             :location (b / building\n                                          :name (n / name\n                                                   :op1 \"Grenfell\"\n                                                   :op2 \"Tower\"))))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))"
    ],
    "smus": [
      "People's recommendations are written.",
      "Prime minister",
      "The prime minister is written in.",
      "inquiry into fire at Glenfell Tower",
      "The judge has written his recommendations.",
      "The judge has written that the references should be made.",
      "leading to an inquiry into the fire at Glenfell Tower.",
      "People's recommendations are written to the prime minister.",
      "The references should be written to the prime minister.",
      "A leader in an inquiry into the fire at Glenfell Tower has written:",
      "The judge has written to the prime minister.",
      "A person leading the inquiry into the fire at Glenfell Tower has written his recommendations.",
      "The judge has written his recommendations to the prime minister.",
      "A person leading an inquiry into the fire at Glenfell Tower has written a recommendation for the reference.",
      "The judge has written to the prime minister the recommendations for reference.",
      "A leader in an inquiry into the fire at Glenfell Tower has written to the prime minister.",
      "A leader in the inquiry into the fire at Glenfell Tower has written to the prime minister his recommendations.",
      "A leader in the inquiry into the Glenfell Tower fire has written to the prime minister that the reference should be made."
    ]
  },
  {
    "instance_id": "pyrxsum-22",
    "summary": "Police in a small Alaska town mistakenly told a couple Police son had been killed in a car crash, leading to an extraordinary reunion hours later.",
    "summary_trees": [
      "# ::snt Police in a small Alaska town mistakenly told a couple Police son had been killed in a car crash, leading to an extraordinary reunion hours later.\n(l / lead-03\n      :ARG0 (t / tell-01\n            :ARG0 (p / police\n                  :location (t2 / town\n                        :mod (s / small)\n                        :location (s2 / state\n                              :name (n / name\n                                    :op1 \"Alaska\"))))\n            :ARG1 (k / kill-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG1 (p3 / police)\n                              :ARG2 (s3 / son))\n                        :quant (c / couple))\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (c3 / crash-01\n                              :ARG1 (c4 / car))))\n            :ARG2 p2\n            :ARG1-of (m / mistake-01))\n      :ARG2 (r / reunite-01\n            :mod (e / extraordinary)\n            :time (a / after\n                  :quant (m2 / multiple\n                        :op1 (t3 / temporal-quantity\n                              :quant 1\n                              :unit (h2 / hour))))))"
    ],
    "tree": [
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01)))",
      "(l / lead-03\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :quant (c / couple)))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :quant (c / couple)))",
      "(h / have-org-role-91\n   :ARG1 (p3 / police)\n   :ARG2 (s3 / son))",
      "(c2 / cause-01\n    :ARG0 (c3 / crash-01\n              :ARG1 (c4 / car)))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (p3 / police))))",
      "(k / kill-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (c3 / crash-01\n                       :ARG1 (c4 / car))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG0 (p / police\n                     :location (t2 / town\n                                   :mod (s / small)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (s3 / son)))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police)))))",
      "(l / lead-03\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG1 (p3 / police))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (c2 / cause-01\n                               :ARG0 (c3 / crash-01\n                                         :ARG1 (c4 / car))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son))))))",
      "(l / lead-03\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG0 (p / police\n                     :location (t2 / town\n                                   :location (s2 / state\n                                                 :name (n / name\n                                                          :op1 \"Alaska\"))))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (m / mistake-01))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant (c / couple))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant (c / couple))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG1 (p3 / police)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (c2 / cause-01\n                               :ARG0 (c3 / crash-01\n                                         :ARG1 (c4 / car)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police)))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)))\n   :ARG1 (k / kill-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / crash-01\n                                :ARG1 (c4 / car)))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (s3 / son)))))"
    ],
    "smus": [
      "Leading to the mistake being told.",
      "leading to an extraordinary reunification.",
      "A couple of people were killed.",
      "Police son",
      "The Police in the small town told the story.",
      "A couple of people were told to be killed.",
      "Leading to the telling that a couple of people were killed.",
      "The mistakenly told led to an extraordinary reunification.",
      "told the story that a car crash was \"killed.\"",
      "Police in the town of Alaska told the story.",
      "Leading to the telling that the son had been killed.",
      "leading to a reunification hours later.",
      "Telling a police person led to an extraordinary reunification.",
      "A small town police told the police that a couple of people had been killed.",
      "The fact that the story was told mistakenly led to a reunification within a few days.",
      "Telling that a police person had been killed led to an extraordinary reunification.",
      "The mistaken information leading to a reunification hours later.",
      "Telling that a car crash had killed led to an extraordinary reunification.",
      "Telling that the son had been killed led to an extraordinary reunification.",
      "Police in an Alaska town told the police a couple of people had been killed.",
      "Telling a police person led to a reunification within hours.",
      "Telling that a couple had been killed led to a reunification within hours.",
      "Telling a police person led to a reunification hours later.",
      "Telling that a police person had been killed led to a reunification within hours.",
      "The fact that the car crash was told was the cause of the killing was leading to a reunification within hours.",
      "Telling that the son had been killed led to a reunification within hours.",
      "The fact that the police had been told that the person had been killed led to a reunification hours later.",
      "The fact that the car crash was told was the cause of the killing led to a reunification hours later.",
      "Police in the Alaska town told the story, leading to a reunification within hours.",
      "Telling that the son had been killed led to a reunification hours later.",
      "Police in the Alaska town told the story, leading to a reunification hours later."
    ]
  },
  {
    "instance_id": "pyrxsum-23",
    "summary": "South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.",
    "summary_trees": [
      "# ::snt South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.\n(s / show-01\n      :ARG0 (p / paper\n            :mod (c / court))\n      :ARG1 (s2 / seek-01\n            :ARG0 (p2 / person\n                  :ARG0-of (p3 / prosecute-01)\n                  :mod (c2 / country\n                        :name (n / name\n                              :op1 \"South\"\n                              :op2 \"Africa\")))\n            :ARG1 (p4 / permit-01\n                  :ARG1 (a / appeal-01\n                        :ARG0 p2\n                        :ARG1 (s3 / sentence-01\n                              :ARG1 (p5 / person\n                                    :name (n2 / name\n                                          :op1 \"Oscar\"\n                                          :op2 \"Pistorius\")\n                                    :mod (a2 / athlete))\n                              :ARG1-of (l / light-06\n                                    :ARG0-of (s4 / shock-01)))))))"
    ],
    "tree": [
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG0 (p2 / person)))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court)))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01)))",
      "(s3 / sentence-01\n    :ARG1 (p5 / person\n              :mod (a2 / athlete)))",
      "(s3 / sentence-01\n    :ARG1 (l / light-06\n             :ARG0 (s4 / shock-01)))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 (p2 / person))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s3 / sentence-01\n    :ARG1 (p5 / person\n              :name (n2 / name\n                        :op1 \"Oscar\"\n                        :op2 \"Pistorius\")))",
      "(s3 / sentence-01\n    :ARG1 (p5 / person\n              :name (n2 / name\n                        :op1 \"Oscar\"\n                        :op2 \"Pistorius\")))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG0 (p2 / person)))))",
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG1 (s3 / sentence-01\n                       :ARG1 (p5 / person\n                                 :mod (a2 / athlete)))))",
      "(a / appeal-01\n   :ARG1 (s3 / sentence-01\n             :ARG1 (p5 / person\n                       :name (n2 / name\n                                 :op1 \"Oscar\"\n                                 :op2 \"Pistorius\"))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 p2)))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (l / light-06\n                                          :ARG0 (s4 / shock-01))))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :mod (a2 / athlete))))))",
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG1 (s3 / sentence-01\n                       :ARG1 (p5 / person\n                                 :name (n2 / name\n                                           :op1 \"Oscar\"\n                                           :op2 \"Pistorius\")))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG0 (p2 / person)))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG0 (p2 / person)))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (l / light-06\n                                                   :ARG0 (s4 / shock-01)))))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :mod (a2 / athlete)))))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :name (n2 / name\n                                                     :op1 \"Oscar\"\n                                                     :op2 \"Pistorius\"))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\")))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 p2)))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :name (n2 / name\n                                                              :op1 \"Oscar\"\n                                                              :op2 \"Pistorius\")))))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (l / light-06\n                                          :ARG0 (s4 / shock-01))))))"
    ],
    "smus": [
      "People have the right to appeal.",
      "Court papers show --",
      "Prosecutors have sought.",
      "The sentence was shockingly light.",
      "The permission to appeal was sought.",
      "The prosecutions show they are seeking.",
      "Appeal the shockingly light sentence.",
      "Show that permission to appeal has been sought.",
      "South Africans have sought.",
      "The sentence was a shockly light sentence with the possibility to appeal.",
      "Prosecutors have sought permission to appeal.",
      "Court papers show that the prosecutors sought.",
      "The application is seeking permission to appeal a shockingly light sentence.",
      "The athlete's sentence is sought on appeal.",
      "The sentence of Oscar Pistorius is appealable.",
      "Court papers show that permission to appeal was sought.",
      "The shows that permission was sought to appeal a shockingly light sentence.",
      "Show that permission to appeal the sentence of an athlete has been sought.",
      "The application is seeking permission to appeal Oscar Pistorius' sentence.",
      "South Africans have sought permission to appeal.",
      "Court papers show South Africans sought.",
      "The shows that permission was sought to appeal Oscar Pistorius' sentence.",
      "Prosecutors have sought permission to appeal a shockingly light sentence.",
      "Prosecutors have sought permission to appeal the sentence handed down to the athlete.",
      "Court papers show that permission was sought to appeal a shockingly light sentence.",
      "Prosecutors have sought permission to appeal Oscar Pistorius' sentence.",
      "Court papers show that permission was sought to appeal Oscar Pistorius' sentence.",
      "South Africans have sought permission to appeal a shockingly light sentence.",
      "South Africans have sought permission to appeal the athlete's sentence."
    ]
  },
  {
    "instance_id": "pyrxsum-24",
    "summary": "The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.",
    "summary_trees": [
      "# ::snt The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.\n(o / open-01\n      :ARG1 (c / clinic\n            :mod (m / maternity)\n            :ord (o2 / ordinal-entity\n                  :value 1)\n            :location (c2 / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :beneficiary (w / woman\n                  :ARG1-of (v / victimize-01\n                        :ARG0 (a / and\n                              :op1 (r / rape-01\n                                    :ARG1 w)\n                              :op2 (a2 / assault-01\n                                    :ARG1 w\n                                    :manner (s / sex)))))))"
    ],
    "tree": [
      "(v / victimize-01\n   :ARG0 (r / rape-01\n            :ARG1 (w / woman)))",
      "(v / victimize-01\n   :ARG0 (a2 / assault-01\n             :ARG1 (w / woman)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :mod (m / maternity)))",
      "(v / victimize-01\n   :ARG0 (a2 / assault-01\n             :manner (s / sex)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :ord (o2 / ordinal-entity\n                     :value 1)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :location (c2 / country\n                          :name (n / name\n                                   :op1 \"UK\"))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (r / rape-01\n                                              :ARG1 w)))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :ARG1 w)))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :manner (s / sex))))))"
    ],
    "smus": [
      "Victims of rape of women",
      "Victims of assault on women",
      "A maternity clinic has opened.",
      "Victims of sexual assault",
      "The first clinic has opened.",
      "A clinic has opened in the UK.",
      "A clinic was opened for women who have been rape victims.",
      "A clinic was opened for women who have been victims of assault.",
      "A clinic was opened for women who have been victims of sexual assault."
    ]
  },
  {
    "instance_id": "pyrxsum-25",
    "summary": "The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.",
    "summary_trees": [
      "# ::snt The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.\n(s / say-01\n      :ARG0 (f / figure\n            :ARG1-of (o / obtain-01\n                  :ARG0 (p / publication\n                        :name (n / name\n                              :op1 \"BBC\"))))\n      :ARG1 (ii / increase-01\n            :ARG1 (n2 / number\n                  :quant-of (c / child\n                        :ARG1-of (r / refer-02\n                              :ARG2 (g / government-organization\n                                    :name (n3 / name\n                                          :op1 \"NHS\"))\n                              :ARG1-of (c2 / cause-01\n                                    :ARG0 (ii2 / issue-02\n                                          :ARG0 (ii3 / identity\n                                                :mod (g2 / gender))\n                                          :ARG1 c)))))\n            :ARG2 (s2 / significant-02)\n            :time (y / year\n                  :mod (r2 / recent))))"
    ],
    "tree": [
      "(c2 / cause-01\n    :ARG0 (ii2 / issue-02\n               :ARG1 (c / child)))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))",
      "(ii2 / issue-02\n     :ARG0 (ii3 / identity\n                :mod (g2 / gender)))",
      "(o / obtain-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"BBC\")))",
      "(r / refer-02\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG1 (c / child))))",
      "(r / refer-02\n   :ARG2 (g / government-organization\n            :name (n3 / name\n                      :op1 \"NHS\")))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :time (y / year\n                      :mod (r2 / recent))))",
      "(ii / increase-01\n    :ARG2 (s2 / significant-02)\n    :time (y / year\n             :mod (r2 / recent)))",
      "(c2 / cause-01\n    :ARG0 (ii2 / issue-02\n               :ARG0 (ii3 / identity\n                          :mod (g2 / gender))))",
      "(r / refer-02\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG0 (ii3 / identity\n                                   :mod (g2 / gender)))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\")))))",
      "(r / refer-02\n   :ARG2 (g / government-organization\n            :name (n3 / name\n                      :op1 \"NHS\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG1 (c / child))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\"))))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG2 (g / government-organization\n                                                   :name (n3 / name\n                                                             :op1 \"NHS\")))))))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG1 c)))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :ARG2 (s2 / significant-02))",
      "(r / refer-02\n   :ARG2 (g / government-organization\n            :name (n3 / name\n                      :op1 \"NHS\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG0 (ii3 / identity\n                                   :mod (g2 / gender)))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender))))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :time (y / year\n                      :mod (r2 / recent))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :time (y / year\n                      :mod (r2 / recent))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG0 (ii3 / identity\n                                                                          :mod (g2 / gender)))))))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02)\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :ARG2 (s2 / significant-02)\n    :time (y / year\n             :mod (r2 / recent)))"
    ],
    "smus": [
      "Because of children's issues.",
      "Increased significantly, said.",
      "Issues of gender identity.",
      "The BBC obtained.",
      "Referred to as \"children's issues\".",
      "Referred to the NHS.",
      "Increased in recent years.",
      "In recent years, the number of increases has increased significantly.",
      "because of gender identity issues.",
      "Referred to gender identity issues.",
      "According to figures obtained by the BBC,",
      "The NHS referred to the children's issues.",
      "The number of children referred to the NHS has increased.",
      "The number of children referred to as having \"issues\" has increased.",
      "According to figures obtained by the BBC, the number has increased significantly.",
      "The number of children referred to the NHS has increased, it was said.",
      "The number of children referred to as \"children\" for their issues has increased, the statement said.",
      "The number of children referred to the NHS has increased significantly.",
      "The number of children referred to as having issues has increased significantly.",
      "The NHS referred to gender identity issues.",
      "The number of children referred to as \"gender identity issues\" has increased.",
      "According to figures obtained by the BBC, the number has increased in recent years.",
      "The number of children referred to the NHS has increased in recent years.",
      "In recent years, the number of children referred to as having issues has increased.",
      "The number of children referred to as \"gender identity issues\" has increased, it was said.",
      "The number of children referred to as \"gender identity issues\" has significantly increased.",
      "In recent years, the number of children referred to the NHS has increased significantly.",
      "In recent years, the number of children referred to as having issues has increased significantly.",
      "In recent years, the number of children referred to as \"gender identity issues\" has increased.",
      "In recent years, the number of children referred to as \"gender identity issues\" has significantly increased.",
      "According to figures obtained by the BBC, the number of children referred to the NHS has increased.",
      "According to figures obtained by the BBC, the number of children referred to as \"caused by\" the issues has increased.",
      "According to figures obtained by the BBC, the number of children referred to as \"as being due to gender identity issues\" has increased."
    ]
  },
  {
    "instance_id": "pyrxsum-26",
    "summary": "The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.",
    "summary_trees": [
      "# ::snt The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / borough\n                        :location (e / east\n                              :part-of (c / city\n                                    :name (n / name\n                                          :op1 \"London\"))))\n                  :ARG2 (m / mayor)))\n      :ARG2 (p2 / practice-01\n            :ARG0 p\n            :ARG1-of (c2 / corrupt-01)\n            :ARG1-of (l / legal-02\n                  :polarity -))\n      :time (h2 / hearing-02\n            :ARG0 (c3 / court)\n            :ARG1 p\n            :ARG1-of (s / special-02)))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person)))",
      "(p2 / practice-01\n    :ARG1 (l / legal-02\n             :polarity -))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor))))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (p / person)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (p / person)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p))",
      "(h / have-org-role-91\n   :ARG1 (b / borough\n            :location (e / east\n                         :part (c / city\n                                  :name (n / name\n                                           :op1 \"London\")))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(h / have-org-role-91\n   :ARG1 (b / borough\n            :location (e / east\n                         :part (c / city\n                                  :name (n / name\n                                           :op1 \"London\"))))\n   :ARG2 (m / mayor))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\")))))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG0 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))"
    ],
    "smus": [
      "accused of being in the practices of people.",
      "Illegal practices.",
      "accused of corrupt practices.",
      "accused of illegal practices.",
      "The mayor has been accused.",
      "During the hearing, people were accused of their practices.",
      "During the court hearing, people were accused of their practices.",
      "During the special hearing, people were accused of their practices.",
      "During the hearing, people were accused of corrupt practices.",
      "Accused of corrupt practices at a court hearing.",
      "During the special hearing, the practices were accused of being corrupt.",
      "At the hearing, people were accused of illegal practices.",
      "The mayor has been accused of \"practices\".",
      "The mayor has been accused at the hearing.",
      "Accused of illegal practices at a court hearing.",
      "During the special hearing, the accused were accused of illegal practices.",
      "borough in east London",
      "The mayor has been accused of corrupt practices.",
      "The mayor has been accused at a court hearing.",
      "The mayor has been accused at a special hearing.",
      "The mayor has been accused of illegal practices.",
      "The mayor of East London borough",
      "The mayor has been accused of \"practices\" during the hearing.",
      "At the special hearing the mayor is accused of \"practices\"",
      "The mayor has been accused of corruption practices at the hearing.",
      "The mayor has been accused of corruption practices at a court hearing.",
      "At the special hearing the mayor is accused of corrupt practices.",
      "The mayor has been accused of illegal practices at the hearing.",
      "The mayor has been accused of illegal practices at a court hearing.",
      "At the special hearing the mayor is accused of illegal practices.",
      "At the hearing a borough of East London was accused.",
      "The borough of East London has been accused of corrupt practices.",
      "At a court hearing the borough of East London has been accused.",
      "At the special hearing a borough of east London is accused.",
      "The borough of East London has been accused of illegal practices.",
      "At the hearing a borough in east London was accused of corrupt practices.",
      "At the special hearing a borough in east London was accused of corrupt practices.",
      "At the hearing a borough in east London was accused of illegal practices.",
      "At a court hearing the borough of East London has been accused of illegal practices.",
      "At the special hearing a borough in east London was accused of illegal practices."
    ]
  },
  {
    "instance_id": "pyrxsum-27",
    "summary": "A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.",
    "summary_trees": [
      "# ::snt A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.\n(a / appear-01\n      :ARG1 (m / man\n            :age (t / temporal-quantity\n                  :quant 21\n                  :unit (y / year))\n            :ARG1-of (c / charge-05\n                  :ARG2 (s / stab-01\n                        :ARG1 (p / person\n                              :name (n / name\n                                    :op1 \"Karl\"\n                                    :op2 \"Haugh\"))\n                        :mod (f / fatal)\n                        :location (c2 / city\n                              :name (n2 / name\n                                    :op1 \"Kilkee\"))\n                        :time (w / weekend))))\n      :location (c3 / court\n            :location (c4 / county\n                  :name (n3 / name\n                        :op1 \"Clare\"))))"
    ],
    "tree": [
      "(c / charge-05\n   :ARG2 (s / stab-01\n            :mod (f / fatal)))",
      "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21)))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\")))",
      "(c / charge-05\n   :ARG2 (s / stab-01\n            :location (c2 / city\n                          :name (n2 / name\n                                    :op1 \"Kilkee\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal)))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :time (w / weekend)))))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :mod (f / fatal))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :time (w / weekend))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\"))))))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\")))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\"))))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :time (w / weekend))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))"
    ],
    "smus": [
      "The fatal stabbing was charged.",
      "The 21-year-old man appeared.",
      "Karl Haugh got stabbed",
      "Kilkee stabbing charged",
      "The man was apparently charged with fatal stab.",
      "The man was apparently charged with stabbery at the weekend.",
      "Karl Haugh was fatally stabbed.",
      "Karl Haugh got stabbed at the weekend.",
      "The man charged with the stabbery in Kilkee has appeared.",
      "Karl Haugh was stabbed in Kilkee.",
      "The man charged with the stabbing of Karl Haugh has appeared.",
      "The 21-year-old man was appeared in Clare County court.",
      "The man charged with fatal stab wounds appeared in court in Clare County.",
      "The man charged with a weekend stabber appeared in Clare County court.",
      "The man charged with stab wound in Kilkee appeared in court in Clare County.",
      "The man charged with Karl Haugh's stabbing appeared in Clare County court."
    ]
  },
  {
    "instance_id": "pyrxsum-28",
    "summary": "Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, workers union says.",
    "summary_trees": [
      "# ::snt Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, workers union says.\n(s / say-01\n      :ARG0 (u / union\n            :mod (p / person\n                  :ARG0-of (w / work-01)))\n      :ARG1 (s2 / strike-02\n            :ARG0 (p2 / person\n                  :ARG0-of (w2 / work-01\n                        :ARG2 (g / government-organization\n                              :name (n / name\n                                    :op1 \"Post\"\n                                    :op2 \"Office\"))))\n            :duration (t / temporal-quantity\n                  :quant 5\n                  :unit (d / day))\n            :time (f / from\n                  :op1 (d2 / date-entity\n                        :weekday (m / monday)))\n            :ARG1-of (c / cause-01\n                  :ARG0 (d3 / dispute-01\n                        :ARG2 (a / and\n                              :op1 (j / job)\n                              :op2 (p3 / pension)\n                              :op3 (c2 / close-01\n                                    :ARG1 (b / branch)))\n                        :ARG1-of (c3 / continue-01)))))"
    ],
    "tree": [
      "(c / cause-01\n   :ARG0 (d3 / dispute-01\n             :ARG2 (j / job)))",
      "(c / cause-01\n   :ARG0 (d3 / dispute-01\n             :ARG2 (p3 / pension)))",
      "(d3 / dispute-01\n    :ARG2 (c2 / close-01\n              :ARG1 (b / branch)))",
      "(d3 / dispute-01\n    :ARG2 (j / job)\n    :ARG1 (c3 / continue-01))",
      "(d3 / dispute-01\n    :ARG2 (p3 / pension)\n    :ARG1 (c3 / continue-01))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :unit (d / day))))",
      "(s2 / strike-02\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (j / job))))",
      "(s2 / strike-02\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG1 (c3 / continue-01))))",
      "(s2 / strike-02\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (p3 / pension))))",
      "(w2 / work-01\n    :ARG2 (g / government-organization\n             :name (n / name\n                      :op1 \"Post\"\n                      :op2 \"Office\")))",
      "(c / cause-01\n   :ARG0 (d3 / dispute-01\n             :ARG2 (c2 / close-01\n                       :ARG1 (b / branch))))",
      "(d3 / dispute-01\n    :ARG2 (c2 / close-01\n              :ARG1 (b / branch))\n    :ARG1 (c3 / continue-01))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :time (f / from\n                      :op1 (d2 / date-entity\n                               :weekday (m / monday)))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (j / job)))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (p3 / pension)))))",
      "(s2 / strike-02\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (c2 / close-01\n                                 :ARG1 (b / branch)))))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\")))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :quant 5)))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :unit (d / day))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :unit (d / day))))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\"))))\n    :duration (t / temporal-quantity\n                 :quant 5))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :time (f / from\n                      :op1 (d2 / date-entity\n                               :weekday (m / monday)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (j / job)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (p3 / pension)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :time (f / from\n                      :op1 (d2 / date-entity\n                               :weekday (m / monday)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (j / job)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (p3 / pension)))))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\"))))\n    :duration (t / temporal-quantity\n                 :unit (d / day)))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (c2 / close-01\n                                          :ARG1 (b / branch))))))"
    ],
    "smus": [
      "Because of a job dispute.",
      "Due to a pensions dispute.",
      "The dispute is over branch closures.",
      "The continuing dispute is about jobs.",
      "The continuing dispute is about pensions.",
      "\"The Workers Union says...",
      "Strikes for days says",
      "Strikes over a job dispute.",
      "Strikes over continuing dispute",
      "Strikes over pensions dispute",
      "Works for the Post Office.",
      "Due to a dispute over branch closures.",
      "The continuing dispute is over branch closures.",
      "Strikes will take place from Monday, says the group.",
      "Strikes over jobs dispute says",
      "Strikes are said to be caused by continuing dispute.",
      "Strikes over pensions dispute says",
      "Strikes over dispute over branch closures",
      "Post Office workers are on strike.",
      "The Workers Union says there will be days of strikes.",
      "Says Post Office workers are on strike.",
      "Workers Union says strikes will take place from Monday.",
      "Workers Union says strikes are caused by a jobs dispute.",
      "The Workers Union says strikes are being made over a continuing dispute.",
      "Workers Union says strikes are caused by a pensions dispute.",
      "Post Office workers are on strike for days.",
      "Workers Union says strikes are caused by a dispute over branch closures.",
      "Post Office workers are on strike over a job dispute.",
      "Post Office workers are on strike over a continuing dispute.",
      "Post Office workers are on strike over a pensions dispute.",
      "From Monday, Post Office workers are on strike.",
      "The Post Office workers' union says there are strikes.",
      "Post Office workers are striking over a dispute over branch closures."
    ]
  },
  {
    "instance_id": "pyrxsum-29",
    "summary": "Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.",
    "summary_trees": [
      "# ::snt Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.\n(r / regulate-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Education\"\n                  :op2 \"Workforce\"\n                  :op3 \"Council\"))\n      :ARG1 (p / person\n            :ARG0-of (w / work-01\n                  :ARG2 (y / youth))\n            :location (c / country\n                  :name (n2 / name\n                        :op1 \"Wales\")))\n      :ord (o / ordinal-entity\n            :value 1)\n      :time (f / from\n            :op1 (d / date-entity\n                  :month 4\n                  :day 1)))"
    ],
    "tree": [
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth))))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\"))))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth))))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\"))))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))"
    ],
    "smus": [
      "Youth workers are regulated.",
      "The Welsh are regulated.",
      "Youth workers are the first to be regulated.",
      "The Education Workforce Council is the first to regulate.",
      "Youth workers are regulated from April.",
      "Youth workers will be regulated from the first of the year.",
      "Welsh people will be regulated from April.",
      "Youth workers are regulated by the Education Workforce Council.",
      "Youth workers are the first to be regulated by the Education Workforce Council.",
      "Youth workers are regulated by the Education Workforce Council from April.",
      "Youth workers will be regulated by the Education Workforce Council from the 1st.",
      "From April the Welsh people will be regulated by the Education Workforce Council.",
      "From the 1st, people in Wales will be regulated by the Education Workforce Council."
    ]
  },
  {
    "instance_id": "pyrxsum-30",
    "summary": "Liberal Democrat leader Tim Farron says Farron does not believe gay sex is a sin, following questions about Farron views on the subject.",
    "summary_trees": [
      "# ::snt Liberal Democrat leader Tim Farron says Farron does not believe gay sex is a sin, following questions about Farron views on the subject.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Farron\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Liberal\"\n                              :op2 \"Democrat\"))))\n      :ARG1 (b / believe-01\n            :polarity -\n            :ARG0 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Farron\"))\n            :ARG1 (s2 / sin-01\n                  :ARG0 (s3 / sex-01\n                        :ARG1 (p4 / person\n                              :ARG1-of (g / gay-01)))))\n      :ARG1-of (f / follow-01\n            :ARG2 (q / question-01\n                  :ARG1 (v / view-02\n                        :ARG0 p3\n                        :ARG1 (s4 / subject)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (b / believe-01\n            :polarity -))",
      "(q / question-01\n   :ARG1 (v / view-02\n            :ARG0 (p3 / person :name (n3 / name :op1 \"Farron\"))))",
      "(s3 / sex-01\n    :ARG1 (p4 / person\n              :ARG1 (g / gay-01)))",
      "(b / believe-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Farron\")))",
      "(s2 / sin-01\n    :ARG0 (s3 / sex-01\n              :ARG1 (p4 / person\n                        :ARG1 (g / gay-01))))",
      "(s / say-01\n   :ARG1 (b / believe-01\n            :ARG0 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Farron\"))))",
      "(b / believe-01\n   :ARG1 (s2 / sin-01\n             :ARG0 (s3 / sex-01\n                       :ARG1 (p4 / person\n                                 :ARG1 (g / gay-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\"))\n   :ARG1 (b / believe-01\n            :polarity -))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Liberal\"\n                                         :op2 \"Democrat\")))))",
      "(s / say-01\n   :ARG1 (b / believe-01\n            :ARG1 (s2 / sin-01\n                      :ARG0 (s3 / sex-01\n                                :ARG1 (p4 / person\n                                          :ARG1 (g / gay-01))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\"))\n   :ARG1 (b / believe-01\n            :ARG0 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Farron\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Liberal\"\n                                         :op2 \"Democrat\"))))\n   :ARG1 (b / believe-01\n            :polarity -))"
    ],
    "smus": [
      "Questioning Ferran's views.",
      "Gays are sex.",
      "The views on the subject are questioned.",
      "Following questioning of Ferran's views:",
      "Following questioning of views on the subject:",
      "[Quote=Farron;122] [Quote=Farron;122]",
      "According to the leader of the Liberal Democrats,",
      "The Liberal Democrat leader says he does not believe.",
      "Tim Farron says the question of Farron's views is followed by questions.",
      "Tim Farron says the question of views on the subject is being followed.",
      "The Liberal Democrat leader says the question of Ferran's views is following.",
      "The Liberal Democrat leader says the question of views on the subject is being followed."
    ]
  },
  {
    "instance_id": "pyrxsum-31",
    "summary": "Paint has been thrown over an Orange hall in north Belfast.",
    "summary_trees": [
      "# ::snt Paint has been thrown over an Orange hall in north Belfast.\n(t / throw-01\n      :ARG1 (p / paint)\n      :ARG2 (o / over\n            :op1 (h / hall\n                  :mod (o2 / organization\n                        :name (n / name\n                              :op1 \"Society\"\n                              :op2 \"of\"\n                              :op3 \"Orange\"))\n                  :location (n2 / north\n                        :part-of (c / city\n                              :name (n3 / name\n                                    :op1 \"Belfast\"))))))"
    ],
    "tree": [
      "(t / throw-01\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\")))))",
      "(t / throw-01\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :location (n2 / north\n                                  :part (c / city\n                                           :name (n3 / name\n                                                     :op1 \"Belfast\"))))))",
      "(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\")))))",
      "(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :location (n2 / north\n                                  :part (c / city\n                                           :name (n3 / name\n                                                     :op1 \"Belfast\"))))))"
    ],
    "smus": [
      "Thrown over the Orange Society hall.",
      "Thrown over the hall in northern Belfast.",
      "Paint was thrown over the Orange Hall.",
      "Paint thrown over the hall in northern Belfast."
    ]
  },
  {
    "instance_id": "pyrxsum-32",
    "summary": "Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after Mignolet latest uncertain display in the draw with Arsenal at Anfield.",
    "summary_trees": [
      "# ::snt Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after Mignolet latest uncertain display in the draw with Arsenal at Anfield.\n(d / defend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Liverpool\"))\n                  :ARG2 (b / boss)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Simon\"\n                  :op2 \"Mignolet\")\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (g / goalkeeper))\n            :ARG1-of (f / fire-02\n                  :mod (u / under)))\n      :time (a / after\n            :op1 (d2 / display-01\n                  :ARG0 p2\n                  :ARG1 (t2 / thing\n                        :ARG1-of (k / know-01\n                              :polarity -))\n                  :mod (l / last)\n                  :subevent-of (d3 / draw-01\n                        :ARG0 t\n                        :ARG1 (t3 / team\n                              :name (n4 / name\n                                    :op1 \"Arsenal\"))\n                        :location (s / sports-facility\n                              :name (n5 / name\n                                    :op1 \"Anfield\"))))))"
    ],
    "tree": [
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Liverpool\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Liverpool\"))\n   :ARG2 (b / boss))",
      "(d2 / display-01\n    :ARG1 (t2 / thing\n              :ARG1 (k / know-01\n                       :polarity -))\n    :mod (l / last))",
      "(d2 / display-01\n    :ARG1 (t2 / thing\n              :ARG1 (k / know-01\n                       :polarity -))\n    :subevent (d3 / draw-01\n                  :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\")))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d2 / display-01\n    :ARG1 (t2 / thing\n              :ARG1 (k / know-01\n                       :polarity -))\n    :subevent (d3 / draw-01\n                  :ARG1 (t3 / team\n                            :name (n4 / name\n                                      :op1 \"Arsenal\"))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 t))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 t))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 t))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))"
    ],
    "smus": [
      "Liverpool",
      "Jurgen Klopp defended.",
      "The boss defended.",
      "The under fire person was defended.",
      "Liverpool boss",
      "Unknowns on display in Liverpool draw",
      "Liverpool defenders defended.",
      "Arsenal drew at Anfield",
      "The boss defended after Simon Merlot's display.",
      "The under fire person defended after the display.",
      "Jurgen Klopp defended the goalkeeper.",
      "Jurgen Klopp defended the under fire person.",
      "The boss defended the goalkeeper.",
      "The boss defended the under fire person.",
      "After the last display, Jurgen Klopp defended.",
      "After the last display, the boss defended.",
      "The goalkeeper defended after the last display.",
      "After the last display, the under fire person defended.",
      "Unknowns on display in Arsenal draw",
      "Unknowns on display at anfield draw.",
      "Jurgen Klopp defended after the display in the Liverpool draw.",
      "The boss defended after the display in the Liverpool draw.",
      "The goalkeeper defended after a display in the Liverpool draw.",
      "The under fire defender defended after the display in the Liverpool draw.",
      "Liverpool defender defended after Simon Merlot's display.",
      "Liverpool defended the goalkeeper.",
      "Liverpool defended the under fire.",
      "Liverpool defender defended after last display.",
      "After a display of ignorance, the boss defended.",
      "After a display of ignorance, the under fire person defended.",
      "Liverpool defender defended after the display in the draw.",
      "Jurgen Klopp defended after the display in the draw with Arsenal.",
      "Jurgen Klopp defended after a display in the draw at Anfield.",
      "The boss defended after the display in the draw with Arsenal.",
      "The boss defended after the display at Anfield's draw.",
      "The goalkeeper defended after a display in the draw with Arsenal.",
      "The goalkeeper defended after a display in the draw at Anfield.",
      "The under fire defenders were defended after a display in the draw with Arsenal.",
      "The under fire person was defended after a display at anfield's draw.",
      "Jurgen Klopp defended the goalkeeper after his display.",
      "After a display, Jurgen Klopp defended the under fire person.",
      "After Simon Merlot's display, the boss defended him.",
      "The boss defended the goalkeeper after the display.",
      "After a display the boss defended the under fire person.",
      "Liverpool defender defended after a display of \"no knowing\".",
      "After the last display, Jurgen Klopp defended the goalkeeper.",
      "After the last display, Jurgen Klopp defended the under fire person.",
      "After the last display, the boss defended the goalkeeper.",
      "After the last display, the boss defended the under fire person.",
      "Jurgen Klopp defended the goalkeeper after the display in the Liverpool draw.",
      "Jurgen Klopp defended the under fire fire after the display in the Liverpool draw.",
      "After a display in the Liverpool draw, the boss defended the goalkeeper.",
      "After a display in the Liverpool draw, the boss defended the under fire person.",
      "Liverpool defender defended after the display in the draw with Arsenal.",
      "Liverpool defender defended after a display at anfield during the draw.",
      "Liverpool defender defended goalkeeper after display.",
      "Liverpool defender defended under fire after his display.",
      "After a display of \"unknownness\", Jurgen Klopp defended the under fire person.",
      "After the last display, Liverpool defended the goalkeeper.",
      "Liverpool defenders defended under fire after last display.",
      "After a display of ignorance, the boss defended the goalkeeper.",
      "After a display of ignorance, the boss defended the under fire person.",
      "Liverpool defender defended goalkeeper after display in draw.",
      "Liverpool defended the under fire after a display in the draw.",
      "Jurgen Klopp defended the goalkeeper after the display in the draw with Arsenal.",
      "Jurgen Klopp defended the goalkeeper after the display at Anfield.",
      "Jurgen Klopp defended the under fire fire after the display in the draw with Arsenal.",
      "Jurgen Klopp defended the under fire person after the display at the Anfield draw.",
      "After a display in the draw with Arsenal, the boss defended the goalkeeper.",
      "After a display in the draw at Anfield, the boss defended the goalkeeper.",
      "After a display in the draw with Arsenal, the boss defended the under fire person.",
      "After a display at the draw at Anfield, the boss defended the under fire person.",
      "Liverpool defender defended goalkeeper after display of ignorance.",
      "Liverpool defenders defended under fire after a display of \"unknownness\".",
      "Liverpool defender defended goalkeeper after display in draw with Arsenal.",
      "Liverpool defender defended goalkeeper after display at anfield",
      "Liverpool defender defended under fire after display in draw with Arsenal.",
      "Liverpool defenders defended under fire after display at anfield"
    ]
  },
  {
    "instance_id": "pyrxsum-33",
    "summary": "Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.",
    "summary_trees": [
      "# ::snt Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.\n(l / leave-11\n      :ARG0 (p / person\n            :quant (m / multiple\n                  :op1 1000))\n      :ARG1 (d / district\n            :location (e / east)\n            :ARG1-of (b / besiege-01)\n            :ARG1-of (h / hold-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (r / rebel-01)))\n            :part-of (c / city\n                  :name (n / name\n                        :op1 \"Aleppo\")\n                  :location (c2 / country\n                        :name (n2 / name\n                              :op1 \"Syria\"))))\n      :ARG1-of (f / follow-01\n            :ARG2 (r2 / resume-01\n                  :ARG1 (e2 / evacuate-01\n                        :ARG1-of (a / agree-01\n                              :part-of (d2 / deal-01\n                                    :ARG2 (c3 / cease-01\n                                          :ARG1 (f2 / fire-01))\n                                    :time (w / week\n                                          :mod (l2 / last))))))))"
    ],
    "tree": [
      "(l / leave-11\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(h / hold-01\n   :ARG0 (p2 / person\n             :ARG0 (r / rebel-01)))",
      "(d2 / deal-01\n    :ARG2 (c3 / cease-01\n              :ARG1 (f2 / fire-01)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :part (c / city\n                     :name (n / name\n                              :op1 \"Aleppo\"))))",
      "(l / leave-11\n   :ARG1 (d / district\n            :part (c / city\n                     :name (n / name\n                              :op1 \"Aleppo\"))))",
      "(l / leave-11\n   :ARG1 (d / district\n            :ARG1 (h / hold-01\n                     :ARG0 (p2 / person\n                               :ARG0 (r / rebel-01)))))",
      "(l / leave-11\n   :ARG1 (d / district\n            :ARG1 (h / hold-01\n                     :ARG0 (p2 / person\n                               :ARG0 (r / rebel-01)))))",
      "(e2 / evacuate-01\n    :ARG1 (a / agree-01\n             :part (d2 / deal-01\n                       :ARG2 (c3 / cease-01\n                                 :ARG1 (f2 / fire-01)))))",
      "(e2 / evacuate-01\n    :ARG1 (a / agree-01\n             :part (d2 / deal-01\n                       :time (w / week\n                                :mod (l2 / last)))))",
      "(d2 / deal-01\n    :ARG2 (c3 / cease-01\n              :ARG1 (f2 / fire-01))\n    :time (w / week\n             :mod (l2 / last)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :part (c / city\n                     :location (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Syria\")))))",
      "(l / leave-11\n   :ARG1 (d / district\n            :part (c / city\n                     :location (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Syria\")))))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(r2 / resume-01\n    :ARG1 (e2 / evacuate-01\n              :ARG1 (a / agree-01\n                       :part (d2 / deal-01\n                                 :ARG2 (c3 / cease-01\n                                           :ARG1 (f2 / fire-01))))))",
      "(r2 / resume-01\n    :ARG1 (e2 / evacuate-01\n              :ARG1 (a / agree-01\n                       :part (d2 / deal-01\n                                 :time (w / week\n                                          :mod (l2 / last))))))"
    ],
    "smus": [
      "leaving the eastern districts.",
      "leaving districts of besieged.",
      "The Rebels have held.",
      "The deal was a cease fire.",
      "Thousands of people are leaving.",
      "Leaving districts of Aleppo",
      "Leaving districts held by rebels",
      "There were evacuations as part of a cease fire deal.",
      "The evacuations were part of an agreement reached last week.",
      "A cease fire deal was struck last week.",
      "Thousands are leaving eastern districts.",
      "Thousands of people are leaving besieged districts.",
      "Leaving districts of the Syrian city",
      "The evacuations resumed as part of a ceasefire deal.",
      "The evacuations that were agreed to as part of last week's deal resumed.",
      "Thousands are leaving the districts of Aleppo.",
      "Following the resume of evacuations agreed as part of the ceasefire deal.",
      "Following the resume of evacuations agreed as part of last week's deal.",
      "Thousands are leaving districts held by the rebels.",
      "Thousands are leaving districts of a Syrian city.",
      "leaving following the resume of evacuations agreed as part of the ceasefire deal.",
      "leaving following the resume of evacuations agreed as part of last week's deal.",
      "Thousands were leaving following the resume of evacuations agreed as part of a cease fire deal.",
      "Thousands are leaving following the resume of evacuations agreed as part of last week's deal."
    ]
  },
  {
    "instance_id": "pyrxsum-34",
    "summary": "Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.",
    "summary_trees": [
      "# ::snt Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.\n(m / march-01\n      :ARG0 (p / person\n            :quant (m2 / multiple\n                  :op1 1000))\n      :purpose (o / oppose-01\n            :ARG0 p\n            :ARG1 (p2 / plan-01\n                  :ARG1 (d / downgrade-02\n                        :ARG1 (s / service\n                              :poss (h / hospital\n                                    :name (n / name\n                                          :op1 \"Stafford\"\n                                          :op2 \"Hospital\")))))))"
    ],
    "tree": [
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000)))",
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG0 p))",
      "(d / downgrade-02\n   :ARG1 (s / service\n            :poss (h / hospital\n                     :name (n / name\n                              :op1 \"Stafford\"\n                              :op2 \"Hospital\"))))",
      "(p2 / plan-01\n    :ARG1 (d / downgrade-02\n             :ARG1 (s / service\n                      :poss (h / hospital\n                               :name (n / name\n                                        :op1 \"Stafford\"\n                                        :op2 \"Hospital\")))))",
      "(o / oppose-01\n   :ARG1 (p2 / plan-01\n             :ARG1 (d / downgrade-02\n                      :ARG1 (s / service\n                               :poss (h / hospital\n                                        :name (n / name\n                                                 :op1 \"Stafford\"\n                                                 :op2 \"Hospital\"))))))",
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG1 (p2 / plan-01\n                         :ARG1 (d / downgrade-02\n                                  :ARG1 (s / service\n                                           :poss (h / hospital\n                                                    :name (n / name\n                                                             :op1 \"Stafford\"\n                                                             :op2 \"Hospital\")))))))"
    ],
    "smus": [
      "Thousands marched.",
      "Thousands marched in opposition.",
      "Downgrade Stafford Hospital's services.",
      "Plans to downgrade Stafford Hospital's services.",
      "There was opposition to plans to downgrade Stafford Hospital's services.",
      "Thousands marched in opposition to plans to downgrade Stafford Hospital's services."
    ]
  },
  {
    "instance_id": "pyrxsum-35",
    "summary": "Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.",
    "summary_trees": [
      "# ::snt Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.\n(e / embark-01\n      :ARG0 (y / you\n            :ARG1-of (f / fill-01\n                  :ARG2 (a / and\n                        :op1 (g / goodwill)\n                        :op2 (o / optimism\n                              :ARG1-of (c / conceive-01\n                                    :polarity -))\n                        :op3 (h / heart\n                              :mod (h2 / heavy\n                                    :degree (s / slight))))))\n      :ARG1 (k / kick-01\n            :ARG0 y\n            :ARG1 (h3 / health)))"
    ],
    "tree": [
      "(e / embark-01\n   :ARG1 (k / kick-01\n            :ARG0 (y / you)))",
      "(e / embark-01\n   :ARG1 (k / kick-01\n            :ARG1 (h3 / health)))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill))))",
      "(f / fill-01\n   :ARG2 (h / heart\n            :mod (h2 / heavy\n                     :degree (s / slight))))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill)))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill)))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (h / heart\n                              :mod (h2 / heavy\n                                       :degree (s / slight))))))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (o / optimism\n                              :ARG1 (c / conceive-01\n                                       :polarity -))))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (o / optimism\n                              :ARG1 (c / conceive-01\n                                       :polarity -))))\n   :ARG1 (k / kick-01\n            :ARG0 y))"
    ],
    "smus": [
      "You embark on a kick.",
      "embark on a health kick.",
      "You embark on a journey filled with goodwill.",
      "A slightly heavy heart is filled.",
      "You embark on a kick, full of goodwill.",
      "You embark on a journey filled with a slightly heavy heart.",
      "You embark on a health kick, full of goodwill.",
      "You embark on a kick, slightly heavy hearted.",
      "You embark on a health kick, filled with a slightly heavy heart."
    ]
  },
  {
    "instance_id": "pyrxsum-36",
    "summary": "Russia and Qatar may have had to pay bribes to secure bribes World Cups, Sepp Blatter's former special advisor has suggested.",
    "summary_trees": [
      "# ::snt Russia and Qatar may have had to pay bribes to secure bribes World Cups, Sepp Blatter's former special advisor has suggested.\n(s / suggest-01\n      :ARG0 (p / person\n            :ARG0-of (a / advise-01\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Sepp\"\n                              :op2 \"Blatter\"))\n                  :time (f / former)\n                  :ARG1-of (s2 / special-02)))\n      :ARG1 (p3 / possible-01\n            :ARG1 (o / obligate-01\n                  :ARG1 (a2 / and\n                        :op1 (c / country\n                              :name (n2 / name\n                                    :op1 \"Russia\"))\n                        :op2 (c2 / country\n                              :name (n3 / name\n                                    :op1 \"Qatar\")))\n                  :ARG2 (p4 / pay-01\n                        :ARG0 a2\n                        :ARG1 (b / bribe-01)\n                        :purpose (s3 / secure-01\n                              :ARG0 a2\n                              :ARG1 (g / game\n                                    :name (n4 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")\n                                    :mod (b2 / bribe-01)))))))"
    ],
    "tree": [
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(p4 / pay-01\n    :ARG1 (b / bribe-01)\n    :purpose (s3 / secure-01\n                 :ARG0 (a2 / and)))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former))))",
      "(a / advise-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Sepp\"\n                      :op2 \"Blatter\")))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :ARG1 (b / bribe-01))))",
      "(s3 / secure-01\n    :ARG1 (g / game\n             :name (n4 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\")))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"Russia\"))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG1 (c2 / country\n                       :name (n3 / name\n                                 :op1 \"Qatar\"))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-01\n                                    :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :ARG0 (a2 / and)))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :ARG0 (a2 / and)))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :ARG0 (a2 / and)))",
      "(p4 / pay-01\n    :ARG1 (b / bribe-01)\n    :purpose (s3 / secure-01\n                 :ARG1 (g / game\n                          :mod (b2 / bribe-01))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :ARG1 (b / bribe-01)))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :ARG1 (b / bribe-01)))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :ARG1 (b / bribe-01)))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-01\n                                    :ARG1 (g / game\n                                             :mod (b2 / bribe-01))))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :name (n4 / name\n                                             :op1 \"World\"\n                                             :op2 \"Cup\")))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(p4 / pay-01\n    :ARG1 (b / bribe-01)\n    :purpose (s3 / secure-01\n                 :ARG1 (g / game\n                          :name (n4 / name\n                                    :op1 \"World\"\n                                    :op2 \"Cup\"))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :mod (b2 / bribe-01)))))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-01\n                                    :ARG1 (g / game\n                                             :name (n4 / name\n                                                       :op1 \"World\"\n                                                       :op2 \"Cup\"))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG0 (a2 / and))))))"
    ],
    "smus": [
      "Maybe they have to pay.",
      "To secure, the payer must pay.",
      "Bribes are paid to secure.",
      "As suggested by a former adviser.",
      "Maybe bribes have to be paid.",
      "Secure World Cup",
      "It is suggested that the parties may have to pay.",
      "Russia may have to.",
      "Qatar may have to.",
      "Maybe to secure, the payer has to pay.",
      "It is suggested that bribes may have to be paid.",
      "Former adviser to Sepp Blatt.",
      "To secure the bribe games, the payments must be made.",
      "pay bribes to secure the bribe games.",
      "It is suggested that Russia may have to.",
      "It is suggested that Qatar may have to.",
      "It is suggested that to secure the payment, the parties may have to pay.",
      "Maybe to secure the bribe games, the payments have to be made.",
      "Russia must pay to secure.",
      "Qatar must pay to secure.",
      "It is suggested that to secure the bribe games, the players may have to pay.",
      "Maybe to secure the World Cup, it has to pay.",
      "Former advisers have suggested that they may have to pay.",
      "Special advisers have suggested that they may have to pay.",
      "Russia must pay to secure the bribery game.",
      "Qatar must pay to secure the bribe games.",
      "Former advisers have suggested that bribes may have to be paid.",
      "Special advisers have suggested that bribes may have to be paid.",
      "It is suggested that to secure the World Cup, there may have to be a payment obligation.",
      "A former adviser has suggested that Russia may have to.",
      "A former adviser has suggested Qatar may have to.",
      "Former advisers have suggested that to secure the payments may have to be made.",
      "Special advisers have suggested that Russia may have to.",
      "Special advisers have suggested Qatar may have to.",
      "Special advisers have suggested that to secure the money the parties may have to pay.",
      "Russia must pay to secure the World Cup.",
      "Qatar must pay to secure the World Cup.",
      "Advice from Sepp Blatter has suggested that the parties may have to pay.",
      "Advice from Sepp Blatter has suggested that bribes may have to be paid.",
      "A former adviser has suggested that it may have to pay to secure the bribe games.",
      "Special advisers have suggested that it might be necessary to pay to secure the bribe games.",
      "Advice from Sepp Blatter has suggested that Russia may have to.",
      "Advice from Sepp Blatter has suggested that Qatar may have to.",
      "Advice from Sepp Blatter has suggested that to secure the payment may have to be made.",
      "Former adviser has suggested that it may have to pay to secure the World Cup.",
      "Special advisers have suggested that it might have to pay to secure the World Cup.",
      "Advice from Sepp Blatter has suggested that it might be necessary to pay to secure the bribe games.",
      "Advice from Sepp Blatter has suggested that it might be necessary to pay to secure the World Cup."
    ]
  },
  {
    "instance_id": "pyrxsum-37",
    "summary": "The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.",
    "summary_trees": [
      "# ::snt The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.\n(b / begin-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"High\"\n                  :op2 \"Court\"))\n      :ARG1 (h / hear-01\n            :ARG0 g\n            :ARG1 (c / challenge-01\n                  :ARG0 (m / man\n                        :ARG1-of (ii / ill-01\n                              :mod (t / terminal))\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"UK\"))\n                        :ARG0-of (w / want-01\n                              :ARG1 (r / right-05\n                                    :ARG1 m\n                                    :ARG2 (d / die-01\n                                          :ARG1 m))))\n                  :ARG1-of (l / legal-02))))"
    ],
    "tree": [
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"High\" :op2 \"Court\"))))",
      "(w / want-01\n   :ARG1 (r / right-05\n            :ARG1 (m / man)))",
      "(r / right-05\n   :ARG2 (d / die-01\n            :ARG1 (m / man)))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG1 (l / legal-02)))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\")))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG1 (l / legal-02))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\"))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m))))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG1 (ii / ill-01\n                               :mod (t / terminal)))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal)))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal)))\n   :ARG1 (l / legal-02))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG0 g))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG0 g))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :mod (c2 / country\n                              :name (n2 / name\n                                        :op1 \"UK\")))))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG0 (w / want-01\n                              :ARG1 (r / right-05\n                                       :ARG1 m)))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m)))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\")))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m)))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\")))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m)))\n   :ARG1 (l / legal-02))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG1 (ii / ill-01\n                                        :mod (t / terminal))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :mod (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"UK\"))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG0 (w / want-01\n                                       :ARG1 (r / right-05\n                                                :ARG1 m))))))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG0 (w / want-01\n                              :ARG1 (r / right-05\n                                       :ARG2 (d / die-01\n                                                :ARG1 m))))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m))))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m))))\n   :ARG1 (l / legal-02))"
    ],
    "smus": [
      "The High Court has begun hearing.",
      "wants the man's right.",
      "The right to die is for a man.",
      "Hearing legal challenge.",
      "The High Court has begun.",
      "Hearings of legal challenge have begun.",
      "The challenge is the terminally ill man.",
      "The challenge is the man from the UK.",
      "The man who wants his right is a challenge.",
      "hearing the challenge of a terminally ill man.",
      "The terminally ill man is a legal challenge.",
      "hearing the challenge of a man from the UK",
      "hearing the challenge from a man who wants his right.",
      "The man who wants the right to die is a challenge.",
      "A UK man is facing legal challenge.",
      "A man who wants his right is a legal challenge.",
      "Hearing the challenge of a terminally ill man, began.",
      "Hearing the challenge of a British man has begun.",
      "Hearing the challenge of a man who wants his right...",
      "hearing the challenge from a man who wants the right to die.",
      "A man who wants the right to die is a legal challenge.",
      "The High Court has begun hearing a legal challenge.",
      "Hearing the challenge of a man who wants the right to die, began.",
      "The High Court has begun hearing the challenge from a terminally ill man.",
      "The High Court has begun hearing the challenge from a British man.",
      "The High Court has begun hearing the challenge from a man who wants his right.",
      "The High Court has begun hearing the challenge from a man who wants the right to die."
    ]
  },
  {
    "instance_id": "pyrxsum-38",
    "summary": "An online appeal set up to help the family of a five-year-old girl who died when girl head became stuck in a lift in Dorset has raised more than \u00a312,000.",
    "summary_trees": [
      "# ::snt An online appeal set up to help the family of a five-year-old girl who died when girl head became stuck in a lift in Dorset has raised more than \u00a312,000.\n(r / raise-02\n      :ARG0 (a / appeal-02\n            :mod (o / online)\n            :ARG1-of (s / set-up-03\n                  :purpose (h / help-01\n                        :ARG0 a\n                        :ARG1 (f / family\n                              :poss (g / girl\n                                    :age (t / temporal-quantity\n                                          :quant 5\n                                          :unit (y / year))\n                                    :ARG1-of (d / die-01\n                                          :ARG1-of (c / cause-01\n                                                :ARG0 (b / become-01\n                                                      :ARG1 (h2 / head\n                                                            :part-of (g2 / girl))\n                                                      :ARG2 (s2 / stick-01\n                                                            :ARG1 h2\n                                                            :ARG2 (l / lift)\n                                                            :location (c2 / county\n                                                                  :name (n / name\n                                                                        :op1 \"Dorset\")))))))))))\n      :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                  :quant 12000\n                  :unit (p / pound))))"
    ],
    "tree": [
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online)))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl)))",
      "(b / become-01\n   :ARG2 (s2 / stick-01\n             :ARG2 (l / lift)))",
      "(r / raise-02\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG0 a)))",
      "(c / cause-01\n   :ARG0 (b / become-01\n            :ARG2 (s2 / stick-01\n                      :ARG1 (h2 / head))))",
      "(r / raise-02\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(c / cause-01\n   :ARG0 (b / become-01\n            :ARG1 (h2 / head\n                      :part (g2 / girl))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :age (t / temporal-quantity\n                             :quant 5))))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl))\n   :ARG2 (s2 / stick-01\n             :ARG1 h2))",
      "(s2 / stick-01\n    :ARG2 (l / lift)\n    :location (c2 / county\n                  :name (n / name\n                           :op1 \"Dorset\")))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (b / become-01\n                     :ARG1 (h2 / head\n                               :part (g2 / girl)))))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (b / become-01\n                     :ARG2 (s2 / stick-01\n                               :ARG2 (l / lift)))))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl))\n   :ARG2 (s2 / stick-01\n             :ARG2 (l / lift)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :age (t / temporal-quantity\n                                                  :quant 5))))))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (b / become-01\n                     :ARG2 (s2 / stick-01\n                               :location (c2 / county\n                                             :name (n / name\n                                                      :op1 \"Dorset\"))))))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl))\n   :ARG2 (s2 / stick-01\n             :location (c2 / county\n                           :name (n / name\n                                    :op1 \"Dorset\"))))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl))\n   :ARG2 (s2 / stick-01\n             :location (c2 / county\n                           :name (n / name\n                                    :op1 \"Dorset\"))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a)))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :age (t / temporal-quantity\n                                                  :unit (y / year)))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5)))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a)))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :unit (y / year))))))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :ARG1 (d / die-01\n                              :ARG1 (c / cause-01\n                                       :ARG0 (b / become-01\n                                                :ARG1 (h2 / head\n                                                          :part (g2 / girl))))))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :ARG1 (d / die-01\n                              :ARG1 (c / cause-01\n                                       :ARG0 (b / become-01\n                                                :ARG2 (s2 / stick-01\n                                                          :ARG2 (l / lift))))))))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :ARG1 (d / die-01\n                                                   :ARG1 (c / cause-01\n                                                            :ARG0 (b / become-01\n                                                                     :ARG2 (s2 / stick-01\n                                                                               :ARG1 (h2 / head))))))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head)))))))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :unit (y / year)))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG1 (h2 / head\n                                                                                        :part (g2 / girl)))))))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG2 (l / lift)))))))))))"
    ],
    "smus": [
      "An online appeal has raised the issue.",
      "The girl's head became.",
      "became a stick of the lift.",
      "More than 2,000 have been raised.",
      "The appeal was for a set up to help.",
      "Because it became a stick in the head.",
      "More than PS100 was raised.",
      "Because the girl's head became.",
      "The appeal to set up to help was raised.",
      "Help the family of the 5 year old girl.",
      "The girl's head became stuck.",
      "Help the family of the year old girl.",
      "Death came when the lift became stuck.",
      "The girl's head became stuck in a lift.",
      "An online appeal has raised more than 2,000 dollars.",
      "An online appeal has raised more than PS1,000.",
      "Set up to help the family of the 5-year-old girl is an appeal.",
      "The girl's head became a stick in Dorset.",
      "The appeal to set up to help has raised more than 2,000 dollars.",
      "An appeal was made to set up to help the family of the year-old girl.",
      "The appeal was raised to set up to help the family of the 5-year-old girl.",
      "The appeal to set up to help has raised more than PS1,000.",
      "Help the family of the girl who died because her head became stuck.",
      "Help the girl's family who died because her head became a'spin.",
      "Help the family of the girl who died because she became stuck on a lift.",
      "The appeal was set up to help the family of the girl who died when her head became stuck.",
      "An appeal to set up to help the family of the 5-year-old girl has raised more than 2,000 dollars.",
      "The appeal was set up to help the family of the girl who died when the lift became stuck.",
      "The appeal was raised to help the family of the girl who died when her head became stuck.",
      "An appeal to set up to help the family of the 5-year-old girl has raised more than PS1,000.",
      "An appeal to set up to help the family of the year girl has raised more than 2,000 dollars.",
      "The appeal was raised to help the family of the girl who died when the lift became stuck.",
      "An appeal to set up to help the family of the year girl has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when her head became stuck has raised more than 10,000.",
      "An appeal to set up to help the family of a girl who died when her head became a 'head' has raised more than 2,000.",
      "An appeal to set up to help the family of the girl who died when her head became stuck has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when the lift became stuck has raised more than 10,000.",
      "An appeal to set up to help the family of the girl who died when the lift became stuck has raised more than PS1,000.",
      "An appeal to help the family of a girl who died because she became stuck in Dorset has raised more than 2,000."
    ]
  },
  {
    "instance_id": "pyrxsum-39",
    "summary": "Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.",
    "summary_trees": [
      "# ::snt Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.\n(b / beat-03\n      :ARG0 (m / man\n            :source (c / city\n                  :name (n / name\n                        :op1 \"Swindon\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Mountain\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b2 / broadcast-program\n                        :name (n3 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))))\n      :ARG2 (t / title-01\n            :ARG1 p\n            :ARG2 (s / strong-02\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 m\n                        :ARG3 (m2 / most)\n                        :ARG5 (c2 / continent\n                              :name (n4 / name\n                                    :op1 \"Europe\"))))))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG2 (t / title-01\n            :ARG1 (p / person :name (n2 / name :op1 \"The\" :op2 \"Mountain\")))))",
      "(s / strong-02\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (m2 / most)))",
      "(h2 / have-degree-91\n    :ARG5 (c2 / continent\n              :name (n4 / name\n                        :op1 \"Europe\")))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\")))",
      "(t / title-01\n   :ARG2 (s / strong-02\n            :ARG2 (h2 / have-degree-91\n                      :ARG3 (m2 / most))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\"))))",
      "(h / have-org-role-91\n   :ARG1 (b2 / broadcast-program\n             :name (n3 / name\n                       :op1 \"Game\"\n                       :op2 \"of\"\n                       :op3 \"Thrones\")))",
      "(h2 / have-degree-91\n    :ARG3 (m2 / most)\n    :ARG5 (c2 / continent\n              :name (n4 / name\n                        :op1 \"Europe\")))",
      "(b / beat-03\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(t / title-01\n   :ARG2 (s / strong-02\n            :ARG2 (h2 / have-degree-91\n                      :ARG5 (c2 / continent\n                                :name (n4 / name\n                                          :op1 \"Europe\")))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG1 (p / person :name (n2 / name :op1 \"The\" :op2 \"Mountain\")))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG1 (p / person :name (n2 / name :op1 \"The\" :op2 \"Mountain\")))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\")))))",
      "(b / beat-03\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\")))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\")))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 (m / man)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 m))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\")))))"
    ],
    "smus": [
      "beat the Mountain title",
      "Strongest.",
      "Europe.",
      "The Mountain was beaten.",
      "The title is \"The Strongest\".",
      "The man from Swindon was beat.",
      "Game of Thrones",
      "Beat for title of Strongest.",
      "The Mountain was beaten to the title.",
      "The Mountain was beaten by a Swindon man for the title.",
      "The Game of Thrones has been beaten.",
      "Beat for title of European Strongest.",
      "The Mountain was beaten by a man from Swindon.",
      "The Mountain was beaten to the title of Strong Man.",
      "The Swindon man has beaten the title of \"Most Strong\".",
      "The Mountain was beaten for the title of strongest.",
      "The Swindon man has beaten the title of strongest.",
      "The Mountain was beaten to the title by a Swindon man.",
      "The Mountain was beaten in the title of Strongest European.",
      "A Swindon man has beat the Game of Thrones host.",
      "The Swindon man has beaten the title of Strongest European.",
      "The Mountain was beaten by a Swindon man for the title of \"The Strong Man\".",
      "The Mountain was beaten by a Swindon man for the title of strongest.",
      "A Swindon man has beaten the title of Game of Thrones.",
      "The Mountain was beaten by a Swindon man for the title of \"European Strong\".",
      "The man from Swindon has beaten Game of Thrones's title of Strongest.",
      "The man from Swindon has beaten Game of Thrones's title of strongest.",
      "A Swindon man has beaten the Game of Thrones host to the title of Strongest European."
    ]
  },
  {
    "instance_id": "pyrxsum-40",
    "summary": "Labour leadership contender Andy Burnham has told supporters Burnham has an \"outside but realistic chance\" of winning the contest.",
    "summary_trees": [
      "# ::snt Labour leadership contender Andy Burnham has told supporters Burnham has an \"outside but realistic chance\" of winning the contest.\n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Andy\"\n                  :op2 \"Burnham\")\n            :ARG0-of (c / contend-02\n                  :ARG1 (l / lead-02\n                        :ARG1 (p2 / political-party\n                              :name (n2 / name\n                                    :op1 \"Labour\")))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (w / win-01\n                  :ARG0 p\n                  :ARG2 (c3 / contest-02))\n            :ARG2 (o / outside)\n            :ARG1-of (c4 / contrast-01\n                  :ARG2 (r / realistic-03\n                        :ARG1 c2)))\n      :ARG2 (p3 / person\n            :ARG0-of (s / support-01)))"
    ],
    "tree": [
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))",
      "(c4 / contrast-01\n    :ARG2 (r / realistic-03\n             :ARG1 (c2 / chance-02)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside)))",
      "(t / tell-01\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02)))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))))",
      "(l / lead-02\n   :ARG1 (p2 / political-party\n             :name (n2 / name\n                       :op1 \"Labour\")))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))\n    :ARG2 (o / outside))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))\n    :ARG2 (o / outside))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))\n    :ARG2 (o / outside))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\")))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02))))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02))\n    :ARG2 (o / outside))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02))\n    :ARG2 (o / outside))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02))\n    :ARG2 (o / outside))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2))))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(c / contend-02\n   :ARG1 (l / lead-02\n            :ARG1 (p2 / political-party\n                      :name (n2 / name\n                                :op1 \"Labour\"))))",
      "(c2 / chance-02\n    :ARG2 (o / outside)\n    :ARG1 (c4 / contrast-01\n              :ARG2 (r / realistic-03\n                       :ARG1 c2)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\"))))))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 p)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02))))"
    ],
    "smus": [
      "Andy Burnham was told he had a chance.",
      "There's a chance of Andy Burnham winning.",
      "told there was an outside chance.",
      "Supporters were told.",
      "There is a chance of winning the contest.",
      "Andy Burnham's chance of winning was told.",
      "Labour leadership",
      "There is a chance but it is realistic.",
      "Andy Burnham has an outside chance of winning.",
      "The chance of winning the contest is being told.",
      "The chance of winning the contest is outside.",
      "told there is a chance but it is realistic.",
      "Andy Burnham is being told by supporters that he has a chance.",
      "Labour leadership is in contention.",
      "There is an outside chance, but it is realistic.",
      "Supporters were told there was an outside chance.",
      "Andy Burnham has told his chance.",
      "Supporters were told that Andy Burnham had a chance of winning.",
      "Andy Burnham has told the story that there is an outside chance.",
      "Andy Burnham has told supporters --",
      "Supporters were told there was a chance of winning the contest.",
      "The labour leadership contention has been told.",
      "Supporters were told there was a chance but it was realistic.",
      "Andy Burnham has told of the chance of winning the contest.",
      "Andy Burnham has told the story that there is a chance but it is realistic.",
      "Andy Burnham has told supporters he has a chance.",
      "Labour's leadership contendors have told them they have a chance.",
      "Andy Burnham has told supporters there is an outside chance.",
      "Labour's leadership contendors have told the story that there is an outside chance.",
      "Labour's leadership contendors have told supporters:",
      "Andy Burnham has told supporters that he has a chance of winning.",
      "Labour's leadership contendors have told them there is a chance of winning.",
      "Andy Burnham has told supporters there is a chance of winning the contest.",
      "Labour's leadership contendors have told the public there is a chance of winning the contest.",
      "Andy Burnham has told supporters there is a chance but it is realistic.",
      "Labour's leadership contendors have told supporters they have a chance.",
      "Labour's leadership contendors have told supporters there is an outside chance.",
      "Labour supporters have been told they have a chance of winning in the labour leadership competition.",
      "Labour's leadership contendors have told supporters there is a chance of winning the contest."
    ]
  },
  {
    "instance_id": "pyrxsum-41",
    "summary": "Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.",
    "summary_trees": [
      "# ::snt Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.\n(c / close-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Belfast\"\n                  :op2 \"Giants\"))\n      :ARG1 (g / gap)\n      :ARG4 (t2 / team\n            :name (n2 / name\n                  :op1 \"Cardiff\"\n                  :op2 \"Devils\")\n            :ARG0-of (l / lead-01\n                  :ARG1 (l2 / league\n                        :name (n3 / name\n                              :op1 \"Elite\"\n                              :op2 \"League\"))))\n      :extent (p / point\n            :quant 6)\n      :manner (w / win-01\n            :ARG0 t\n            :ARG4 (t3 / team\n                  :name (n4 / name\n                        :op1 \"Capitals\"))\n            :ARG0-of (c2 / comfortable-02)\n            :location (s / sports-facility\n                  :name (n5 / name\n                        :op1 \"SSE\"\n                        :op2 \"Arena\"))\n            :mod (t4 / this)))"
    ],
    "tree": [
      "(c / close-01\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\")))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :manner (w / win-01\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))))",
      "(w / win-01\n   :ARG4 (t3 / team\n             :name (n4 / name\n                       :op1 \"Capitals\"))\n   :location (s / sports-facility\n                :name (n5 / name\n                          :op1 \"SSE\"\n                          :op2 \"Arena\")))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG4 (t3 / team\n                        :name (n4 / name\n                                  :op1 \"Capitals\"))))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG0 t))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG4 (t3 / team\n                        :name (n4 / name\n                                  :op1 \"Capitals\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG0 t))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG4 (t3 / team\n                        :name (n4 / name\n                                  :op1 \"Capitals\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG0 t))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG4 (t3 / team\n                        :name (n4 / name\n                                  :op1 \"Capitals\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :mod (t4 / this)))"
    ],
    "smus": [
      "The gap has closed by six points.",
      "Belfast Giants have closed.",
      "The gap was closed with a comfortable win.",
      "The gap was closed with this victory.",
      "Closed to the Carliff Devils.",
      "The Belfast Giants have closed the gap.",
      "The Belfast Giants have closed the gap to six points.",
      "The Belfast Giants have closed out the game with a win.",
      "The gap was closed with a victory over the Capitals.",
      "The Belfast Giants have closed with a comfortable win.",
      "The gap was closed with a victory in the SSE Arena.",
      "The Elite League leaders are closed.",
      "The Belfast Giants have closed the gap by six points.",
      "The Belfast Giants have closed the gap with a win.",
      "Belfast Giants have closed on the Carliff Devils.",
      "The gap has closed for the Elite League leaders.",
      "The Belfast Giants have closed the gap with a comfortable win.",
      "The Belfast Giants have closed the gap with this win.",
      "The Belfast Giants have closed with a win over the Capitals.",
      "The Elite League leaders are close to six points.",
      "The Elite League leaders were closed with a comfortable win.",
      "The Belfast Giants have closed the gap with a win over the Capitals.",
      "The gap has closed six points for the Elite League leaders.",
      "The Belfast Giants have closed on the league leaders of the Elite League.",
      "The Belfast Giants have closed the gap with a win at the SSE Arena.",
      "The gap has been closed to the Devils with a win in the SSE Arena.",
      "The gap has closed for the Elite League leaders with a comfortable win.",
      "The gap has closed for the Elite League leaders with this victory.",
      "The Belfast Giants have closed the gap on the league leaders of the Elite League.",
      "The Belfast Giants have closed the Elite League leaders by six points.",
      "The Belfast Giants have closed the gap on the Carliff Devils with a victory over the Capitals.",
      "The Belfast Giants have closed the Elite League leaders with a win.",
      "The gap has closed for the Elite League leaders with a victory over Capitals.",
      "The Belfast Giants have closed the gap on the Carliff Devils with a win in the SSE Arena.",
      "The Belfast Giants have closed the Elite League leaders with a comfortable win.",
      "The Belfast Giants have closed the Elite League leaders with this win.",
      "The gap has been closed for the Elite League leaders with a victory in the SSE Arena.",
      "The Belfast Giants have closed the gap to the league's elite league leaders by six points.",
      "The Belfast Giants have closed the gap with the League's elite league leaders with a win.",
      "The Belfast Giants have closed the gap on the league leaders in an comfortable win.",
      "The Belfast Giants have closed the gap with the League's elite league leaders with this victory.",
      "The Belfast Giants have closed the Elite League leaders with a win over the Capitals.",
      "The Belfast Giants have closed the Elite League leaders with a win in the SSE Arena.",
      "The Belfast Giants have closed the gap on the league leaders of the Elite League with a win over the Capitals.",
      "The Belfast Giants have closed the gap on the league leaders of the Elite League with a win in the SSE Arena."
    ]
  },
  {
    "instance_id": "pyrxsum-42",
    "summary": "Hayley Turner, Britain's most successful female jockey, believes Turner career has helped inspire other women to progress in the sport.",
    "summary_trees": [
      "# ::snt Hayley Turner, Britain's most successful female jockey, believes Turner career has helped inspire other women to progress in the sport.\n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Hayley\"\n                  :op2 \"Turner\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"Britain\"))\n                  :ARG2 (j / jockey\n                        :mod (f / female)\n                        :ARG1-of (s / succeed-01\n                              :ARG2-of (h2 / have-degree-91\n                                    :ARG1 j\n                                    :ARG3 (m / most))))))\n      :ARG1 (h3 / help-01\n            :ARG0 (c2 / career\n                  :poss p)\n            :ARG1 (ii / inspire-01\n                  :ARG0 c2\n                  :ARG1 (w / woman\n                        :mod (o / other))\n                  :ARG2 (p2 / progress-01\n                        :ARG1 w\n                        :ARG4 (s2 / sport)))))"
    ],
    "tree": [
      "(s / succeed-01\n   :ARG2 (h2 / have-degree-91\n             :ARG1 (j / jockey)))",
      "(h3 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\")))))",
      "(h3 / help-01\n    :ARG1 (ii / inspire-01\n              :ARG0 (c2 / career)))",
      "(ii / inspire-01\n    :ARG2 (p2 / progress-01\n              :ARG1 (w / woman)))",
      "(h / have-org-role-91\n   :ARG2 (j / jockey\n            :mod (f / female)))",
      "(s / succeed-01\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (m / most)))",
      "(ii / inspire-01\n    :ARG1 (w / woman\n             :mod (o / other)))",
      "(ii / inspire-01\n    :ARG2 (p2 / progress-01\n              :ARG4 (s2 / sport)))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Britain\")))",
      "(h3 / help-01\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG1 (w / woman))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\")))",
      "(h3 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG0 c2))",
      "(h3 / help-01\n    :ARG1 (ii / inspire-01\n              :ARG1 (w / woman\n                       :mod (o / other))))",
      "(h3 / help-01\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG4 (s2 / sport))))",
      "(h3 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG0 c2))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(ii / inspire-01\n    :ARG1 (w / woman\n             :mod (o / other))\n    :ARG2 (p2 / progress-01\n              :ARG1 w))",
      "(ii / inspire-01\n    :ARG1 (w / woman\n             :mod (o / other))\n    :ARG2 (p2 / progress-01\n              :ARG1 w))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female)))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(ii / inspire-01\n    :ARG1 (w / woman\n             :mod (o / other))\n    :ARG2 (p2 / progress-01\n              :ARG4 (s2 / sport)))",
      "(ii / inspire-01\n    :ARG1 (w / woman\n             :mod (o / other))\n    :ARG2 (p2 / progress-01\n              :ARG4 (s2 / sport)))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Britain\"))\n   :ARG2 (j / jockey\n            :mod (f / female)))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Britain\"))\n   :ARG2 (j / jockey\n            :mod (f / female)))",
      "(h3 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG1 (w / woman\n                       :mod (o / other))))",
      "(h3 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG1 (w / woman\n                       :mod (o / other))))",
      "(h3 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG4 (s2 / sport))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j))))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Britain\"))\n   :ARG2 (j / jockey\n            :ARG1 (s / succeed-01\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 j))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Britain\"))\n   :ARG2 (j / jockey\n            :ARG1 (s / succeed-01\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m / most)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n2 / name\n                                        :op1 \"Britain\"))))\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n2 / name\n                                        :op1 \"Britain\"))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))"
    ],
    "smus": [
      "The jockey was successful.",
      "Hayley Turner's career has helped.",
      "Careers have helped inspire.",
      "inspire women to progress",
      "female jockey",
      "Most successful.",
      "inspire other women.",
      "inspire to progress in sport.",
      "Hayley Turner's career has helped, she believes.",
      "believes that career inspiration has helped.",
      "Britain",
      "Helped inspire women to progress.",
      "Hayley Turner believes --",
      "Hayley Turner's career has helped inspire.",
      "Helped inspire other women.",
      "Helped inspire sport to progress",
      "believes that it has helped inspire women to progress.",
      "The jockey is a successful one.",
      "The female jockey believes.",
      "believes that it has helped inspire other women.",
      "believes that it has helped inspire sport to progress.",
      "The most successful jockey",
      "Hayley Turner's career has helped inspire women to progress.",
      "Hayley Turner's career has helped inspire other women.",
      "Hayley Turner's career has helped inspire sport to progress.",
      "Hayley Turner believes her career has helped.",
      "Hayley Turner believes that career inspiration has helped.",
      "Believes the most successful jockey.",
      "Hayley Turner believes that it has helped inspire women to progress.",
      "The female jockey believes her career has helped.",
      "A female jockey believes that a career has helped inspire her.",
      "Hayley Turner believes that helping other women to inspire is what has helped her.",
      "Hayley Turner believes that it has helped inspire sport to progress.",
      "Female jockey believes that it has helped inspire women to progress.",
      "A female jockey believes that it has helped inspire other women.",
      "The female jockey believes that it has helped inspire sport to progress.",
      "A successful jockey believes his career has helped.",
      "A successful jockey believes that a career has helped inspire him.",
      "The most successful jockey believes that a career has helped inspire.",
      "A successful jockey believes that it has helped inspire women to progress.",
      "A successful jockey believes that other women will be helped to inspire.",
      "A successful jockey believes that it has helped inspire sport to progress.",
      "The most successful jockey believes that it has helped inspire women to progress.",
      "The most successful jockey believes that other women will be helped to inspire.",
      "The most successful jockey believes that it has helped inspire sport to progress."
    ]
  },
  {
    "instance_id": "pyrxsum-43",
    "summary": "An elderly woman has died in a house fire in Enniskillen.",
    "summary_trees": [
      "# ::snt An elderly woman has died in a house fire in Enniskillen.\n(d / die-01\n      :ARG1 (w / woman\n            :mod (e / elderly))\n      :ARG1-of (c / cause-01\n            :ARG0 (f / fire\n                  :location (h / house)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Enniskillen\")))))"
    ],
    "tree": [
      "(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly)))",
      "(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly)))",
      "(c / cause-01\n   :ARG0 (f / fire\n            :location (h / house)))",
      "(c / cause-01\n   :ARG0 (f / fire\n            :location (c2 / city\n                          :name (n / name\n                                   :op1 \"Enniskillen\"))))"
    ],
    "smus": [
      "An elderly woman has died.",
      "Caused by a fire in the house.",
      "A house fire has killed.",
      "A fire in Enniskillen has killed."
    ]
  },
  {
    "instance_id": "pyrxsum-44",
    "summary": "Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.",
    "summary_trees": [
      "# ::snt Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.\n(s / sign-02\n      :ARG0 (s2 / side\n            :name (n / name\n                  :op1 \"Fulham\")\n            :mod (c / championship))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Gohi\"\n                  :op2 \"Cyriac\")\n            :ARG0-of (s3 / strike-02))\n      :ARG3 (s4 / side\n            :name (n3 / name\n                  :op1 \"KV\"\n                  :op2 \"Oostende\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Pro\"\n                        :op2 \"League\")\n                  :mod (c2 / country\n                        :name (n5 / name\n                              :op1 \"Belgium\"))))\n      :manner (l2 / loan)\n      :time (u / until\n            :op1 (e / end-01\n                  :ARG1 (s5 / season))))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))"
    ],
    "smus": [
      "The championship side has signed.",
      "The striker was signed.",
      "Fulham have signed.",
      "The championship side has signed on loan.",
      "Gohi Cyriac was signed.",
      "The striker was signed on loan.",
      "Fulham have signed on loan.",
      "The championship side has signed a striker.",
      "Gohi Cyriac was signed on loan.",
      "Fulham have signed a striker.",
      "Signed for a Belgian League side",
      "Gohi Cyriac has been signed by the championship side.",
      "The championship side will be signed until the end of the season.",
      "The striker was signed until the end of the season.",
      "Signed on loan to the Pro League side",
      "The championship side has signed the striker on loan.",
      "Fulham have signed Gohi Cyriac.",
      "Fulham have signed until the end of the season.",
      "Fulham have signed a striker on loan.",
      "The championship side has signed with the Pro League side.",
      "The striker was signed by the Pro League side.",
      "Gohi Cyriac was signed until the end of the season.",
      "Gohi Cyriac was signed on loan by the championship side.",
      "The championship side has signed on loan from KV Oostende.",
      "The striker was signed on loan from KV Oostende.",
      "Fulham have signed for a Pro League side.",
      "The championship side has signed with the Belgian league side.",
      "The striker was signed by the Belgian League side.",
      "Fulham have signed Gohi Cyriac on loan.",
      "Fulham have signed on loan from KV Oostende.",
      "Fulham have signed with a Belgian league side.",
      "Signed for the Pro League side until the end of the season",
      "The championship side have signed a striker from KV Oostende.",
      "The championship side has signed a striker until the end of the season.",
      "The championship side has signed on loan from the Pro League side.",
      "Gohi Cyriac was signed on loan from the KV Oostende side.",
      "The striker was signed on loan from the Pro League side.",
      "Fulham have signed a striker from KV Oostende.",
      "Fulham have signed a striker until the end of the season.",
      "Fulham have signed on loan from a Pro League side.",
      "The championship side has signed on loan with the Belgian League side.",
      "The striker was signed on loan from the Belgian League side.",
      "The championship side have signed a striker from the Pro League side.",
      "Gohi Cyriac was signed by the championship side until the end of the season.",
      "Fulham have signed on loan from a Belgian league side.",
      "Gohi Cyriac has been signed on loan from the Pro League side.",
      "The championship side have signed a striker on loan from KV Oostende.",
      "Fulham have signed a striker from a Pro League side.",
      "The championship side has signed a striker for the Belgian league side.",
      "Fulham have signed Gohi Cyriac until the end of the season.",
      "Fulham have signed a striker on loan from KV Oostende.",
      "Fulham have signed a striker from a Belgian league side.",
      "Gohi Cyriac has been signed by the championship side for the Pro League side.",
      "The striker was signed by the Pro League side until the end of the season.",
      "Gohi Cyriac has been signed by the championship side on loan from KV Oostende.",
      "The championship side have signed a striker on loan from the Pro League side.",
      "Fulham have signed Gohi Cyriac from a Pro League side.",
      "Fulham have signed for a Pro League side until the end of the season.",
      "The striker was signed by the Belgian league side until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from KV Oostende.",
      "Fulham have signed a striker on loan from the Pro League side.",
      "The championship side have signed a striker on loan from the Belgian League side.",
      "Fulham have signed Gohi Cyriac from a Belgian league side.",
      "Fulham have signed with a Belgian league side until the end of the season.",
      "Gohi Cyriac was signed by the Pro League side until the end of the season.",
      "Fulham have signed a striker on loan from a Belgian league side.",
      "Gohi Cyriac has been signed by the championship side on loan from the Pro League side.",
      "The championship side have signed a striker from KV Oostende until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from the Pro League side.",
      "Gohi Cyriac has been signed by the championship side on loan from the Belgian league side.",
      "Fulham have signed a striker from KV Oostende until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from the Belgian league side.",
      "The championship side have signed a striker from the Pro League side until the end of the season.",
      "Fulham have signed Gohi Cyriac from KV Oostende until the end of the season.",
      "Fulham have signed a striker from a Pro League side until the end of the season.",
      "The championship side will have signed a striker from the Belgian League side until the end of the season.",
      "Fulham have signed a striker from a Belgian league side until the end of the season.",
      "Gohi Cyriac was signed by the championship side to the Pro League side until the end of the season.",
      "Fulham have signed Gohi Cyriac from a Pro League side until the end of the season.",
      "Gohi Cyriac was signed by the championship side to the Belgian league side until the end of the season.",
      "Fulham have signed Gohi Cyriac from a Belgian league side until the end of the season."
    ]
  },
  {
    "instance_id": "pyrxsum-45",
    "summary": "Wales started Wales 2018 World Cup qualifying campaign in confident fashion as Wales convincingly beat Moldova.",
    "summary_trees": [
      "# ::snt Wales started Wales 2018 World Cup qualifying campaign in confident fashion as Wales convincingly beat Moldova.\n(s / start-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Wales\"))\n      :ARG1 (c / campaign-01\n            :ARG0 t\n            :ARG1 (q / qualify-02\n                  :ARG2 (g / game\n                        :name (n2 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\")\n                        :time (d / date-entity\n                              :year 2018))))\n      :manner (c2 / confident-01\n            :ARG1 t)\n      :time (b / beat-03\n            :ARG0 t\n            :ARG1 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Moldova\"))\n            :ARG0-of (c3 / convince-01)))"
    ],
    "tree": [
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\")))",
      "(q / qualify-02\n   :ARG2 (g / game\n            :time (d / date-entity\n                     :year 2018)))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Moldova\")))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(q / qualify-02\n   :ARG2 (g / game\n            :name (n2 / name\n                      :op1 \"World\"\n                      :op2 \"Cup\")))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(c / campaign-01\n   :ARG1 (q / qualify-02\n            :ARG2 (g / game\n                     :time (d / date-entity\n                              :year 2018))))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Moldova\"))\n   :ARG0 (c3 / convince-01))",
      "(b / beat-03\n   :ARG0 (c3 / convince-01)\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Moldova\")))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t))",
      "(c / campaign-01\n   :ARG1 (q / qualify-02\n            :ARG2 (g / game\n                     :name (n2 / name\n                               :op1 \"World\"\n                               :op2 \"Cup\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018)))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))"
    ],
    "smus": [
      "Wales' campaign started.",
      "Wales started.",
      "Qualification for the 2018 game",
      "Moldova beaten",
      "Wales started their campaign when they beat.",
      "Wales started the campaign confidently.",
      "Qualifying for the World Cup",
      "Wales' campaign started when they beat a convincing goal.",
      "The campaign is for qualification for the 2018 game.",
      "Moldova beaten convincingly",
      "Wales started the campaign.",
      "Wales started when they beat.",
      "Wales started confidently.",
      "The campaign is for qualification for the World Cup.",
      "Wales started when they beat convincingly.",
      "The campaign started with qualification for the 2018 game.",
      "The campaign started with qualification for the World Cup.",
      "Wales started their campaign when they beat Moldova.",
      "Wales started when they beat Moldova.",
      "Wales started the campaign confidently for qualification for the 2018-2019 game.",
      "Wales started their campaign when they beat convincingly.",
      "The campaign for qualification for the 2018 game started when it was defeated convincingly.",
      "Wales started the campaign confidently for qualification for the World Cup.",
      "Wales started the campaign for qualification for the 2018 game.",
      "The campaign for qualification for the World Cup started when the World Cup was beaten convincingly.",
      "Wales started the campaign for qualification for the World Cup.",
      "Wales started the campaign when they beat Moldova.",
      "Wales started the campaign for qualification for the 2018-19 game when they beat convincingly.",
      "Wales started the campaign for qualification for the World Cup when they beat a convincingly.",
      "Wales started the campaign for qualification for the 2018-19 game when they beat Moldova.",
      "Wales started the campaign for qualification for the World Cup when they beat Moldova."
    ]
  },
  {
    "instance_id": "pyrxsum-46",
    "summary": "The BBC's director general has accused the Iranian authorities of intimidating those working for general Persian service.",
    "summary_trees": [
      "# ::snt The BBC's director general has accused the Iranian authorities of intimidating those working for general Persian service.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / publication\n                        :name (n / name\n                              :op1 \"BBC\"))\n                  :ARG2 (d / director\n                        :mod (g / general))))\n      :ARG1 (a2 / authority\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Iran\")))\n      :ARG2 (ii / intimidate-01\n            :ARG0 a2\n            :ARG1 (p3 / person\n                  :ARG0-of (w / work-01\n                        :ARG2 (s / service\n                              :mod c\n                              :name (n3 / name\n                                    :op1 \"Persia\"))\n                        :mod (g2 / general)))))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG0 (a2 / authority)))",
      "(w / work-01\n   :ARG2 (s / service\n            :mod (c / country :name (n2 / name :op1 \"Iran\"))))",
      "(h / have-org-role-91\n   :ARG2 (d / director\n            :mod (g / general)))",
      "(h / have-org-role-91\n   :ARG1 (p2 / publication\n             :name (n / name\n                      :op1 \"BBC\")))",
      "(w / work-01\n   :ARG2 (s / service\n            :name (n3 / name\n                      :op1 \"Persia\")))",
      "(w / work-01\n   :ARG2 (s / service\n            :mod (c / country :name (n2 / name :op1 \"Iran\")))\n   :mod (g2 / general))",
      "(ii / intimidate-01\n    :ARG1 (p3 / person\n              :ARG0 (w / work-01\n                       :mod (g2 / general))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(ii / intimidate-01\n    :ARG1 (p3 / person\n              :ARG0 (w / work-01\n                       :ARG2 (s / service\n                                :mod (c / country :name (n2 / name :op1 \"Iran\"))))))",
      "(w / work-01\n   :ARG2 (s / service\n            :name (n3 / name\n                      :op1 \"Persia\"))\n   :mod (g2 / general))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general)))))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (c / country :name (n2 / name :op1 \"Iran\")))))))",
      "(h / have-org-role-91\n   :ARG1 (p2 / publication\n             :name (n / name\n                      :op1 \"BBC\"))\n   :ARG2 (d / director\n            :mod (g / general)))",
      "(ii / intimidate-01\n    :ARG1 (p3 / person\n              :ARG0 (w / work-01\n                       :ARG2 (s / service\n                                :name (n3 / name\n                                          :op1 \"Persia\")))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :name (n3 / name\n                                                   :op1 \"Persia\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG2 (ii / intimidate-01\n             :ARG0 (a2 / authority)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG2 (ii / intimidate-01\n             :ARG0 (a2 / authority)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG2 (ii / intimidate-01\n             :ARG0 (a2 / authority)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod c)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (c / country :name (n2 / name :op1 \"Iran\")))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (c / country :name (n2 / name :op1 \"Iran\")))))))"
    ],
    "smus": [
      "accused of intimidating authorities.",
      "Working in the Iranian service.",
      "Director general",
      "The BBC.",
      "Working with the Persian service.",
      "Working in the Iranian service in general.",
      "Intimidating to people in general working.",
      "Iranian authorities are accused.",
      "Intimidating people working in Iranian service.",
      "Working in general for the Persian service.",
      "The director general has accused the person.",
      "accused of intimidating the general worker.",
      "The accused accused of intimidating people working in the Iranian service.",
      "The people working in the Persian service were intimidated.",
      "Iranian authorities have been accused of intimidating.",
      "The director general has accused the authorities of intimidating the people.",
      "The accused accused of intimidating people working for the Persian service.",
      "The director general has accused Iranian authorities.",
      "Iranian authorities have been accused of intimidating the general worker.",
      "The BBC has accused Iranian authorities.",
      "The director general has accused the people of intimidating the general worker.",
      "Iranian authorities have been accused of intimidating people working in Iranian service.",
      "Iranian authorities have been accused of intimidating people working in the Persian service.",
      "The director general has accused Iranian authorities of intimidating.",
      "The BBC has accused Iranian authorities of intimidating the people.",
      "The director general has accused Iranian authorities of intimidating the general worker.",
      "The BBC has accused Iranian authorities of intimidating the general worker.",
      "The BBC has accused Iranian authorities of intimidating people working in the Iranian service.",
      "The director general has accused Iranian authorities of intimidating people working in the Persian service.",
      "The BBC has accused Iranian authorities of intimidating people working in the Persian service."
    ]
  },
  {
    "instance_id": "pyrxsum-47",
    "summary": "A mother of six with an IQ of 70 should be sterilised for mother own safety, the Court of Protection has ruled.",
    "summary_trees": [
      "# ::snt A mother of six with an IQ of 70 should be sterilised for mother own safety, the Court of Protection has ruled.\n(r / rule-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Court\"\n                  :op2 \"of\"\n                  :op3 \"Protection\"))\n      :ARG3 (r2 / recommend-01\n            :ARG1 (s / sterilize-01\n                  :ARG1 (p / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / child\n                                    :quant 6)\n                              :ARG2 (m / mother))\n                        :ARG0-of (h2 / have-03\n                              :ARG1 (q / quotient\n                                    :quant 70\n                                    :degree-of (ii / intelligent-01))))\n                  :purpose (s2 / safe-01\n                        :ARG1 p))))"
    ],
    "tree": [
      "(h / have-rel-role-91\n   :ARG1 (c / child\n            :quant 6))",
      "(h2 / have-03\n    :ARG1 (q / quotient\n             :quant 70))",
      "(h2 / have-03\n    :ARG1 (q / quotient\n             :degree (ii / intelligent-01)))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :purpose (s2 / safe-01\n                          :ARG1 (p / person))))",
      "(h / have-rel-role-91\n   :ARG1 (c / child\n            :quant 6)\n   :ARG2 (m / mother))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\")))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :quant 70))))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (m / mother)))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :degree (ii / intelligent-01)))))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h2 / have-03\n                                :ARG1 (q / quotient\n                                         :quant 70)))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother))))))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG1 (c / child\n                                                 :quant 6))))))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :quant 70))))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :degree (ii / intelligent-01))))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :degree (ii / intelligent-01)))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :purpose (s2 / safe-01\n                                   :ARG1 (p / person)))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother))))))"
    ],
    "smus": [
      "has six children.",
      "70",
      "has an intelligence quotient.",
      "People should be sterilized for safety reasons.",
      "The mother has six children.",
      "The Court of Protection has ruled that --",
      "It is ruled that sterilization should be done for the safety of the people.",
      "The mother should be sterilized.",
      "People with an \"intellectual quotient\" are sterilized.",
      "6 children should be sterilized.",
      "The mother is sterilized for safety.",
      "Ruled that a mother should be sterilized.",
      "People with an \"intellectual quotient\" should be sterilized.",
      "It is ruled that people with 70 should be sterilized.",
      "People with an intelligence quotient are sterilized for safety.",
      "It is ruled that people with an intelligence quotient should be sterilized.",
      "The Court of Protection has ruled that sterilization should be done for the safety of people.",
      "The Court of Protection has ruled that the mother should be sterilized.",
      "The Court of Protection has ruled that people with 70 should be sterilized.",
      "The Court of Protection has ruled that people with an \"intellectual quotient\" should be sterilized."
    ]
  },
  {
    "instance_id": "pyrxsum-48",
    "summary": "China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).",
    "summary_trees": [
      "# ::snt China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).\n(j / join-01\n      :ARG0 (c / conglomerate\n            :name (n / name\n                  :op1 \"Fosun\")\n            :ARG1-of (o / own-01\n                  :ARG1-of (p / private-03))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (b / big)\n                  :ARG3 (m / most)\n                  :ARG5 (c2 / country\n                        :name (n2 / name\n                              :op1 \"China\"))))\n      :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                  :ARG3 (c3 / company\n                        :name (n3 / name\n                              :op1 \"Espirito\"\n                              :op2 \"Santo\"\n                              :op3 \"Saude\")\n                        :ARG0-of (o2 / operate-01\n                              :ARG1 (h2 / hospital))\n                        :mod (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Portugal\"))))))"
    ],
    "tree": [
      "(h / have-degree-91\n   :ARG2 (b / big)\n   :ARG3 (m / most))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\")))",
      "(h / have-degree-91\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(h / have-degree-91\n   :ARG3 (m / most)\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(h / have-degree-91\n   :ARG2 (b / big)\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(h / have-degree-91\n   :ARG3 (m / most)\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(w / war-01\n   :ARG2 (b2 / bid-01\n             :ARG3 (c3 / company\n                       :ARG0 (o2 / operate-01\n                                 :ARG1 (h2 / hospital)))))",
      "(h / have-degree-91\n   :ARG2 (b / big)\n   :ARG3 (m / most)\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(h / have-degree-91\n   :ARG2 (b / big)\n   :ARG3 (m / most)\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(w / war-01\n   :ARG2 (b2 / bid-01\n             :ARG3 (c3 / company\n                       :name (n3 / name\n                                 :op1 \"Espirito\"\n                                 :op2 \"Santo\"\n                                 :op3 \"Saude\"))))",
      "(w / war-01\n   :ARG2 (b2 / bid-01\n             :ARG3 (c3 / company\n                       :mod (c4 / country\n                                :name (n4 / name\n                                          :op1 \"Portugal\")))))",
      "(j / join-01\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))"
    ],
    "smus": [
      "The conglomerate of Fosun has joined.",
      "China",
      "The conglomerate is a private-owned company.",
      "The big conglomerate has joined.",
      "The most conglomerate has joined.",
      "Bid for hospital operation company",
      "Bid for Espirito Santo Saude",
      "Bid for Portuguese company",
      "There was a war over the bids from hospital operating companies.",
      "There was a war over the bids from Espirito Santo Saude.",
      "The war over bids from hospital operating companies has joined.",
      "The war over the bids for Espirito Santo Saude has joined.",
      "The war over the bids of Portuguese companies has joined.",
      "The Sun conglomerate has joined a war over a bid for a hospital operating company.",
      "The conglomerate Fosun has joined a war over a bid to Espirito Santo Saude.",
      "The fossil conglomerate has joined a war over a bid from a Portuguese company.",
      "The private-owned conglomerate has joined the war over the hospital operating company's bid.",
      "The big conglomerate has joined the war over the hospital operating company's bid.",
      "The largest conglomerate has joined a war over a bid for the hospital operating company.",
      "The private-equity conglomerate has joined the war on the bid for Espirito Santo Saude.",
      "The private-owned conglomerate has joined the war on the bids of Portuguese companies.",
      "The big conglomerate has joined the war over the bid for Espirito Santo Saude.",
      "The big conglomerate has joined the war on the bids of Portuguese companies.",
      "The most conglomerate has joined the war over the bid for Espirito Santo Saude.",
      "The most conglomerate has joined a war over a bid from a Portuguese company.",
      "The conglomerate of China has joined a war over a bid for the hospital operating company.",
      "The conglomerate of China has joined the war over the bid for Espirito Santo Saude.",
      "The conglomerate of Chinese has joined the war on the bids of Portuguese companies."
    ]
  },
  {
    "instance_id": "pyrxsum-49",
    "summary": "Bosses have been urged not to indulge in invasive surveillance by reading Bosses employees' private messages.",
    "summary_trees": [
      "# ::snt Bosses have been urged not to indulge in invasive surveillance by reading Bosses employees' private messages.\n(u / urge-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (b / boss)))\n      :ARG2 (ii / indulge-01\n            :polarity -\n            :ARG0 p\n            :ARG1 (s / surveil-01\n                  :ARG0 p\n                  :ARG0-of (ii2 / invade-01)\n                  :manner (r / read-01\n                        :ARG0 p\n                        :ARG1 (m / message-01\n                              :ARG0 (p2 / person\n                                    :ARG1-of (e / employ-01\n                                          :ARG0 p))\n                              :ARG1-of (p3 / private-02))))))"
    ],
    "tree": [
      "(u / urge-01\n   :ARG2 (ii / indulge-01\n             :polarity -))",
      "(r / read-01\n   :ARG1 (m / message-01\n            :ARG1 (p3 / private-02)))",
      "(u / urge-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG2 (ii / indulge-01\n             :polarity -))"
    ],
    "smus": [
      "Not to indulge is urged.",
      "Private message read.",
      "Bosses are urged not to indulge."
    ]
  },
  {
    "instance_id": "pyrxsum-50",
    "summary": "Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.",
    "summary_trees": [
      "# ::snt Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.\n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01\n                  :ARG2 (ii / industry\n                        :mod (r / retail-01))))\n      :ARG1 (ii2 / increase-01\n            :ARG0 (c / chain\n                  :name (n / name\n                        :op1 \"Morrisons\")\n                  :mod (s2 / supermarket))\n            :ARG1 (c2 / cost-01\n                  :ARG1 (j / jar\n                        :consist-of (p2 / product\n                              :name (n2 / name\n                                    :op1 \"Mariane\"))))\n            :ARG2 (p3 / percentage-entity\n                  :value 12.5)))"
    ],
    "tree": [
      "(ii2 / increase-01\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(e / expert-01\n   :ARG2 (ii / industry\n             :mod (r / retail-01)))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket)))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG2 (p3 / percentage-entity\n                        :value 12.5)))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\")))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :mod (s2 / supermarket))))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :name (n / name\n                                :op1 \"Morrisons\"))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(c2 / cost-01\n    :ARG1 (j / jar\n             :consist-of (p2 / product\n                             :name (n2 / name\n                                       :op1 \"Mariane\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01)))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\"))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\"))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG1 (c2 / cost-01\n                        :ARG1 (j / jar\n                                 :consist-of (p2 / product\n                                                 :name (n2 / name\n                                                           :op1 \"Mariane\"))))))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG2 (p3 / percentage-entity\n                        :value 12.5)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG2 (p3 / percentage-entity\n                        :value 12.5)))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :mod (s2 / supermarket))))"
    ],
    "smus": [
      "increased by 12.5%",
      "Retail industry experts",
      "The supermarket chain has increased.",
      "Says increased by 12.5%.",
      "The Morrisons chain has increased.",
      "The supermarket chain say they have increased.",
      "The Morrisons chain say that increased.",
      "The supermarket chain has increased by 12.5%.",
      "Cost per jar of Mariane",
      "Retail industry experts say --",
      "Morrisons chain increased by 12.5%.",
      "The cost of a jar of Mariane has increased.",
      "The cost of a jar of Mariane has increased, they say.",
      "The cost of a jar of Mariane has increased by 12.5%.",
      "Retail industry experts say the increase has increased by 12.5%.",
      "The supermarket chain has increased the cost of a jar of Mariane.",
      "Retail industry experts say supermarket chain has increased.",
      "The Morrisons chain has increased the cost per jar of Mariane.",
      "Retail industry experts say the Morrisons chain has increased.",
      "The supermarket chain has increased the cost of a jar of Mariane by 12.5%.",
      "Morrisons has increased the cost of a jar of Mariane by 12.5%.",
      "Retail industry experts say the cost of a jar of Mariane has increased."
    ]
  },
  {
    "instance_id": "pyrxsum-51",
    "summary": "More should be done to help deaf people into work in Wales, a charity has said.",
    "summary_trees": [
      "# ::snt More should be done to help deaf people into work in Wales, a charity has said.\n(s / say-01\n      :ARG0 (c / charity)\n      :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                  :ARG1 (m / more)\n                  :ARG2 (h / help-01\n                        :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                    :ARG0-of (d2 / deaf-02))\n                              :location (c2 / country\n                                    :name (n / name\n                                          :op1 \"Wales\")))\n                        :ARG2 p))))"
    ],
    "tree": [
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG1 (m / more)))",
      "(w / work-01\n   :ARG0 (p / person\n            :ARG0 (d2 / deaf-02)))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more))))",
      "(d / do-02\n   :ARG2 (h / help-01\n            :ARG2 (p / person\n                     :ARG0 (d2 / deaf-02))))",
      "(h / help-01\n   :ARG1 (w / work-01\n            :ARG0 (p / person\n                     :ARG0 (d2 / deaf-02))))",
      "(h / help-01\n   :ARG1 (w / work-01\n            :location (c2 / country\n                          :name (n / name\n                                   :op1 \"Wales\"))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more))))",
      "(d / do-02\n   :ARG1 (m / more)\n   :ARG2 (h / help-01\n            :ARG2 (p / person\n                     :ARG0 (d2 / deaf-02))))",
      "(d / do-02\n   :ARG2 (h / help-01\n            :ARG1 (w / work-01\n                     :location (c2 / country\n                                   :name (n / name\n                                            :op1 \"Wales\")))))",
      "(w / work-01\n   :ARG0 (p / person\n            :ARG0 (d2 / deaf-02))\n   :location (c2 / country\n                 :name (n / name\n                          :op1 \"Wales\")))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                       :ARG0 (d2 / deaf-02))))))",
      "(d / do-02\n   :ARG1 (m / more)\n   :ARG2 (h / help-01\n            :ARG1 (w / work-01\n                     :ARG0 (p / person\n                              :ARG0 (d2 / deaf-02)))))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG1 (w / work-01\n                              :location (c2 / country\n                                            :name (n / name\n                                                     :op1 \"Wales\"))))))",
      "(d / do-02\n   :ARG1 (m / more)\n   :ARG2 (h / help-01\n            :ARG1 (w / work-01\n                     :location (c2 / country\n                                   :name (n / name\n                                            :op1 \"Wales\")))))",
      "(d / do-02\n   :ARG1 (m / more)\n   :ARG2 (h / help-01\n            :ARG1 (w / work-01\n                     :location (c2 / country\n                                   :name (n / name\n                                            :op1 \"Wales\")))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG2 (p / person\n                                       :ARG0 (d2 / deaf-02))))))"
    ],
    "smus": [
      "More should be done.",
      "Deaf work.",
      "More should be done, it was said.",
      "Doing to help the deaf.",
      "Help deaf people do their work.",
      "Help work in Wales.",
      "Charity has said more should be done.",
      "It should be done to help the deaf.",
      "Deaf people work in Wales.",
      "It is said that help for the deaf should be done.",
      "It should be done to help deaf people do their work.",
      "It should be done to help work in Wales.",
      "The charity has said that something should be done to help the deaf.",
      "It is said that help with deaf people's work should be done.",
      "It is said that work in Wales should be done.",
      "The charity has said that something should be done to help deaf people do their work.",
      "The charity has said that work should be done to help in Wales."
    ]
  },
  {
    "instance_id": "pyrxsum-52",
    "summary": "Five teenagers have been sentenced after admitting teenagers part in a \"riot\" which saw part of Newport city centre \"under siege\".",
    "summary_trees": [
      "# ::snt Five teenagers have been sentenced after admitting teenagers part in a \"riot\" which saw part of Newport city centre \"under siege\".\n(s / sentence-01\n      :ARG1 (t / teenager\n            :quant 5)\n      :time (a / after\n            :op1 (a2 / admit-01\n                  :ARG0 t\n                  :ARG1 (p / participate-01\n                        :ARG0 (t2 / teenager)\n                        :ARG1 (r / riot-01\n                              :ARG0-of (s2 / see-01\n                                    :ARG1 (s3 / siege-01\n                                          :ARG1 (p2 / part\n                                                :part-of (c / center\n                                                      :part-of (c2 / city\n                                                            :name (n / name\n                                                                  :op1 \"Newport\")))))))))))"
    ],
    "tree": [
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5))",
      "(a2 / admit-01\n    :ARG1 (p / participate-01\n             :ARG0 (t2 / teenager)))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG0 t)))",
      "(s3 / siege-01\n    :ARG1 (p2 / part\n              :part (c / center\n                       :part (c2 / city\n                                 :name (n / name\n                                          :op1 \"Newport\")))))",
      "(s2 / see-01\n    :ARG1 (s3 / siege-01\n              :ARG1 (p2 / part\n                        :part (c / center\n                                 :part (c2 / city\n                                           :name (n / name\n                                                    :op1 \"Newport\"))))))",
      "(r / riot-01\n   :ARG0 (s2 / see-01\n             :ARG1 (s3 / siege-01\n                       :ARG1 (p2 / part\n                                 :part (c / center\n                                          :part (c2 / city\n                                                    :name (n / name\n                                                             :op1 \"Newport\")))))))",
      "(p / participate-01\n   :ARG1 (r / riot-01\n            :ARG0 (s2 / see-01\n                      :ARG1 (s3 / siege-01\n                                :ARG1 (p2 / part\n                                          :part (c / center\n                                                   :part (c2 / city\n                                                             :name (n / name\n                                                                      :op1 \"Newport\"))))))))",
      "(a2 / admit-01\n    :ARG1 (p / participate-01\n             :ARG1 (r / riot-01\n                      :ARG0 (s2 / see-01\n                                :ARG1 (s3 / siege-01\n                                          :ARG1 (p2 / part\n                                                    :part (c / center\n                                                             :part (c2 / city\n                                                                       :name (n / name\n                                                                                :op1 \"Newport\")))))))))",
      "(p / participate-01\n   :ARG0 (t2 / teenager)\n   :ARG1 (r / riot-01\n            :ARG0 (s2 / see-01\n                      :ARG1 (s3 / siege-01\n                                :ARG1 (p2 / part\n                                          :part (c / center\n                                                   :part (c2 / city\n                                                             :name (n / name\n                                                                      :op1 \"Newport\"))))))))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG1 (p / participate-01\n                              :ARG1 (r / riot-01\n                                       :ARG0 (s2 / see-01\n                                                 :ARG1 (s3 / siege-01\n                                                           :ARG1 (p2 / part\n                                                                     :part (c / center\n                                                                              :part (c2 / city\n                                                                                        :name (n / name\n                                                                                                 :op1 \"Newport\")))))))))))"
    ],
    "smus": [
      "Five teenagers were sentenced.",
      "admitting to being part of the participation of teenagers.",
      "Five teenagers were sentenced after admitting.",
      "Part of the center of Newport was under siege.",
      "Part of the center of Newport was seen under siege.",
      "There was rioting as a siege of part of the city center saw the city.",
      "Part of the riots that saw the siege of part of the center of Newport.",
      "admitting part of the riots that saw the siege of part of the center of Newport.",
      "Teenagers took part in a riot that saw the siege of part of the city center of Newport.",
      "Five teenagers were sentenced after admitting part in the riots that saw the siege of part of the center of Newport."
    ]
  },
  {
    "instance_id": "pyrxsum-53",
    "summary": "Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.",
    "summary_trees": [
      "# ::snt Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.\n(a / and\n      :op1 (f / fetch-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG2 (d / dog\n                  :poss y))\n      :op2 (s / sit-01\n            :mode imperative\n            :ARG1 y\n            :ARG2 d)\n      :op3 (r / roll-01\n            :mode imperative\n            :ARG0 y\n            :ARG2 (o / over))\n      :domain (t / thing\n            :ARG1-of (n / normal-02)\n            :mod (k / kind\n                  :mod (a2 / all))\n            :ARG1-of (s2 / say-01\n                  :ARG0 y\n                  :ARG2 d)))"
    ],
    "tree": [
      "(f / fetch-01\n   :ARG2 (d / dog\n            :poss (y / you)))",
      "(f / fetch-01\n   :ARG0 (y / you)\n   :ARG2 (d / dog\n            :poss y))"
    ],
    "smus": [
      "fetch your dog",
      "fetch your dog."
    ]
  },
  {
    "instance_id": "pyrxsum-54",
    "summary": "A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.",
    "summary_trees": [
      "# ::snt A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.\n(d / decide-01\n      :ARG0 (j / jury\n            :mod (g / grand))\n      :ARG1 (ii / indict-01\n            :polarity -\n            :ARG0 j\n            :ARG1 (a / anyone)\n            :topic (c / case-04\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Sandra\"\n                              :op2 \"Bland\")\n                        :ARG1-of (d2 / die-01\n                              :location (j2 / jail\n                                    :location (s / state\n                                          :name (n2 / name\n                                                :op1 \"Texas\")))\n                              :time (b / before)\n                              :time (y / year\n                                    :mod (t / this)))))))"
    ],
    "tree": [
      "(d / decide-01\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand)))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG1 (ii / indict-01\n             :topic (c / case-04\n                       :ARG1 (p / person\n                                :ARG1 (d2 / die-01\n                                          :time (b / before))))))",
      "(c / case-04\n   :ARG1 (p / person\n            :ARG1 (d2 / die-01\n                      :location (j2 / jail\n                                    :location (s / state\n                                                 :name (n2 / name\n                                                           :op1 \"Texas\"))))))"
    ],
    "smus": [
      "It was decided not to indict.",
      "The grand jury decided.",
      "The grand jury has decided not to indict.",
      "The grand jury has decided not to indict anyone.",
      "In the case of the person who died in jail in Texas.",
      "The case against Sandra Land was decided by a grand jury."
    ]
  },
  {
    "instance_id": "pyrxsum-55",
    "summary": "A man was limp \"like a teddy bear\" after man was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.",
    "summary_trees": [
      "# ::snt A man was limp \"like a teddy bear\" after man was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.\n(h / hear-01\n      :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n      :ARG1 (l / limp-01\n            :ARG1 (m2 / man)\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b / bear\n                        :mod (t2 / teddy)))\n            :time (a / after\n                  :op1 (r2 / restrain-01\n                        :ARG0 (p / person\n                              :ARG0-of (h2 / have-org-role-91\n                                    :ARG2 (b2 / bouncer)))\n                        :ARG1 m2\n                        :location (g / ground\n                              :location (o / outside\n                                    :op1 (b3 / bar\n                                          :location (c / city\n                                                :name (n / name\n                                                      :op1 \"Aberdeen\")))))))))"
    ],
    "tree": [
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01)))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)))",
      "(r / resemble-01\n   :ARG2 (b / bear\n            :mod (t2 / teddy)))",
      "(l / limp-01\n   :ARG1 (r / resemble-01\n            :ARG2 (b / bear\n                     :mod (t2 / teddy))))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG1 (m2 / man)))))",
      "(l / limp-01\n   :ARG1 (m2 / man)\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG1 m2)))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :ARG1 (r / resemble-01\n                     :ARG2 (b / bear\n                              :mod (t2 / teddy)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG1 (m2 / man)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG1 (m2 / man)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (r / resemble-01\n                     :ARG2 (b / bear\n                              :mod (t2 / teddy)))))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG0 (p / person\n                                       :ARG0 (h2 / have-org-role-91\n                                                 :ARG2 (b2 / bouncer)))))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (r / resemble-01\n                     :ARG2 (b / bear\n                              :mod (t2 / teddy)))))",
      "(l / limp-01\n   :ARG1 (m2 / man)\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG0 (p / person\n                              :ARG0 (h2 / have-org-role-91\n                                        :ARG2 (b2 / bouncer))))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG0 (p / person\n                                       :ARG0 (h2 / have-org-role-91\n                                                 :ARG2 (b2 / bouncer)))))))"
    ],
    "smus": [
      "The murder trial has heard.",
      "The man was heard limping.",
      "like a Teddy Bear.",
      "Like a teddy bear, limp.",
      "Heard limping after being restrained by man.",
      "The man was limping after being restrained.",
      "The murder trial has heard the man limp.",
      "Heard a limp like a Teddy Bear.",
      "The murder trial has heard that after the man was restrained he was limping.",
      "The murder trial has heard limping teddy bears.",
      "Heard limping after being restrained by bouncers.",
      "The man was limping after being restrained by bouncers.",
      "The murder trial has heard limped after being restrained by bouncers.",
      "Heard limping after being restrained on the ground outside an Aberdeen bar.",
      "The man was limping after being restrained on the ground outside an Aberdeen bar.",
      "The murder trial has heard a limp after being restrained on the ground outside an Aberdeen bar."
    ]
  },
  {
    "instance_id": "pyrxsum-56",
    "summary": "A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking busker was collecting for a Hillsborough charity.",
    "summary_trees": [
      "# ::snt A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking busker was collecting for a Hillsborough charity.\n(c / convict-01\n      :ARG1 (b / busker\n            :ARG0-of (p / play-11\n                  :ARG2 (b2 / bagpipe)))\n      :ARG2 (d / dupe-01\n            :ARG0 b\n            :ARG1 (p2 / person\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Liverpool\")))\n            :ARG2 (t / think-01\n                  :ARG0 p2\n                  :ARG1 (c3 / collect-01\n                        :ARG0 b\n                        :ARG3 (c4 / charity\n                              :mod (e / event\n                                    :name (n2 / name\n                                          :op1 \"Hillsborough\")))))))"
    ],
    "tree": [
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG0 (b / busker)))",
      "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person)))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 (b / busker))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe))))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG0 (b / busker)))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\"))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG0 b))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG1 (p2 / person\n                      :location (c2 / city\n                                    :name (n / name\n                                             :op1 \"Liverpool\")))))",
      "(t / think-01\n   :ARG1 (c3 / collect-01\n             :ARG3 (c4 / charity\n                       :mod (e / event\n                               :name (n2 / name\n                                         :op1 \"Hillsborough\")))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG0 p2))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG0 p2))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG3 (c4 / charity\n                                :mod (e / event\n                                        :name (n2 / name\n                                                  :op1 \"Hillsborough\"))))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 (b / busker))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 (b / busker))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG0 b))))"
    ],
    "smus": [
      "Convicted for duping a busker.",
      "Duping people's thinking.",
      "Convicted for duping people's thinking.",
      "Dupeing the thought of the busker collecting.",
      "A busker playing the bagpipe was convicted.",
      "Convicted for duping the thought of a busker collecting.",
      "Duping Liverpool people.",
      "A busker playing the bagpipe was convicted of duping.",
      "convicted of duping a Liverpool person.",
      "Duping Liverpool people for their thinking.",
      "A busker playing the bagpipe was convicted of duping people's thinking.",
      "Duping the thought of collecting for a Hillsborough charity.",
      "Duping Liverpool people into thinking a busker was collecting.",
      "A busker playing bagpipes was convicted of duping the thought of collecting.",
      "The thought of collecting for a Hillsborough charity was duped, the convictions were made.",
      "A bagpipe playing busker was convicted of duping a Liverpool person.",
      "People in Liverpool are being duped into thinking of collecting for a Hillsborough charity.",
      "A busker playing bagpipes was convicted of duping the thought of collecting for a Hillsborough charity."
    ]
  },
  {
    "instance_id": "pyrxsum-57",
    "summary": "New Morocco coach Herve Renard begins Renard quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.",
    "summary_trees": [
      "# ::snt New Morocco coach Herve Renard begins Renard quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.\n(b / begin-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Herve\"\n                  :op2 \"Renard\")\n            :ARG0-of (c / coach-01\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Morocco\")))\n            :ARG1-of (n3 / new-01))\n      :ARG1 (q / quest-01\n            :ARG0 p\n            :ARG1 (q2 / qualify-02\n                  :ARG2 (g / game\n                        :name (n4 / name\n                              :op1 \"Africa\"\n                              :op2 \"Cup\"\n                              :op3 \"of\"\n                              :op4 \"Nations\")\n                        :ord (o / ordinal-entity\n                              :value 3)\n                        :ARG0-of (e / equal-01\n                              :ARG1 (r / record)))))\n      :time (r2 / resume-01\n            :ARG1 q2\n            :time (w / week\n                  :mod (t2 / this))))"
    ],
    "tree": [
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01)))",
      "(c / coach-01\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Morocco\")))",
      "(q2 / qualify-02\n    :ARG2 (g / game\n             :ARG0 (e / equal-01\n                      :ARG1 (r / record))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(q / quest-01\n   :ARG1 (q2 / qualify-02\n             :ARG2 (g / game\n                      :ord (o / ordinal-entity\n                              :value 3))))",
      "(q / quest-01\n   :ARG1 (q2 / qualify-02\n             :ARG2 (g / game\n                      :ARG0 (e / equal-01\n                               :ARG1 (r / record)))))",
      "(q2 / qualify-02\n    :ARG2 (g / game\n             :name (n4 / name\n                       :op1 \"Africa\"\n                       :op2 \"Cup\"\n                       :op3 \"of\"\n                       :op4 \"Nations\")))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(q / quest-01\n   :ARG1 (q2 / qualify-02\n             :ARG2 (g / game\n                      :name (n4 / name\n                                :op1 \"Africa\"\n                                :op2 \"Cup\"\n                                :op3 \"of\"\n                                :op4 \"Nations\"))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))"
    ],
    "smus": [
      "Herve Renard's quest begins.",
      "The new people begins.",
      "Morocco coach",
      "Qualifying for the record-equalling game.",
      "The new person begins his quest.",
      "Quest for qualifying for the third game",
      "Quest for qualifying for the record-equaling game.",
      "Qualifying for the Africa Cup of Nations",
      "Morocco coach begins",
      "Herve Renard begins his quest.",
      "The quest for qualifying for the third game begins.",
      "Herve Renard's quest begins when this week's resume resumes.",
      "The new person begins when this week's resume resumes.",
      "The quest for qualifying for the record-equaling game begins.",
      "Quest for qualifying for the Africa Cup of Nations",
      "Morocco coach begins quest.",
      "Herve Renard begins when this week's resume resumes.",
      "The quest for qualifying for the Africa Cup of Nations begins.",
      "When qualifying for the third game resumes, Herve Renard's quest begins.",
      "The quest for qualifying for the third game begins when it resumes.",
      "New person begins quest for qualifying for third game.",
      "The new person begins when qualifying for the third game resumes.",
      "When qualifying for the record-equaling game resumes, Herve Renard's quest begins.",
      "The quest for qualifying for the record-equaling game begins as it resumes.",
      "The new person begins his quest when this week's resume.",
      "The new person begins the quest for qualifying for the record-equaling game.",
      "The new person begins qualifying for the record-equaling game as the record-equalization game resumes.",
      "Herve Renard begins the quest for qualifying for the third game.",
      "When qualifying for the third game resumes, Herve Renard begins.",
      "Morocco's coach begins when this week's resume resumes.",
      "When qualifying for the Africa Cup of Nations resumes, Herve Renard's quest begins.",
      "The quest for qualifying for the Africa Cup of Nations begins when it resumes.",
      "Quest for qualifying for the third game begins this week as it resumes.",
      "Herve Renard begins his quest as the week this resumes.",
      "The new people begins the quest for qualifying for the Africa Cup of Nations.",
      "When preparing for the record-equaling game resumes, Herve Renard begins.",
      "The new people begins when qualifying for the Africa Cup of Nations resumes.",
      "The quest for qualifying for the third game of equaling the record begins when it resumes.",
      "The quest for qualifying for the record-equaling game begins this week, which resumes.",
      "The new person begins his quest as qualifying for the third game resumes.",
      "The new person begins the quest for qualifying for the third game when it resumes.",
      "The new person begins his quest as resumption of qualifying for the record-equaling game.",
      "The new person begins the quest for qualifying for the record-equaling game when it resumes.",
      "Morocco coach begins quest for qualifying for third game",
      "Morocco coach begins qualifying for the third game.",
      "The quest for qualifying for the Africa Cup of Nations begins this week, which resumes.",
      "The quest for qualifying for the third Africa Cup of Nations begins when it resumes.",
      "The quest for qualifying for the third African Cup of Nations begins when it resumes.",
      "When qualifying for the third game resumes, Herve Renard begins his quest.",
      "When the quest for qualifying for the third game resumes, Herve Renard begins.",
      "Morocco coach begins quest as week resumes.",
      "Morocco coach begins quest for qualifying for game with record equaling",
      "The Moroccan coach begins qualifying for the game with the record equaling.",
      "The quest for qualifying for the African Cup of Nations by equaling record begins when it resumes.",
      "The quest for qualifying for the record-equaling Africa Cup of Nations begins as it resumes.",
      "When qualifying for the record-equaling game resumes, Herve Renard begins his quest.",
      "When the quest for qualifying for the record-equaling game resumes, Herve Renard begins.",
      "The new person begins his quest as preparing for the Africa Cup of Nations resumes.",
      "The new person begins the quest for qualifying for the Africa Cup of Nations when it resumes.",
      "The quest for qualifying for the third game begins for new people when this week's resumes.",
      "The new person begins the quest for qualifying for the third game of equaling the record when it resumes.",
      "The quest for qualifying for the record-equaling game begins for new people as the week resumes.",
      "Morocco coach begins quest for qualification for the Africa Cup of Nations",
      "The Moroccan coach begins qualifying for the Africa Cup of Nations when the tournament resumes.",
      "When qualifying for the Africa Cup of Nations resumes, Herve Renard begins his quest.",
      "When the quest for qualifying for the Africa Cup of Nations resumes, Herve Renard begins.",
      "Morocco coach begins quest as qualification for third game resumes.",
      "Morocco coach begins quest for qualifying for third game when quest resumes.",
      "When the quest for qualifying for the third game of equaling the record resumes, Herve Renard begins.",
      "Morocco coach begins quest as qualification for game against equaling record resumes.",
      "Morocco coach begins quest for qualifying for game with record equaling as quest resumes.",
      "The quest for qualifying for the Africa Cup of Nations begins for new people when it resumes this week.",
      "The new person begins the quest for qualifying for the third Africa Cup of Nations when it resumes.",
      "The new person begins the quest for qualifying for the third African Cup of Nations when it resumes.",
      "The new person begins the quest for qualifying for the Africa Cup of Nations record-equaling when it resumes.",
      "The new person begins the quest for qualifying for the record-equaling Africa Cup of Nations when it resumes.",
      "When the quest for qualifying for the third Africa Cup of Nations resumes, Herve Renard begins.",
      "When the quest for qualifying for the third African Cup of Nations resumes, Herve Renard begins.",
      "Morocco coach begins quest as qualification for Africa Cup of Nations resumes.",
      "Morocco coach begins quest for qualifying for Africa Cup of Nations when quest resumes.",
      "Morocco coach begins quest for qualifying for third game as week resumes this week.",
      "When the quest for qualifying for the African Cup of Nations by equaling the record begins, Herve Renard begins.",
      "When the quest for qualifying for the record-equaling Africa Cup of Nations resumes, Herve Renard begins.",
      "Morocco coach begins quest for qualifying for third game with record equaling as quest resumes.",
      "Morocco coach begins quest for qualifying for game with record equaling as week resumes.",
      "Morocco coach begins quest for qualifying for third game in record-equaling quest as quest resumes.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations when resumes this week.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations third game when quest resumes.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations with record equaling as quest resumes.",
      "Morocco coach begins quest for qualifying for the record-equaling Africa Cup of Nations when quest resumes."
    ]
  },
  {
    "instance_id": "pyrxsum-58",
    "summary": "Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.",
    "summary_trees": [
      "# ::snt Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.\n(t / top-01\n      :ARG1 (l / list\n            :name (n / name\n                  :op1 \"Sound\"\n                  :op2 \"Of\"\n                  :op3 \"2017\")\n            :poss (p / publication\n                  :name (n2 / name\n                        :op1 \"BBC\"))\n            :ARG0-of (a / aim-01\n                  :ARG1 (p2 / predict-01\n                        :ARG1 (m / music\n                              :ARG1-of (n3 / new-01)\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (e / excite-01\n                                          :ARG0 m)\n                                    :ARG3 (m2 / most))\n                              :time (y / year\n                                    :mod (a2 / ahead))))))\n      :ARG2 (p3 / person\n            :name (n4 / name\n                  :op1 \"Ray\"\n                  :op2 \"BlK\")\n            :ARG0-of (s / sing-01\n                  :ARG1 (s2 / soul))))"
    ],
    "tree": [
      "(p2 / predict-01\n    :ARG1 (m / music\n             :ARG1 (n3 / new-01)))",
      "(t / top-01\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :ARG1 (n3 / new-01))))",
      "(p2 / predict-01\n    :ARG1 (m / music\n             :time (y / year\n                      :mod (a2 / ahead))))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\"))))",
      "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :time (y / year\n                               :mod (a2 / ahead)))))",
      "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :ARG1 (h / have-degree-91\n                               :ARG2 (e / excite-01\n                                        :ARG0 m)))))",
      "(h / have-degree-91\n   :ARG2 (e / excite-01\n            :ARG0 (m :time (y / year\n                              :mod (a2 / ahead))))\n   :ARG3 (m2 / most))",
      "(h / have-degree-91\n   :ARG2 (e / excite-01\n            :ARG0 (m :time (y / year\n                              :mod (a2 / ahead))))\n   :ARG3 (m2 / most))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01))))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m2 / most)))))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (e / excite-01\n                                                          :ARG0 m)))))))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))"
    ],
    "smus": [
      "predict new music",
      "Topped by Ray Blak.",
      "Top of soul singing",
      "aims to predict the new music",
      "Predict the music for the year ahead.",
      "Top of the list for Sound of 2017",
      "Top of the BBC list",
      "aims to predict the music for the year ahead.",
      "The aim is to predict what music will be exciting.",
      "The most exciting thing for the year ahead.",
      "Top list of aims to predict new music",
      "Top of list that aims to predict music for year ahead",
      "Top of the list that aims to predict what music is exciting",
      "Ray Blak tops the Sound of 2017 list.",
      "The soul singer was top of the list for 2017.",
      "Ray Blak tops the BBC list.",
      "The BBC's list topped soul-singers.",
      "Ray Blak tops list of aims to predict new music",
      "The list aimed at predicting new music has topped the soul-singing list.",
      "Ray Blak tops list that aims to predict music for the year ahead",
      "The list aimed at predicting the music of the year ahead has topped soul singers.",
      "Ray Blak tops list that aims to predict music that has the most to say.",
      "The list aimed at predicting the most music has topped the soul singers.",
      "Ray Blak tops list that aims to predict what music is exciting.",
      "The list aimed at predicting what music has been exciting has topped the soul-singing list."
    ]
  },
  {
    "instance_id": "pyrxsum-59",
    "summary": "Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.",
    "summary_trees": [
      "# ::snt Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / protest-01)\n            :quant (m / multiple\n                  :op1 100)\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Kabul\")))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 \"Iran\"))\n      :ARG2 (s / stop-03\n            :ARG0 c2\n            :ARG1 (t / tanker\n                  :mod (f / fuel))\n            :ARG2 (c3 / cross-02\n                  :ARG0 t\n                  :ARG1 (b / border-01\n                        :ARG2 (c4 / country\n                              :name (n3 / name\n                                    :op1 \"Afghanistan\"))))))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(s / stop-03\n   :ARG2 (c3 / cross-02\n             :ARG0 (t / tanker)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01)))",
      "(s / stop-03\n   :ARG1 (t / tanker\n            :mod (f / fuel)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100)))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(b / border-01\n   :ARG2 (c4 / country\n             :name (n3 / name\n                       :op1 \"Afghanistan\")))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(s / stop-03\n   :ARG1 (t / tanker\n            :mod (f / fuel))\n   :ARG2 (c3 / cross-02\n             :ARG0 t))",
      "(s / stop-03\n   :ARG1 (t / tanker\n            :mod (f / fuel))\n   :ARG2 (c3 / cross-02\n             :ARG0 t))",
      "(c3 / cross-02\n    :ARG1 (b / border-01\n             :ARG2 (c4 / country\n                       :name (n3 / name\n                                 :op1 \"Afghanistan\"))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(s / stop-03\n   :ARG2 (c3 / cross-02\n             :ARG1 (b / border-01\n                      :ARG2 (c4 / country\n                                :name (n3 / name\n                                          :op1 \"Afghanistan\")))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))"
    ],
    "smus": [
      "Iran is accused of stopping.",
      "Stopping the tankers from crossing.",
      "The protesters have accused.",
      "Stopping fuel tankers.",
      "Hundreds have been accused.",
      "Iran is accused.",
      "accused of stopping tanks from crossing.",
      "border with Afghanistan",
      "accused of stopping fuel tankers.",
      "The people of Kabul have accused.",
      "The protesters have accused Iran of stopping.",
      "Crossing the border with Afghanistan.",
      "Hundreds have accused Iran of stopping.",
      "The protesters have accused Iran.",
      "Stopping cross-border crossing Afghanistan.",
      "Hundreds have accused Iran.",
      "Kabul people have accused Iran of stopping.",
      "Iran is accused of stopping tanks from crossing the border.",
      "Iran is accused of stopping fuel tankers.",
      "accused of stopping cross-border crossing with Afghanistan.",
      "Kabul people have accused Iran.",
      "Kabul people have accused the tanks of stopping at the crossing.",
      "Kabul people have accused the fuel tankers of stopping.",
      "Hundreds of people have accused Iran of stopping.",
      "Fuel tankers are stopping crossing the border with Afghanistan.",
      "Protesters have accused Iran of stopping tanks from crossing.",
      "The protesters have accused of stopping the crossing of the border with Afghanistan.",
      "Protestors have accused Iran of stopping fuel tanks.",
      "Hundreds of people have accused Iran of stopping tanks from crossing.",
      "Kabul people have accused Iran of stopping them.",
      "Hundreds have accused the government of stopping cross-border crossing with Afghanistan.",
      "Iran is accused of stopping the crossing of the border with Afghanistan.",
      "Hundreds of people have accused Iran of stopping fuel tankers.",
      "Kabul people have accused Iran of stopping tanks from crossing.",
      "Kabul people have accused of stopping crossing the border with Afghanistan.",
      "Kabul people have accused Iran of stopping fuel tankers.",
      "Protesters have accused Iran of stopping the crossing of the border with Afghanistan.",
      "Hundreds of people have accused Iran of stopping crossing the border with Afghanistan.",
      "Kabul people have accused Iran of stopping the crossing of the border with Afghanistan."
    ]
  },
  {
    "instance_id": "pyrxsum-60",
    "summary": "Some police forces are putting the public at risk by rationing forces response as forces struggle with cutbacks, the police standards watchdog has warned.",
    "summary_trees": [
      "# ::snt Some police forces are putting the public at risk by rationing forces response as forces struggle with cutbacks, the police standards watchdog has warned.\n(w / warn-01\n      :ARG0 (w2 / watchdog\n            :mod (s / standard\n                  :mod (p / police)))\n      :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                  :quant (s2 / some)\n                  :mod p)\n            :ARG1 (p2 / public)\n            :manner (r / ration-01\n                  :ARG0 f\n                  :ARG1 (t / thing\n                        :ARG2-of (r2 / respond-01\n                              :ARG0 f))\n                  :time (s3 / struggle-02\n                        :ARG0 f\n                        :ARG1 (c / cut-back-05)))))"
    ],
    "tree": [
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(e / endanger-01\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG0 (f / force)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :ARG1 (p2 / public))",
      "(r / ration-01\n   :ARG1 (t / thing\n            :ARG2 (r2 / respond-01\n                      :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :mod (p / police))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :manner (r / ration-01\n              :ARG0 f))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :ARG0 f))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG1 (c / cut-back-05)))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG0 f)))",
      "(e / endanger-01\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG1 (c / cut-back-05))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG0 f))",
      "(r / ration-01\n   :ARG1 (t / thing\n            :ARG2 (r2 / respond-01\n                      :ARG0 (f / force)))\n   :time (s3 / struggle-02\n             :ARG0 f))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG1 (t / thing\n                                :ARG2 (r2 / respond-01\n                                          :ARG0 (f / force))))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG0 f)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG1 (c / cut-back-05))))",
      "(e / endanger-01\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG1 (t / thing\n                       :ARG2 (r2 / respond-01\n                                 :ARG0 (f / force)))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG0 f))",
      "(r / ration-01\n   :ARG1 (t / thing\n            :ARG2 (r2 / respond-01\n                      :ARG0 (f / force)))\n   :time (s3 / struggle-02\n             :ARG1 (c / cut-back-05)))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG1 (p2 / public)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG1 (c / cut-back-05))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :manner (r / ration-01\n              :ARG1 (t / thing\n                       :ARG2 (r2 / respond-01\n                                 :ARG0 f))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :mod p)))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :mod p)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :ARG1 (t / thing\n                       :ARG2 (r2 / respond-01\n                                 :ARG0 f))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG0 f)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG1 (c / cut-back-05))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))"
    ],
    "smus": [
      "Warning of dangers from forces rationing",
      "Rationing by forces puts the public in danger.",
      "Rationing of forces response",
      "A watchdog with police standards was warned.",
      "Some forces have been warned to be in danger.",
      "Some forces are putting the public in danger.",
      "Rationing as forces struggle is warned of danger.",
      "Rationing while forces struggle is a danger to the public.",
      "Rationing as cutbacks struggle is dangerous, warned.",
      "Rationing as cutbacks struggle is a dangerous thing for the public.",
      "Police forces are rationing and threatening the public.",
      "Rationing of forces response as they struggle",
      "Warnings of danger by rationing the response of forces.",
      "Some forces are in danger by rationing while they struggle.",
      "Police forces are in danger of rationing as they struggle to cut back.",
      "Rationing the forces response would put the public at risk.",
      "Some forces are rationing and putting the public in danger.",
      "Rationing of forces response as they struggle to cut back",
      "A police standards watchdog has warned of dangers to the public.",
      "Some forces are in danger of rationing as they struggle to cut back.",
      "Police forces endangers the public by rationing while they struggle.",
      "A police standards watchdog has warned of dangers from forces rationing.",
      "A police standards watchdog has warned of the dangers of police forces.",
      "Some forces endanger the public by rationing while they struggle.",
      "Police forces are putting the public in danger by rationing as they struggle to cut back.",
      "A police standards watchdog has warned that some forces are in danger.",
      "Some forces are putting the public in danger by rationing as cutsbacks struggle.",
      "Police forces are putting the public in danger by rationing their response.",
      "A police standards watchdog has warned of dangers of rationing as forces struggle.",
      "Some forces are putting the public at risk by rationing their response.",
      "A police standards watchdog has warned of dangers of rationing as cutsbacks struggle.",
      "A police standards watchdog has warned that rationing of the forces response is dangerous."
    ]
  },
  {
    "instance_id": "pyrxsum-61",
    "summary": "Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.",
    "summary_trees": [
      "# ::snt Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chris\"\n                  :op2 \"Read\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Nottinghamshire\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jake\"\n                        :op2 \"Ball\")\n                  :ARG0-of (b / bowl-01\n                        :manner (p3 / pace-01)))\n            :ARG1-of (l / lively-00)\n            :ARG1-of (f / follow-01\n                  :ARG2 (p4 / play-01\n                        :ARG0 p2\n                        :ARG3 (t2 / team\n                              :name (n4 / name\n                                    :op1 \"England\"\n                                    :op2 \"Lions\"))\n                        :time (d / date-entity\n                              :season (w / winter))))))"
    ],
    "tree": [
      "(f / follow-01\n   :ARG2 (p4 / play-01\n             :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Nottinghamshire\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\")))",
      "(r / return-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jake\"\n                       :op2 \"Ball\")))",
      "(r / return-01\n   :ARG1 (p2 / person\n             :ARG0 (b / bowl-01\n                      :manner (p3 / pace-01))))",
      "(r / return-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jake\"\n                       :op2 \"Ball\")))",
      "(r / return-01\n   :ARG1 (p2 / person\n             :ARG0 (b / bowl-01\n                      :manner (p3 / pace-01))))",
      "(f / follow-01\n   :ARG2 (p4 / play-01\n             :time (d / date-entity\n                      :season (w / winter))))",
      "(p4 / play-01\n    :ARG3 (t2 / team\n              :name (n4 / name\n                        :op1 \"England\"\n                        :op2 \"Lions\")))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Nottinghamshire\"))\n   :ARG2 (c / captain))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Nottinghamshire\"))\n   :ARG2 (c / captain))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(p4 / play-01\n    :ARG3 (t2 / team\n              :name (n4 / name\n                        :op1 \"England\"\n                        :op2 \"Lions\"))\n    :time (d / date-entity\n             :season (w / winter)))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG3 (t2 / team\n                                         :name (n4 / name\n                                                   :op1 \"England\"\n                                                   :op2 \"Lions\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\"))))"
    ],
    "smus": [
      "Following the Jake Ball play.",
      "\"A lively return,\" says",
      "Nottinghamshire",
      "Chris Read says --",
      "Jake Ball's return:",
      "The pace bowler in return.",
      "Following winter play.",
      "Playing for the England Lions",
      "Returning to following the Jake Ball play, says the man.",
      "Nottinghamshire captain",
      "Jake Ball returns.",
      "\"The pace bowler is in return,\" says the report.",
      "Following the play of the England Lions.",
      "\"A lively return,\" says Chris Read.",
      "England Lions play in winter.",
      "Chris Read says the return is following the play of Jake Ball.",
      "Nottinghamshire says it is a lively return.",
      "Chris Read says Jake Ball is in return.",
      "Chris Read says the pace bowling is in return.",
      "Chris Read says the return will be following winter play.",
      "The captain says the return will be following winter play.",
      "Nottinghamshire says pace bowling is in return.",
      "Chris Read says the return will be following the England Lions' play.",
      "Nottinghamshire says the return will be following winter play.",
      "Nottinghamshire says the return will be following the England Lions' play."
    ]
  },
  {
    "instance_id": "pyrxsum-62",
    "summary": "A serial robber who threatened an 18-year-old shop worker with a knife was caught after robber streak of grey hair was recognised in CCTV footage.",
    "summary_trees": [
      "# ::snt A serial robber who threatened an 18-year-old shop worker with a knife was caught after robber streak of grey hair was recognised in CCTV footage.\n(c / catch-01\n      :ARG1 (p / person\n            :ARG0-of (r / rob-01\n                  :mod (s / serial))\n            :ARG0-of (t / threaten-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (w / work-01\n                              :ARG2 (s2 / shop))\n                        :age (t2 / temporal-quantity\n                              :quant 18\n                              :unit (y / year)))\n                  :ARG2 (k / knife))\n            :ARG0-of (s3 / streak-01\n                  :ARG1 (h / hair\n                        :ARG1-of (g / gray-02))))\n      :time (a / after\n            :op1 (r2 / recognize-02\n                  :ARG1 p\n                  :location (f / footage\n                        :mod (t3 / television\n                              :mod (c2 / circuit\n                                    :ARG1-of (c3 / close-01)))))))"
    ],
    "tree": [
      "(s3 / streak-01\n    :ARG1 (h / hair\n             :ARG1 (g / gray-02)))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18))\n   :ARG2 (k / knife))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (s3 / streak-01\n                      :ARG1 (h / hair\n                               :ARG1 (g / gray-02)))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop)))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year)))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop)))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year)))\n   :ARG2 (k / knife))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18)))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :unit (y / year))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (s3 / streak-01\n                      :ARG1 (h / hair\n                               :ARG1 (g / gray-02))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :unit (y / year)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))"
    ],
    "smus": [
      "Gray hair streaks.",
      "The 18-year-old was threatened.",
      "Serial robbers are caught.",
      "The person who was caught was threatened with a knife.",
      "The shop worker threatened.",
      "The year old was threatened.",
      "The 18-year-old threatened with a knife.",
      "People caught with a streak of gray hair.",
      "The shop worker threatened with a knife.",
      "The year old threatened with a knife.",
      "The people who were caught when the threat was made against the 18-year-old.",
      "The person who threatened the shop worker was caught.",
      "The person who threatened a year old was caught.",
      "Serial robbers are caught after they are recognized.",
      "The person who was threatened with a knife was caught after being recognized.",
      "People with gray hair streaks were caught after being recognized.",
      "The people who threatened the 18 were caught after they were recognized.",
      "The person who threatened the shop worker was caught after being recognized.",
      "The person who threatened a year old was caught after he was recognized.",
      "The knife-threatened people were caught after the CCTV footage was recognized.",
      "The streak of gray hair was caught after it was recognized on CCTV footage.",
      "The people who threatened the 18-year-old were caught after the CCTV footage was recognized.",
      "The person who threatened the shop worker was caught after the CCTV footage was recognized."
    ]
  },
  {
    "instance_id": "pyrxsum-63",
    "summary": "A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.",
    "summary_trees": [
      "# ::snt A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.\n(r / report-01\n      :ARG0 (m / media\n            :ARG1-of (l / local-02))\n      :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :ARG1 (f / fall-01\n                  :ARG1 m2\n                  :ARG3 (f2 / floor\n                        :ord (o / ordinal-entity\n                              :value 15)\n                        :part-of (b / building\n                              :location (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"New\"\n                                          :op2 \"Zealand\")))))))"
    ],
    "tree": [
      "(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG1 (m2 / man)))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(f / fall-01\n   :ARG3 (f2 / floor\n             :ord (o / ordinal-entity\n                     :value 15)))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\"))))",
      "(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :ord (o / ordinal-entity\n                              :value 15))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG1 m2))",
      "(f / fall-01\n   :ARG3 (f2 / floor\n             :part (b / building\n                      :location (c2 / country\n                                    :name (n2 / name\n                                              :op1 \"New\"\n                                              :op2 \"Zealand\")))))",
      "(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :part (b / building\n                               :location (c2 / country\n                                             :name (n2 / name\n                                                       :op1 \"New\"\n                                                       :op2 \"Zealand\"))))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))"
    ],
    "smus": [
      "The man survived the fall.",
      "Reports of a man having survived the fall.",
      "The fall occurred on the 15th floor.",
      "The British man survived.",
      "The fall from the 15th floor has survived.",
      "Local media report that the man survived the fall.",
      "Reports of a British man having survived",
      "Reports of a survival after the fall from the 15th floor.",
      "The British man survived the fall.",
      "The fall from the floor of a building in New Zealand has survived.",
      "Local media reports that a British man has survived.",
      "Local media reports that the fall from the 15th floor has survived.",
      "A report said the fall from the floor of a building in New Zealand had survived.",
      "A British man has survived the fall from the 15th floor.",
      "Local media reports that the fall from the floor of a building in New Zealand has survived.",
      "A British man has survived the fall from the floor of a New Zealand building."
    ]
  },
  {
    "instance_id": "pyrxsum-64",
    "summary": "The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.",
    "summary_trees": [
      "# ::snt The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.\n(r / release-01\n      :ARG0 (m / military\n            :name (n / name\n                  :op1 \"Royal\"\n                  :op2 \"Navy\"))\n      :ARG1 (ii / image\n            :topic (ii2 / improve-01\n                  :ARG1 (j / jetty\n                        :location (f / facility\n                              :name (n2 / name\n                                    :op1 \"Portsmouth\"\n                                    :op2 \"Naval\"\n                                    :op3 \"Base\")))\n                  :ARG1-of (p / plan-01))))"
    ],
    "tree": [
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\")))",
      "(r / release-01\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))",
      "(ii2 / improve-01\n     :ARG1 (j / jetty\n              :location (f / facility\n                           :name (n2 / name\n                                     :op1 \"Portsmouth\"\n                                     :op2 \"Naval\"\n                                     :op3 \"Base\"))))",
      "(ii2 / improve-01\n     :ARG1 (j / jetty\n              :location (f / facility\n                           :name (n2 / name\n                                     :op1 \"Portsmouth\"\n                                     :op2 \"Naval\"\n                                     :op3 \"Base\"))))",
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\"))\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))",
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\"))\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))"
    ],
    "smus": [
      "The Royal Navy has released.",
      "The image was released of planned improvements.",
      "Improvements to the jetty at Portsmouth Naval Base",
      "The Royal Navy has released an image of planned improvements.",
      "Image released of improvements to the jetty at Portsmouth Naval Base.",
      "The Royal Navy has released an image of improvements to the jetty at Portsmouth Naval Base."
    ]
  },
  {
    "instance_id": "pyrxsum-65",
    "summary": "China has said Japan is endangering peace in the region after China passed controversial laws expanding the role of China military abroad.",
    "summary_trees": [
      "# ::snt China has said Japan is endangering peace in the region after China passed controversial laws expanding the role of China military abroad.\n(s / say-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 \"China\"))\n      :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Japan\"))\n            :ARG1 (p / peace\n                  :location (r / region)))\n      :time (a / after\n            :op1 (p2 / pass-01\n                  :ARG0 c\n                  :ARG2 (l / law\n                        :mod (c3 / controversy)\n                        :ARG0-of (e2 / expand-01\n                              :ARG1 (r2 / role\n                                    :poss (m / military\n                                          :poss c\n                                          :location (a2 / abroad))))))))"
    ],
    "tree": [
      "(e / endanger-01\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(p2 / pass-01\n    :ARG2 (l / law\n             :mod (c3 / controversy)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\")))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\")))",
      "(e2 / expand-01\n    :ARG1 (r2 / role\n              :poss (m / military\n                       :poss (c / country :name (n / name :op1 \"China\")))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region))))",
      "(e2 / expand-01\n    :ARG1 (r2 / role\n              :poss (m / military\n                       :location (a2 / abroad))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\"))))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\"))\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\"))\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(p2 / pass-01\n    :ARG2 (l / law\n             :ARG0 (e2 / expand-01\n                       :ARG1 (r2 / role\n                                 :poss (m / military\n                                          :poss (c / country :name (n / name :op1 \"China\")))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c)))",
      "(p2 / pass-01\n    :ARG2 (l / law\n             :ARG0 (e2 / expand-01\n                       :ARG1 (r2 / role\n                                 :poss (m / military\n                                          :location (a2 / abroad))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 (c / country :name (n / name :op1 \"China\")))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\"))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 (c / country :name (n / name :op1 \"China\")))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\"))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c / country :name (n / name :op1 \"China\")))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c / country :name (n / name :op1 \"China\")))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss c)))))))"
    ],
    "smus": [
      "Endangering peace in the region.",
      "The laws passed were controversial.",
      "China has said --",
      "Japan is threatening.",
      "Expanding the role of China's military",
      "Peace in the region is said to be in danger.",
      "Expanding the role of the military abroad",
      "Japan is said to be dangerous.",
      "Japan is endangering peace in the region.",
      "Laws expanding the role of China's military were passed.",
      "China said after it passed.",
      "Laws expanding the role of the military abroad passed.",
      "China has said that the peace in the region is in danger.",
      "Peace in the region was said to be in danger after China passed.",
      "China has said Japan is dangerous.",
      "After China passed, it was said that Japan was dangerous.",
      "China said after controversial laws passed.",
      "Endangering peace in the region was said after controversial laws passed.",
      "After controversial laws passed, Japan was said to be dangerous.",
      "After China passed, it has said that the peace in the region is in danger.",
      "After Japan passed, China had said Japan was dangerous.",
      "China said after laws expanding the role of its military passed.",
      "China said after laws expanding the role of the military abroad were passed.",
      "Endangering peace in the region was said after laws expanding the role of China's military passed.",
      "Japan was said to be \"dangering\" after laws expanding the role of China's military passed.",
      "Endangering peace in the region was said after laws expanding the role of the military abroad passed.",
      "China has said that Japan is dangerous after controversial laws passed.",
      "Japan was said to be \"dangering\" after laws expanding the role of the military abroad passed.",
      "China has said that extending the role of its military is dangerous in the region after laws extending the military's role were passed.",
      "China has said that extending the role of the military abroad is dangerous to peace in the region after laws on expanding the military abroad passed.",
      "China has said that Japan is dangerous after laws expanding the role of the military abroad were passed."
    ]
  },
  {
    "instance_id": "pyrxsum-66",
    "summary": "Celtic restored Celtic 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.",
    "summary_trees": [
      "# ::snt Celtic restored Celtic 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.\n(r / restore-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Celtic\"))\n      :ARG1 (l / lead-01\n            :ARG0 t\n            :ARG2 (p / point\n                  :quant 10)\n            :location (t2 / top\n                  :part-of (t3 / table)))\n      :time (a / after\n            :op1 (o / overcome-01\n                  :ARG0 t\n                  :ARG1 (t4 / team\n                        :name (n2 / name\n                              :op1 \"Inverness\"\n                              :op2 \"Cedonian\"\n                              :op3 \"Thistle\")))))"
    ],
    "tree": [
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\"))))",
      "(l / lead-01\n   :ARG2 (p / point\n            :quant 10))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\")))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(l / lead-01\n   :ARG2 (p / point\n            :quant 10)\n   :location (t2 / top\n                 :part (t3 / table)))",
      "(o / overcome-01\n   :ARG1 (t4 / team\n             :name (n2 / name\n                       :op1 \"Inverness\"\n                       :op2 \"Cedonian\"\n                       :op3 \"Thistle\")))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\")))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 (t / team :name (n / name :op1 \"Celtic\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 (t / team :name (n / name :op1 \"Celtic\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t)\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\")))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))"
    ],
    "smus": [
      "Celtic's leadership was restored.",
      "lead by 10 points",
      "Celtic restored.",
      "The lead was restored to 10 points.",
      "Restored leadership at the table top.",
      "10 point lead at the top of the table",
      "overcoming Inverness - Celtic Thistle",
      "Celtic restored leadership.",
      "After overcoming, Celtic restored leadership.",
      "Celtic restored a 10 point lead.",
      "After overcoming, Celtic restored.",
      "After overcoming Celtic, the lead was restored to 10 points.",
      "Celtic restored leadership at the top of the table.",
      "After overcoming Celtic, the table top leader was restored.",
      "After overcoming, Celtic restored their leadership.",
      "After defeating Inverness Celtic Thistle Celtic's leadership was restored.",
      "After overcoming, Celtic restored the 10 point lead.",
      "Celtic restored after defeating Inverness Celtic Thistle",
      "After defeating Inverness Celtic thistle, the lead was restored to 10 points.",
      "After overcoming, Celtic restored the lead at the top of the table.",
      "After defeating Inverness Celtic Thistle, the table toppers restored their lead.",
      "After defeating Inverness Celtic Thistle, Celtic restored their leadership.",
      "After defeating Inverness Celtic Thistle, Celtic restored a 10 point lead.",
      "After defeating Inverness Celtic Thistle Celtic restored the top-table lead."
    ]
  },
  {
    "instance_id": "pyrxsum-67",
    "summary": "England captain Sean O'Loughlin says O'Loughlin would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.",
    "summary_trees": [
      "# ::snt England captain Sean O'Loughlin says O'Loughlin would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sean\"\n                  :op2 \"O'Loughlin\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"England\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (c2 / contrast-01\n            :ARG1 (p2 / prefer-01\n                  :ARG0 p\n                  :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                              :mod (c4 / country)\n                              :ARG2 (t2 / team\n                                    :mod (n3 / nation))))\n                  :ARG2 (l / look-forward-03\n                        :ARG0 p\n                        :ARG1 (w / work-01\n                              :ARG3 (p3 / person\n                                    :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")\n                                    :mod c4\n                                    :name (n5 / name\n                                          :op1 \"Australia\")))))))"
    ],
    "tree": [
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\"))))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"England\")))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG2 (l / look-forward-03\n                       :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\"))))))",
      "(w / work-01\n   :ARG3 (p3 / person\n             :name (n5 / name\n                       :op1 \"Australia\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\")))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country))))",
      "(w / work-01\n   :ARG3 (p3 / person\n             :name (n4 / name\n                       :op1 \"Wayne\"\n                       :op2 \"Bennett\")))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"England\"))\n   :ARG2 (c / captain))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :mod (c4 / country)))))",
      "(l / look-forward-03\n   :ARG1 (w / work-01\n            :ARG3 (p3 / person\n                      :name (n5 / name\n                                :op1 \"Australia\"))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                                 :mod (c4 / country)))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :ARG2 (t2 / team\n                                 :mod (n3 / nation)))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG2 (l / look-forward-03\n                       :ARG1 (w / work-01\n                                :ARG3 (p3 / person\n                                          :mod (c4 / country))))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Australia\")))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                                 :ARG2 (t2 / team\n                                           :mod (n3 / nation))))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG1 (w / work-01\n                                         :ARG3 (p3 / person\n                                                   :mod (c4 / country)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :ARG2 (t2 / team\n                                 :mod (n3 / nation))))\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG2 (l / look-forward-03\n                       :ARG1 (w / work-01\n                                :ARG3 (p3 / person\n                                          :name (n4 / name\n                                                    :op1 \"Wayne\"\n                                                    :op2 \"Bennett\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG0 p))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG1 (w / work-01\n                                         :ARG3 (p3 / person\n                                                   :name (n5 / name\n                                                             :op1 \"Australia\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG0 p))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :mod c4))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :mod c4))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Australia\")))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :ARG2 (t2 / team\n                                 :mod (n3 / nation))))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :mod (c4 / country)))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Australia\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))"
    ],
    "smus": [
      "But Sean O'Loughlin preferred...",
      "Rather, Sean O'Loughlin is looking forward to.",
      "But Sean O'Loughlin preferred, says.",
      "England",
      "But it would be preferred that Sean O'Loughlin be looking forward.",
      "Working with Australians.",
      "Sean O'Loughlin says --",
      "The country man is preferred in charge.",
      "Working with Wayne Bennett.",
      "England captain",
      "Looking forward to working with Australians.",
      "But it would be preferable for the country man to be in charge.",
      "The national team's man in charge would be preferred.",
      "Looking forward to working with Wayne Bennett.",
      "The country man's charge would be preferred over Sean O'Loughlin looking forward.",
      "preferring looking forward to working with Australians.",
      "But it would be preferred that the country man be in charge, says the man.",
      "But it would be preferred that the national team man was in charge.",
      "Preferably looking forward to working with Wayne Bennett.",
      "But he's preferred,\" says Sean O'Loughlin.",
      "The captain says he would have preferred, but...",
      "But preferable to looking forward to working with Australians.",
      "The national team's man in charge would be preferred over Sean O'Loughlin looking forward.",
      "But it would be preferred that the man in charge of the national team be the one, says the man.",
      "But looking forward to working with Wayne Bennett.",
      "But looking forward to working with Australians, says says.",
      "But England's says he would have preferred.",
      "But looking forward to working with Wayne Bennett, says says he prefers.",
      "The national team men would be in charge, rather than looking forward to working with the countrypeople.",
      "But it would be preferred that the countrymen take charge, says Sean O'Loughlin.",
      "The captain says the countrymen would be preferred in charge.",
      "The country man was preferred in charge, looking forward to working with Wayne Bennett.",
      "The national team men would be in charge, rather than looking forward to working with the Australians.",
      "Sean O'Loughlin says the national team's man in charge would be preferred.",
      "The captain says it would be preferable to have a national team man in charge.",
      "The national team's man in charge would be preferred over looking forward to working with Wayne Bennett.",
      "But it would be preferred for the countrymen to take charge, says an Englishman.",
      "Sean O'Loughlin says he would rather be looking forward to working with Wayne Bennett.",
      "But it would be preferable to have a national team man in charge, says an Englishman."
    ]
  },
  {
    "instance_id": "pyrxsum-68",
    "summary": "Promotion-chasing Stevenage were held to a by Cambridge in League Two.",
    "summary_trees": [
      "# ::snt Promotion-chasing Stevenage were held to a by Cambridge in League Two.\n(h / hold-04\n      :ARG0 (u / university\n            :name (n / name\n                  :op1 \"Cambridge\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Stevenage\")\n            :ARG0-of (c / chase-01\n                  :ARG1 (p / promote-01\n                        :ARG1 t)))\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"League\"\n                  :op2 \"Two\")))"
    ],
    "tree": [
      "(c / chase-01\n   :ARG1 (p / promote-01\n            :ARG1 (t / team :name (n2 / name :op1 \"Stevenage\")))))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))"
    ],
    "smus": [
      "chasing Stevenage promotion",
      "Cambridge University has held.",
      "Stevenage are held.",
      "The team chasing their promotion is held.",
      "Cambridge has held Stevenage.",
      "Cambridge is held in the League Two.",
      "Stevenage are held in the League Two.",
      "Cambridge has held a team chasing promotion.",
      "The team chasing promotion is held in the League Two.",
      "Cambridge has held Stevenage in the League Two.",
      "Cambridge has held the promotion chasing team in the League Two."
    ]
  },
  {
    "instance_id": "pyrxsum-69",
    "summary": "Yet again, we are looking at shocking pictures of a plane crash.",
    "summary_trees": [
      "# ::snt Yet again, we are looking at shocking pictures of a plane crash.\n(l / look-01\n      :ARG0 (w / we)\n      :ARG1 (p / picture\n            :topic (c / crash-01\n                  :ARG1 (p2 / plane))\n            :ARG0-of (s / shock-01))\n      :mod (a / again\n            :mod (y / yet)))"
    ],
    "tree": [
      "(l / look-01\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01))\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane)))\n   :mod (a / again\n           :mod (y / yet)))"
    ],
    "smus": [
      "Looking at the shocking pictures.",
      "We're looking at shocking pictures.",
      "We are looking yet again.",
      "Looking at the pictures of the plane crash.",
      "We are looking at the pictures of the plane crash.",
      "Looking at the shocking pictures yet again.",
      "Looking at the pictures of the plane crash yet again.",
      "Yet again, we are looking at shocking pictures.",
      "Yet again, we are looking at the pictures of the plane crash."
    ]
  },
  {
    "instance_id": "pyrxsum-70",
    "summary": "Prime Minister David Cameron will later attempt to halt the civil war in Cameron party caused by Iain Duncan Smith's resignation from the cabinet.",
    "summary_trees": [
      "# ::snt Prime Minister David Cameron will later attempt to halt the civil war in Cameron party caused by Iain Duncan Smith's resignation from the cabinet.\n(a / attempt-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Cameron\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p2 / prime))))\n      :ARG1 (h2 / halt-01\n            :ARG0 p\n            :ARG1 (w / war-01\n                  :ARG0 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Cameron\"))\n                  :mod (c / civil)\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (r / resign-01\n                              :ARG0 (p4 / person\n                                    :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\"))\n                              :ARG1 (c3 / cabinet)))))\n      :time (a2 / after))"
    ],
    "tree": [
      "(h / have-org-role-91\n   :ARG2 (m / minister\n            :mod (p2 / prime)))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :mod (c / civil)))",
      "(c2 / cause-01\n    :ARG0 (r / resign-01\n             :ARG1 (c3 / cabinet)))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\"))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\")))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG1 (c3 / cabinet))))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG0 (p3 / political-party\n                       :name (n2 / name\n                                 :op1 \"Cameron\"))))",
      "(w / war-01\n   :ARG0 (p3 / political-party\n             :name (n2 / name\n                       :op1 \"Cameron\"))\n   :mod (c / civil))",
      "(r / resign-01\n   :ARG0 (p4 / person\n             :name (n3 / name\n                       :op1 \"Iain\"\n                       :op2 \"Duncan\"\n                       :op3 \"Smith\")))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime)))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG1 (c3 / cabinet)))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(c2 / cause-01\n    :ARG0 (r / resign-01\n             :ARG0 (p4 / person\n                       :name (n3 / name\n                                 :op1 \"Iain\"\n                                 :op2 \"Duncan\"\n                                 :op3 \"Smith\"))))",
      "(r / resign-01\n   :ARG0 (p4 / person\n             :name (n3 / name\n                       :op1 \"Iain\"\n                       :op2 \"Duncan\"\n                       :op3 \"Smith\"))\n   :ARG1 (c3 / cabinet))",
      "(r / resign-01\n   :ARG0 (p4 / person\n             :name (n3 / name\n                       :op1 \"Iain\"\n                       :op2 \"Duncan\"\n                       :op3 \"Smith\"))\n   :ARG1 (c3 / cabinet))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p)\n   :time (a2 / after))",
      "(w / war-01\n   :ARG0 (p3 / political-party\n             :name (n2 / name\n                       :op1 \"Cameron\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG1 (c3 / cabinet))))",
      "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG0 p)\n   :time (a2 / after))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG0 (p4 / person\n                                          :name (n3 / name\n                                                    :op1 \"Iain\"\n                                                    :op2 \"Duncan\"\n                                                    :op3 \"Smith\"))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(w / war-01\n   :ARG0 (p3 / political-party\n             :name (n2 / name\n                       :op1 \"Cameron\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))",
      "(w / war-01\n   :ARG0 (p3 / political-party\n             :name (n2 / name\n                       :op1 \"Cameron\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\"))))))\n   :time (a2 / after))"
    ],
    "smus": [
      "Prime Minister",
      "halt the civil war",
      "caused by a resignation from the cabinet.",
      "Later, David Cameron will attempt to halt.",
      "David Cameron will attempt.",
      "attempt to halt civil war",
      "The war was caused by the resignation of the cabinet.",
      "halt the Cameron war",
      "Cameron's civil war.",
      "Ian Duncan Smith's resignation",
      "The Prime Minister will attempt.",
      "David Cameron will attempt later.",
      "Later, attempt to halt civil war.",
      "halt the war caused by the resignation of the cabinet.",
      "David Cameron will attempt to halt.",
      "attempt to halt the Cameron war.",
      "Caused by the resignation of Iain Duncan Smith.",
      "Ian Duncan Smith's resignation from the cabinet.",
      "The Prime Minister will later attempt.",
      "attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will attempt to halt.",
      "Later, attempt to halt the Cameron war.",
      "David Cameron will later attempt to halt.",
      "The war was caused by the resignation of Iain Duncan Smith.",
      "David Cameron will attempt to halt the civil war.",
      "Later, attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will later attempt to halt.",
      "The Prime Minister will attempt to halt the civil war.",
      "David Cameron would later attempt to halt the civil war.",
      "David Cameron will attempt to halt the Cameron war.",
      "To attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "David Cameron will attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will later attempt to halt the civil war.",
      "Cameron was at war with Iain Duncan Smith's resignation.",
      "The Prime Minister will attempt to halt the Cameron war.",
      "Later, attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "David Cameron will later attempt to halt the Cameron war.",
      "The Prime Minister will attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will later attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will later attempt to halt the Cameron war.",
      "The Prime Minister will later attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "The Prime Minister will attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "David Cameron would later attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "The Prime Minister will later attempt to halt the war caused by Iain Duncan Smith's resignation."
    ]
  },
  {
    "instance_id": "pyrxsum-71",
    "summary": "The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.",
    "summary_trees": [
      "# ::snt The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.\n(s / say-01\n      :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                  :name (n / name\n                        :op1 \"US\"\n                        :op2 \"Census\")))\n      :ARG1 (c / change-01\n            :polarity -\n            :ARG1 (p / percentage\n                  :quant-of (p2 / person\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"America\"))\n                        :ARG0-of (l / live-01\n                              :manner (p3 / poor))))\n            :ARG2 (h / high-02\n                  :ARG1 p\n                  :mod (r2 / record)\n                  :time (d / date-entity\n                        :year 2010))\n            :mod (s2 / statistical)\n            :concession (e / even-as\n                  :op1 (f / fall-01\n                        :ARG1 (ii / income\n                              :mod (h2 / household))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (c / change-01\n            :polarity -))",
      "(f / fall-01\n   :ARG1 (ii / income\n             :mod (h2 / household)))",
      "(s / say-01\n   :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"US\"\n                              :op2 \"Census\"))))",
      "(s / say-01\n   :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"US\"\n                              :op2 \"Census\")))\n   :ARG1 (c / change-01\n            :polarity -))"
    ],
    "smus": [
      "Says \"no change.\"",
      "household income fell.",
      "According to the US Census report --",
      "The US Census report says nothing has changed."
    ]
  },
  {
    "instance_id": "pyrxsum-72",
    "summary": "A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.",
    "summary_trees": [
      "# ::snt A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (d / die-01\n            :ARG1 (w / woman\n                  :ARG1-of (ii / injure-01\n                        :ARG0 (a / attack-01\n                              :ARG0 (k / knifeman)\n                              :ARG1 w\n                              :location (t / train\n                                    :mod (c / country\n                                          :name (n / name\n                                                :op1 \"Switzerland\")))))\n                  :age (t2 / temporal-quantity\n                        :quant 34\n                        :unit (y / year)))\n            :location (h / hospital)))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (d / die-01\n            :location (h / hospital)))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :quant 34)))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :unit (y / year))))",
      "(ii / injure-01\n    :ARG0 (a / attack-01\n             :ARG1 (w :age (t2 / temporal-quantity\n                               :quant 34))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG1 w))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG0 (k / knifeman)))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :unit (y / year)))\n   :location (h / hospital))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :age (t2 / temporal-quantity\n                              :quant 34))))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :ARG1 (ii / injure-01\n                               :ARG0 (a / attack-01\n                                        :ARG1 w)))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG1 w)))\n   :location (h / hospital))",
      "(a / attack-01\n   :ARG0 (k / knifeman)\n   :location (t / train\n                :mod (c / country\n                        :name (n / name\n                                 :op1 \"Switzerland\"))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :age (t2 / temporal-quantity\n                              :unit (y / year)))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :ARG1 (ii / injure-01\n                               :ARG0 (a / attack-01\n                                        :ARG1 w)))))"
    ],
    "smus": [
      "Died in hospital, say.",
      "The 34-year-old woman died.",
      "The 34-year-old was injured in the attack.",
      "The 34-year-old woman has died, the say.",
      "The 34-year-old woman died in hospital.",
      "The year old woman died in hospital.",
      "Police say the 34-year-old woman died.",
      "The woman, who was injured in the attack, has died, the statement said.",
      "The woman who was injured in the attack died in hospital.",
      "A knifeman attacked a Swiss train.",
      "A woman has died in the knifeman attack, the report said.",
      "A woman who was injured in the knifeman attack died in hospital.",
      "A woman who was injured in the attack on a Swiss train died in hospital."
    ]
  },
  {
    "instance_id": "pyrxsum-73",
    "summary": "Boeing has shown off Boeing \"space bins\" that can hold 50% more luggage than existing designs.",
    "summary_trees": [
      "# ::snt Boeing has shown off Boeing \"space bins\" that can hold 50% more luggage than existing designs.\n(s / show-off-03\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Boeing\"))\n      :ARG1 (b / bin\n            :mod (s2 / space)\n            :poss c\n            :ARG0-of (h / hold-01\n                  :ARG1 (l / luggage\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (m / more\n                                    :quant (p / percentage-entity\n                                          :value 50))\n                              :ARG4 (l2 / luggage\n                                    :ARG1-of (d / design-01\n                                          :ARG1-of (e / exist-01)))))\n                  :ARG1-of (p2 / possible-01))))"
    ],
    "tree": [
      "(s / show-off-03\n   :ARG1 (b / bin\n            :poss (c / company :name (n / name :op1 \"Boeing\"))))",
      "(s / show-off-03\n   :ARG1 (b / bin\n            :mod (s2 / space)))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\")))",
      "(h2 / have-quant-91\n    :ARG3 (m / more\n             :quant (p / percentage-entity\n                       :value 50)))",
      "(s / show-off-03\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (p2 / possible-01))))",
      "(h2 / have-quant-91\n    :ARG4 (l2 / luggage\n              :ARG1 (d / design-01\n                       :ARG1 (e / exist-01))))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :poss c))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :poss c))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :mod (s2 / space)))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG3 (m / more\n                               :quant (p / percentage-entity\n                                         :value 50)))))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG3 (m / more\n                               :quant (p / percentage-entity\n                                         :value 50)))))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG4 (l2 / luggage\n                                :ARG1 (d / design-01\n                                         :ARG1 (e / exist-01))))))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (p2 / possible-01))))"
    ],
    "smus": [
      "Boeing bins were shown off.",
      "Space bins are shown off.",
      "Boeing has shown off.",
      "50% more.",
      "Bins to hold a possible were shown off.",
      "There is a quantity of luggage with existing designs.",
      "Boeing has shown off its bins.",
      "Boeing has shown off space bins.",
      "Hold 50 percent more luggage.",
      "Boeing has shown off bins to hold the possibility.",
      "50% more than luggage with existing designs.",
      "The bins were shown off to hold 50 percent more luggage.",
      "Boeing has shown off bins to hold 50 percent more luggage."
    ]
  },
  {
    "instance_id": "pyrxsum-74",
    "summary": "Australia is a step closer to exporting live cattle to China, opening a new market for Australia farmers.",
    "summary_trees": [
      "# ::snt Australia is a step closer to exporting live cattle to China, opening a new market for Australia farmers.\n(c / close-06\n      :ARG1 (c2 / country\n            :name (n / name\n                  :op1 \"Australia\"))\n      :ARG2 (e / export-01\n            :ARG0 c2\n            :ARG1 (c3 / cattle\n                  :mod (l / live))\n            :ARG2 (c4 / country\n                  :name (n2 / name\n                        :op1 \"China\")))\n      :ARG1-of (h / have-degree-91\n            :ARG2 (c5 / close-10)\n            :ARG3 (m / more))\n      :ARG0-of (o / open-01\n            :ARG1 (m2 / market\n                  :ARG1-of (n3 / new-01))\n            :ARG2 (p / person\n                  :ARG0-of (f / farm-01)\n                  :mod c2)))"
    ],
    "tree": [
      "(o / open-01\n   :ARG2 (p / person\n            :mod (c2 / country :name (n / name :op1 \"Australia\"))))",
      "(c / close-06\n   :ARG1 (h / have-degree-91\n            :ARG2 (c5 / close-10)))",
      "(c / close-06\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / more)))",
      "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live)))",
      "(h / have-degree-91\n   :ARG2 (c5 / close-10)\n   :ARG3 (m / more))",
      "(h / have-degree-91\n   :ARG2 (c5 / close-10)\n   :ARG3 (m / more))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01)))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\")))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live))))",
      "(c / close-06\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :ARG0 (f / farm-01))))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\"))))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\")))\n   :ARG1 (h / have-degree-91\n            :ARG2 (c5 / close-10)))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\")))\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / more)))",
      "(c / close-06\n   :ARG1 (h / have-degree-91\n            :ARG2 (c5 / close-10))\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\"))))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01))\n   :ARG2 (p / person\n            :mod (c2 / country :name (n / name :op1 \"Australia\"))))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\")))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :mod c2)))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG0 c2))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\")))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :mod c2)))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01))\n   :ARG2 (p / person\n            :ARG0 (f / farm-01)))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01))\n   :ARG2 (p / person\n            :ARG0 (f / farm-01)))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\")))\n   :ARG0 (o / open-01\n            :ARG1 (m2 / market\n                      :ARG1 (n3 / new-01))))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG0 (c2 / country :name (n / name :op1 \"Australia\")))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :ARG0 (f / farm-01))))",
      "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live))\n   :ARG2 (c4 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :mod c2)))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live)))\n   :ARG1 (h / have-degree-91\n            :ARG2 (c5 / close-10)))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live)))\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / more)))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live))))",
      "(c / close-06\n   :ARG1 (h / have-degree-91\n            :ARG2 (c5 / close-10))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\"))))",
      "(c / close-06\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / more))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\"))))"
    ],
    "smus": [
      "Opening for Australians",
      "Close.",
      "Closer.",
      "Exporting live cattle.",
      "Opening the new market.",
      "Opening for farmers.",
      "Australia is close.",
      "Exporting to China",
      "Exporting to China is close.",
      "Australia's exports are closer.",
      "Close to Australia exporting.",
      "Closer to Australia exporting.",
      "Opening a new market for Australians.",
      "Australia is close to exporting.",
      "Opening a new market for farmers.",
      "Live cattle exporting to China",
      "Australia is closing in on opening to Australians.",
      "Exporting live cattle is closer.",
      "Close to exporting live cattle.",
      "Closer to exporting live cattle.",
      "Australia is close to exporting live cattle.",
      "Exporting to China is close to completion.",
      "Exporting to China is closer.",
      "Close to exporting to China.",
      "Closer to exporting to China.",
      "Australia is close to exporting to China.",
      "Opening the new market, exporting to China is close.",
      "Opening to Chinese, Australia is close to exporting to China.",
      "Opening the new market, Australia is close to exporting to China."
    ]
  },
  {
    "instance_id": "pyrxsum-75",
    "summary": "Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.",
    "summary_trees": [
      "# ::snt Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lennox\"\n                  :op2 \"Lewis\"))\n      :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Anthony\"\n                              :op2 \"Joshua\"))\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Wladimir\"\n                              :op2 \"Klitschko\"))\n                  :ARG3 (t / title\n                        :mod (w / world)))\n            :ARG3 (t2 / time\n                  :ARG1-of (p4 / perfect-02)))\n      :ARG2 (c2 / champion\n            :mod (h / heavyweight)\n            :ARG1-of (d / dispute-01\n                  :polarity -)\n            :domain p2\n            :time (f / former)))"
    ],
    "tree": [
      "(s / say-01\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(c / come-04\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(b / bout-03\n   :ARG3 (t / title\n            :mod (w / world)))",
      "(s / say-01\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\")))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG3 (t / title\n                     :mod (w / world))))",
      "(b / bout-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Joshua\")))",
      "(b / bout-03\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Wladimir\"\n                       :op2 \"Klitschko\")))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world)))))",
      "(s / say-01\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\"))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Wladimir\"\n                                :op2 \"Klitschko\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\")))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\")))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG3 (t / title\n                     :mod (w / world)))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG3 (t / title\n                     :mod (w / world)))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(b / bout-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Joshua\"))\n   :ARG3 (t / title\n            :mod (w / world)))",
      "(b / bout-03\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Wladimir\"\n                       :op2 \"Klitschko\"))\n   :ARG3 (t / title\n            :mod (w / world)))",
      "(b / bout-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Joshua\"))\n   :ARG3 (t / title\n            :mod (w / world)))",
      "(b / bout-03\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Wladimir\"\n                       :op2 \"Klitschko\"))\n   :ARG3 (t / title\n            :mod (w / world)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Wladimir\"\n                                :op2 \"Klitschko\")))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\")))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Wladimir\"\n                                :op2 \"Klitschko\")))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(b / bout-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Joshua\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Wladimir\"\n                       :op2 \"Klitschko\")))",
      "(b / bout-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Joshua\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Wladimir\"\n                       :op2 \"Klitschko\")))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :domain p2))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :domain p2))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))"
    ],
    "smus": [
      "says former champion.",
      "It's time for a perfect time.",
      "A bout for the world title.",
      "Says champion of non-disputing.",
      "\"Lennox Lewis says --",
      "\"It's time for a perfect time,\" says the man.",
      "It's a bout of world title.",
      "Anthony Joshua's bout",
      "A bout with Vladimir Klitschko.",
      "\"It's a bout of world title,\" says the says.",
      "Anthony Joshua is a champion, says",
      "It comes to an Anthony Joshua bout.",
      "It comes to a bout with Vladimir Klitschko.",
      "\"Heavyweight champion,\" says Lewis.",
      "Former champion, Lewis says.",
      "\"It comes to a bout of Anthony Joshua,\" says the man.",
      "\"It comes a bout of Vladimir Klitschko,\" says the man.",
      "\"It's time for a perfect time,\" says the heavyweight champion.",
      "\"It's time for perfection,\" says the former champion.",
      "The bout for the world title comes at the perfect time.",
      "Anthony Joshua is a bout with the world title.",
      "Vladimir Klitschko is in a bout for the world title.",
      "\"It's time for perfection,\" says the champion of non-disputing.",
      "\"It's time for a perfect time,\" says Lenox Lewis.",
      "The bout for the world title comes, says the heavyweight champion.",
      "The bout for the world title comes, says the former champion.",
      "Anthony Joshua's bout comes at the perfect time.",
      "The bout with Vladimir Klitschko comes at the perfect time.",
      "Anthony Joshua vs Vladimir Klitschko:",
      "Anthony Joshua comes as champion, says says",
      "The bout for the world title comes as the undisputed champion says.",
      "\"It comes to a bout of world title,\" says Lenox Lewis.",
      "\"Anthony Joshua is a champion,\" says Lenox Lewis.",
      "Anthony Joshua bout comes, former champion says.",
      "The bout with Vladimir Klitschko comes as the heavyweight champion says.",
      "The bout with Vladimir Klitschko comes as the champion of non-disputing.",
      "\"It comes to the bout of Anthony Joshua,\" says Lewis Lewis.",
      "\"It comes to a bout with Vladimir Klitschko,\" says Lewis Lewis.",
      "Anthony Joshua is the champion, says says the bout for the world title.",
      "\"It's time for a perfect time,\" says Lenox Lewis, the heavyweight champion.",
      "\"It's time for perfection,\" says Lenox Lewis, a former champion.",
      "Anthony Joshua is a bout with Vladimir Klitschko for the world title.",
      "\"It's time for perfection,\" says Lenox Lewis, the champion of non-disputing.",
      "\"Anthony Joshua's bout comes as champion,\" says Lenox Lewis.",
      "\"The bout for the world title comes as the undisputed champion,\" says Lenox Lewis.",
      "\"The bout with Anthony Joshua comes as the heavyweight champion,\" says Lewis Lewis.",
      "\"The bout with Anthony Joshua comes from a former champion,\" says Lenox Lewis.",
      "\"It's time for perfection,\" says Lenox Lewis, \"Anthony Joshua is a champion.",
      "Lenox Lewis says the bout with Vladimir klitschko comes as the heavyweight champion.",
      "Former champion Lenox Lewis says the bout with Vladimir Klitschko comes from a former champion.",
      "\"The Anthony Joshua bout comes as the champion of non-disputing,\" says Lenox Lewis.",
      "\"The bout with Vladimir Klitschko comes as the champion of non-disputing,\" says Lewis Lewis.",
      "\"The bout for the world title comes with the champion, Anthony Joshua,\" says Lewis Lewis.",
      "\"The bout with Vladimir Klitschko comes as the champion, Anthony Joshua,\" says Lewis Lewis."
    ]
  },
  {
    "instance_id": "pyrxsum-76",
    "summary": "People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease People suffering on London transport.",
    "summary_trees": [
      "# ::snt People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease People suffering on London transport.\n(o / offer-01\n      :ARG1 (b / badge\n            :mod (o2 / offer-01\n                  :mode imperative\n                  :polite +\n                  :ARG0 (y / you)\n                  :ARG1 (s / seat)\n                  :ARG3 (p / person\n                        :ARG0-of (h / have-03\n                              :ARG1 (c / condition\n                                    :mod (h2 / health)\n                                    :ARG1-of (h3 / hide-01))))))\n      :ARG3 p\n      :purpose (b2 / bid-01\n            :ARG1 (h4 / help-01\n                  :ARG0 p\n                  :ARG1 (e / ease-02\n                        :ARG0 p\n                        :ARG1 (p2 / person\n                              :ARG0-of (s2 / suffer-01\n                                    :ARG1 (t / transport\n                                          :mod (c2 / city\n                                                :name (n / name\n                                                      :op1 \"London\")))))))))"
    ],
    "tree": [
      "(b2 / bid-01\n    :ARG1 (h4 / help-01\n              :ARG0 (p / person)))",
      "(h4 / help-01\n    :ARG1 (e / ease-02\n             :ARG0 (p / person)))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG1 (s / seat))",
      "(h / have-03\n   :ARG1 (c / condition\n            :mod (h2 / health)))",
      "(h / have-03\n   :ARG1 (c / condition\n            :ARG1 (h3 / hide-01)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +)))",
      "(b2 / bid-01\n    :ARG1 (h4 / help-01\n              :ARG1 (e / ease-02\n                       :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat))))",
      "(s2 / suffer-01\n    :ARG1 (t / transport\n             :mod (c2 / city\n                      :name (n / name\n                               :op1 \"London\"))))",
      "(o2 / offer-01\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(e / ease-02\n   :ARG1 (p2 / person\n             :ARG0 (s2 / suffer-01\n                       :ARG1 (t / transport\n                                :mod (c2 / city\n                                         :name (n / name\n                                                  :op1 \"London\"))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(h4 / help-01\n    :ARG1 (e / ease-02\n             :ARG1 (p2 / person\n                       :ARG0 (s2 / suffer-01\n                                 :ARG1 (t / transport\n                                          :mod (c2 / city\n                                                   :name (n / name\n                                                            :op1 \"London\")))))))",
      "(b2 / bid-01\n    :ARG1 (h4 / help-01\n              :ARG1 (e / ease-02\n                       :ARG1 (p2 / person\n                                 :ARG0 (s2 / suffer-01\n                                           :ARG1 (t / transport\n                                                    :mod (c2 / city\n                                                             :name (n / name\n                                                                      :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 p))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health)\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01)\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 p))))"
    ],
    "smus": [
      "Bid to help people",
      "Help people ease.",
      "Offer a seat.",
      "have health conditions.",
      "There are conditions for hiding.",
      "Offer badges.",
      "Offer badges please.",
      "A bid to help people ease.",
      "Offer badges to offer.",
      "Offer seat offer badges.",
      "London transport is suffering.",
      "Offer people with health conditions",
      "Offer people with hiding conditions",
      "Offer a seat to people with health conditions.",
      "Offer a seat to people with hiding conditions.",
      "Offer people with health conditions.",
      "Offer people with hiding conditions.",
      "To ease the suffering of London transport.",
      "Offer badges to people with health conditions.",
      "Offer badges to people with hiding conditions.",
      "Offer offer badges in a bid to help people ease.",
      "Offer badges of offer please in bid to help people ease.",
      "Offer badges to help people ease.",
      "Offer seat offer badges in bid to help people ease.",
      "Help ease the suffering of London transport",
      "In a bid to help those suffering from London transport.",
      "Offer offer badges in a bid to help people with health conditions.",
      "Offer offer badges in bid to help people with hiding conditions.",
      "Offer badges of \"please offer\" in bid to help people with health conditions.",
      "Offer badges of \"please offer\" in bid to help people with hiding conditions.",
      "Offer badges to people with health conditions in bid to help.",
      "Offer badges to people with hiding conditions in bid to help.",
      "Offer badges to help people with health conditions.",
      "Offer seat offer badges in bid to help people with health conditions.",
      "Offer seat offer badges in bid to help people with hiding conditions.",
      "Offer badges to people with health conditions in a bid to help them ease.",
      "Offer badges to people with hidden health conditions in a bid to help.",
      "Offer badges to people with hiding conditions in a bid to help ease the situation.",
      "Offer offer badges in bid to help those suffering from London transport",
      "Offer offer please badges in bid to help those suffering from London transport.",
      "Offer badges to help those suffering from London transport.",
      "Offer seat offer badges in bid to help those suffering from London transport.",
      "Offer badges to people with health conditions in a bid to help those suffering from London transport.",
      "Offer badges to people with hiding conditions in a bid to help those suffering from London transport."
    ]
  },
  {
    "instance_id": "pyrxsum-77",
    "summary": "Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.",
    "summary_trees": [
      "# ::snt Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.\n(s / sign-02\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Leicester\"\n                  :op2 \"Tigers\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Ellis\"\n                  :op2 \"Genge\")\n            :ARG0-of (p2 / prop-01)\n            :mod (l / loose-head)\n            :mod (t2 / team\n                  :name (n3 / name\n                        :op1 \"England\"))\n            :ARG1-of (n4 / new-02))\n      :ARG3 (t3 / team\n            :name (n5 / name\n                  :op1 \"Bristol\")\n            :ARG1-of (p3 / promote-01\n                  :ARG1-of (n6 / new-02))))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :mod (l / loose-head)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :mod (l / loose-head))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\")))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))"
    ],
    "smus": [
      "The prop was signed.",
      "The loose-headed were signed.",
      "New people signed.",
      "Leicester Tigers have signed",
      "Ellis Genge was signed.",
      "The new signings are from Bristol.",
      "Leicester Tigers have signed a prop.",
      "Leicester Tigers have signed a loose-headed.",
      "Leicester Tigers have signed a new player.",
      "The prop has signed on to the new promoted team.",
      "The loose-headed were signed to the new promoted team.",
      "The new people have been signed onto the new promoted team.",
      "Leicester Tigers have signed Ellis Genge.",
      "Leicester Tigers have signed for a new promoted team.",
      "Ellis Genge has signed on to the new promoted team.",
      "Leicester Tigers have signed an Englishman.",
      "Leicester Tigers have signed a prop from Bristol.",
      "Leicester Tigers have signed a loose-head for Bristol.",
      "Leicester Tigers have signed a new signing from Bristol.",
      "Leicester Tigers have signed a prop for a new promoted team.",
      "Leicester Tigers have signed loose-headed players for a new promoted team.",
      "Leicester Tigers have signed a new player to the newly-promoted team.",
      "Leicester Tigers have signed Ellis Genge from Bristol.",
      "Leicester Tigers have signed Ellis Genge for a new promoted team.",
      "Leicester Tigers have signed Englishmen from Bristol.",
      "Leicester Tigers have signed Englishmen for a new promoted team."
    ]
  },
  {
    "instance_id": "pyrxsum-78",
    "summary": "Keith Farmer followed up Farmer double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.",
    "summary_trees": [
      "# ::snt Keith Farmer followed up Farmer double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.\n(f / follow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Keith\"\n                  :op2 \"Farmer\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :ARG2 (r / race-02\n                  :mod (s / sprint)\n                  :mod (e / event\n                        :name (n2 / name\n                              :op1 \"Supersport\"))\n                  :location (c / city-district\n                        :name (n3 / name\n                              :op1 \"Snetterton\")))\n            :time (d / date-entity\n                  :weekday (s2 / saturday)))\n      :ARG4 (d2 / double-01\n            :ARG0 p\n            :location (l / location\n                  :name (n4 / name\n                        :op1 \"Knockhill\"))))"
    ],
    "tree": [
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (s / sprint)))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\")))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (e / event\n                    :name (n2 / name\n                              :op1 \"Supersport\"))))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (s / sprint))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\")))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\")))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint)))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday)))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint)))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday)))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (e / event\n                    :name (n2 / name\n                              :op1 \"Supersport\")))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :location (c / city-district\n                         :name (n3 / name\n                                   :op1 \"Snetterton\")))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))"
    ],
    "smus": [
      "Following Keith Farmer's victory.",
      "followed by Keith Farmer double.",
      "winning the sprint race",
      "Keith Farmer followed.",
      "Following a victory in a sprint race.",
      "Following Saturday's victory.",
      "Keith Farmer's victory followed him double.",
      "followed by a double at Knockhill.",
      "Winning the Supersport race",
      "The Snetterton race is a winner.",
      "Keith Farmer followed suit by winning.",
      "Keith Farmer followed him double.",
      "Following a victory in the Supersport race.",
      "Following a victory in the Snetterton race.",
      "The sprint race followed a victory for Keith Farmer, who doubled.",
      "Saturday's victory followed a double by Keith Farmer.",
      "Keith Farmer's victory followed a double at Knockhill.",
      "Snetterton race is a win for Saturday.",
      "Keith Farmer followed by winning the sprint race.",
      "Keith Farmer followed up by winning Saturday.",
      "The Supersport race victory followed a double by Keith Farmer.",
      "The win in Snetterton followed a double by Keith Farmer.",
      "Keith Farmer followed by doubling his victory.",
      "Keith Farmer followed suit by doubling at Knockhill.",
      "The sprint race followed a double at Knockhill.",
      "Saturday's victory followed a double at Knockhill.",
      "Keith Farmer followed up by winning the Supersport race.",
      "Keith Farmer followed suit by winning the Snetterton race.",
      "Keith Farmer followed by a double victory in the sprint race.",
      "The Supersport race victory followed a double at Knockhill.",
      "The win in Snetterton followed a double at Knockhill.",
      "Keith Farmer followed his victory by double at Knockhill.",
      "Keith Farmer followed up by a double victory in the Supersport race.",
      "Keith Farmer followed by doubling his victory in the Snetterton race."
    ]
  },
  {
    "instance_id": "pyrxsum-79",
    "summary": "Northern Ireland striker Conor Washington counts Washington a lucky man as man prepares to head to Euro 2016.",
    "summary_trees": [
      "# ::snt Northern Ireland striker Conor Washington counts Washington a lucky man as man prepares to head to Euro 2016.\n(c / count-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Conor\"\n                  :op2 \"Washington\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Northern\"\n                              :op2 \"Ireland\"))\n                  :ARG3 (s / striker)))\n      :ARG1 p\n      :ARG2 (m / man\n            :mod (l / lucky))\n      :time (p2 / prepare-02\n            :ARG1 m)\n      :ARG2 (h2 / head-02\n            :ARG0 m\n            :ARG1 (g / game\n                  :name (n3 / name\n                        :op1 \"Euro\"\n                        :op2 \"2016\"))))"
    ],
    "tree": [
      "(c / count-02\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Northern\"\n                      :op2 \"Ireland\")))",
      "(h2 / head-02\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"Euro\"\n                       :op2 \"2016\")))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p)",
      "(c / count-02\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :time (p2 / prepare-02\n             :ARG1 m))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG2 (h2 / head-02\n             :ARG1 (g / game\n                      :name (n3 / name\n                                :op1 \"Euro\"\n                                :op2 \"2016\"))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Northern\"\n                      :op2 \"Ireland\"))\n   :ARG3 (s / striker))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Northern\"\n                      :op2 \"Ireland\"))\n   :ARG3 (s / striker))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (h2 / head-02\n             :ARG0 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG2 (h2 / head-02\n             :ARG0 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\")))))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\")))))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (h2 / head-02\n             :ARG0 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :time (p2 / prepare-02\n             :ARG1 m))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :time (p2 / prepare-02\n             :ARG1 m))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG2 (h2 / head-02\n             :ARG0 (m / man)))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :time (p2 / prepare-02\n             :ARG1 m))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (h2 / head-02\n             :ARG1 (g / game\n                      :name (n3 / name\n                                :op1 \"Euro\"\n                                :op2 \"2016\"))))"
    ],
    "smus": [
      "The lucky man counts.",
      "Conor Washington counts.",
      "The striker counts.",
      "Northern Ireland (NI)",
      "Head to Euro 2016.",
      "Conor Washington counts himself.",
      "The striker counts himself.",
      "The lucky man counts as he prepares.",
      "Northern Ireland striker",
      "The striker counts as the man prepares.",
      "When the man prepares, Conor Washington counts.",
      "Conor Washington counts on the man to head.",
      "The striker counts on the man to head.",
      "Conor Washington counts as the man to head.",
      "The striker counts as a man head.",
      "Northern Ireland counts.",
      "Conor Washington counts as a lucky man.",
      "The striker counts as a lucky man.",
      "The striker counts on himself as the man prepares.",
      "Conor Washington counts as the striker.",
      "Conor Washington counts himself a lucky man.",
      "The striker counts himself as a lucky man.",
      "Northern Ireland striker counts.",
      "Conor Washington counts as a lucky man as he prepares.",
      "The striker counts as a lucky man as he prepares.",
      "When the man prepares, Conor Washington counts on the striker.",
      "Conor Washington counts to head to Euro 2016.",
      "The striker, Conor Washington, counts on the man to head.",
      "The striker counts himself as a lucky man as he prepares.",
      "Conor Washington counts for Northern Ireland.",
      "Northern Ireland's Coron Washington counts.",
      "Conor Washington counts himself as a lucky man.",
      "Conor Washington counts on himself to head to Euro 2016.",
      "The striker counts on himself to head to Euro 2016.",
      "Northern Ireland striker counts on him as the man prepares.",
      "Northern Ireland striker counts on the man to head.",
      "Northern Ireland striker counts himself a lucky man.",
      "The Northern Ireland striker counts himself a lucky man.",
      "When the man prepares, Conor Washington counts for Northern Ireland.",
      "Northern Ireland's Coron Washington counts on the man to head.",
      "When the striker prepares, Conor Washington counts himself as a lucky man.",
      "When he prepares, Conor Washington counts himself as a lucky man.",
      "Conor Washington counts as a lucky man for Northern Ireland.",
      "Northern Ireland's Coron Washington counts himself as a lucky man.",
      "The striker, Conor Washington, counts on himself to head to Euro 2016.",
      "Northern Ireland striker counts himself a lucky man as he prepares.",
      "Northern Ireland striker counts himself lucky man as he prepares.",
      "Northern Ireland striker counts on him to head to Euro 2016.",
      "The Northern Ireland striker counts on himself to head to Euro 2016.",
      "When preparations begin, Conor Washington counts as a lucky man for Northern Ireland.",
      "Northern Ireland's Coron Washington counts himself as a lucky man as he prepares."
    ]
  },
  {
    "instance_id": "pyrxsum-80",
    "summary": "The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.",
    "summary_trees": [
      "# ::snt The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.\n(a / answer-01\n      :ARG0 (t / team\n            :ARG0-of (c / check-01\n                  :ARG1 (r / reality)))\n      :ARG1 (q / question-01\n            :ARG0 (y / you)\n            :ARG1 (ii / implicate-01\n                  :ARG2 (v / vote-01\n                        :ARG0 (c2 / country\n                              :name (n / name\n                                    :op1 \"UK\"))\n                        :ARG1 (l / leave-15\n                              :ARG0 c2\n                              :ARG1 (o / organization\n                                    :name (n2 / name\n                                          :op1 \"European\"\n                                          :op2 \"Union\")))))\n            :quant (m / more)))"
    ],
    "tree": [
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(q / question-01\n   :ARG0 (y / you)\n   :quant (m / more))",
      "(ii / implicate-01\n    :ARG2 (v / vote-01\n             :ARG1 (l / leave-15\n                      :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\")))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality))))",
      "(l / leave-15\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"European\"\n                      :op2 \"Union\")))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(ii / implicate-01\n    :ARG2 (v / vote-01\n             :ARG0 (c2 / country\n                       :name (n / name\n                                :op1 \"UK\"))))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG0 c2))",
      "(v / vote-01\n   :ARG1 (l / leave-15\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"European\"\n                               :op2 \"Union\"))))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG0 c2))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG1 (l / leave-15\n                                        :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(ii / implicate-01\n    :ARG2 (v / vote-01\n             :ARG1 (l / leave-15\n                      :ARG1 (o / organization\n                               :name (n2 / name\n                                         :op1 \"European\"\n                                         :op2 \"Union\")))))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG0 (c2 / country\n                                         :name (n / name\n                                                  :op1 \"UK\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\"))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG1 (o / organization\n                                        :name (n2 / name\n                                                  :op1 \"European\"\n                                                  :op2 \"Union\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\"))))\n   :quant (m / more))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"European\"\n                               :op2 \"Union\"))))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"European\"\n                               :op2 \"Union\"))))"
    ],
    "smus": [
      "Answers your questions.",
      "answers more questions.",
      "More questions.",
      "The vote to leave the UK has implications.",
      "The UK's vote.",
      "The reality check team answers.",
      "Leave the European Union.",
      "Questions about the implications of the UK's vote to leave.",
      "The UK vote is implicated.",
      "The UK voted to leave.",
      "Leave the European Union vote is a",
      "Answers questions about the implications of the vote to leave the UK.",
      "Your questions are about the implications of the vote to leave the UK.",
      "Questions about the implications of the UK vote.",
      "There are more questions about the implications of the vote to leave the UK.",
      "Reality check team answers your questions.",
      "Reality check team answers more questions.",
      "Implicaties of the vote to leave the European Union.",
      "Answers questions about the implications of the UK vote.",
      "Your questions are about the implications of the UK vote.",
      "More questions about the implications of the UK vote.",
      "More questions about the implications of the vote to leave the UK.",
      "Questions about the implications of the vote to leave the European Union.",
      "The UK voted to leave the European Union.",
      "Answers questions about the implications of the vote to leave the European Union.",
      "Your questions are about the implications of the vote to leave the European Union.",
      "There are more questions about the implications of the vote to leave the European Union.",
      "Reality check team answers questions about the implications of the vote to leave the UK.",
      "More questions about the implications of the vote to leave the European Union.",
      "Reality check team answers questions about the implications of the UK vote.",
      "Reality check team answers questions about the implications of the vote to leave the European Union."
    ]
  },
  {
    "instance_id": "pyrxsum-81",
    "summary": "Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.",
    "summary_trees": [
      "# ::snt Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.\n(r / relish-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Martyn\"\n                  :op2 \"Phillips\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (s / stadium\n                        :name (n2 / name\n                              :op1 \"Principality\"\n                              :op2 \"Stadium\"))\n                  :ARG2 (e / executive\n                        :mod (c / chief))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (h2 / host-01\n                  :ARG0 p\n                  :ARG1 (b / bout\n                        :mod (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Anthony\"\n                                    :op2 \"Joshua\")))\n                  :location (v / venue\n                        :ARG0-of (h3 / have-03\n                              :ARG1 (c3 / capacity\n                                    :quant 74500))\n                        :location (c4 / city\n                              :name (n4 / name\n                                    :op1 \"Cardiff\"))))))"
    ],
    "tree": [
      "(r / relish-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Martyn\" :op2 \"Phillips\")))))",
      "(c2 / chance-02\n    :ARG1 (h2 / host-01\n              :ARG0 (p / person :name (n / name :op1 \"Martyn\" :op2 \"Phillips\")))))",
      "(h / have-org-role-91\n   :ARG2 (e / executive\n            :mod (c / chief)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\")))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief)))))",
      "(h2 / host-01\n    :ARG1 (b / bout\n             :mod (p2 / person\n                      :name (n3 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\"))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(c2 / chance-02\n    :ARG1 (h2 / host-01\n              :location (v / venue\n                           :ARG0 (h3 / have-03\n                                     :ARG1 (c3 / capacity\n                                               :quant 74500)))))",
      "(h / have-org-role-91\n   :ARG1 (s / stadium\n            :name (n2 / name\n                      :op1 \"Principality\"\n                      :op2 \"Stadium\"))\n   :ARG2 (e / executive\n            :mod (c / chief)))",
      "(h / have-org-role-91\n   :ARG1 (s / stadium\n            :name (n2 / name\n                      :op1 \"Principality\"\n                      :op2 \"Stadium\"))\n   :ARG2 (e / executive\n            :mod (c / chief)))",
      "(c2 / chance-02\n    :ARG1 (h2 / host-01\n              :ARG1 (b / bout\n                       :mod (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Anthony\"\n                                          :op2 \"Joshua\")))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :ARG0 (h3 / have-03\n                                              :ARG1 (c3 / capacity\n                                                        :quant 74500))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(h2 / host-01\n    :ARG1 (b / bout\n             :mod (p2 / person\n                      :name (n3 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\")))\n    :location (v / venue\n                 :ARG0 (h3 / have-03\n                           :ARG1 (c3 / capacity\n                                     :quant 74500))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :location (c4 / city\n                                                  :name (n4 / name\n                                                            :op1 \"Cardiff\"))))))"
    ],
    "smus": [
      "relish the chance for Martyn Phillips.",
      "A chance for Martyn Phillips to host.",
      "chief executive",
      "Martyn Phillips will relish.",
      "The chief executive would relish.",
      "Host an Anthony Joshua bout.",
      "Martyn Phillips will relish the chance.",
      "A chance to host at a venue with a capacity of 74500.",
      "A chance to host at a venue in Cardiff.",
      "There's a chance to host an Anthony Joshua bout.",
      "Martyn Phillips would relish the chance to host.",
      "The chief executive would relish the chance.",
      "relish the chance to host at a venue with a capacity of 74500.",
      "relish the chance to host at a venue in Cardiff.",
      "relish the chance to host an Anthony Joshua bout.",
      "The chief executive would relish the chance to host.",
      "The Prince Stadium people will relish the chance to host.",
      "Anthony Joshua bout to host at Cardiff venue",
      "Martyn Phillips would relish the chance to host at a venue with a capacity of 74500.",
      "Martyn Phillips would relish the chance to host at a venue in Cardiff.",
      "Martyn Phillips will relish the chance to host an Anthony Joshua bout.",
      "The chief executive would relish the chance to host at a venue with a capacity of 74500.",
      "The chief executive would relish the chance to host at a venue in Cardiff.",
      "The chief executive would relish the chance to host an Anthony Joshua bout.",
      "The Prince Stadium people will relish the chance to host an Anthony Joshua bout."
    ]
  },
  {
    "instance_id": "pyrxsum-82",
    "summary": "Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.",
    "summary_trees": [
      "# ::snt Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.\n(r / rise-01\n      :ARG1 (ii / income\n            :mod (n / net)\n            :poss (c / company\n                  :name (n2 / name\n                        :op1 \"Google\")))\n      :ARG2 (p / percentage-entity\n            :value 17)\n      :ARG4 (m / monetary-quantity\n            :quant 3393000000000\n            :unit (d / dollar))\n      :time (d2 / date-entity\n            :month 6)\n      :time (q / quarter\n            :mod (l / last))\n      :ARG1-of (b / boost-01\n            :ARG0 (r2 / rise-01\n                  :ARG1 (r3 / revenue\n                        :poss c)\n                  :ARG2 (p2 / percentage-entity\n                        :value 11)\n                  :ARG4 (m2 / monetary-quantity\n                        :quant 170000000000\n                        :unit (d3 / dollar)))))"
    ],
    "tree": [
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\"))))",
      "(r2 / rise-01\n    :ARG2 (p2 / percentage-entity\n              :value 11))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net)))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r2 / rise-01\n    :ARG4 (m2 / monetary-quantity\n              :unit (d3 / dollar)))",
      "(b / boost-01\n   :ARG0 (r2 / rise-01\n             :ARG1 (r3 / revenue\n                       :poss (c / company :name (n2 / name :op1 \"Google\")))))",
      "(b / boost-01\n   :ARG0 (r2 / rise-01\n             :ARG4 (m2 / monetary-quantity\n                       :quant 170000000000)))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(b / boost-01\n   :ARG0 (r2 / rise-01\n             :ARG4 (m2 / monetary-quantity\n                       :unit (d3 / dollar))))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG2 (p2 / percentage-entity\n              :value 11))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG4 (m2 / monetary-quantity\n              :quant 170000000000))",
      "(r2 / rise-01\n    :ARG2 (p2 / percentage-entity\n              :value 11)\n    :ARG4 (m2 / monetary-quantity\n              :quant 170000000000))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG2 (p2 / percentage-entity\n              :value 11))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG4 (m2 / monetary-quantity\n              :quant 170000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\"))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\"))))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG4 (m2 / monetary-quantity\n                                :quant 170000000000))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar))\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r2 / rise-01\n    :ARG2 (p2 / percentage-entity\n              :value 11)\n    :ARG4 (m2 / monetary-quantity\n              :unit (d3 / dollar)))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG4 (m2 / monetary-quantity\n                                :unit (d3 / dollar)))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG1 (r3 / revenue\n                                :poss (c / company :name (n2 / name :op1 \"Google\"))))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG1 (r3 / revenue\n                                :poss (c / company :name (n2 / name :op1 \"Google\")))))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG2 (p2 / percentage-entity\n                                :value 11)))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG2 (p2 / percentage-entity\n                                :value 11)))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG2 (p2 / percentage-entity\n              :value 11)\n    :ARG4 (m2 / monetary-quantity\n              :unit (d3 / dollar)))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG4 (m2 / monetary-quantity\n                                :unit (d3 / dollar)))))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG4 (m2 / monetary-quantity\n                                :unit (d3 / dollar)))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG2 (p2 / percentage-entity\n                                :value 11)))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))"
    ],
    "smus": [
      "A 17% rise.",
      "The rise was 339 billion dollars monetary.",
      "Google's revenues have seen a rise.",
      "11% rise",
      "Net income rose.",
      "Google's revenue rise has boosted.",
      "A 11% rise was boosted.",
      "The rise of 17 billion monetized dollars has boosted.",
      "In June, the rise was 17%.",
      "Google's revenues rose 11%.",
      "Google's revenues rose by 17 billion dollars.",
      "11% rise to 17 billion in monetary revenue",
      "Google's income is on the rise.",
      "The rise was boosted by the rise in Google's revenues.",
      "The rise was boosted by a rise of 11%.",
      "The rise was boosted by a rise of 17 billion dollars monetary.",
      "Net income rose 17%.",
      "Net income rose in June.",
      "A 17% rise in monetary dollars.",
      "11% rise in monetary dollars",
      "Net income rose by $$.",
      "Google's income rose 17%.",
      "Google's income rose in June.",
      "A 17% rise from the 11% rise is a boost.",
      "A 17% rise from the rise of 17% monetary output.",
      "The boost from the rise in Google's revenues has been 17%.",
      "The rise of 11% has boosted the rise to 17%.",
      "The rise in the rise in the monetization of 17 billion has boosted the rise to 17 percent.",
      "Net income rose 17% in June.",
      "Google's revenues rose 11% to $.",
      "Google's income is going up by $$.",
      "Net income rose 17% to $.",
      "The boost in Google's revenues has seen a rise in monetary dollars.",
      "The 11% rise has boosted the monetization.",
      "In June, net income rose by $.",
      "Google's income rose 17% in June.",
      "The rise of 11% has boosted the rise to 17%, with a monetisation of 339.3 billion.",
      "Google's income rose 17% to $.",
      "Google's income rose by $$ in June.",
      "The boost from the rise in Google's revenues has boosted the rise by 17% to $.",
      "The 11% rise has boosted the monetization by 17%.",
      "The rise in monetization to 17 billion has boosted the rise by 17% to $.",
      "In June, net income rose 17% to $."
    ]
  },
  {
    "instance_id": "pyrxsum-83",
    "summary": "Pregnant women should visit countries with a risk of malaria only if experts trip is essential, experts are warning.",
    "summary_trees": [
      "# ::snt Pregnant women should visit countries with a risk of malaria only if experts trip is essential, experts are warning.\n(w / warn-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01))\n      :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                  :ARG0 (w2 / woman\n                        :ARG1-of (ii / impregnate-01))\n                  :ARG1 (c / country\n                        :ARG0-of (r2 / risk-01\n                              :ARG2 (m / malaria))))\n            :condition (e2 / essential\n                  :domain (t / trip-03\n                        :ARG0 (p2 / person\n                              :ARG1-of (e3 / expert-01)))\n                  :mod (o / only))))"
    ],
    "tree": [
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01)))",
      "(t / trip-03\n   :ARG0 (p2 / person\n             :ARG1 (e3 / expert-01)))",
      "(w / warn-01\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :mod (o / only))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG0 (w2 / woman\n                      :ARG1 (ii / impregnate-01))))",
      "(v / visit-01\n   :ARG1 (c / country\n            :ARG0 (r2 / risk-01\n                      :ARG2 (m / malaria))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG1 (c / country\n                     :ARG0 (r2 / risk-01\n                               :ARG2 (m / malaria)))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :mod (o / only))))",
      "(w / warn-01\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :domain (t / trip-03\n                                      :ARG0 (p2 / person\n                                                :ARG1 (e3 / expert-01))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :mod (o / only))))",
      "(v / visit-01\n   :ARG0 (w2 / woman\n             :ARG1 (ii / impregnate-01))\n   :ARG1 (c / country\n            :ARG0 (r2 / risk-01\n                      :ARG2 (m / malaria))))",
      "(v / visit-01\n   :ARG0 (w2 / woman\n             :ARG1 (ii / impregnate-01))\n   :ARG1 (c / country\n            :ARG0 (r2 / risk-01\n                      :ARG2 (m / malaria))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :ARG0 (w2 / woman\n                               :ARG1 (ii / impregnate-01)))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG1 (c / country\n                     :ARG0 (r2 / risk-01\n                               :ARG2 (m / malaria))))\n   :condition (e2 / essential\n                  :mod (o / only)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :domain (t / trip-03\n                                      :ARG0 (p2 / person\n                                                :ARG1 (e3 / expert-01))))))"
    ],
    "smus": [
      "Experts are warning.",
      "Experts trip.",
      "Warning: Only if essential.",
      "Women who are pregnant should visit.",
      "Visit countries at risk of malaria",
      "Countries at risk of malaria should be visited.",
      "Experts are warning that only if essential should it happen.",
      "Warning: If trips are essential for experts, they should be.",
      "Women who are pregnant should visit only if essential.",
      "Experts are warning pregnant women should visit.",
      "Only if essential should countries at risk of malaria be visited.",
      "Experts are warning that if trips are essential, experts should.",
      "Women who are pregnant should visit if experts trip is essential.",
      "If experts trip is essential, countries at risk of malaria should be visited."
    ]
  },
  {
    "instance_id": "pyrxsum-84",
    "summary": "In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.",
    "summary_trees": [
      "# ::snt In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.\n(r / replace-01\n      :ARG1 (t / textbook\n            :mod (d / dusty)\n            :mod (f / fashion\n                  :mod (o / old)))\n      :ARG2 (a / and\n            :op1 (t2 / tablet)\n            :op2 (c / computer)\n            :op3 (p / phone\n                  :ARG1-of (m / mobile-02)))\n      :manner (g / gradual)\n      :location (s / school\n            :location (c2 / continent\n                  :name (n / name\n                        :op1 \"Africa\"))))"
    ],
    "tree": [
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty)))",
      "(r / replace-01\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG2 (t2 / tablet)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))"
    ],
    "smus": [
      "The dusty textbooks were replaced.",
      "replaced by mobile phones",
      "The old-fashioned textbooks were replaced.",
      "Dusty textbooks replaced by tablets.",
      "Dusty textbooks replaced by computers.",
      "Dusty textbooks are gradually being replaced.",
      "Dusty textbooks replaced by mobile phones.",
      "Old-fashion textbooks are replaced with tablets.",
      "Old-fashioned textbooks were replaced by computers.",
      "Old-fashioned textbooks are gradually being replaced.",
      "Dusty textbooks are gradually replaced by tablets.",
      "Dusty textbooks are gradually replaced by computers.",
      "Computers are replaced in African schools.",
      "Old-fashioned textbooks are replaced by mobile phones.",
      "Dusty textbooks are gradually replaced by mobile phones.",
      "Old-fashioned textbooks are gradually being replaced by tablets.",
      "Old-fashioned textbooks are gradually being replaced by computers.",
      "Old-fashioned textbooks are gradually being replaced by mobile phones.",
      "Old-fashioned textbooks have been replaced in African schools.",
      "Dusty textbooks are replaced with tablets in African schools.",
      "Dusty textbooks were replaced with computers in African schools.",
      "Dusty textbooks are replaced with mobile phones in African schools.",
      "In African schools, old-fashioned textbooks were replaced with tablets.",
      "In African schools, old-fashioned textbooks were replaced with computers.",
      "In African schools, old-fashioned textbooks were replaced with mobile phones."
    ]
  },
  {
    "instance_id": "pyrxsum-85",
    "summary": "More than half of Scots have run out of money before pay day, according to a new report.",
    "summary_trees": [
      "# ::snt More than half of Scots have run out of money before pay day, according to a new report.\n(s / say-01\n      :ARG0 (r / report\n            :ARG1-of (n / new-01))\n      :ARG1 (r2 / run-out-05\n            :ARG1 (m / money)\n            :ARG2 (p / person\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"Scotland\"))\n                  :quant (m2 / more-than\n                        :op1 \"1/2\"))\n            :time (b / before\n                  :op1 (d / day\n                        :time-of (p2 / pay-01)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01)))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :time (b / before\n                      :op1 (d / day\n                              :time (p2 / pay-01)))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :mod (c / country\n                              :name (n2 / name\n                                        :op1 \"Scotland\")))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\"))\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))"
    ],
    "smus": [
      "According to the new report --",
      "Run out of money.",
      "More than half have run out.",
      "More than half are out.",
      "More than half ran out of money.",
      "The Scots are running out.",
      "The new report said the money had run out.",
      "ran out before the pay day.",
      "ran out of money before the pay day.",
      "The Scots are running out of money.",
      "More than half have run out, according to the new report.",
      "More than half ran out before the day of pay.",
      "The new report said the run-out was before the day of pay.",
      "The new report said the Scots had run out.",
      "The Scots ran out before the pay day.",
      "More than half ran out of money before the day of the pay.",
      "The scottish people ran out of money before the day of pay."
    ]
  },
  {
    "instance_id": "pyrxsum-86",
    "summary": "The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give group control of an important supply line with the provincial capital Lashkar Gah",
    "summary_trees": [
      "# ::snt The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give group control of an important supply line with the provincial capital Lashkar Gah\n(a / and\n      :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                  :ARG0 (c2 / criminal-organization\n                        :name (n / name\n                              :op1 \"Taliban\"))\n                  :ARG1 (c3 / city\n                        :name (n2 / name\n                              :op1 \"Sangin\")\n                        :ARG1-of (l / locate-01\n                              :manner (s / strategic))\n                        :ARG1-of (c4 / consider-02\n                              :ARG2 (b / battlefield\n                                    :location (c5 / country\n                                          :name (n3 / name\n                                                :op1 \"Afghanistan\")\n                                          :part (n4 / north))\n                                    :beneficiary (a2 / and\n                                          :op1 (t / troop\n                                                :mod (c6 / country\n                                                      :name (n5 / name\n                                                            :op1 \"United\"\n                                                            :op2 \"States\")))\n                                          :op2 (t2 / troop\n                                                :mod (c7 / country\n                                                      :name (n6 / name\n                                                            :op1 \"Britain\"))))\n                                    :ARG1-of (h / have-degree-91\n                                          :ARG2 (k / kill-01\n                                                :ARG0 b)\n                                          :ARG3 (m / most)))\n                              :time (o / once))))\n            :ARG1 (m2 / mobility\n                  :poss c2\n                  :location n4))\n      :op2 (g / give-01\n            :ARG0 c\n            :ARG1 (c8 / control-01\n                  :ARG0 c2\n                  :ARG1 (l2 / line\n                        :ARG1-of (ii2 / important-01)\n                        :ARG3-of (s2 / supply-01\n                              :ARG2 (c9 / city\n                                    :name (n7 / name\n                                          :op1 \"Lashkar\"\n                                          :op2 \"Gah\")\n                                    :ARG0-of (h2 / have-org-role-91\n                                          :ARG1 (p / province\n                                                :ARG2 (c10 / capital))))))\n                  :ARG2 c2)))"
    ],
    "tree": [
      "(h / have-degree-91\n   :ARG2 (k / kill-01\n            :ARG0 (b / battlefield)))",
      "(g / give-01\n   :ARG1 (c8 / control-01\n             :ARG0 (c2 / criminal-organization :name (n / name :op1 \"Taliban\"))))",
      "(g / give-01\n   :ARG1 (c8 / control-01\n             :ARG2 (c2 / criminal-organization :name (n / name :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c8 / control-01\n    :ARG1 (l2 / line\n              :ARG1 (ii2 / important-01)))",
      "(h2 / have-org-role-91\n    :ARG1 (p / province\n             :ARG2 (c10 / capital)))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\")))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :name (n2 / name\n                       :op1 \"Sangin\")))",
      "(h / have-degree-91\n   :ARG2 (k / kill-01\n            :ARG0 (b / battlefield))\n   :ARG3 (m / most))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (l / locate-01\n                      :manner (s / strategic))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :time (o / once))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :ARG1 (h / have-degree-91\n                      :ARG3 (m / most))))",
      "(g / give-01\n   :ARG1 (c8 / control-01\n             :ARG1 (l2 / line\n                       :ARG1 (ii2 / important-01))))",
      "(s2 / supply-01\n    :ARG2 (c9 / city\n              :name (n7 / name\n                        :op1 \"Lashkar\"\n                        :op2 \"Gah\")))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\"))))",
      "(ii / increase-01\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :location (c5 / country\n                           :name (n3 / name\n                                     :op1 \"Afghanistan\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic)))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once)))))",
      "(s2 / supply-01\n    :ARG2 (c9 / city\n              :ARG0 (h2 / have-org-role-91\n                        :ARG1 (p / province\n                                 :ARG2 (c10 / capital)))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :location (c5 / country\n                           :name (n3 / name\n                                     :op1 \"Afghanistan\")))\n    :time (o / once))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\")))\n    :ARG1 (m2 / mobility\n              :poss c2))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\")))\n    :ARG1 (m2 / mobility\n              :poss c2))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :name (n2 / name\n                       :op1 \"Sangin\")))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :part (n4 / north))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :beneficiary (t / troop\n                             :mod (c6 / country\n                                      :name (n5 / name\n                                                :op1 \"United\"\n                                                :op2 \"States\")))))",
      "(c8 / control-01\n    :ARG1 (l2 / line\n              :ARG3 (s2 / supply-01\n                        :ARG2 (c9 / city\n                                  :name (n7 / name\n                                            :op1 \"Lashkar\"\n                                            :op2 \"Gah\")))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\")))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (l / locate-01\n                      :manner (s / strategic))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :name (n3 / name\n                                                        :op1 \"Afghanistan\"))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (l / locate-01\n                      :manner (s / strategic))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :beneficiary (t2 / troop\n                              :mod (c7 / country\n                                       :name (n6 / name\n                                                 :op1 \"Britain\"))))\n    :time (o / once))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :beneficiary (t / troop\n                             :mod (c6 / country\n                                      :name (n5 / name\n                                                :op1 \"United\"\n                                                :op2 \"States\"))))\n    :time (o / once))",
      "(g / give-01\n   :ARG1 (c8 / control-01\n             :ARG1 (l2 / line\n                       :ARG3 (s2 / supply-01\n                                 :ARG2 (c9 / city\n                                           :name (n7 / name\n                                                     :op1 \"Lashkar\"\n                                                     :op2 \"Gah\"))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :name (n3 / name\n                                                                  :op1 \"Afghanistan\")))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG2 (k / kill-01\n                                                            :ARG0 b)))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t2 / troop\n                                                 :mod (c7 / country\n                                                          :name (n6 / name\n                                                                    :op1 \"Britain\")))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t / troop\n                                                :mod (c6 / country\n                                                         :name (n5 / name\n                                                                   :op1 \"United\"\n                                                                   :op2 \"States\")))))))",
      "(g / give-01\n   :ARG1 (c8 / control-01\n             :ARG1 (l2 / line\n                       :ARG3 (s2 / supply-01\n                                 :ARG2 (c9 / city\n                                           :ARG0 (h2 / have-org-role-91\n                                                     :ARG1 (p / province\n                                                              :ARG2 (c10 / capital))))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t2 / troop\n                                                           :mod (c7 / country\n                                                                    :name (n6 / name\n                                                                              :op1 \"Britain\"))))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north))))))\n    :ARG1 (m2 / mobility\n              :location n4))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north))))))\n    :ARG1 (m2 / mobility\n              :location n4))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :part (n4 / north))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :part (n4 / north))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t / troop\n                                                          :mod (c6 / country\n                                                                   :name (n5 / name\n                                                                             :op1 \"United\"\n                                                                             :op2 \"States\"))))))))"
    ],
    "smus": [
      "battlefield kills.",
      "Give the Taliban control.",
      "Give control to the Taliban.",
      "Increase mobility in the north.",
      "The important line is under control.",
      "The province capital.",
      "The Taliban captured.",
      "Sangin was captured.",
      "Capture a strategically located city.",
      "Capture a city once considered.",
      "Considered a battlefield in northern country.",
      "Give control of the important line.",
      "Supply to Lashkar Gah",
      "The Taliban's capture would increase.",
      "Capture of Sangin would increase.",
      "Increase the mobility of the Taliban.",
      "Considered a battlefield in Afghanistan.",
      "Considered a battlefield that is deadly.",
      "Capture of what once was considered a city will increase.",
      "Once considered a battlefield in northern country.",
      "Considered a battlefield for British troops.",
      "Once considered a battlefield of deadly.",
      "Sangin was captured by the Taliban.",
      "The capture of a city considered a battlefield in northern country.",
      "The capture of the city considered the most battlefield.",
      "Considered a battlefield for American troops.",
      "The supply line to Lashkar Gah is under control.",
      "Sangin capture would increase mobility in the north.",
      "The Taliban captured a strategically located city.",
      "Capture of a city considered a battlefield in Afghanistan.",
      "The capture of a city considered a deadly battlefield.",
      "Once considered a battlefield for British troops.",
      "Capture of cities considered a battlefield in the northern country would increase.",
      "Capture of strategically located cities will increase mobility in the north.",
      "Once considered a battlefield for American troops.",
      "Control of the supply line to the provincial capital.",
      "Sangin's capture would increase the Taliban's mobility.",
      "The capture of a city considered a battlefield for American troops.",
      "Give control of the supply line to the provincial capital.",
      "Capture of a city considered a battlefield for British troops would increase.",
      "Capture of strategically located cities would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield in the north will increase mobility in the north.",
      "The Taliban captured a city considered a battlefield in northern country.",
      "The Taliban captured the city considered the most battlefield.",
      "Capture of cities considered the most battlefield would increase mobility in the north.",
      "The Taliban captured a city considered a battlefield in Afghanistan.",
      "The Taliban captured a city considered a deadly battlefield.",
      "Capture of cities considered a battlefield in Afghanistan will increase mobility in the north.",
      "Capture of cities considered a deadly battlefield would increase mobility in the north.",
      "The Taliban captured a city considered a battlefield for British troops.",
      "Capture of cities considered a battlefield in the northern country would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for British troops would increase mobility in the north.",
      "Capture of cities considered the most battlefield would increase the Taliban's mobility.",
      "The Taliban captured a city considered a battlefield for American troops.",
      "Capture of cities considered a battlefield in Afghanistan would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for American troops would increase mobility in the north.",
      "Capture of cities considered a deadly battlefield would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for British troops would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for American troops would increase the Taliban's mobility."
    ]
  },
  {
    "instance_id": "pyrxsum-87",
    "summary": "Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.",
    "summary_trees": [
      "# ::snt Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.\n(a / area\n      :ARG1-of (p / populate-01\n            :manner (s / sparse))\n      :consist-of (d / desert\n            :quant (m / most))\n      :domain (c / country-region\n            :name (n / name\n                  :op1 \"Western\"\n                  :op2 \"Sahara\"))\n      :ARG1-of (s2 / situate-01\n            :ARG2 (c2 / coast\n                  :mod (n2 / northwest)\n                  :part-of (c3 / continent\n                        :name (n3 / name\n                              :op1 \"Africa\")))))"
    ],
    "tree": [
      "(s2 / situate-01\n    :ARG2 (c2 / coast\n              :mod (n2 / northwest)))",
      "(s2 / situate-01\n    :ARG2 (c2 / coast\n              :part (c3 / continent\n                        :name (n3 / name\n                                  :op1 \"Africa\"))))"
    ],
    "smus": [
      "located on the northwest coast.",
      "located on the African coast."
    ]
  },
  {
    "instance_id": "pyrxsum-88",
    "summary": "Deputy First Minister John Swinney will give MSPs Swinney response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.",
    "summary_trees": [
      "# ::snt Deputy First Minister John Swinney will give MSPs Swinney response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.\n(g / give-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (d / deputy)\n                        :ord (o / ordinal-entity\n                              :value 1))))\n      :ARG1 (r / respond-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                  :ARG1 (d2 / die-01\n                        :ARG1 (s / schoolboy\n                              :name (n2 / name\n                                    :op1 \"Bailey\"\n                                    :op2 \"Gwynne\")\n                              :mod (c / city\n                                    :name (n3 / name\n                                          :op1 \"Aberdeen\"))))))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n4 / name\n                              :op1 \"MSP\"))))\n      :time (w / week\n            :mod (n5 / next)))"
    ],
    "tree": [
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(h / have-org-role-91\n   :ARG2 (m / minister\n            :mod (d / deputy)))",
      "(h2 / have-org-role-91\n    :ARG1 (p3 / political-party\n              :name (n4 / name\n                        :op1 \"MSP\")))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\")))",
      "(d2 / die-01\n    :ARG1 (s / schoolboy\n             :name (n2 / name\n                       :op1 \"Bailey\"\n                       :op2 \"Gwynne\")))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(d2 / die-01\n    :ARG1 (s / schoolboy\n             :mod (c / city\n                     :name (n3 / name\n                               :op1 \"Aberdeen\"))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy)))))",
      "(r2 / report-01\n    :ARG1 (d2 / die-01\n              :ARG1 (s / schoolboy\n                       :name (n2 / name\n                                 :op1 \"Bailey\"\n                                 :op2 \"Gwynne\"))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(g / give-01\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(r2 / report-01\n    :ARG1 (d2 / die-01\n              :ARG1 (s / schoolboy\n                       :mod (c / city\n                               :name (n3 / name\n                                         :op1 \"Aberdeen\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (w / week\n            :mod (n5 / next)))",
      "(r / respond-01\n   :ARG1 (r2 / report-01\n             :ARG1 (d2 / die-01\n                       :ARG1 (s / schoolboy\n                                :name (n2 / name\n                                          :op1 \"Bailey\"\n                                          :op2 \"Gwynne\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(r / respond-01\n   :ARG1 (r2 / report-01\n             :ARG1 (d2 / die-01\n                       :ARG1 (s / schoolboy\n                                :mod (c / city\n                                        :name (n3 / name\n                                                  :op1 \"Aberdeen\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\"))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\"))))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\")))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :ord (o / ordinal-entity\n                                      :value 1))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\"))))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))"
    ],
    "smus": [
      "Give John Swinney a response.",
      "Deputy Minister",
      "MSP.",
      "John Swinney will give.",
      "Bailey Gwynne, a schoolboy, died.",
      "Give John Swinney a response next week.",
      "The Aberdeen schoolboy died.",
      "The Deputy Minister will give.",
      "Report of the death of a schoolboy named Bailey Gwynne",
      "John Swinney will give a response.",
      "Give the MSPs.",
      "Report of death of Aberdeen schoolboy",
      "John Swinney will give next week.",
      "Respond to report of death of Bayley Gwynne.",
      "The Deputy Minister will give his response.",
      "Respond to report of death of Aberdeen schoolboy",
      "The Deputy Minister will give next week.",
      "Give a response to the report of the death of the schoolboy, Bailey Gwynne.",
      "Give the MSPs a response, John Swinney.",
      "Give the MSPs next week.",
      "Give response to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give a response next week.",
      "John Swinney will give the MSPs.",
      "The Deputy Minister will give his response next week.",
      "Give next week to respond to the report of the death of the schoolboy, Bailey Gwynne.",
      "The Deputy Minister will give the MSPs.",
      "Give next week to respond to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give a response to the report of the death of the schoolboy, Bailey Gwynne.",
      "John Swinney will give the MSPs a response.",
      "John Swinney will give a response to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give the MSPs next week.",
      "The Deputy Minister will give response to the report of the death of the schoolboy, Bailey Gwynne.",
      "The Deputy Minister will give MSPs a response.",
      "The Deputy Minister will give response to the report of the death of an Aberdeen schoolboy.",
      "Give the MSPs a response to the report of the death of a schoolboy named Bailey Gwynne.",
      "The Deputy Minister will give the MSPs next week.",
      "Give the MSPs a response to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give a response next week to the report of the death of a schoolboy named Bailey Gwynne.",
      "John Swinney will give a response next week to the report of the death of an Aberdeen schoolboy.",
      "The Deputy Minister will give next week to respond to the report of the death of the schoolboy, Bailey Gwynne.",
      "The Deputy Minister will give next week to respond to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give the MSPs a response to the report of the death of Bailey Gwynne.",
      "John Swinney will give the MSPs a response to the report of the death of an Aberdeen schoolboy.",
      "The Deputy Minister will give the MSP response to the report of the death of schoolboy Bailey Gwynne.",
      "The Deputy Minister will give the MSP response to the report of the death of an Aberdeen schoolboy."
    ]
  },
  {
    "instance_id": "pyrxsum-89",
    "summary": "Police at the Download Festival have kept Police promise and have been posing for fan photos despite extra security.",
    "summary_trees": [
      "# ::snt Police at the Download Festival have kept Police promise and have been posing for fan photos despite extra security.\n(a / and\n      :op1 (k / keep-01\n            :ARG0 (p / police\n                  :location (f / festival\n                        :name (n / name\n                              :op1 \"Download\"\n                              :op2 \"Festival\")))\n            :ARG1 (p2 / promise-01\n                  :ARG0 p))\n      :op2 (p3 / pose-01\n            :ARG0 p\n            :ARG2 (p4 / photo\n                  :mod (f2 / fan))\n            :concession (s / security\n                  :mod (e / extra))))"
    ],
    "tree": [
      "(k / keep-01\n   :ARG1 (p2 / promise-01\n             :ARG0 (p / police)))",
      "(p3 / pose-01\n    :ARG2 (p4 / photo\n              :mod (f2 / fan)))",
      "(k / keep-01\n   :ARG0 (p / police\n            :location (f / festival\n                         :name (n / name\n                                  :op1 \"Download\"\n                                  :op2 \"Festival\"))))",
      "(p3 / pose-01\n    :ARG2 (p4 / photo\n              :mod (f2 / fan))\n    :concession (s / security\n                   :mod (e / extra)))",
      "(k / keep-01\n   :ARG0 (p / police\n            :location (f / festival\n                         :name (n / name\n                                  :op1 \"Download\"\n                                  :op2 \"Festival\")))\n   :ARG1 (p2 / promise-01\n             :ARG0 p))"
    ],
    "smus": [
      "The police have kept their promise.",
      "Posing for fan photos.",
      "Police at the Download Festival have kept.",
      "Posing for fan photos despite extra security.",
      "Police at the Download Festival have kept their promise."
    ]
  },
  {
    "instance_id": "pyrxsum-90",
    "summary": "Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.",
    "summary_trees": [
      "# ::snt Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.\n(p / possible-01\n      :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                  :ARG2 (s / site\n                        :location-of (n / nest-01)))\n            :ARG1 (t / thing\n                  :ARG0-of (c2 / cause-01\n                        :ARG1 (d / decline-01\n                              :ARG1 (a / and\n                                    :op1 (b / bird\n                                          :mod (s2 / some))\n                                    :op2 (b2 / bee\n                                          :mod s2))\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (f / fast-02)\n                                    :ARG3 (m / more)\n                                    :ARG4 (o / other)))))))"
    ],
    "tree": [
      "(c / compete-01\n   :ARG2 (s / site\n            :location (n / nest-01)))",
      "(d / decline-01\n   :ARG1 (b / bird\n            :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (b2 / bee\n             :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (b / bird\n            :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (b2 / bee\n             :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (h / have-degree-91\n            :ARG2 (f / fast-02)))",
      "(d / decline-01\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / more)))",
      "(d / decline-01\n   :ARG1 (h / have-degree-91\n            :ARG4 (o / other)))",
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG3 (m / more))",
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG4 (o / other))",
      "(h / have-degree-91\n   :ARG3 (m / more)\n   :ARG4 (o / other))",
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG3 (m / more))",
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG4 (o / other))",
      "(h / have-degree-91\n   :ARG3 (m / more)\n   :ARG4 (o / other))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (b / bird\n                      :mod (s2 / some))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (h / have-degree-91\n                      :ARG2 (f / fast-02))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (b2 / bee\n                       :mod (s2 / some))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (h / have-degree-91\n                      :ARG3 (m / more))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (h / have-degree-91\n                      :ARG4 (o / other))))",
      "(h / have-degree-91\n   :ARG2 (f / fast-02)\n   :ARG3 (m / more)\n   :ARG4 (o / other))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                     :ARG2 (s / site\n                              :location (n / nest-01)))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b / bird\n                                        :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG2 (f / fast-02))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b2 / bee\n                                         :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG4 (o / other))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (b / bird\n                                                 :mod (s2 / some)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (f / fast-02)))))))"
    ],
    "smus": [
      "Competition for nest sites.",
      "Some birds are declining.",
      "Some bees are declining.",
      "Declining fast.",
      "Declining more.",
      "Others are declining.",
      "Faster.",
      "faster than others.",
      "more than the others.",
      "Explain the competition for nest sites.",
      "So some birds are declining.",
      "So fast declines are occurring.",
      "So some bees are declining.",
      "So, declining more.",
      "Competition for nest sites can explain this.",
      "Explain why some birds are declining.",
      "Explain why fast declines are occurring.",
      "Explain why some bees are declining.",
      "Explain why it is declining more.",
      "It's possible to explain why some birds are declining.",
      "It's possible to explain why fast declines are occurring.",
      "It's possible to explain why some bees are declining.",
      "Could explain why the decline is more.",
      "It is possible to explain why others are declining.",
      "Competition for nest sites will explain why fast declining sites are occurring.",
      "Competition for nest sites will explain why some bees are declining.",
      "Competition for nest sites will explain why it is declining more."
    ]
  },
  {
    "instance_id": "pyrxsum-91",
    "summary": "The UK should not have to pay \"large\" sums to the EU to trade with EU after Brexit, Boris Johnson has said.",
    "summary_trees": [
      "# ::snt The UK should not have to pay \"large\" sums to the EU to trade with EU after Brexit, Boris Johnson has said.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Boris\"\n                  :op2 \"Johnson\"))\n      :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                  :polarity -\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"UK\"))\n                  :ARG2 (p2 / pay-01\n                        :ARG0 c\n                        :ARG1 (s2 / sum\n                              :mod (l / large))\n                        :ARG2 (o2 / organization\n                              :name (n3 / name\n                                    :op1 \"EU\"))\n                        :purpose (t / trade-01\n                              :ARG0 c\n                              :ARG2 o2\n                              :time (a / after\n                                    :op1 (l2 / leave-15\n                                          :ARG0 c\n                                          :ARG1 o2)))))))"
    ],
    "tree": [
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large)))",
      "(p2 / pay-01\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\")))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :ARG2 (o2 / organization :name (n3 / name :op1 \"EU\"))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :ARG0 c))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                     :ARG2 (p2 / pay-01\n                               :ARG1 (s2 / sum\n                                         :mod (l / large))))))",
      "(r / recommend-01\n   :ARG1 (o / obligate-01\n            :ARG2 (p2 / pay-01\n                      :purpose (t / trade-01\n                                  :time (a / after\n                                           :op1 (l2 / leave-15\n                                                    :ARG1 (o2 / organization :name (n3 / name :op1 \"EU\"))))))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :ARG1 (s2 / sum\n                       :mod (l / large))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :ARG1 (s2 / sum\n                       :mod (l / large))))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                     :ARG2 (p2 / pay-01\n                               :purpose (t / trade-01\n                                           :time (a / after\n                                                    :op1 (l2 / leave-15\n                                                             :ARG1 (o2 / organization :name (n3 / name :op1 \"EU\")))))))))"
    ],
    "smus": [
      "Paying large sums.",
      "Paying for by the EU.",
      "Paying large sums for the UK trade.",
      "Paying large sums for trade with the EU.",
      "The EU pays for the UK's trade.",
      "Boris Johnson has said that it should not.",
      "Payment to the EU for trade after the EU leaves.",
      "Large sums are paid to the EU for the UK's trade.",
      "Large sums are paid to the EU for trade purposes.",
      "Large sums are paid to the EU for trade after the EU leaves."
    ]
  },
  {
    "instance_id": "pyrxsum-92",
    "summary": "A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.",
    "summary_trees": [
      "# ::snt A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / and\n            :op1 (a2 / attack-01\n                  :ARG0 (b / bear\n                        :mod (g / grizzly))\n                  :ARG1 (p2 / person\n                        :ARG0-of (c / cycle-01)))\n            :op2 (k / kill-01\n                  :ARG0 b\n                  :ARG1 p2)\n            :location (o / outside\n                  :op1 (p3 / park\n                        :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\")\n                        :location (n2 / north\n                              :part-of (s2 / state\n                                    :name (n3 / name\n                                          :op1 \"Montana\")\n                                    :location (c2 / country\n                                          :name (n4 / name\n                                                :op1 \"US\")))))\n                  :mod (j / just))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (o / outside\n            :mod (j / just)))",
      "(a2 / attack-01\n    :ARG1 (p2 / person\n              :ARG0 (c / cycle-01)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :mod (j / just)))",
      "(s / say-01\n   :ARG1 (a2 / attack-01\n             :ARG0 (b / bear\n                      :mod (g / grizzly))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly))))",
      "(s / say-01\n   :ARG1 (a2 / attack-01\n             :ARG1 (p2 / person\n                       :ARG0 (c / cycle-01))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :mod (j / just)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (k / kill-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a2 / attack-01\n             :ARG0 (b / bear\n                      :mod (g / grizzly))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (k / kill-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01))))",
      "(a2 / attack-01\n    :ARG0 (b / bear\n             :mod (g / grizzly))\n    :ARG1 (p2 / person\n              :ARG0 (c / cycle-01)))",
      "(a2 / attack-01\n    :ARG0 (b / bear\n             :mod (g / grizzly))\n    :ARG1 (p2 / person\n              :ARG0 (c / cycle-01)))"
    ],
    "smus": [
      "Just outside say.",
      "The cyclists were attacked.",
      "Police say it was just outside.",
      "The grizzly bear was said to have attacked.",
      "The grizzly bear killed, they say.",
      "Cyclers are said to be attacked.",
      "Police say a grizzly bear attacked.",
      "Police say a cyclist was attacked.",
      "A grizzly bear attacked a cyclist.",
      "Outside Glacier National Park, say.",
      "Police say outside Glacier National Park.",
      "Police say they were outside a park in northern Montana.",
      "Outside the park in the northern US state, say the folks.",
      "Police say outside a park in the northern US state."
    ]
  },
  {
    "instance_id": "pyrxsum-93",
    "summary": "A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.",
    "summary_trees": [
      "# ::snt A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (m / man)\n            :ARG2 (a2 / and\n                  :op1 (a3 / assault-01\n                        :ARG0 m\n                        :ARG1 (w / woman)\n                        :mod (v / violent))\n                  :op2 (r / rape-01\n                        :ARG0 m\n                        :ARG1 w)\n                  :location (p2 / park\n                        :mod (c / car)\n                        :mod (s2 / station\n                              :mod (r2 / railway))))))"
    ],
    "tree": [
      "(a / arrest-01\n   :ARG2 (a3 / assault-01\n             :ARG0 (m / man)))",
      "(a / arrest-01\n   :ARG2 (r / rape-01\n            :ARG0 (m / man)))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG1 (m / man)))",
      "(a / arrest-01\n   :ARG2 (a3 / assault-01\n             :ARG1 (w / woman)))",
      "(a / arrest-01\n   :ARG2 (a3 / assault-01\n             :mod (v / violent)))",
      "(a3 / assault-01\n    :ARG1 (w / woman)\n    :mod (v / violent))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :ARG0 (m / man))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (r / rape-01\n                     :ARG0 (m / man))))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG0 m))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (r / rape-01\n            :ARG0 m))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (r / rape-01\n            :ARG0 m))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :ARG1 (w / woman))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :mod (v / violent))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (r / rape-01\n                     :ARG1 (w / woman))))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (p2 / park\n             :mod (c / car)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG1 (w / woman)))",
      "(a / arrest-01\n   :ARG2 (p2 / park\n             :mod (s2 / station\n                      :mod (r2 / railway))))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG1 (w / woman)))"
    ],
    "smus": [
      "The man was arrested for assault.",
      "The man was arrested for rape.",
      "The man was said to have been arrested.",
      "The assault on the woman was arrested.",
      "Arrested for violent assault.",
      "A violent assault on a woman.",
      "The man was arrested for assault, it was said.",
      "The man was arrested for rape, it was said.",
      "Police said the man was arrested.",
      "Arrests were said to have occurred in a car park.",
      "It is said that the arrest was for a violent assault.",
      "The man was arrested for assaulting a woman.",
      "The man was arrested for violent assault.",
      "The man was arrested for rape of a woman.",
      "Police said the man was arrested for assault.",
      "Police said the man was arrested for rape.",
      "Police say the arrest was for violent assault.",
      "Arrests were said to have occurred in a railway station park."
    ]
  },
  {
    "instance_id": "pyrxsum-94",
    "summary": "A diabetic MP who asked Coca-Cola not to take MP Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.",
    "summary_trees": [
      "# ::snt A diabetic MP who asked Coca-Cola not to take MP Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member))\n            :mod (d / diabetes)\n            :ARG0-of (a2 / ask-02\n                  :ARG1 (t / take-01\n                        :polarity -\n                        :ARG0 (c / company\n                              :name (n / name\n                                    :op1 \"Coke-Cola\"))\n                        :ARG1 (t2 / truck\n                              :mod (f / festival\n                                    :name (n2 / name\n                                          :op1 \"Christmas\"))\n                              :poss p2)\n                        :ARG3 (c2 / city\n                              :name (n3 / name\n                                    :op1 \"Leicester\")))\n                  :ARG2 c))\n      :ARG2 (h2 / hypocrisy)\n      :ARG1-of (c3 / cause-01\n            :ARG0 (o / open-01\n                  :ARG0 p\n                  :ARG1 (s / shop\n                        :mod (s2 / sweet))\n                  :location c2)))"
    ],
    "tree": [
      "(a2 / ask-02\n    :ARG1 (t / take-01\n             :polarity -))",
      "(c3 / cause-01\n    :ARG0 (o / open-01\n             :location (c2 / city :name (n3 / name :op1 \"Leicester\"))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :mod (d / diabetes)))",
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member))",
      "(a2 / ask-02\n    :ARG1 (t / take-01\n             :ARG1 (t2 / truck\n                       :poss (p2 / parliament))))",
      "(t / take-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Coke-Cola\")))",
      "(t / take-01\n   :ARG3 (c2 / city\n             :name (n3 / name\n                       :op1 \"Leicester\")))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(c3 / cause-01\n    :ARG0 (o / open-01\n             :ARG1 (s / shop\n                      :mod (s2 / sweet))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -))))",
      "(a / accuse-01\n   :ARG2 (h2 / hypocrisy)\n   :ARG1 (c3 / cause-01\n             :ARG0 (o / open-01\n                      :ARG0 (p / person))))",
      "(a2 / ask-02\n    :ARG1 (t / take-01\n             :ARG3 (c2 / city\n                       :name (n3 / name\n                                 :op1 \"Leicester\"))))",
      "(t / take-01\n   :ARG1 (t2 / truck\n             :mod (f / festival\n                     :name (n2 / name\n                               :op1 \"Christmas\"))))",
      "(a / accuse-01\n   :ARG1 (c3 / cause-01\n             :ARG0 (o / open-01\n                      :ARG1 (s / shop\n                               :mod (s2 / sweet)))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG2 (h2 / hypocrisy))",
      "(t / take-01\n   :ARG1 (t2 / truck\n             :poss (p2 / parliament))\n   :ARG3 (c2 / city\n             :name (n3 / name\n                       :op1 \"Leicester\")))",
      "(t / take-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Coke-Cola\"))\n   :ARG1 (t2 / truck\n             :poss (p2 / parliament)))",
      "(t / take-01\n   :ARG1 (t2 / truck\n             :poss (p2 / parliament))\n   :ARG3 (c2 / city\n             :name (n3 / name\n                       :op1 \"Leicester\")))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG2 (c / company\n                               :name (n / name\n                                        :op1 \"Coke-Cola\")))))",
      "(a / accuse-01\n   :ARG1 (c3 / cause-01\n             :ARG0 (o / open-01\n                      :location (c2 / city\n                                    :name (n3 / name\n                                              :op1 \"Leicester\")))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -)))\n   :ARG2 (h2 / hypocrisy))"
    ],
    "smus": [
      "\"Don't take,\" asked.",
      "Because the opening took place in Leicester.",
      "Parliament has a member.",
      "Sweet shop open.",
      "Take Leicester.",
      "Parliamentarians are accused.",
      "The members are accused.",
      "The diabetics are accused of hypocrisy.",
      "Because a sweet shop is open.",
      "The person who asked not to take was accused.",
      "Take a Christmas truck.",
      "accused of opening a sweet shop.",
      "Parliamentarians are accused of hypocrisy.",
      "Members are accused of hypocrisy.",
      "The people who asked Coke-Cola were accused.",
      "The people who asked to take the parliament's truck were accused.",
      "accused of opening in Leicester",
      "The people who asked not to take were accused of hypocrisy.",
      "The opening of a sweet shop is accused of hypocrisy.",
      "The people who asked Coke-Cola were accused of hypocrisy.",
      "The people who asked to take the parliament's truck were accused of hypocrisy.",
      "The opening in Leicester is accused of hypocrisy.",
      "People were accused of asking to take a Christmas truck.",
      "People who asked Coke-Cola to take were accused of hypocrisy.",
      "People who asked to take a Christmas truck were accused of hypocrisy."
    ]
  },
  {
    "instance_id": "pyrxsum-95",
    "summary": "An Orlando mother who was found not guilty of murdering mother two-year old daughter Caylee has broken Caylee silence six years later.",
    "summary_trees": [
      "# ::snt An Orlando mother who was found not guilty of murdering mother two-year old daughter Caylee has broken Caylee silence six years later.\n(b / break-13\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother))\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Orlando\"))\n            :ARG0-of (f / find-02\n                  :ARG1 (g / guilty-01\n                        :polarity -\n                        :ARG1 p\n                        :ARG2 (m2 / murder-01\n                              :ARG0 p\n                              :ARG1 (p2 / person\n                                    :name (n2 / name\n                                          :op1 \"Caylee\")\n                                    :ARG0-of (h2 / have-rel-role-91\n                                          :ARG1 p\n                                          :ARG2 (d / daughter))\n                                    :age (t / temporal-quantity\n                                          :quant 2\n                                          :unit (y / year)))))))\n      :ARG1 (s / silence\n            :poss p2)\n      :time (a / after\n            :quant (t2 / temporal-quantity\n                  :quant 6\n                  :unit (y2 / year))))"
    ],
    "tree": [
      "(f / find-02\n   :ARG1 (g / guilty-01\n            :polarity -))",
      "(m2 / murder-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Caylee\")))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 (p / person)))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2)))))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 (p / person))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter))))))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year))))))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter)))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p\n                                                            :ARG2 (d / daughter)))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\")\n                                                  :age (t / temporal-quantity\n                                                          :quant 2))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p)\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p)\n                                                  :age (t / temporal-quantity\n                                                          :quant 2))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2)\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2)\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2))))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\")\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2)\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2)\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter)))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter))\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\")\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter)))))))\n   :ARG1 (s / silence\n            :poss p2))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year))\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter)))))))\n   :ARG1 (s / silence\n            :poss p2))"
    ],
    "smus": [
      "Not guilty was found.",
      "Caylee was murdered.",
      "The mother has broken.",
      "People in Orlando have broken.",
      "The person who was not found guilty was broken.",
      "Caylee's silence was broken.",
      "The silence of the people has been broken.",
      "The silence of the two was broken.",
      "The daughter's silence has been broken.",
      "The silence of years has broken.",
      "Those found not guilty are broken 6 years later.",
      "Sixty days later, the silence of the people has broken.",
      "The mother has broken Caylee's silence.",
      "The mother has broken the silence of the two.",
      "The Orlando people broke in years.",
      "The person who is not found guilty is broken after years.",
      "Years later, Caylee's silence was broken.",
      "Years later, the silence of the people has broken.",
      "The silence of the two was broken a couple of years later.",
      "Six years later, the silence of the years has broken.",
      "The mother has broken the silence of her daughter.",
      "The mother has broken the silence of years.",
      "People in Orlando have broken Caylee's silence.",
      "People in Orlando have broken the silence of their own.",
      "People in Orlando have broken the silence of two.",
      "The silence of Caylee was broken by those who were not found guilty.",
      "The person who has broken their silence is not found guilty.",
      "The silence of the two has been broken by those who have not been found guilty.",
      "Years later, the daughter's silence was broken.",
      "Years later, the silence of years old was broken.",
      "People in Orlando have broken the silence of the daughter.",
      "People in Orlando have broken the silence of years.",
      "The daughter's silence has been broken by those whose not found guilty.",
      "The silence of the years has been broken by those who have not been found guilty.",
      "The silence of the two has been broken by those found guilty of murder.",
      "The silence of the years has been broken by those found guilty of murder.",
      "Six years later, people who were found guilty of murdering their own were broken.",
      "Years later, the mother has broken Caylee's silence.",
      "The mother has broken the silence of the two years later.",
      "Six years later, the mother has broken the silence of six years.",
      "Six years later, people in Orlando have broken the silence of two.",
      "Sixty after, those found not guilty have broken their silence.",
      "The two-year-old's silence was broken by those found not guilty six years later.",
      "Six years later, people who were found guilty have broken the silence of two.",
      "Years later, the mother has broken the daughter's silence.",
      "Years later, the mother has broken the silence of years.",
      "Years later, people in Orlando have broken Caylee's silence.",
      "In the next two years, people in Orlando have broken the silence of two.",
      "Six years later, people in Orlando have broken the silence of the daughter.",
      "Six years later, people in Orlando have broken the silence of six years old.",
      "Years later, people who were not found guilty have broken Caylee's silence.",
      "Years later, people who have not been found guilty have broken their silence.",
      "After years, people who have not been found guilty have broken the silence of two - age.",
      "Six years later, people who have not been found guilty have broken the silence of the years.",
      "After years, people who have found guilty have broken the silence of the two.",
      "Years later, people in Orlando have broken the silence of their daughter.",
      "Years later, people in Orlando have broken the silence of years.",
      "Years later, people who have not been found guilty have broken the daughter's silence.",
      "Years later, people who have not been found guilty have broken the silence of years.",
      "Six years later, people found guilty of murder have broken the silence of two.",
      "Six years later, people who have been found guilty of murdering their own people have broken their silence.",
      "Years later, people who have been found guilty of murdering their own people have broken their silence.",
      "After years, people whose guilt has found guilty of murdering a two -  age person have broken their silence.",
      "Years later, people whose guilt has been found for murdering their daughter have broken their silence.",
      "After years, people whose guilt has found guilty of murdering two years old have broken their silence.",
      "Years later, people who have been found guilty of murdering their own years-olds have broken their silence."
    ]
  },
  {
    "instance_id": "pyrxsum-96",
    "summary": "The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.",
    "summary_trees": [
      "# ::snt The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Wales\"))\n                  :ARG2 (a / archbishop)))\n      :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                  :mod (d / devolve-01)\n                  :beneficiary c)\n            :ARG2-of (h2 / have-degree-91\n                  :ARG1 s2\n                  :ARG3 (l / less)\n                  :ARG4 (s3 / settlement\n                        :ARG1-of (o / offer-01\n                              :ARG3 (a2 / and\n                                    :op1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Scotland\"))\n                                    :op2 (c3 / country\n                                          :name (n3 / name\n                                                :op1 \"Northern\"\n                                                :op2 \"Ireland\"))))))))"
    ],
    "tree": [
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Wales\")))",
      "(o / offer-01\n   :ARG3 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\")))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :beneficiary (c / country :name (n / name :op1 \"Wales\")))\n   :ARG2 (h2 / have-degree-91\n             :ARG1 s2))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG2 (a / archbishop))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG2 (a / archbishop))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01))\n   :ARG2 (h2 / have-degree-91\n             :ARG1 s2))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :beneficiary (c / country :name (n / name :op1 \"Wales\")))\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (l / less)))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01))\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (l / less)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Wales\")))))",
      "(h2 / have-degree-91\n    :ARG4 (s3 / settlement\n              :ARG1 (o / offer-01\n                       :ARG3 (c2 / country\n                                 :name (n2 / name\n                                           :op1 \"Scotland\")))))",
      "(h2 / have-degree-91\n    :ARG4 (s3 / settlement\n              :ARG1 (o / offer-01\n                       :ARG3 (c3 / country\n                                 :name (n3 / name\n                                           :op1 \"Northern\"\n                                           :op2 \"Ireland\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG1 (s2 / settlement))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG1 (s2 / settlement))))",
      "(h2 / have-degree-91\n    :ARG3 (l / less)\n    :ARG4 (s3 / settlement\n              :ARG1 (o / offer-01\n                       :ARG3 (c2 / country\n                                 :name (n2 / name\n                                           :op1 \"Scotland\")))))",
      "(h2 / have-degree-91\n    :ARG3 (l / less)\n    :ARG4 (s3 / settlement\n              :ARG1 (o / offer-01\n                       :ARG3 (c3 / country\n                                 :name (n3 / name\n                                           :op1 \"Northern\"\n                                           :op2 \"Ireland\")))))",
      "(s / say-01\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (c2 / country\n                                                   :name (n2 / name\n                                                             :op1 \"Scotland\")))))))"
    ],
    "smus": [
      "Wales",
      "Scotland is offered.",
      "Northern Ireland is offered.",
      "A settlement for Wales would be less fair.",
      "Devolvement settlements are less fair.",
      "settlement offered to Scotland",
      "settlement offered to Northern Ireland",
      "Fair is the settlement offered to Scotland.",
      "Less than the settlement offered to Scotland.",
      "The Archbishop has said it is less fair.",
      "Fair is the settlement offered to Northern Ireland.",
      "Less than the settlement offered to Northern Ireland.",
      "It is said that the settlement offered to Scotland is fair.",
      "It is said that the settlement offered to Northern Ireland is fair.",
      "The Archbishop has said that the settlement offered to Scotland is fair.",
      "The Archbishop has said that the settlement offered to Northern Ireland is fair."
    ]
  },
  {
    "instance_id": "pyrxsum-97",
    "summary": "Labour will keep Labour election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.",
    "summary_trees": [
      "# ::snt Labour will keep Labour election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.\n(w / warn-01\n      :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                  :polarity -\n                  :ARG1 (a / avoid-01\n                        :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                    :mod (s2 / some)))))\n            :ARG2 (k / keep-01\n                  :ARG0 (p2 / political-party\n                        :name (n / name\n                              :op1 \"Labour\"))\n                  :ARG1 (p3 / promise-01\n                        :ARG0 p2\n                        :mod (e / elect-01))\n                  :concession (c2 / certain\n                        :polarity -\n                        :domain (l / leave-15\n                              :ARG1 (c3 / country\n                                    :name (n2 / name\n                                          :op1 \"Great\"\n                                          :op2 \"Britain\")))))))"
    ],
    "tree": [
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))",
      "(c / cut-02\n   :ARG1 (s / service\n            :mod (s2 / some)))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01)))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(h / have-concession-91\n   :ARG2 (k / keep-01\n            :ARG1 (p3 / promise-01\n                      :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\")))))",
      "(h / have-concession-91\n   :ARG2 (k / keep-01\n            :concession (c2 / certain\n                            :polarity -)))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\")))",
      "(h / have-concession-91\n   :ARG2 (k / keep-01\n            :ARG1 (p3 / promise-01\n                      :mod (e / elect-01))))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :concession (c2 / certain\n                                     :polarity -))))",
      "(h / have-concession-91\n   :ARG2 (k / keep-01\n            :ARG0 (p2 / political-party\n                      :name (n / name\n                               :op1 \"Labour\"))))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01))\n   :concession (c2 / certain\n                   :polarity -))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :mod (e / elect-01)))))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :polarity -)\n   :ARG2 (k / keep-01\n            :concession (c2 / certain\n                            :polarity -)))",
      "(p / possible-01\n   :ARG1 (a / avoid-01\n            :ARG1 (c / cut-02\n                     :ARG1 (s / service\n                              :mod (s2 / some)))))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :concession (c2 / certain\n                   :polarity -))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01)))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01)))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :ARG1 (a / avoid-01\n                     :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                       :mod (s2 / some))))))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :polarity -)\n   :ARG2 (k / keep-01\n            :ARG0 (p2 / political-party\n                      :name (n / name\n                               :op1 \"Labour\"))))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :ARG1 (p3 / promise-01\n             :ARG0 p2)\n   :concession (c2 / certain\n                   :polarity -))"
    ],
    "smus": [
      "Labour will keep its promises.",
      "Some services are cut.",
      "Keep the election promises.",
      "The first minister has warned.",
      "Labour will keep its promises, however.",
      "Keep, despite uncertainty.",
      "Labour will keep.",
      "But keep the election promises.",
      "Labour has been warned to keep its promises, but",
      "warned, but keep despite uncertainty.",
      "Labour will keep, though.",
      "Keep election promises, if not for certain.",
      "warned, but does keep election promises.",
      "Labour will keep, if not for certain.",
      "warned, Labour will keep.",
      "Labour will keep its election promises.",
      "The first minister has warned that Labour will keep its promises.",
      "The first minister has warned that despite uncertainty, \"keep.\"",
      "Labour will keep its election promises, but with no certainty.",
      "The first minister has warned that despite keeping election promises,",
      "The first minister has warned that Labour will keep."
    ]
  },
  {
    "instance_id": "pyrxsum-98",
    "summary": "A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.",
    "summary_trees": [
      "# ::snt A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.\n(h / hear-01\n      :ARG0 (c / court)\n      :ARG1 (u / use-01\n            :ARG0 (p / person\n                  :ARG0-of (d / defraud-01)\n                  :ARG1-of (c2 / convict-01))\n            :ARG1 (p2 / plot-01\n                  :ARG0 p\n                  :ARG1 (e / escape-01\n                        :ARG0 p)\n                  :mod (ii / ingenious))\n            :ARG2 (t / trick-01\n                  :ARG0 p\n                  :ARG1 (w / warden\n                        :mod (p3 / prison))\n                  :ARG2 (l / let-01\n                        :ARG0 w\n                        :ARG1 (f / free-04\n                              :ARG1 p)))))"
    ],
    "tree": [
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person)))",
      "(u / use-01\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(p2 / plot-01\n    :ARG1 (e / escape-01\n             :ARG0 (p / person)))",
      "(t / trick-01\n   :ARG2 (l / let-01\n            :ARG0 (w / warden)))",
      "(l / let-01\n   :ARG1 (f / free-04\n            :ARG1 (p / person)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison)))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG0 (p / person))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person))))",
      "(p2 / plot-01\n    :ARG1 (e / escape-01\n             :ARG0 (p / person))\n    :mod (ii / ingenious))",
      "(t / trick-01\n   :ARG2 (l / let-01\n            :ARG1 (f / free-04\n                     :ARG1 (p / person))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG0 (d / defraud-01))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG1 (c2 / convict-01))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :mod (ii / ingenious))))",
      "(u / use-01\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG2 (l / let-01\n                              :ARG0 (w / warden)))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG0 (p / person))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(u / use-01\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 (p / person)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison))\n   :ARG2 (l / let-01\n            :ARG0 w))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison))\n   :ARG2 (l / let-01\n            :ARG0 w))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :mod (ii / ingenious))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG1 (w / warden\n                              :mod (p3 / prison)))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG1 (c2 / convict-01))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :mod (ii / ingenious))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG1 (e / escape-01\n                               :ARG0 (p / person)))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG2 (l / let-01\n                              :ARG0 (w / warden)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison))\n   :ARG2 (l / let-01\n            :ARG1 (f / free-04\n                     :ARG1 (p / person))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG1 (w / warden\n                              :mod (p3 / prison)))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG1 (w / warden\n                              :mod (p3 / prison)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))"
    ],
    "smus": [
      "People used a plot.",
      "People used to trick.",
      "The plot was to escape.",
      "Trick the wardens into letting them in.",
      "letting people be free.",
      "used an ingenious plot.",
      "Trick the prison wardens.",
      "It was heard that the plot was used by the people.",
      "It was heard that people used to trick.",
      "The plot used was to escape.",
      "Ingenious plot to escape.",
      "Trick of letting people be free.",
      "It has been heard that fraudsters used.",
      "It was heard that the convicted used.",
      "It was heard that an ingenious plot was used.",
      "used to trick prison wardens.",
      "The court heard that the plot was used by the people.",
      "The court heard that the trick was used by the people.",
      "It was heard that the plot was used to escape.",
      "The fraudster used a plot.",
      "The convicted used a plot.",
      "Fraudsters used the trick.",
      "The convicted used the trick.",
      "Ingenious plot used to trick people.",
      "used to trick people into letting them be free.",
      "Trick the prison wardens into letting them.",
      "The court heard that the fraudsters used.",
      "The court heard that the convicted used the sentence.",
      "The court heard that the ingenious plot used.",
      "It was heard that the prison wardens were used to trick.",
      "The fraudsters used an ingenious plot.",
      "The convicted used an ingenious plot.",
      "People used the plot to trick the wardens into letting them in.",
      "The plot to 'escape' used to trick people.",
      "The court heard that the plot was used to escape.",
      "Fraudsters used a plot to escape.",
      "The convicted used an escape plot.",
      "The convicted used the trick of letting the wardens.",
      "People used the plot to trick prison wardens.",
      "The court heard that the prison wardens were used to trick.",
      "Fraudsters used the trick to trick prison wardens.",
      "The convicted used the trick on the prison wardens.",
      "The plot to escape people used to trick the wardens into letting them in.",
      "The ingenious plot used to trick prison wardens.",
      "Fraudsters used the trick of letting themselves free.",
      "The convicted used the trick of letting them be free.",
      "The plot to escape people used to trick prison wardens.",
      "The ingenious plot used to trick people into letting them free.",
      "The plot to escape people used to trick the people into letting them free.",
      "Fraudsters used a plot to trick the wardens into letting them in.",
      "The convicted used the plot to trick the wardens into letting them in.",
      "Fraudsters used the plot to trick prison wardens.",
      "Fraudsters used an ingenious plot to trick the wardens into letting them in.",
      "The convicted used the plot to trick the prison wardens.",
      "The convicted used an ingenious plot to trick the wardens into letting them in.",
      "Fraudsters used the escape plot to trick the wardens into letting them in.",
      "Fraudsters used an ingenious plot to trick prison wardens.",
      "The convicted used the plot to trick the letting them free.",
      "The convicted used the plot to escape to trick the wardens into letting them in.",
      "The convicted used an ingenious plot to trick the prison wardens.",
      "Fraudsters used an escape plot to trick prison wardens.",
      "The convicted used the plot to escape to trick the prison wardens.",
      "The convicted used the plot to escape to trick the letting them free."
    ]
  },
  {
    "instance_id": "pyrxsum-99",
    "summary": "The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.",
    "summary_trees": [
      "# ::snt The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.\n(r / reopen-01\n      :ARG1 (r2 / road\n            :name (n / name\n                  :op1 \"M6\")\n            :location (b / between\n                  :op1 (c / city\n                        :name (n2 / name\n                              :op1 \"Wolverhampton\"))\n                  :op2 (c2 / city\n                        :name (n3 / name\n                              :op1 \"Walsall\")))\n            :mod (m / motorway))\n      :time (a / after\n            :op1 (c3 / crash-01\n                  :mod (f / fatal))))"
    ],
    "tree": [
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway)))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\")))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\"))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :location (b / between\n                          :op1 (c / city\n                                  :name (n2 / name\n                                            :op1 \"Wolverhampton\"))))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))"
    ],
    "smus": [
      "Motorway roads reopened",
      "The M6 has been reopened.",
      "Motorway roads reopened after a fatal crash.",
      "The M6 was reopened after a fatal crash.",
      "The road between Wolverhampton was reopened after a fatal crash."
    ]
  }
]