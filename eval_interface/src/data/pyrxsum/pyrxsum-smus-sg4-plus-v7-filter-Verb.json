[
  {
    "instance_id": "pyrxsum-0",
    "summary": "Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.",
    "summary_trees": [
      "# ::snt Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.\n(j / join-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Wesley\"\n                  :op2 \"Sneijder\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Netherlands\"))\n                  :ARG3 (m / midfielder)))\n      :ARG1 (t2 / team\n            :name (n3 / name\n                  :op1 \"Nice\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Ligue\"\n                        :op2 1)\n                  :mod (c / country\n                        :name (n5 / name\n                              :op1 \"France\"))))\n      :manner (t3 / transfer-01\n            :ARG1 p\n            :ARG1-of (f / free-03)))"
    ],
    "tree": [
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder))))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (p / person :name (n / name :op1 \"Wesley\" :op2 \"Sneijder\")))\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p\n               :ARG1 (f / free-03)))"
    ],
    "smus": [
      "Wesley Sneijder has joined.",
      "The Dutch have joined.",
      "The midfielder has joined.",
      "joined the Ligue 1 team.",
      "joined the French league team.",
      "Wesley Sneijder has joined Nice.",
      "Wesley Sneijder has joined the Ligue 1 team.",
      "Wesley Sneijder has joined the French league team.",
      "The Dutch have joined Nice.",
      "The Dutch have joined the Ligue 1 side.",
      "The Dutch have joined the French league team.",
      "The midfielder has joined Nice.",
      "The midfielder has joined the Ligue 1 team.",
      "The midfielder has joined the French league team.",
      "Wesley Sneijder has joined by free transfer.",
      "The Dutch have joined on a free transfer.",
      "The midfielder has joined on a free transfer.",
      "Nice were joined by a free transfer to Wesley Sneijder.",
      "The Ligue 1 team was joined by a free transfer to Wesley Sneijder.",
      "The French league team was joined by a free transfer to Wesley Sneijder.",
      "Wesley Sneijder has joined Nice on a free transfer.",
      "Wesley Sneijder has joined the Ligue 1 team on a free transfer.",
      "Wesley sneijder has joined the French league side on a free transfer.",
      "The Dutch have joined Nice on a free transfer.",
      "The Dutch have joined the Ligue 1 side on a free transfer.",
      "The Dutch have joined the French league team on a free transfer.",
      "The midfielder has joined Nice on a free transfer.",
      "The midfielder has joined the Ligue 1 team on a free transfer.",
      "The midfielder has joined the French league team on a free transfer."
    ]
  },
  {
    "instance_id": "pyrxsum-1",
    "summary": "A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.",
    "summary_trees": [
      "# ::snt A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.\n(s / say-01\n      :ARG0 (d / document\n            :source (g / government-organization\n                  :name (n / name\n                        :op1 \"FBI\")))\n      :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g2 / government-organization\n                              :name (n2 / name\n                                    :op1 \"State\"\n                                    :op2 \"Department\"))\n                        :ARG2 (o / official)))\n            :ARG1 g\n            :ARG2 (c / change-01\n                  :ARG0 g\n                  :ARG1 (c2 / classify-01\n                        :ARG1 (e / email-01\n                              :ARG0 (p3 / person\n                                    :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\"))))\n                  :manner (q / quid-pro-quo))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\"))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g2 / government-organization\n                                         :name (n2 / name\n                                                   :op1 \"State\"\n                                                   :op2 \"Department\"))))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG1 (g / government-organization\n                     :name (n / name\n                              :op1 \"FBI\"))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 (g / government-organization :name (n / name :op1 \"FBI\")))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG1 (c2 / classify-01\n                               :ARG1 (e / email-01\n                                        :ARG0 (p3 / person\n                                                  :name (n3 / name\n                                                            :op1 \"Hillary\"\n                                                            :op2 \"Clinton\")))))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :manner (q / quid-pro-quo))))",
      "(s / say-01\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (o / official)))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g2 / government-organization\n                                         :name (n2 / name\n                                                   :op1 \"State\"\n                                                   :op2 \"Department\"))))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG1 g))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 g)))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG1 (c2 / classify-01\n                               :ARG1 (e / email-01\n                                        :ARG0 (p3 / person\n                                                  :name (n3 / name\n                                                            :op1 \"Hillary\"\n                                                            :op2 \"Clinton\")))))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :manner (q / quid-pro-quo))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (o / official)))))",
      "(g / government-organization\n   :name (n / name\n            :op1 \"FBI\"))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\")))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official))))",
      "(p / pressure-01\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG2 (c / change-01\n            :ARG1 (c2 / classify-01\n                      :ARG1 (e / email-01\n                               :ARG0 (p3 / person\n                                         :name (n3 / name\n                                                   :op1 \"Hillary\"\n                                                   :op2 \"Clinton\"))))))",
      "(p / pressure-01\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG1 (c2 / classify-01\n                      :ARG1 (e / email-01\n                               :ARG0 (p3 / person\n                                         :name (n3 / name\n                                                   :op1 \"Hillary\"\n                                                   :op2 \"Clinton\"))))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(p2 / person\n    :ARG0 (h / have-org-role-91\n             :ARG1 (g2 / government-organization\n                       :name (n2 / name\n                                 :op1 \"State\"\n                                 :op2 \"Department\"))))",
      "(p2 / person\n    :ARG0 (h / have-org-role-91\n             :ARG2 (o / official)))"
    ],
    "smus": [
      "According to the FBI documents --",
      "Pressure from the State Department, they said.",
      "Pressure on the FBI, said.",
      "Pressure was put on the FBI to change, they said.",
      "Pressure was put on Hillary Clinton's email classification to change.",
      "Pressure was put on change, with quid pro quo.",
      "The official said pressure was on.",
      "According to the FBI documents, the State Department pressured.",
      "The FBI documents say they were under pressure.",
      "The FBI documents said pressure was on to change.",
      "According to the FBI documents, pressure was exerted to change the classification of Hillary Clinton's email.",
      "The FBI documents said pressure was on to change \"quid pro quo.\"",
      "According to FBI documents, the official exerted pressure.",
      "The official pressured.",
      "Pressure was put on the FBI to change.",
      "Pressured to change the classification of Hillary Clinton's email.",
      "Pressure was on to change with quid pro quo.",
      "The State Department pressured the FBI to change.",
      "The State Department pressured to change the classification of Hillary Clinton's email.",
      "The State Department pressured for a quid pro quo change.",
      "The official pressured the FBI to change.",
      "The official pressured to change the classification of Hillary Clinton's email.",
      "The official pressured for a quid pro quo change.",
      "Change the classification of Hillary Clinton's email.",
      "Hillary Clinton's email classification would change quid pro quo.",
      "Clinton email classified."
    ]
  },
  {
    "instance_id": "pyrxsum-2",
    "summary": "American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.",
    "summary_trees": [
      "# ::snt American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.\n(t / take-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jason\"\n                  :op2 \"Dufner\")\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"America\")))\n      :ARG1 (l / lead-01\n            :ARG0 p\n            :ARG2 (s / shot\n                  :quant 5))\n      :ARG2 (r / round\n            :ord (o / ordinal-entity\n                  :value 3)\n            :subevent-of (g / game\n                  :name (n3 / name\n                        :op1 \"Memorial\"\n                        :op2 \"Tournament\")))\n      :time (a / after\n            :op1 (c2 / card-01\n                  :ARG0 p\n                  :ARG1 (e / eagle)\n                  :time (h / hole\n                        :ord (o2 / ordinal-entity\n                              :value 18))\n                  :time (d / date-entity\n                        :weekday (f / friday)))))"
    ],
    "tree": [
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\")))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))"
    ],
    "smus": [
      "Jason Dufner will take.",
      "Americans will take.",
      "Take the lead with 5 shots.",
      "Take the third round.",
      "Take after Jason Dufner carding.",
      "Take after carding an eagle.",
      "Take after carding at hole 18.",
      "Take after carding on Friday.",
      "Jason Dufner will take the lead.",
      "Jason Dufner will take the lead with 5 shots.",
      "The Americans will take the lead.",
      "Americans will take the lead with 5 shots.",
      "Jason Dufner will take after carding.",
      "Jason Dufner will take after carding an eagle.",
      "Jason Dufner will take after carding at the 18th hole.",
      "Jason Dufner will take after carding on Friday.",
      "The Americans will take after carding.",
      "America will take after carding an eagle.",
      "After carding at the 18th hole, the Americans will take.",
      "After Friday's carding, Americans will take.",
      "Jason Dufner will take the lead in the third round.",
      "Jason Dufner will take the lead in the Memorial Tournament round.",
      "Take the lead on 5 shots in round 3.",
      "After carding Jason Dufner will take the lead.",
      "After carding an eagle, Jason Dufner will take the lead.",
      "After carding at the 18th hole, Jason Dufner will take the lead.",
      "After carding on Friday, Jason Dufner will take the lead.",
      "After carding the eagle, take the lead on 5 shots.",
      "After carding on the 18th hole, take the lead with 5 shots.",
      "After carding on Friday, take the lead with 5 shots.",
      "After carding the eagle, take the third round.",
      "Take the third round after carding at the 18th hole.",
      "Take the third round after carding on Friday.",
      "After carding an eagle, take the round of the Memorial Tournament.",
      "After carding on the 18th hole, take the round of the Memorial Tournament.",
      "After carding on Friday, take round of the Memorial Tournament.",
      "Jason Dufner will take the lead in the round of the Memorial Tournament.",
      "Jason Dufner will take the lead with five shots in the third round.",
      "Jason Dufner will take the lead with five shots in the round of the Memorial Tournament.",
      "America will take the lead in the third round.",
      "The Americans will take the lead in the Memorial Tournament round.",
      "The Americans will take the lead with five shots in the third round.",
      "The Americans will take the lead with 5 shots in the round of the Memorial Tournament.",
      "Jason Dufner will take the lead after carding.",
      "Jason Dufner will take the lead after carding an eagle.",
      "Jason Dufner will take the lead after carding at the 18th hole.",
      "Jason Dufner will take the lead after carding on Friday.",
      "Jason Dufner will take the lead with 5 shots after carding.",
      "Jason Dufner will take the lead with five shots after carding an eagle.",
      "Jason Dufner will take the lead with a 5-shot after carding at the 18th hole.",
      "Jason Dufner will take the lead with five shots after carding on Friday.",
      "After carding, the Americans will take the lead.",
      "After carding the eagle, the Americans will take the lead.",
      "After carding in the 18th hole, the Americans will take the lead.",
      "After carding Friday, the Americans will take the lead.",
      "After carding, the Americans will take the lead with 5 shots.",
      "After carding an eagle, the Americans will take the lead with 5 shots.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots.",
      "After carding Friday, the Americans will take the lead with 5 shots.",
      "Jason Dufner will take the third round after carding.",
      "Jason Dufner will take the third round after carding an eagle.",
      "Jason Dufner will take the third round after carding on the 18th hole.",
      "Jason Dufner will take the third round after carding on Friday.",
      "Jason Dufner will take the Memorial Tournament round after carding.",
      "Jason Dufner will take the Memorial Tournament round after carding an eagle.",
      "Jason Dufner will take the Memorial Tournament round after carding on the 18th hole.",
      "Jason Dufner will take the Memorial Tournament round after carding on Friday.",
      "After carding, the Americans will take the third round.",
      "After carding the eagle, the Americans will take the third round.",
      "After carding at the 18th hole, the Americans will take the 3rd round.",
      "After carding Friday, the Americans will take the third round.",
      "After carding, the Americans will take the Memorial Tournament round.",
      "Jason Dufner will take the lead in the third round after carding.",
      "Jason Dufner will take the lead in the third round after carding an eagle.",
      "Jason Dufner will take the lead into the third round after carding at the 18th hole.",
      "Jason Dufner will take the lead in the third round after carding on Friday.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding an eagle.",
      "Jason Dufner will take the lead into the Memorial Tournament round after carding at the 18th hole.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding on Friday.",
      "After carding Jason Dufner, the lead of five shots will take the third round.",
      "After carding the eagle, take the lead on five shots into the third round.",
      "After carding at the 18th hole, take the lead with 5 shots into the third round.",
      "After carding Friday, take the lead on five shots into the third round.",
      "After carding Jason Dufner, it will take the lead with 5 shots in the Memorial Tournament round.",
      "After carding at the 18th hole, take the lead with 5 shots into the round of the Memorial Tournament.",
      "Jason Dufner will take the lead with five shots in the third round after carding.",
      "Jason Dufner will take the lead on five shots in the third round after carding an eagle.",
      "Jason Dufner will take the lead with five shots in the third round after carding at the 18th hole.",
      "Jason Dufner will take the lead with five shots in the third round after carding on Friday.",
      "Jason Dufner will take the lead with five shots in the Memorial Tournament round after carding an eagle.",
      "Jason Dufner will take the lead with five shots in the Memorial Tournament round after carding at the 18th hole.",
      "After carding, the Americans will take the lead in the third round.",
      "After carding an eagle, the Americans will take the lead in the third round.",
      "After carding at the 18th hole, the Americans will take the lead into the 3rd round.",
      "After carding on Friday, the Americans will take the lead in the third round.",
      "After carding, the Americans will take the lead into the Memorial Tournament round.",
      "After carding an eagle, the Americans will take the lead into the Memorial Tournament round.",
      "After carding at the 18th hole, the Americans will take the lead into the Memorial Tournament round.",
      "After carding on Friday, the Americans will take the lead into the Memorial Tournament round.",
      "After carding, the Americans will take the lead with five shots into the third round.",
      "After carding the eagle, the Americans will take the lead with five shots into the third round.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots into the 3rd round.",
      "After carding Friday, the Americans will take the lead with 5 shots into the 3rd round.",
      "After carding, the Americans will take the lead with 5 shots into the Memorial Tournament round.",
      "After carding an eagle, the Americans will take the lead with 5 shots in the Memorial Tournament round.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots in the Memorial Tournament round.",
      "After carding Friday, the Americans will take the lead with 5 shots in the Memorial Tournament round.",
      "After Jason Dufner carding.",
      "After carding an eagle.",
      "After carding on the 18th hole.",
      "After carding on Friday.",
      "Carding at the 18th hole.",
      "Carding an eagle at the 18th hole."
    ]
  },
  {
    "instance_id": "pyrxsum-3",
    "summary": "A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.",
    "summary_trees": [
      "# ::snt A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.\n(s / say-01\n      :ARG0 (p / police\n            :ARG1-of (l / local-02))\n      :ARG1 (q / question-01\n            :ARG1 (m / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 \"Peru\"))\n            :time (a / after\n                  :op1 (p2 / pose-01\n                        :ARG0 m\n                        :manner (n3 / naked)\n                        :location (r / ruin\n                              :name (n4 / name\n                                    :op1 \"Machu\"\n                                    :op2 \"Picchu\"))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02)))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :ARG1 (m / man\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"Britain\")))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Peru\"))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :ARG0 (m / man)))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))",
      "(s / say-01\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :location (r / ruin\n                                           :name (n4 / name\n                                                     :op1 \"Machu\"\n                                                     :op2 \"Picchu\"))))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :ARG1 (m / man\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"Britain\")))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Peru\"))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :ARG0 (m / man)))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :location (r / ruin\n                                           :name (n4 / name\n                                                     :op1 \"Machu\"\n                                                     :op2 \"Picchu\"))))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\"))))",
      "(q / question-01\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\")))",
      "(q / question-01\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :ARG0 (m / man))))",
      "(q / question-01\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :manner (n3 / naked))))",
      "(q / question-01\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :location (r / ruin\n                                  :name (n4 / name\n                                            :op1 \"Machu\"\n                                            :op2 \"Picchu\")))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\")))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :ARG0 m)))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :manner (n3 / naked))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :location (r / ruin\n                                  :name (n4 / name\n                                            :op1 \"Machu\"\n                                            :op2 \"Picchu\")))))",
      "(q / question-01\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\"))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :ARG0 (m / man))))",
      "(q / question-01\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\"))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :manner (n3 / naked))))",
      "(q / question-01\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\"))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :location (r / ruin\n                                  :name (n4 / name\n                                            :op1 \"Machu\"\n                                            :op2 \"Picchu\")))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\"))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :ARG0 m)))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\"))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :location (r / ruin\n                                  :name (n4 / name\n                                            :op1 \"Machu\"\n                                            :op2 \"Picchu\")))))",
      "(m / man\n   :mod (c / country\n           :name (n / name\n                    :op1 \"Britain\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Britain\"))",
      "(c2 / country\n    :name (n2 / name\n              :op1 \"Peru\"))",
      "(a / after\n   :op1 (p2 / pose-01\n            :ARG0 (m / man)))",
      "(a / after\n   :op1 (p2 / pose-01\n            :manner (n3 / naked)))"
    ],
    "smus": [
      "Local police said --",
      "The British man was said to be questioned.",
      "Questioned in Peru, said.",
      "Questioned after man posing, said.",
      "Questioned after posing as a naked man, said.",
      "Questioned after posing in the Ruins of Machu Picchu, said.",
      "Local police said the British man was questioned.",
      "Local police said the question was being questioned in Peru.",
      "Local police said the question was asked after the man was posing.",
      "Local police said the questioning occurred after the naked man was posing.",
      "Local police said the question was posed after posing in the Ruins of Machu Picchu.",
      "The British man was questioned.",
      "Questioned in Peru.",
      "Questioned after the man was posing.",
      "Questioned after posing as a naked man.",
      "Questioned after posing in the Ruins of Machu Picchu.",
      "The British man was questioned in Peru.",
      "The British man was questioned after posing.",
      "The British man was questioned after posing naked.",
      "The British man was questioned after posing in the Machu Picchu ruin.",
      "In Peru, after posing as a man, questions were asked.",
      "Questioned in Peru after posing as a naked man.",
      "Questions were posed in Peru after the Machu Picchu ruin.",
      "The British man was questioned in Peru after posing.",
      "The British man was questioned in Peru after posing in the Machu Picchu ruin.",
      "After the man posing.",
      "After posing as a naked man.",
      "After posing in the Ruins of Machu Picchu.",
      "Posing in the Ruins of Machu Picchu.",
      "posing as a naked man in the Ruins of Machu Picchu."
    ]
  },
  {
    "instance_id": "pyrxsum-4",
    "summary": "Great Britain skeleton racer David Swift has retired from the sport.",
    "summary_trees": [
      "# ::snt Great Britain skeleton racer David Swift has retired from the sport.\n(r / retire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Swift\")\n            :ARG0-of (r2 / race-02\n                  :ARG3 (s / skeleton))\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Great\"\n                        :op2 \"Britain\")))\n      :ARG1 (s2 / sport))"
    ],
    "tree": [
      "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\")))",
      "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton))))",
      "(r / retire-01\n   :ARG0 (p / person\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Great\"\n                              :op2 \"Britain\"))))",
      "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\"))\n   :ARG1 (s2 / sport))",
      "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton)))\n   :ARG1 (s2 / sport))"
    ],
    "smus": [
      "David Swift retired.",
      "The skeleton race has retired.",
      "Great Britain retires.",
      "David Swift has retired from the sport.",
      "Skeletal racers have retired from sport."
    ]
  },
  {
    "instance_id": "pyrxsum-5",
    "summary": "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.",
    "summary_trees": [
      "# ::snt Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.\n(s / set-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\"\n                  :op2 \"Dunlop\"))\n      :ARG1 (t / time\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (f / fast-02)\n                  :ARG3 (m / most)))\n      :beneficiary (a / and\n            :op1 (c / class\n                  :name (n2 / name\n                        :op1 \"Ulster\"\n                        :op2 \"Grand\"\n                        :op3 \"Prix\"\n                        :op4 \"Superbike\"))\n            :op2 (c2 / class\n                  :name (n3 / name\n                        :op1 \"Superstock\")))\n      :time (s2 / session\n            :mod (p2 / practice-01)\n            :ARG1-of (d / delay-01)\n            :location (c3 / city\n                  :name (n4 / name\n                        :op1 \"Dundrod\"))\n            :time (d2 / date-entity\n                  :weekday (t2 / thursday))))"
    ],
    "tree": [
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(s / set-02\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\"))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(p / person\n   :name (n / name\n            :op1 \"Michael\"\n            :op2 \"Dunlop\"))",
      "(t / time\n   :ARG1 (h / have-degree-91\n            :ARG2 (f / fast-02)))",
      "(t / time\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / most)))"
    ],
    "smus": [
      "Michael Dunlop set.",
      "Set the fastest times.",
      "Set for Superstock classes.",
      "Set during practice sessions.",
      "Sessions were set to be delayed.",
      "Sessions in Dundrod were set.",
      "Michael Dunlop set fast times.",
      "Michael Dunlop set the classes for Ulster Grand Prix Superbike.",
      "Michael Dunlop set the class Superstock.",
      "Michael Dunlop set the times for the practice sessions.",
      "Michael Dunlop set the times for the delayed sessions.",
      "Michael Dunlop set the sessions in Dundrod.",
      "Michael Dunlop set the sessions Thursday.",
      "Fast times were set for the Ulster Grand Prix Superbike classes.",
      "Fast times were set for the Superstock classes.",
      "The fastest times were set for the Ulster Grand Prix Superbike classes.",
      "The quickest times were set for the Superstock classes.",
      "Fast times were set during practice sessions.",
      "Fast times were set for delayed sessions.",
      "Fast times were set during sessions in Dundrod.",
      "Fast times were set for Thursday sessions.",
      "Sessions in Dundrod set the fastest times.",
      "Classes Ulster Grand Prix Superbike were set at times of delayed sessions.",
      "Classes Ulster Grand Prix Superbike were set for sessions in Dundrod.",
      "Classes were set for Ulster Grand Prix Superbike at sessions Thursday.",
      "Superstock classes were set for sessions in Dundrod.",
      "Classes were set for Thursday during sessions.",
      "Michael Dunlop set fast times for the Ulster Grand Prix Superbike classes.",
      "Michael Dunlop set fast times for the Superstock classes.",
      "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike classes.",
      "Michael Dunlop set the fastest times for the Superstock classes.",
      "Michael Dunlop set fast times during practice sessions.",
      "Michael Dunlop set fast times for delayed sessions.",
      "Michael Dunlop set fast times during sessions in Dundrod.",
      "Michael Dunlop set fast times for Thursday sessions.",
      "Michael Dunlop set the fastest times for delayed sessions.",
      "Michael Dunlop set the most times for the sessions in Dundrod.",
      "Michael Dunlop set for Ulster Grand Prix Superbike classes during practice sessions.",
      "Michael Dunlop set for Ulster Grand Prix Superbike classes during the delayed sessions.",
      "Michael Dunlop set for Ulster Grand Prix Superbike classes during sessions in Dundrod.",
      "Michael Dunlop set for Ulster Grand Prix Superbike classes during sessions Thursday.",
      "Michael Dunlop set for the Superstock classes during practice sessions.",
      "Michael Dunlop set for the Superstock classes at the time of the delayed sessions.",
      "Michael Dunlop set for the Superstock classes during sessions in Dundrod.",
      "Michael Dunlop set for the Superstock classes during the sessions Thursday.",
      "Fast times were set for Ulster Grand Prix Superbike classes during practice sessions.",
      "Fast times were set for Ulster Grand Prix Superbike classes during delayed sessions.",
      "Fast times were set for Ulster Grand Prix Superbike classes during sessions in Dundrod.",
      "Fast times were set for Ulster Grand Prix Superbike classes during sessions Thursday.",
      "Fast times were set for Superstock classes during practice sessions.",
      "Fast times were set for Superstock classes during delayed sessions.",
      "Fast times were set for Superstock classes during sessions in Dundrod.",
      "Fast times were set for Superstock classes during sessions Thursday.",
      "The fastest times were set for the Ulster Grand Prix Superbike classes during practice sessions.",
      "The fastest times were set for Ulster Grand Prix Superbike classes during the delayed sessions.",
      "The fastest times were set for the Ulster Grand Prix Superbike classes during sessions in Dundrod.",
      "The fastest times were set for the Ulster Grand Prix Superbike classes during sessions Thursday.",
      "The quickest times were set for Superstock classes during practice sessions.",
      "The quickest times were set for Superstock classes during sessions in Dundrod.",
      "The quickest times were set for the Superstock classes during the sessions Thursday.",
      "Michael Dunlop set fast times for Ulster Grand Prix Superbike classes during practice sessions.",
      "Michael Dunlop set fast times for Ulster Grand Prix Superbike classes during delayed sessions.",
      "Michael Dunlop set fast times for Ulster Grand Prix Superbike classes during sessions in Dundrod.",
      "Michael Dunlop set fast times for Ulster Grand Prix Superbike classes during sessions Thursday.",
      "Michael Dunlop set fast times for Superstock classes during practice sessions.",
      "Michael Dunlop set fast times for Superstock classes during delayed sessions.",
      "Michael Dunlop set fast times for Superstock classes during sessions in Dundrod.",
      "Michael Dunlop set fast times for Superstock classes during sessions Thursday.",
      "Michael Dunlop set the fastest times for Ulster Grand Prix Superbike classes during practice sessions.",
      "Michael Dunlop set the fastest times for Ulster Grand Prix Superbike classes during the delayed sessions.",
      "Michael Dunlop set the fastest times for Ulster Grand Prix Superbike classes during sessions in Dundrod.",
      "Michael Dunlop set the fastest times for Ulster Grand Prix Superbike classes during sessions Thursday.",
      "Michael Dunlop set the shortest times for Superstock classes during practice sessions.",
      "Michael Dunlop set the fastest times for Superstock classes during the delayed sessions.",
      "Michael Dunlop set the fastest times for Superstock classes during sessions in Dundrod.",
      "Michael Dunlop set the shortest times for the Superstock classes during the sessions Thursday.",
      "Practice sessions for delayed action.",
      "Practice sessions in Dundrod.",
      "Practice sessions on Thursday.",
      "Delay sessions will be held Thursday.",
      "Sessions will take place in Dundrod on Thursday.",
      "Delay sessions were held in Dundrod on Thursday.",
      "Delay-in-practice sessions were held in Dundrod on Thursday."
    ]
  },
  {
    "instance_id": "pyrxsum-6",
    "summary": "Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.",
    "summary_trees": [
      "# ::snt Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.\n(s / sign-02\n      :ARG0 (c / club\n            :name (n / name\n                  :op1 \"Old\"\n                  :op2 \"Boys\")\n            :mod (c2 / country\n                  :name (n2 / name\n                        :op1 \"Argentina\"))\n            :poss (t / team\n                  :name (n3 / name\n                        :op1 \"Newell's\")))\n      :ARG1 (p / person\n            :name (n4 / name\n                  :op1 \"Ignacio\"\n                  :op2 \"Scocco\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t2 / team\n                        :name (n5 / name\n                              :op1 \"Sunderland\"))\n                  :ARG3 (s2 / striker)))\n      :ARG3 (c3 / contract\n            :duration (t3 / temporal-quantity\n                  :quant 5\n                  :unit (y / year)))\n      :mod (a / again))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\"))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :unit (y / year))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\")))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\")))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))"
    ],
    "smus": [
      "Old Boys have signed.",
      "The Argentinian club has signed.",
      "Newell's club has signed.",
      "Ignacio Scocco was signed.",
      "The striker has signed.",
      "Old Boys have signed again.",
      "The Argentinian club has signed again.",
      "Newell's club has signed again.",
      "The Old Boys have signed Ignacio Scocco.",
      "Old Boys have signed a striker.",
      "Ignacio Scocco was signed by an Argentinian club.",
      "The striker has been signed by an Argentinian club.",
      "Ignacio Scocco was signed by Newell's club.",
      "The striker has been signed by Newell's club.",
      "Ignacio Scocco has signed a 5-year contract.",
      "The striker has signed a five-year contract.",
      "The Old Boys have signed Ignacio Scocco for a five-year contract.",
      "Old Boys have signed a striker on a five-year contract.",
      "The Argentinian club has signed Ignacio Scocco for a five-year contract.",
      "The Argentinian club have signed the striker a five-year contract.",
      "Newell's club has signed Ignacio Scocco for a five-year contract.",
      "Newell's club have signed the striker on a five-year contract."
    ]
  },
  {
    "instance_id": "pyrxsum-7",
    "summary": "West Ham say Ham are \"disappointed\" with a ruling that the terms of terms rental of the Olympic Stadium from next season should be made public.",
    "summary_trees": [
      "# ::snt West Ham say Ham are \"disappointed\" with a ruling that the terms of terms rental of the Olympic Stadium from next season should be made public.\n(s / say-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"West\"\n                  :op2 \"Ham\"))\n      :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                  :ARG1 (r2 / recommend-01\n                        :ARG1 (p / public-02\n                              :ARG1 (t2 / term\n                                    :mod (r3 / rent-01\n                                          :ARG1 (s2 / stadium\n                                                :name (n2 / name\n                                                      :op1 \"Olympic\"\n                                                      :op2 \"Stadium\"))\n                                          :time (s3 / season\n                                                :mod (n3 / next)))))))\n            :ARG1 t))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\")))",
      "(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :ARG1 (s2 / stadium\n                                                                     :name (n2 / name\n                                                                               :op1 \"Olympic\"\n                                                                               :op2 \"Stadium\")))))))))",
      "(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG1 (t / team :name (n / name :op1 \"West\" :op2 \"Ham\"))))",
      "(s / say-01\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :time (s3 / season\n                                                                     :mod (n3 / next)))))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :ARG1 (s2 / stadium\n                                                                     :name (n2 / name\n                                                                               :op1 \"Olympic\"\n                                                                               :op2 \"Stadium\")))))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG1 t))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :time (s3 / season\n                                                                     :mod (n3 / next)))))))))",
      "(t / team\n   :name (n / name\n            :op1 \"West\"\n            :op2 \"Ham\"))",
      "(d / disappoint-01\n   :ARG0 (r / rule-01\n            :ARG1 (r2 / recommend-01\n                      :ARG1 (p / public-02\n                               :ARG1 (t2 / term\n                                         :mod (r3 / rent-01\n                                                  :time (s3 / season\n                                                            :mod (n3 / next))))))))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :ARG1 (s2 / stadium\n                                                   :name (n2 / name\n                                                             :op1 \"Olympic\"\n                                                             :op2 \"Stadium\")))))))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :time (s3 / season\n                                                   :mod (n3 / next)))))))"
    ],
    "smus": [
      "West Ham say --",
      "The ruling that the terms of the Olympic Stadium's rental should be public said to be disappointing.",
      "West Ham are disappointed, say",
      "The ruling that the rent terms for next season should be public, they say, is disappointing.",
      "West Ham say the ruling that the terms of the Olympic Stadium's rental should be public was disappointing.",
      "West Ham say they are disappointed.",
      "West Ham say the ruling that the rental terms for next season should be public was disappointing.",
      "Rent terms for next season should be public.",
      "Rent terms for next season.",
      "The Olympic Stadium is rented.",
      "The Olympic Stadium will be rented next season."
    ]
  },
  {
    "instance_id": "pyrxsum-8",
    "summary": "Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.",
    "summary_trees": [
      "# ::snt Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.\n(v / vow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abdul\"\n                  :op2 \"Fattah\"\n                  :op3 \"al-Sisi\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (a / army)\n                  :ARG2 (c / chief)\n                  :time (e / ex)))\n      :ARG1 (a2 / and\n            :op1 (t / tackle-01\n                  :ARG0 p\n                  :ARG1 (t2 / terrorism))\n            :op2 (b / bring-01\n                  :ARG0 p\n                  :ARG1 (s / security)))\n      :time (a3 / after\n            :op1 (s2 / swear-in-06\n                  :ARG1 p\n                  :ARG2 (p2 / person\n                        :ARG0-of (h2 / have-org-role-91\n                              :ARG1 (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"Egypt\"))\n                              :ARG2 (p3 / president\n                                    :ARG1-of (n3 / new-01)))))))"
    ],
    "tree": [
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\")))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\")))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\")))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))))",
      "(v / vow-01\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\"))))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (a / army)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / chief)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :time (e / ex)))",
      "(p / person\n   :name (n / name\n            :op1 \"Abdul\"\n            :op2 \"Fattah\"\n            :op3 \"al-Sisi\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / chief)))",
      "(p / person\n   :name (n / name\n            :op1 \"Abdul\"\n            :op2 \"Fattah\"\n            :op3 \"al-Sisi\")\n   :ARG0 (h / have-org-role-91\n            :time (e / ex)))",
      "(h / have-org-role-91\n   :ARG1 (a / army)\n   :time (e / ex))",
      "(h / have-org-role-91\n   :ARG2 (c / chief)\n   :time (e / ex))",
      "(h / have-org-role-91\n   :ARG1 (a / army)\n   :ARG2 (c / chief)\n   :time (e / ex))",
      "(a2 / and\n    :op1 (t / tackle-01\n            :ARG0 (p / person :name (n / name :op1 \"Abdul\" :op2 \"Fattah\" :op3 \"al-Sisi\")))))"
    ],
    "smus": [
      "Abdul Fattah al-Sisi vowed --",
      "The chief vowed --",
      "Abdul Fattah al-Sisi vowed to tackle the situation.",
      "Abdul Fattah al-Sisi vowed to bring --",
      "The government vowed to tackle terrorism.",
      "The vp vowed to bring security.",
      "The vows were made after Abdul Fattah al-Sisi was sworn in.",
      "The vows were made after Egypt's swearing-in.",
      "The vows were made after the new president is sworn in.",
      "Abdul Fattah al-Sisi vowed to bring.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism.",
      "Abdul Fattah al-Sisi vowed to bring security.",
      "The chief vowed to tackle the situation.",
      "The chief vowed to bring the matter to the fore.",
      "The chief vowed to tackle terrorism.",
      "The chief vowed to bring security.",
      "Ex vows to tackle",
      "Ex vows to bring",
      "Ex vows to tackle terrorism",
      "Ex vows to bring security",
      "Abdul Fattah al-Sisi vowed after being sworn in.",
      "Abdul Fattah al-Sisi vowed after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed after the new president is sworn in.",
      "The chief vowed after being sworn in.",
      "The chief vowed after Egypt's swearing-in.",
      "The chief vowed after the new president is sworn in.",
      "After being sworn in, the Ex vowed to.",
      "Ex-spokes vowed after the new president is sworn in.",
      "After being sworn in, Abdul Fattah al-Sisi vowed to tackle the situation.",
      "After Egypt's swearing-in, Abdul Fattah al-Sisi vowed to tackle the situation.",
      "After the new president is sworn in, Abdul Fattah al-Sisi vowed to tackle the issue.",
      "After being sworn in, Abdul Fattah al-Sisi vowed to bring.",
      "After Abdul Fattah al-Sisi was sworn in, he vowed to tackle terrorism.",
      "After Egypt's swearing-in, the country vowed to tackle terrorism.",
      "After the new president is sworn in, he vowed to tackle terrorism.",
      "After Abdul Fattah al-Sisi was sworn in, he vowed to bring security.",
      "After the new president is sworn in, he vowed to bring security.",
      "Abdul Fattah al-Sisi vowed to tackle after being sworn in.",
      "Abdul Fattah al-Sisi vowed to tackle after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to tackle after the new president is sworn in.",
      "After the new president is sworn in Abdul Fattah al-Sisi vowed to bring.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after being sworn in.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after the new president is sworn in.",
      "Abdul Fattah al-Sisi vowed to bring security after being sworn in.",
      "Abdul Fattah al-Sisi vowed to bring security after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to bring security after the new president is sworn in.",
      "After the new president is sworn in, the Army vows to bring in.",
      "After the new president is sworn in, the Army vows to bring security.",
      "The chief vowed to tackle after being sworn in.",
      "The chief vowed to tackle after Egypt's swearing-in.",
      "The chief vowed to tackle after the new president is sworn in.",
      "The chief vowed to bring after being sworn in.",
      "After the new president is sworn in, the chief vowed to bring in.",
      "The chief vowed to tackle terrorism after being sworn in.",
      "The chief vowed to tackle terrorism after Egypt's swearing-in.",
      "The chief vowed to tackle terrorism after the new president is sworn in.",
      "The chief vowed to bring security after being sworn in.",
      "The chief vowed to bring security after Egypt's sworn in.",
      "The chief vowed to bring security after the new president is sworn in.",
      "After being sworn in, the ex vowed to tackle.",
      "Ex vows to tackle after Egypt is sworn in",
      "After being sworn in, the Ex vowed to bring.",
      "After Egypt's swearing-in, the ex vowed to bring.",
      "Ex vows to tackle terrorism after swearing in",
      "Ex vows to tackle terrorism after Egypt's swearing-in",
      "After being sworn in, the Ex vowed to bring security.",
      "And Abdul Fattah al-Sisi will tackle.",
      "and tackle terrorism.",
      "and bring security.",
      "Abdul Fattah al-Sisi will tackle and bring.",
      "Abdul Fattah al-Sisi will tackle and bring security.",
      "tackle terrorism and bring security",
      "After Abdul Fattah al-Sisi was sworn in.",
      "After the new president is sworn in.",
      "Egyptians are sworn in.",
      "The new president is sworn in.",
      "Egypt has a new president."
    ]
  },
  {
    "instance_id": "pyrxsum-9",
    "summary": "Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in McCoy honour at Cheltenham as 'flattering.'",
    "summary_trees": [
      "# ::snt Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in McCoy honour at Cheltenham as 'flattering.'\n(d / describe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Anthony\"\n                  :op3 \"McCoy\")\n            :ARG0-of (r / ride-01\n                  :ARG1 (j / jump-03))\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / champion\n                        :frequency 20)))\n      :ARG1 (h2 / have-04\n            :ARG1 (s / statue\n                  :ARG1-of (p2 / put-up-13\n                        :ARG2 (h3 / honor-01\n                              :ARG1 p)\n                        :location (s2 / sports-facility\n                              :name (n2 / name\n                                    :op1 \"Cheltenham\")))))\n      :ARG2 (f / flatter-01))"
    ],
    "tree": [
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\")))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20))))",
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\"))))))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG1 (h2 / have-04\n             :ARG1 (s / statue\n                      :ARG1 (p2 / put-up-13\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p))))\n   :ARG2 (f / flatter-01))",
      "(p / person\n   :name (n / name\n            :op1 \"Sir\"\n            :op2 \"Anthony\"\n            :op3 \"McCoy\"))",
      "(p / person\n   :name (n / name\n            :op1 \"Sir\"\n            :op2 \"Anthony\"\n            :op3 \"McCoy\")\n   :ARG0 (r / ride-01\n            :ARG1 (j / jump-03)))",
      "(h2 / have-04\n    :ARG1 (s / statue\n             :ARG1 (p2 / put-up-13\n                       :ARG2 (h3 / honor-01\n                                 :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))))"
    ],
    "smus": [
      "Sir Anthony McCoy has described --",
      "Jumper described:",
      "The champion has described -- 20 times.",
      "Having a statue put up in honor of Sir Anthony McCoy is described as :",
      "Sir Anthony McCoy has described having a statue put up in his honor.",
      "The jump rider has described having a statue put up in his honor.",
      "The champion, who has won 20 times, has described having a statue put up in his honor.",
      "Sir Anthony McCoy has described it as flattering.",
      "Jumper describe it as flattering.",
      "The champion has described it as flattering.",
      "Having a statue put up in honor of Sir Anthony McCoy was described as flattering.",
      "Sir Anthony McCoy has described having a statue put up in his honor as flattering.",
      "A jumper has described having a statue put up in his honor as flattering.",
      "The champion, who has won 20 times, has described having a statue put up in his honor as flattering.",
      "having a statue put up in honor of Sir Anthony McCoy.",
      "A statue was put up in honor of Sir Anthony McCoy.",
      "Put up in honor of Sir Anthony McCoy."
    ]
  },
  {
    "instance_id": "pyrxsum-10",
    "summary": "A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.",
    "summary_trees": [
      "# ::snt A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.\n(d / defend-01\n      :ARG0 (p / person\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (s / sign\n            :ARG0-of (u / urge-01\n                  :ARG1 (p2 / person)\n                  :ARG2 (e / eat-01\n                        :ARG0 p2\n                        :ARG1 (c2 / cake)\n                        :purpose (a / avoid-01\n                              :ARG0 p2\n                              :ARG1 (k / kidnap-01\n                                    :ARG1 p2\n                                    :location (t / town\n                                          :location-of (a2 / and\n                                                :op1 (a3 / abduct-01\n                                                      :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                  :op1 \"April\"\n                                                                  :op2 \"Jones\")))\n                                                :op2 (m / murder-01\n                                                      :ARG1 p3)\n                                                :time (d2 / date-entity\n                                                      :year 2012)))))))))"
    ],
    "tree": [
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :ARG1 (p2 / person)))))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (a3 / abduct-01\n                                                                              :ARG1 (p3 / person\n                                                                                        :name (n / name\n                                                                                                 :op1 \"April\"\n                                                                                                 :op2 \"Jones\"))))))))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (m / murder-01\n                                                                             :ARG1 (p3 / person\n                                                                                       :name (n / name\n                                                                                                :op1 \"April\"\n                                                                                                :op2 \"Jones\"))))))))))",
      "(d / defend-01\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (d2 / date-entity\n                                                                              :year 2012))))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :ARG1 (p2 / person)))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (a3 / abduct-01\n                                                                              :ARG1 (p3 / person\n                                                                                        :name (n / name\n                                                                                                 :op1 \"April\"\n                                                                                                 :op2 \"Jones\"))))))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (m / murder-01\n                                                                             :ARG1 (p3 / person\n                                                                                       :name (n / name\n                                                                                                :op1 \"April\"\n                                                                                                :op2 \"Jones\"))))))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG1 (k / kidnap-01\n                                                   :location (t / town\n                                                                :location (d2 / date-entity\n                                                                              :year 2012))))))))",
      "(p / person\n   :ARG0 (o / own-01\n            :ARG1 (c / cafe)))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG1 (p2 / person)))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :ARG0 (p2 / person))))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :ARG1 (c2 / cake))))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :purpose (a / avoid-01\n                                 :ARG0 (p2 / person)))))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :purpose (a / avoid-01\n                                 :ARG1 (k / kidnap-01\n                                          :ARG1 (p2 / person))))))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :purpose (a / avoid-01\n                                 :ARG1 (k / kidnap-01\n                                          :location (t / town\n                                                       :location (a3 / abduct-01\n                                                                     :ARG1 (p3 / person\n                                                                               :name (n / name\n                                                                                        :op1 \"April\"\n                                                                                        :op2 \"Jones\")))))))))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :purpose (a / avoid-01\n                                 :ARG1 (k / kidnap-01\n                                          :location (t / town\n                                                       :location (m / murder-01\n                                                                    :ARG1 (p3 / person\n                                                                              :name (n / name\n                                                                                       :op1 \"April\"\n                                                                                       :op2 \"Jones\")))))))))",
      "(s / sign\n   :ARG0 (u / urge-01\n            :ARG2 (e / eat-01\n                     :purpose (a / avoid-01\n                                 :ARG1 (k / kidnap-01\n                                          :location (t / town\n                                                       :location (d2 / date-entity\n                                                                     :year 2012)))))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :ARG1 (c2 / cake)))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG0 (p2 / person))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :ARG1 (p2 / person)))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (a3 / abduct-01\n                                                            :ARG1 (p3 / person\n                                                                      :name (n / name\n                                                                               :op1 \"April\"\n                                                                               :op2 \"Jones\"))))))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (m / murder-01\n                                                           :ARG1 (p3 / person\n                                                                     :name (n / name\n                                                                              :op1 \"April\"\n                                                                              :op2 \"Jones\"))))))))",
      "(u / urge-01\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (d2 / date-entity\n                                                            :year 2012))))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :ARG0 p2))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :ARG1 (c2 / cake)))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG0 p2)))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :ARG1 p2))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (a3 / abduct-01\n                                                            :ARG1 (p3 / person\n                                                                      :name (n / name\n                                                                               :op1 \"April\"\n                                                                               :op2 \"Jones\"))))))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (m / murder-01\n                                                           :ARG1 (p3 / person\n                                                                     :name (n / name\n                                                                              :op1 \"April\"\n                                                                              :op2 \"Jones\"))))))))",
      "(u / urge-01\n   :ARG1 (p2 / person)\n   :ARG2 (e / eat-01\n            :purpose (a / avoid-01\n                        :ARG1 (k / kidnap-01\n                                 :location (t / town\n                                              :location (d2 / date-entity\n                                                            :year 2012))))))",
      "(e / eat-01\n   :purpose (a / avoid-01\n               :ARG0 (p2 / person)))",
      "(e / eat-01\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :ARG1 (p2 / person))))",
      "(e / eat-01\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (a3 / abduct-01\n                                                   :ARG1 (p3 / person\n                                                             :name (n / name\n                                                                      :op1 \"April\"\n                                                                      :op2 \"Jones\")))))))",
      "(e / eat-01\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (m / murder-01\n                                                  :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                     :op1 \"April\"\n                                                                     :op2 \"Jones\")))))))",
      "(e / eat-01\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (d2 / date-entity\n                                                   :year 2012)))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG0 (p2 / person)))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :ARG1 (p2 / person))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (a3 / abduct-01\n                                                   :ARG1 (p3 / person\n                                                             :name (n / name\n                                                                      :op1 \"April\"\n                                                                      :op2 \"Jones\")))))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (m / murder-01\n                                                  :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                     :op1 \"April\"\n                                                                     :op2 \"Jones\")))))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (d2 / date-entity\n                                                   :year 2012)))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :ARG1 (p2 / person)))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (a3 / abduct-01\n                                       :ARG1 (p3 / person\n                                                 :name (n / name\n                                                          :op1 \"April\"\n                                                          :op2 \"Jones\"))))))",
      "(k / kidnap-01\n   :location (t / town\n                :location (a3 / abduct-01\n                              :ARG1 (p3 / person\n                                        :name (n / name\n                                                 :op1 \"April\"\n                                                 :op2 \"Jones\")))))",
      "(k / kidnap-01\n   :location (t / town\n                :location (m / murder-01\n                             :ARG1 (p3 / person\n                                       :name (n / name\n                                                :op1 \"April\"\n                                                :op2 \"Jones\")))))",
      "(k / kidnap-01\n   :location (t / town\n                :location (d2 / date-entity\n                              :year 2012)))",
      "(t / town\n   :location (a3 / abduct-01\n                 :ARG1 (p3 / person\n                           :name (n / name\n                                    :op1 \"April\"\n                                    :op2 \"Jones\"))))",
      "(t / town\n   :location (m / murder-01\n                :ARG1 (p3 / person\n                          :name (n / name\n                                   :op1 \"April\"\n                                   :op2 \"Jones\"))))",
      "(t / town\n   :location (d2 / date-entity\n                 :year 2012))",
      "(a2 / and\n    :op1 (a3 / abduct-01\n             :ARG1 (p3 / person\n                       :name (n / name\n                                :op1 \"April\"\n                                :op2 \"Jones\"))))",
      "(a2 / and\n    :op2 (m / murder-01\n            :ARG1 (p3 / person\n                      :name (n / name\n                               :op1 \"April\"\n                               :op2 \"Jones\"))))",
      "(a2 / and\n    :time (d2 / date-entity\n              :year 2012))",
      "(a2 / and\n    :op1 (a3 / abduct-01\n             :ARG1 (p3 / person\n                       :name (n / name\n                                :op1 \"April\"\n                                :op2 \"Jones\")))\n    :op2 (m / murder-01\n            :ARG1 p3))"
    ],
    "smus": [
      "The cafe owners have defended.",
      "The urging sign was defended.",
      "The sign urging people to eat was defended.",
      "The sign urging people to eat the cake was defended.",
      "The sign urging people to eat to avoid was defended.",
      "The sign urging people to eat to avoid being kidnapped was defended.",
      "The sign urging people to eat to avoid being kidnapped in the town where April Jones was abducted was defended.",
      "The sign urging people to eat to avoid being kidnapped in the town where April Jones was murdered was defended.",
      "The sign urging people to eat to avoid being kidnapped in the town of 2012 was defended.",
      "The cafe owner has defended the urging sign.",
      "The cafe owner has defended the sign urging people to eat.",
      "The cafe owner has defended the sign urging people to eat the cake.",
      "The cafe owner has defended the sign urging people to eat to avoid.",
      "The cafe owner has defended the sign urging people to eat to avoid being kidnapped.",
      "The cafe owner defended a sign urging people to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "The cafe owner defended a sign urging people to eat to avoid being kidnapped in the town where April Jones was murdered.",
      "The cafe owner has defended a sign urging people to eat to avoid being kidnapped in the town of 2012",
      "A sign urging people.",
      "A sign urging people to eat.",
      "A sign urging people to eat the cake.",
      "A sign urging people to eat to avoid",
      "A sign urging people to eat to avoid being kidnapped.",
      "A sign urging people to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "A sign urging people to eat to avoid being kidnapped in the town where April Jones was murdered.",
      "A sign urging people to eat to avoid being kidnapped in a town in 2012.",
      "Impressed people to eat.",
      "urging people to eat to avoid",
      "urging people to eat to avoid being kidnapped",
      "Urging to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "urging people to eat to avoid being kidnapped in the town where April Jones was murdered.",
      "urging people to eat to avoid being kidnapped in a town in 2012.",
      "People are urging them to eat.",
      "Urging people to eat the cake.",
      "People are urging to eat to avoid.",
      "People are urging to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "People are urging to eat to avoid being kidnapped in the town where April Jones was murdered.",
      "People are urging to eat to avoid being kidnapped in a town in 2012.",
      "Eat to avoid people.",
      "Eat to avoid being kidnapped.",
      "Eat to avoid being kidnapped in the town where April Jones was abducted.",
      "Eat to avoid being kidnapped in the town where April Jones was murdered.",
      "Eat to avoid being kidnapped in a 2012 town.",
      "Eat the cake to avoid people.",
      "Eat the cake to avoid people being kidnapped.",
      "Eat the cake to avoid being kidnapped in the town where April Jones was abducted.",
      "Eat the cake to avoid being kidnapped in the town where April Jones was murdered.",
      "Eat the cake to avoid being kidnapped in a 2012 town.",
      "To avoid people being kidnapped.",
      "To avoid being kidnapped in the town where April Jones was abducted.",
      "To avoid being kidnapped in a town where April Jones was murdered.",
      "To avoid being kidnapped in a 2012 town.",
      "Kidnapped in a town in 2012.",
      "The town where April Jones was abducted.",
      "The town where April Jones was murdered.",
      "And April Jones was abducted.",
      "And April Jones was murdered.",
      "April Jones was abducted and murdered.",
      "And April Jones was abducted in 2012.",
      "And April Jones was murdered in 2012.",
      "April Jones was abducted and murdered in 2012.",
      "April Jones was abducted."
    ]
  },
  {
    "instance_id": "pyrxsum-11",
    "summary": "Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.",
    "summary_trees": [
      "# ::snt Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.\n(s / say-01\n      :ARG0 (o / official)\n      :ARG1 (a / and\n            :op1 (k / kill-01\n                  :ARG0 (e / explode-01\n                        :quant 2\n                        :ARG1 (b / bus\n                              :mod (p / passenger))\n                        :location (c / city\n                              :name (n / name\n                                    :op1 \"Nairobi\")\n                              :ARG0-of (h / have-org-role-91\n                                    :ARG1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Kenya\"))\n                                    :ARG2 (c3 / capital))))\n                  :ARG1 (p2 / person\n                        :quant 3))\n            :op2 (w / wound-01\n                  :ARG0 e\n                  :ARG1 (p3 / person\n                        :quant (a2 / at-least\n                              :op1 62)\n                        :mod (o2 / other)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG1 (w / wound-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant 3)))",
      "(s / say-01\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :quant (a2 / at-least\n                                 :op1 62))))",
      "(s / say-01\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :mod (o2 / other))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :ARG0 (h / have-org-role-91\n                                           :ARG1 (c2 / country\n                                                     :name (n2 / name\n                                                               :op1 \"Kenya\")))))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :ARG0 (h / have-org-role-91\n                                           :ARG2 (c3 / capital))))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :quant (a2 / at-least\n                                 :op1 62))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Nairobi\")))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :ARG0 (h / have-org-role-91\n                                           :ARG1 (c2 / country\n                                                     :name (n2 / name\n                                                               :op1 \"Kenya\")))))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :ARG0 (h / have-org-role-91\n                                           :ARG2 (c3 / capital))))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :quant 2)))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger)))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\")))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\")))))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital))))))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :quant 2)))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :quant (a2 / at-least\n                                :op1 62))))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger)))))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\")))))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :mod (o2 / other))))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\")))))))",
      "(a / and\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital))))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :quant 2))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :quant 2\n                    :ARG1 (b / bus\n                             :mod (p / passenger))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :quant 2\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :quant 2\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :quant 2\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG1 (p2 / person\n                     :quant 3))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :quant (a2 / at-least\n                                :op1 62))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG1 (p2 / person\n                     :quant 3))\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\")))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG1 (p2 / person\n                     :quant 3))\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\")))))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG1 (p2 / person\n                     :quant 3))\n   :op2 (w / wound-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital))))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger))\n                    :quant 2))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :quant (a2 / at-least\n                                :op1 62))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger))\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger))\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :ARG1 (b / bus\n                             :mod (p / passenger))\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :quant (a2 / at-least\n                                :op1 62))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))\n                    :ARG1 (b / bus\n                             :mod (p / passenger))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :mod (o2 / other))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\")\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :name (n / name\n                                          :op1 \"Nairobi\")\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))\n                    :quant 2))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :quant (a2 / at-least\n                                :op1 62))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))\n                    :ARG1 (b / bus\n                             :mod (p / passenger))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\")))\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :mod (o2 / other))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))\n                                          :ARG2 (c3 / capital)))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :quant (a2 / at-least\n                                :op1 62))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)))\n                    :ARG1 (b / bus\n                             :mod (p / passenger))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital))\n                                 :name (n / name\n                                          :op1 \"Nairobi\"))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)))))\n   :op2 (w / wound-01\n           :ARG1 (p3 / person\n                     :mod (o2 / other))))",
      "(a / and\n   :op1 (k / kill-01\n           :ARG0 (e / explode-01\n                    :location (c / city\n                                 :ARG0 (h / have-org-role-91\n                                          :ARG2 (c3 / capital)\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Kenya\"))))))\n   :op2 (w / wound-01\n           :ARG0 e))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :ARG1 (b / bus\n                     :mod (p / passenger))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Nairobi\"))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG1 (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Kenya\"))))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG2 (c3 / capital)))))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2)\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :ARG1 (b / bus\n                     :mod (p / passenger)))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Nairobi\")))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG1 (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Kenya\")))))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG2 (c3 / capital))))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger)))",
      "(e / explode-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Nairobi\")))",
      "(e / explode-01\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG1 (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Kenya\")))))",
      "(e / explode-01\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG2 (c3 / capital))))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger))\n   :location (c / city\n                :name (n / name\n                         :op1 \"Nairobi\")))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger))\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG1 (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Kenya\")))))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger))\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG2 (c3 / capital))))"
    ],
    "smus": [
      "Two explosions say killed.",
      "Two explosions say, wounded.",
      "Three people are said to have been killed.",
      "At least 62 people are said to have been wounded.",
      "Others say they were wounded.",
      "Explosions in Kenyan cities have killed, say authorities.",
      "Explosions in the capital have killed, say the officials.",
      "Officials say two explosions killed.",
      "Officials say two explosions have wounded.",
      "Officials say at least 62 people were wounded.",
      "Officials say the explosions in Nairobi have killed.",
      "Officials say explosions in Kenyan cities have killed.",
      "Officials say explosions in the capital have killed.",
      "And two explosions have killed.",
      "and passenger bus explosions have killed",
      "And the explosions in Nairobi have killed.",
      "And explosions in Kenyan cities have killed.",
      "And explosions in the capital have killed.",
      "and wounded by two explosions",
      "And at least 62 people were wounded.",
      "and passenger bus explosions wounded",
      "and wounded in the Nairobi explosions",
      "and others were wounded.",
      "and wounded in explosions in Kenyan cities",
      "and wounded in explosions in the capital.",
      "Two explosions killed and wounded.",
      "Two explosions killed and wounded passenger buses.",
      "Two explosions in Nairobi have killed and wounded.",
      "Two explosions in a Kenyan city have killed and wounded.",
      "Two explosions in the capital city have killed and wounded.",
      "Three people were killed and at least 62 wounded.",
      "Three people were killed and wounded in the explosions in Nairobi.",
      "Three people were killed and wounded in explosions in Kenyan cities.",
      "Three people were killed and wounded in explosions in the capital.",
      "Two passenger bus explosions have killed and wounded.",
      "Explosions on passenger buses killed and at least 62 people wounded.",
      "Explosions on passenger buses killed and wounded.",
      "Explosions in passenger buses in Nairobi have killed and wounded.",
      "Explosions of passenger buses in Kenyan cities have killed and wounded.",
      "Explosions in passenger buses in the capital have killed and wounded.",
      "Explosions in Nairobi have killed and wounded passengers buses.",
      "The explosions in Nairobi have killed and wounded.",
      "Explosions in Kenyan city of Nairobi have killed and wounded.",
      "Explosions in the capital Nairobi have killed and wounded.",
      "Two explosions in the Kenyan cities have killed and wounded.",
      "Explosions in Kenyan cities have killed and wounded at least 62 people.",
      "Explosions in Kenyan cities have killed and wounded passengers buses.",
      "Explosions in Nairobi, Kenya have killed and wounded.",
      "Explosions in Kenyan cities have killed and wounded three others.",
      "Explosions in Kenyan cities have killed and wounded.",
      "Explosions in the Kenyan capital have killed and wounded.",
      "Two explosions in the capital have killed and wounded.",
      "Explosions in the capital city have killed and wounded passengers buses.",
      "Explosions in Nairobi city have killed and wounded.",
      "Explosions in the capital have killed and wounded three others.",
      "Explosions in the capital have killed and wounded.",
      "Two explosions have killed.",
      "The explosions in Nairobi have killed",
      "Explosions in Kenyan cities have killed",
      "Explosions in the capital have killed",
      "Three people were killed.",
      "Two explosions have killed three people.",
      "Three people were killed in explosions on passenger buses.",
      "Three people were killed in the Nairobi explosions.",
      "Three people have been killed in explosions in the Kenyan cities.",
      "Three people have been killed in explosions in the capital.",
      "Passenger buses explode.",
      "Explosions occur in Kenyan cities.",
      "Passenger buses explode in Nairobi",
      "Kenyan passenger buses explode",
      "Passenger buses explode in capital",
      "At least 62 people were wounded.",
      "Others were wounded.",
      "There are at least 62 people.",
      "There are at least 62 others."
    ]
  },
  {
    "instance_id": "pyrxsum-12",
    "summary": "Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.",
    "summary_trees": [
      "# ::snt Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.\n(o / obligate-01\n      :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                  :quant 30))\n      :time (a / after\n            :op1 (d / damage-01\n                  :ARG0 (f / fire\n                        :ARG1-of (s / start-01\n                              :manner (d2 / deliberate)))\n                  :ARG1 (p / pipe\n                        :mod (g / gas)))))"
    ],
    "tree": [
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30)))",
      "(o / obligate-01\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG0 (f / fire\n                             :ARG1 (s / start-01\n                                      :manner (d2 / deliberate))))))",
      "(o / obligate-01\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG1 (p / pipe\n                             :mod (g / gas)))))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30))\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG0 (f / fire\n                             :ARG1 (s / start-01\n                                      :manner (d2 / deliberate))))))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30))\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG1 (p / pipe\n                             :mod (g / gas)))))",
      "(e / evacuate-01\n   :ARG1 (h / home\n            :quant 30))",
      "(a / after\n   :op1 (d / damage-01\n           :ARG0 (f / fire\n                    :ARG1 (s / start-01\n                             :manner (d2 / deliberate)))))",
      "(a / after\n   :op1 (d / damage-01\n           :ARG1 (p / pipe\n                    :mod (g / gas))))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate))))",
      "(d / damage-01\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate)))\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(f / fire\n   :ARG1 (s / start-01\n            :manner (d2 / deliberate)))"
    ],
    "smus": [
      "30 homes had to be evacuated.",
      "After the fire was damaged by deliberate starting of the fire,",
      "Must happen after gas pipe is damaged.",
      "30 homes had to be evacuated after a fire deliberately started was damaged.",
      "30 homes had to be evacuated after gas pipe was damaged.",
      "30 homes were evacuated.",
      "After the fire was damaged by deliberately started fire.",
      "After the gas pipe was damaged.",
      "The fire was damaged by deliberately started fires.",
      "Gas pipe damaged.",
      "A fire deliberately started damaged the gas pipe.",
      "The fire was deliberately started."
    ]
  },
  {
    "instance_id": "pyrxsum-13",
    "summary": "Friends of Keith Harris have joined his family at his funeral in Blackpool.",
    "summary_trees": [
      "# ::snt Friends of Keith Harris have joined his family at his funeral in Blackpool.\n(j / join-04\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Keith\"\n                              :op2 \"Harris\"))\n                  :ARG2 (f / friend)))\n      :ARG1 (f2 / family\n            :poss p2)\n      :location (f3 / funeral\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Blackpool\"))))"
    ],
    "tree": [
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend))))",
      "(j / join-04\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\"))))",
      "(j / join-04\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\"))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Keith\"\n                                        :op2 \"Harris\"))))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))",
      "(j / join-04\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\")))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\")))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Keith\"\n                               :op2 \"Harris\"))))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG2 (f / friend)))"
    ],
    "smus": [
      "Friends have joined.",
      "Keith Harris' family has joined him.",
      "Joined at a funeral in Blackpool.",
      "Friends have joined Keith Harris family.",
      "Keith Harris will be joined at a funeral in Blackpool.",
      "Friends have joined the funeral in Blackpool.",
      "Keith Harris' family were joined at a funeral in Blackpool.",
      "Friends have joined Keith Harris family at a funeral in Blackpool.",
      "A funeral took place in Blackpool.",
      "Blackpool"
    ]
  },
  {
    "instance_id": "pyrxsum-14",
    "summary": "Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".",
    "summary_trees": [
      "# ::snt Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".\n(d / defect-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Bob\"\n                  :op2 \"Marshall-Andrews\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member)\n                  :time (f / former))\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (p4 / political-party\n            :name (n3 / name\n                  :op1 \"Liberal\"\n                  :op2 \"Democrat\"))\n      :time (a / after\n            :op1 (d2 / describe-01\n                  :ARG0 p\n                  :ARG1 (p5 / party\n                        :poss (p6 / person\n                              :name (n4 / name\n                                    :op1 \"Jeremy\"\n                                    :op2 \"Corbyn\")))\n                  :ARG2 (c / case\n                        :mod (b / basket)\n                        :mod (p7 / politics)))))"
    ],
    "tree": [
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member))))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 (p / person :name (n / name :op1 \"Bob\" :op2 \"Marshall-Andrews\"))))))",
      "(d / defect-01\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h2 / have-org-role-91\n                      :ARG1 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Labour\"))))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Bob\"\n            :op2 \"Marshall-Andrews\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (p2 / parliament)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / member)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :time (f / former)))",
      "(p / person\n   :name (n / name\n            :op1 \"Bob\"\n            :op2 \"Marshall-Andrews\")\n   :ARG0 (h / have-org-role-91\n            :ARG1 (p2 / parliament)))",
      "(p / person\n   :name (n / name\n            :op1 \"Bob\"\n            :op2 \"Marshall-Andrews\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / member)))",
      "(p / person\n   :name (n / name\n            :op1 \"Bob\"\n            :op2 \"Marshall-Andrews\")\n   :ARG0 (h / have-org-role-91\n            :time (f / former)))",
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member))"
    ],
    "smus": [
      "Bob Marshall-Andrews defected.",
      "Parliamentarians have defected.",
      "Members have defected.",
      "Defective occurred after Bob Marshall-Andrews was describing.",
      "Defections occurred after describing Jeremy Corbyn's party.",
      "Defects occurred after describing a basket case.",
      "Defective occurred after describing a political case.",
      "Bob Marshall-Andrews has defected to the Lib Dem party.",
      "The MP has defected to the lib dem party.",
      "The members have defected to the lib dem party.",
      "After describing, Bob Marshall-Andrews defected.",
      "After describing Jeremy Corbyn's party, Bob Marshall-Andrews defected.",
      "After describing the basket case, Bob Marshall-Andrews defected.",
      "After describing the political case, Bob Marshall-Andrews defected.",
      "After describing, parliamentarians defected.",
      "After describing Jeremy Corbyn's party, parliamentarians have defected.",
      "After describing the basket case, parliamentarians defected.",
      "After describing the political case, parliamentarians defected.",
      "After describing, the members have defected.",
      "After describing Jeremy Corbyn's party, the members have defected.",
      "After describing the basket case, the members have defected.",
      "After describing the political case, the members defected.",
      "The former defected after describing.",
      "The former defected after describing Jeremy Corbyn's party.",
      "After describing the basket case the former defected.",
      "After describing the political case, the former defected.",
      "After describing, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing the basket case, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing the political case, Bob Marshall-Andrews defected to the Lib Dem party.",
      "After describing the defect, the MP has defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, parliamentarians have defected to the Lib Dem party.",
      "After describing the basket case a MP has defected to the Lib Dem party.",
      "After describing the political case a MP has defected to the Lib Dem party.",
      "After describing, the members have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, the members have defected to the Lib Dem party.",
      "After describing the basket case, the members have defected to the Lib Dem party.",
      "After describing the political case, the members have defected to the Lib Dem party.",
      "After describing the defect, the former defectors have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, the former has defected to the Lib Dems.",
      "After describing the basket case the former defected to the lib dem party.",
      "After describing the political case, the former defectors have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party.",
      "After describing the basket case.",
      "After describing the political case.",
      "describing Jeremy Corbyn's party",
      "describing the basket case.",
      "describing a political case.",
      "describing Jeremy Corbyn's party as a basket case.",
      "describing Jeremy Corbyn's party as a political case."
    ]
  },
  {
    "instance_id": "pyrxsum-15",
    "summary": "Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.",
    "summary_trees": [
      "# ::snt Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.\n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Castleford\"\n                  :op2 \"Tigers\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Wakefield\"\n                  :op2 \"Trinity\")\n            :ARG0-of (r / rival-01\n                  :ARG1 t)\n            :ARG1-of (l / local-02))\n      :purpose (c / clinch-01\n            :ARG0 t\n            :ARG1 (s / shield\n                  :name (n3 / name\n                        :op1 \"League\"\n                        :op2 \"Leaders'\"\n                        :op3 \"Shield\"))))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\")))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\")))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team :name (n / name :op1 \"Castleford\" :op2 \"Tigers\")))))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02)))",
      "(b / beat-03\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02)))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 (t / team :name (n / name :op1 \"Castleford\" :op2 \"Tigers\"))))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\"))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\"))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(t / team\n   :name (n / name\n            :op1 \"Castleford\"\n            :op2 \"Tigers\"))"
    ],
    "smus": [
      "The Castleford Tigers beat",
      "beat Wakefield Trinity",
      "The rivals of the Castleford Tigers beat each other.",
      "beat local team",
      "Beat to clinch the League Leaders' shield.",
      "Castleford Tigers beat their rivals",
      "Castleford Tigers beat local team",
      "The rivals of the Castleford Tigers beat each other to clinch.",
      "The local team beat to clinch the League Leaders' shield.",
      "The Castleford Tigers beat Wakefield Trinity to clinch.",
      "The Castleford Tigers beat Wakefield Trinity to clinch the League Leaders' shield.",
      "The Castleford Tigers beat their rivals to clinch.",
      "The Castleford Tigers beat their rivals to clinch the League Leaders' shield.",
      "The Castleford Tigers beat the local team to clinch.",
      "The Castleford Tigers beat the local team to clinch the League Leaders' shield.",
      "The League Leaders' shield will clinch."
    ]
  },
  {
    "instance_id": "pyrxsum-16",
    "summary": "At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.",
    "summary_trees": [
      "# ::snt At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.\n(t / tell-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (p2 / parliament)\n                        :ARG2 (m / member)))\n            :op2 (s / source\n                  :mod (a2 / army)))\n      :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                  :quant (a3 / at-least\n                        :op1 23))\n            :location (t2 / town\n                  :name (n / name\n                        :op1 \"Monguno\")\n                  :location (n2 / northeast\n                        :part-of (c / country\n                              :name (n3 / name\n                                    :op1 \"Nigeria\"))))\n            :time (a4 / after\n                  :op1 (e / explode-01\n                        :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                    :name (n4 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Haram\"))\n                              :ARG1-of (c3 / confiscate-01\n                                    :ARG0 (v / vigilante))))))\n      :ARG2 (p4 / publication\n            :name (n5 / name\n                  :op1 \"BBC\")))"
    ],
    "tree": [
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\")))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\"))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\")))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\"))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\")))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\"))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\")))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(a / and\n   :op1 (p / person\n           :ARG0 (h / have-org-role-91\n                    :ARG1 (p2 / parliament))))",
      "(a / and\n   :op1 (p / person\n           :ARG0 (h / have-org-role-91\n                    :ARG2 (m / member))))",
      "(a / and\n   :op2 (s / source\n           :mod (a2 / army)))",
      "(a / and\n   :op1 (p / person\n           :ARG0 (h / have-org-role-91\n                    :ARG1 (p2 / parliament)))\n   :op2 (s / source\n           :mod (a2 / army)))",
      "(a / and\n   :op1 (p / person\n           :ARG0 (h / have-org-role-91\n                    :ARG2 (m / member)))\n   :op2 (s / source\n           :mod (a2 / army)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (p2 / parliament)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / member)))",
      "(h / have-org-role-91\n   :ARG1 (p2 / parliament)\n   :ARG2 (m / member))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23)))",
      "(k / kill-01\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\")))",
      "(k / kill-01\n   :location (t2 / town\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\")))))",
      "(k / kill-01\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))))))",
      "(k / kill-01\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\")))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\")))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))",
      "(k / kill-01\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\"))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))))))",
      "(k / kill-01\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\"))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))",
      "(k / kill-01\n   :location (t2 / town\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\"))))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))))))",
      "(k / kill-01\n   :location (t2 / town\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\"))))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\"))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))))))"
    ],
    "smus": [
      "Parliamentarians have told --",
      "Members have told.",
      "told at least 23 people have been killed.",
      "The killing took place in a town in the northeastern Nigeria, it was told.",
      "The BBC were told.",
      "Parliament has told that at least 23 people have been killed.",
      "Parliament has told of the killings that occurred after a bomb by Boko Haram exploded.",
      "Parliament has told of the killings in a town in the northeastern Nigeria.",
      "Parliament has told of the killings that occurred after a bomb that exploded on a confiscated by vigilantes.",
      "An army source has told the story of the killing in the town of Monguno.",
      "An army source has told of the deaths, which occurred after a bombing by Boko Haram exploded.",
      "An army source has told of the killings in a town in the northeastern Nigeria.",
      "An army source has told of being killed after a bomb exploded that was confiscated by vigilantes.",
      "Members have told of the killings, which have killed at least 23 people.",
      "Members have told the story of the killing in the town of Monguno.",
      "Members have told how the killings occurred after the bombing by Boko Haram exploded.",
      "The members have told of the killings in a town in the northeastern Nigeria.",
      "Members have told of being killed after a bomb exploded that confiscated by vigilantes.",
      "MPs have told the BBC:",
      "An army source told the BBC:",
      "Members have told the BBC:",
      "At least 23 people have been told the BBC.",
      "The BBC has been told that a town in the northeastern Nigeria was killed.",
      "MPs have told the BBC that at least 23 people have been killed.",
      "Parliament has told the BBC that the killings took place in the town of Monguno.",
      "Parliamentarians have told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "A parliamentarian has told the BBC that the killings took place in a town in the northeastern Nigeria.",
      "At least 23 people were killed, an army source has told the BBC.",
      "An army source has told the BBC that the killings took place in the town of Monguno.",
      "An army source has told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "An army source has told the BBC that the killings occurred in a town in the northeastern Nigeria.",
      "At least 23 people have been killed, the BBC have been told by members.",
      "Members have told the BBC that the killings took place in the town of Monguno.",
      "Members have told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "A member has told the BBC that the killings took place in a town in the northeastern Nigeria.",
      "Members have told the BBC that the killings occurred after a bomb exploded on a vigilant confiscated property.",
      "At least 23 people were killed.",
      "Killed in town of Monguno.",
      "Killed in a town in northeast Nigeria.",
      "Killed after a bomb from Boko Haram exploded.",
      "Killed after bombs that were confiscated by vigilantes exploded.",
      "At least 23 people were killed in the town of Monguno.",
      "At least 23 people were killed in a town in northeast Nigeria.",
      "At least 23 people were killed after a bomb from Boko Haram exploded.",
      "At least 23 people were killed after a bomb that was exploded on a seized by vigilantes.",
      "The killings occurred in the town of Monguno after a bomb by Boko Haram exploded.",
      "The killing took place in the town of Monguno after a bomb exploded that confiscated by the vigilantes.",
      "A town in northeast Nigeria was killed after a bomb by Boko Haram exploded.",
      "A town in northeast Nigeria was killed after a bomb exploded that was confiscated by vigilantes.",
      "At least 23 people were killed in the town of Monguno after a bomb by Boko Haram exploded.",
      "At least 23 people were killed in the town of Monguno after a bomb exploded that confiscated by vigilantes.",
      "At least 23 people were killed in a town in northeast Nigeria after a bomb by Boko Haram exploded.",
      "At least 23 people were killed in a town in northeast Nigeria after a bomb exploded on a seized by vigilantes.",
      "After the Boko Haram bomb exploded.",
      "After the bomb exploded that confiscated by the vigilantes.",
      "The bombing by Boko Haram exploded.",
      "The bomb that exploded was a confiscated by the vigilantes.",
      "The bombing occurred by the Boko Haram group."
    ]
  },
  {
    "instance_id": "pyrxsum-17",
    "summary": "The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.",
    "summary_trees": [
      "# ::snt The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (a / architect-01))\n      :ARG1 (a2 / and\n            :op1 (h / homage)\n            :op2 (s2 / symphony\n                  :location (s3 / steel))\n            :domain (c / center\n                  :mod (s4 / sport)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Ravenscraig\")))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01)))",
      "(s / say-01\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)))",
      "(s / say-01\n   :ARG1 (c / center\n            :location (c2 / city\n                          :name (n / name\n                                   :op1 \"Ravenscraig\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (h / homage))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (c / center\n            :mod (s4 / sport)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (c / center\n            :location (c2 / city\n                          :name (n / name\n                                   :op1 \"Ravenscraig\"))))"
    ],
    "smus": [
      "Architectural say --",
      "Say, a symphony in steel.",
      "Ravenscraig centre, say",
      "The architects say homage.",
      "Architectural say a symphony in steel.",
      "The architects say the sports center is.",
      "The architects say the centre is in Ravenscraig."
    ]
  },
  {
    "instance_id": "pyrxsum-18",
    "summary": "The winner of The Jump 2017 is Spencer Matthews.",
    "summary_trees": [
      "# ::snt The winner of The Jump 2017 is Spencer Matthews.\n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Spencer\"\n                  :op2 \"Matthews\"))\n      :ARG1 (e / event\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Jump\")\n            :time (d / date-entity\n                  :year 2017)))"
    ],
    "tree": [
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\")))",
      "(w / win-01\n   :ARG1 (e / event\n            :time (d / date-entity\n                     :year 2017)))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\"))\n   :ARG1 (e / event\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Jump\")))"
    ],
    "smus": [
      "Spencer Matthews won.",
      "Spencer Matthews won The Jump.",
      "Spencer Matthews won the 2017 event."
    ]
  },
  {
    "instance_id": "pyrxsum-19",
    "summary": "Fifa presidential candidate Gianni Infantino says Infantino would press for the World Cup to be held in a whole region rather than one or two countries.",
    "summary_trees": [
      "# ::snt Fifa presidential candidate Gianni Infantino says Infantino would press for the World Cup to be held in a whole region rather than one or two countries.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Gianni\"\n                  :op2 \"Infantino\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"Fifa\"))\n                  :ARG2 (c / candidate\n                        :mod (p2 / president))))\n      :ARG1 (p3 / press-01\n            :ARG0 p\n            :ARG2 (h2 / hold-04\n                  :ARG1 (g / game\n                        :name (n3 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\"))\n                  :location (r / region\n                        :mod (w / whole)\n                        :ARG1-of (ii / instead-of-91\n                              :ARG2 (h3 / hold-04\n                                    :ARG1 g\n                                    :location (c2 / country\n                                          :quant (o2 / or\n                                                :op1 1\n                                                :op2 2))))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president)))))",
      "(s / say-01\n   :ARG1 (p3 / press-01\n             :ARG0 (p / person :name (n / name :op1 \"Gianni\" :op2 \"Infantino\")))))",
      "(s / say-01\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op2 2))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op2 2))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op2 2))))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Gianni\"\n            :op2 \"Infantino\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"Fifa\"))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / candidate\n                     :mod (p2 / president))))",
      "(p / person\n   :name (n / name\n            :op1 \"Gianni\"\n            :op2 \"Infantino\")\n   :ARG0 (h / have-org-role-91\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"Fifa\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Gianni\"\n            :op2 \"Infantino\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / candidate\n                     :mod (p2 / president))))",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"Fifa\")))",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"Fifa\"))\n   :ARG2 (c / candidate\n            :mod (p2 / president)))",
      "(o / organization\n   :name (n2 / name\n             :op1 \"Fifa\"))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\")))",
      "(h2 / hold-04\n    :location (r / region\n                 :mod (w / whole)))",
      "(h2 / hold-04\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :ARG1 (g / game :name (n3 / name :op1 \"World\" :op2 \"Cup\"))))))",
      "(h2 / hold-04\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :location (c2 / country\n                                                   :quant (o2 / or\n                                                              :op1 1))))))",
      "(h2 / hold-04\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :location (c2 / country\n                                                   :quant (o2 / or\n                                                              :op2 2))))))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\"))\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :ARG1 g))))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\"))\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :location (c2 / country\n                                                   :quant (o2 / or\n                                                              :op1 1))))))",
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\"))\n    :location (r / region\n                 :ARG1 (ii / instead-of-91\n                           :ARG2 (h3 / hold-04\n                                     :location (c2 / country\n                                                   :quant (o2 / or\n                                                              :op2 2))))))",
      "(g / game\n   :name (n3 / name\n             :op1 \"World\"\n             :op2 \"Cup\"))",
      "(r / region\n   :ARG1 (ii / instead-of-91\n             :ARG2 (h3 / hold-04\n                       :ARG1 (g / game :name (n3 / name :op1 \"World\" :op2 \"Cup\")))))"
    ],
    "smus": [
      "Gianni Infantino says --",
      "\"Fifa\" or \"Fifa\" says...",
      "According to the presidential candidate,",
      "Gianni Infantino says press.",
      "Press to be held to the Wor Cup, says.",
      "Gianni Infantino says he will press.",
      "Gianni Infantino says press to be held to the Wor Cup.",
      "Gianni Infantino says press for the holding in the whole region.",
      "Gianni Infantino says press for the holdings to be held in the region rather than in one country.",
      "Gianni Infantino says press for the holdings to be held in the region rather than in two countries.",
      "Fifa or FIFA says it will press.",
      "\"Press to be held to the Wor Cup,\" says a FIFA or FIFAr.",
      "FIFA or FIFA supporters say press for the holding in the whole region.",
      "FIFA or FIFA officials say they will press for the holdings to be held in the region rather than in one or two countries.",
      "FIFA or FIFA officials say they will press for the holdings to be held in the region rather than in two countries.",
      "The president's candidate says he will press.",
      "The president's candidate says he will press for the Wor Cup to be held.",
      "The president's candidate says he will press for the holdings to be held in the region rather than in one or two countries.",
      "The president's candidate says he will press for the holdings to be held in the region rather than in two countries.",
      "Press hold for Wor Cup.",
      "Press for holding in the whole region.",
      "Press for holding in the region rather than in one country.",
      "Press for holding in the region rather than in two countries.",
      "The Wor Cup was held.",
      "held in the whole region.",
      "Held in the region rather than in one country.",
      "Held in the region rather than in two countries.",
      "The region is rather than held in one or two countries.",
      "The region is instead being held in one or two countries.",
      "Instead of being held the Wor Cup, the whole region.",
      "Instead of being held in one country or another, the whole region.",
      "The whole region, rather than held in two or three countries.",
      "Instead, held in one or more countries.",
      "Instead, held in one or two countries.",
      "held in one or more countries.",
      "held in two or more countries.",
      "There are 1 or 1 countries."
    ]
  },
  {
    "instance_id": "pyrxsum-20",
    "summary": "Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as Swinney prepares to set out Swinney budget.",
    "summary_trees": [
      "# ::snt Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as Swinney prepares to set out Swinney budget.\n(w / warn-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (s / secretary\n                        :topic (f / finance))))\n      :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Scotland\"))\n            :ARG1-of (t / tough-02)\n            :ARG1-of (f2 / face-01\n                  :ARG0 c2))\n      :time (p2 / prepare-02\n            :ARG0 p\n            :ARG1 p\n            :ARG2 (s2 / set-out-06\n                  :ARG0 p\n                  :ARG1 (b / budget\n                        :poss p))))"
    ],
    "tree": [
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\")))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance)))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG2 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))"
    ],
    "smus": [
      "John Swinney has warned --",
      "The Finance Secretary has warned --",
      "Scotland's choice was warned.",
      "Tough choice is being warned.",
      "Scotland's choice in facing the odds has been warned.",
      "As John Swinney prepares, he is warned.",
      "As John Swinney prepares to set out, he is warned.",
      "As the budget of John Swinney is set out, it is being warned.",
      "John Swinney has warned that Scotland is a choice.",
      "John Swinney has warned that tough choices are a choice.",
      "John Swinney has warned that facing Scotland is a choice.",
      "The Finance Secretary has warned that Scotland is a choice.",
      "The Finance Secretary has warned of a tough choice.",
      "The Finance Secretary has warned that Scotland is a choice in facing.",
      "John Swinney has warned as he prepares.",
      "John Swinney has warned as he prepares to set out.",
      "John Swinney has warned as he prepares to set out his budget.",
      "As the Secretary of State prepares, he is being warned.",
      "As the Secretary of State prepares to set out, he is being warned.",
      "As the Secretary of State prepares his budget, he is warned.",
      "Scotland is being warned about its choices as John Swinney prepares.",
      "As John Swinney prepares Scotland is being warned of Scotland's choice.",
      "As John Swinney sets out, Scotland is being warned to make a choice.",
      "Scotland is being warned about its choices as it prepares to set out John Swinney's budget.",
      "As John Swinney prepares, he is warned that tough choices are to be made.",
      "As John Swinney prepares, he is warned that it will be a tough choice.",
      "As John Swinney prepares to set out, he is warned that it will be a tough choice.",
      "As John Swinney's budget is set out, tough choices are being warned.",
      "As John Swinney prepares, Scotland is being warned to make the choice of facing Scotland.",
      "As John Swinney prepares to set out, Scotland is being warned that it is a choice to face.",
      "As John Swinney's budget is set out, Scotland is being warned that it is a choice to face.",
      "John Swinney has warned that Scotland will make a choice as he prepares.",
      "John Swinney has warned that Scotland will make a choice as Scotland prepares to set out.",
      "John Swinney has warned that Scotland will make a choice as Scotland prepares to set out his budget.",
      "John Swinney has warned of tough choices as he prepares.",
      "John Swinney has warned that as he prepares, the choice will be tough.",
      "John Swinney has warned of tough choices as he prepares to set out.",
      "John Swinney has warned of tough choices as he prepares his budget.",
      "As he prepares, John Swinney has warned that Scotland is a choice to face.",
      "As he prepares John Swinney has warned that Scotland is a choice to face.",
      "As he prepares to set out, John Swinney has warned that Scotland is a choice to face.",
      "As his budget prepares, John Swinney has warned that Scotland is a choice to face.",
      "As he prepares, the Finance Secretary has warned Scotland that Scotland will make a choice.",
      "As the Secretary of State prepares, he has warned that Scotland will make a choice.",
      "As the Secretary of State prepares to set out, he has warned that Scotland will make a choice.",
      "As Scotland prepares to set out its budget, the Finance Secretary has warned that Scotland will make a choice.",
      "As the Secretary of State prepares, he is warned of tough choices.",
      "As the Secretary of State prepares to set out, he has warned of a tough choice.",
      "As the Secretary of State prepares his budget, he is warned that tough choices will be made.",
      "As the Secretary of State prepares, he has warned that Scotland is a choice to face.",
      "As the Secretary of State prepares to set out, he has warned that Scotland is a choice to face.",
      "As Scotland prepares to set out its budget, the Finance Secretary has warned that Scotland is a choice to face.",
      "As John Swinney prepares to set out.",
      "As preparations for John Swinney's budget are made."
    ]
  },
  {
    "instance_id": "pyrxsum-21",
    "summary": "The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for fire terms of reference.",
    "summary_trees": [
      "# ::snt The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for fire terms of reference.\n(w / write-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01))\n            :ARG0-of (l / lead-02\n                  :ARG2 (ii / inquire-01\n                        :ARG2 (f / fire\n                              :location (b / building\n                                    :name (n / name\n                                          :op1 \"Grenfell\"\n                                          :op2 \"Tower\"))))))\n      :ARG1 (r / recommend-01\n            :ARG0 p\n            :ARG1 (t / term\n                  :mod f)\n            :ARG2-of (r2 / reference-04))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p3 / prime)))))"
    ],
    "tree": [
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\")))))))",
      "(w / write-01\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG1 (r / recommend-01\n            :ARG0 (p / person)))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04)))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG2 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG2 (r2 / reference-04)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG3 (j / judge-01)))",
      "(l / lead-02\n   :ARG2 (ii / inquire-01\n             :ARG2 (f / fire\n                      :location (b / building\n                                   :name (n / name\n                                            :op1 \"Grenfell\"\n                                            :op2 \"Tower\")))))"
    ],
    "smus": [
      "A leader in an inquiry into the fire at Glenfell Tower has written:",
      "The prime minister is written in.",
      "People's recommendations are written.",
      "The judge has written to the prime minister.",
      "A leader in an inquiry into the fire at Glenfell Tower has written to the prime minister.",
      "The judge has written his recommendations.",
      "The judge has written that the references should be made.",
      "A person leading the inquiry into the fire at Glenfell Tower has written his recommendations.",
      "A person leading an inquiry into the fire at Glenfell Tower has written a recommendation for the reference.",
      "leading to an inquiry into the fire at Glenfell Tower.",
      "A fire broke out at Glenfell Tower."
    ]
  },
  {
    "instance_id": "pyrxsum-22",
    "summary": "Police in a small Alaska town mistakenly told a couple Police son had been killed in a car crash, leading to an extraordinary reunion hours later.",
    "summary_trees": [
      "# ::snt Police in a small Alaska town mistakenly told a couple Police son had been killed in a car crash, leading to an extraordinary reunion hours later.\n(l / lead-03\n      :ARG0 (t / tell-01\n            :ARG0 (p / police\n                  :location (t2 / town\n                        :mod (s / small)\n                        :location (s2 / state\n                              :name (n / name\n                                    :op1 \"Alaska\"))))\n            :ARG1 (k / kill-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG1 (p3 / police)\n                              :ARG2 (s3 / son))\n                        :quant (c / couple))\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (c3 / crash-01\n                              :ARG1 (c4 / car))))\n            :ARG2 p2\n            :ARG1-of (m / mistake-01))\n      :ARG2 (r / reunite-01\n            :mod (e / extraordinary)\n            :time (a / after\n                  :quant (m2 / multiple\n                        :op1 (t3 / temporal-quantity\n                              :quant 1\n                              :unit (h2 / hour))))))"
    ],
    "tree": [
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :quant (c / couple)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son))))))",
      "(l / lead-03\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG1 (p3 / police)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG1 (p3 / police)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG1 (p3 / police)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG2 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (p3 / police))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (c2 / cause-01\n                               :ARG0 (c3 / crash-01\n                                         :ARG1 (c4 / car)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (c2 / cause-01\n                               :ARG0 (c3 / crash-01\n                                         :ARG1 (c4 / car)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (c2 / cause-01\n                               :ARG0 (c3 / crash-01\n                                         :ARG1 (c4 / car)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG0 (p / police\n                     :location (t2 / town\n                                   :location (s2 / state\n                                                 :name (n / name\n                                                          :op1 \"Alaska\")))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG0 (p / police\n                     :location (t2 / town\n                                   :location (s2 / state\n                                                 :name (n / name\n                                                          :op1 \"Alaska\")))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :quant (c / couple))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (s3 / son)))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\")))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / crash-01\n                                :ARG1 (c4 / car)))))",
      "(t / tell-01\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant (c / couple))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :mod (s / small)))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant (c / couple))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant (c / couple))))",
      "(p / police\n   :location (t2 / town\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Alaska\"))))",
      "(t2 / town\n    :mod (s / small)\n    :location (s2 / state\n                  :name (n / name\n                           :op1 \"Alaska\")))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (p3 / police))))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (s3 / son))))"
    ],
    "smus": [
      "Leading to the mistake being told.",
      "Leading to the telling that a couple of people were killed.",
      "Leading to the telling that the son had been killed.",
      "leading to an extraordinary reunification.",
      "leading to a reunification hours later.",
      "Telling that a police person had been killed led to an extraordinary reunification.",
      "Telling that a police person had been killed led to a reunification within hours.",
      "The fact that the police had been told that the person had been killed led to a reunification hours later.",
      "Telling a police person led to an extraordinary reunification.",
      "Telling a police person led to a reunification within hours.",
      "Telling a police person led to a reunification hours later.",
      "The mistakenly told led to an extraordinary reunification.",
      "The fact that the story was told mistakenly led to a reunification within a few days.",
      "The mistaken information leading to a reunification hours later.",
      "Telling that a car crash had killed led to an extraordinary reunification.",
      "The fact that the car crash was told was the cause of the killing was leading to a reunification within hours.",
      "The fact that the car crash was told was the cause of the killing led to a reunification hours later.",
      "Police in the Alaska town told the story, leading to a reunification within hours.",
      "Police in the Alaska town told the story, leading to a reunification hours later.",
      "Telling that a couple had been killed led to a reunification within hours.",
      "Telling that the son had been killed led to an extraordinary reunification.",
      "Telling that the son had been killed led to a reunification within hours.",
      "Telling that the son had been killed led to a reunification hours later.",
      "The Police in the small town told the story.",
      "Police in the town of Alaska told the story.",
      "told the story that a car crash was \"killed.\"",
      "A couple of people were told to be killed.",
      "A small town police told the police that a couple of people had been killed.",
      "Police in an Alaska town told the police a couple of people had been killed.",
      "A couple of people were killed.",
      "The son had a couple of people.",
      "Reunion took hours.",
      "The extraordinary reunification took place hours later."
    ]
  },
  {
    "instance_id": "pyrxsum-23",
    "summary": "South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.",
    "summary_trees": [
      "# ::snt South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.\n(s / show-01\n      :ARG0 (p / paper\n            :mod (c / court))\n      :ARG1 (s2 / seek-01\n            :ARG0 (p2 / person\n                  :ARG0-of (p3 / prosecute-01)\n                  :mod (c2 / country\n                        :name (n / name\n                              :op1 \"South\"\n                              :op2 \"Africa\")))\n            :ARG1 (p4 / permit-01\n                  :ARG1 (a / appeal-01\n                        :ARG0 p2\n                        :ARG1 (s3 / sentence-01\n                              :ARG1 (p5 / person\n                                    :name (n2 / name\n                                          :op1 \"Oscar\"\n                                          :op2 \"Pistorius\")\n                                    :mod (a2 / athlete))\n                              :ARG1-of (l / light-06\n                                    :ARG0-of (s4 / shock-01)))))))"
    ],
    "tree": [
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court)))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG0 (p2 / person)))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :name (n2 / name\n                                                              :op1 \"Oscar\"\n                                                              :op2 \"Pistorius\")))))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (l / light-06\n                                                   :ARG0 (s4 / shock-01)))))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :mod (a2 / athlete)))))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG0 (p2 / person)))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :name (n2 / name\n                                                              :op1 \"Oscar\"\n                                                              :op2 \"Pistorius\")))))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (l / light-06\n                                                   :ARG0 (s4 / shock-01)))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01)))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\"))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 (p2 / person))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :name (n2 / name\n                                                     :op1 \"Oscar\"\n                                                     :op2 \"Pistorius\"))))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (l / light-06\n                                          :ARG0 (s4 / shock-01))))))",
      "(s2 / seek-01\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :mod (a2 / athlete))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 p2)))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :name (n2 / name\n                                                     :op1 \"Oscar\"\n                                                     :op2 \"Pistorius\"))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (l / light-06\n                                          :ARG0 (s4 / shock-01))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :mod (a2 / athlete))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\")))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 p2)))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\")))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (l / light-06\n                                          :ARG0 (s4 / shock-01))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\")))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :mod (a2 / athlete))))))",
      "(p2 / person\n    :mod (c2 / country\n             :name (n / name\n                      :op1 \"South\"\n                      :op2 \"Africa\")))",
      "(p2 / person\n    :ARG0 (p3 / prosecute-01)\n    :mod (c2 / country\n             :name (n / name\n                      :op1 \"South\"\n                      :op2 \"Africa\")))",
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG1 (s3 / sentence-01\n                       :ARG1 (p5 / person\n                                 :name (n2 / name\n                                           :op1 \"Oscar\"\n                                           :op2 \"Pistorius\")))))"
    ],
    "smus": [
      "Court papers show --",
      "The prosecutions show they are seeking.",
      "Show that permission to appeal has been sought.",
      "The shows that permission was sought to appeal Oscar Pistorius' sentence.",
      "The shows that permission was sought to appeal a shockingly light sentence.",
      "Show that permission to appeal the sentence of an athlete has been sought.",
      "Court papers show that the prosecutors sought.",
      "Court papers show that permission to appeal was sought.",
      "Court papers show South Africans sought.",
      "Court papers show that permission was sought to appeal Oscar Pistorius' sentence.",
      "Court papers show that permission was sought to appeal a shockingly light sentence.",
      "Prosecutors have sought.",
      "South Africans have sought.",
      "The permission to appeal was sought.",
      "The application is seeking permission to appeal Oscar Pistorius' sentence.",
      "The application is seeking permission to appeal a shockingly light sentence.",
      "The athlete's sentence is sought on appeal.",
      "Prosecutors have sought permission to appeal.",
      "Prosecutors have sought permission to appeal Oscar Pistorius' sentence.",
      "Prosecutors have sought permission to appeal a shockingly light sentence.",
      "Prosecutors have sought permission to appeal the sentence handed down to the athlete.",
      "South Africans have sought permission to appeal.",
      "South Africans have sought permission to appeal a shockingly light sentence.",
      "South Africans have sought permission to appeal the athlete's sentence.",
      "People have the right to appeal.",
      "The sentence was a shockly light sentence with the possibility to appeal.",
      "Appeal the shockingly light sentence."
    ]
  },
  {
    "instance_id": "pyrxsum-24",
    "summary": "The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.",
    "summary_trees": [
      "# ::snt The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.\n(o / open-01\n      :ARG1 (c / clinic\n            :mod (m / maternity)\n            :ord (o2 / ordinal-entity\n                  :value 1)\n            :location (c2 / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :beneficiary (w / woman\n                  :ARG1-of (v / victimize-01\n                        :ARG0 (a / and\n                              :op1 (r / rape-01\n                                    :ARG1 w)\n                              :op2 (a2 / assault-01\n                                    :ARG1 w\n                                    :manner (s / sex)))))))"
    ],
    "tree": [
      "(o / open-01\n   :ARG1 (c / clinic\n            :mod (m / maternity)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :ord (o2 / ordinal-entity\n                     :value 1)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :location (c2 / country\n                          :name (n / name\n                                   :op1 \"UK\"))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (r / rape-01\n                                              :ARG1 w)))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :ARG1 w)))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :manner (s / sex))))))",
      "(c / clinic\n   :ord (o2 / ordinal-entity\n            :value 1))",
      "(c / clinic\n   :location (c2 / country\n                 :name (n / name\n                          :op1 \"UK\")))",
      "(c / clinic\n   :beneficiary (w / woman\n                   :ARG1 (v / victimize-01\n                            :ARG0 (r / rape-01\n                                     :ARG1 w))))",
      "(c / clinic\n   :beneficiary (w / woman\n                   :ARG1 (v / victimize-01\n                            :ARG0 (a2 / assault-01\n                                      :ARG1 w))))",
      "(c / clinic\n   :beneficiary (w / woman\n                   :ARG1 (v / victimize-01\n                            :ARG0 (a2 / assault-01\n                                      :manner (s / sex)))))",
      "(c / clinic\n   :mod (m / maternity)\n   :ord (o2 / ordinal-entity\n            :value 1))"
    ],
    "smus": [
      "A maternity clinic has opened.",
      "The first clinic has opened.",
      "A clinic has opened in the UK.",
      "A clinic was opened for women who have been rape victims.",
      "A clinic was opened for women who have been victims of assault.",
      "A clinic was opened for women who have been victims of sexual assault.",
      "There is a maternity clinic in the UK.",
      "There is a maternity clinic in the UK for women who have been rape victims.",
      "There is a maternity clinic in the UK for women who have been assault victims.",
      "There is a maternity clinic in the UK for women who are sexual assault victims.",
      "and assault on women.",
      "Women are being raped and assaulted."
    ]
  },
  {
    "instance_id": "pyrxsum-25",
    "summary": "The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.",
    "summary_trees": [
      "# ::snt The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.\n(s / say-01\n      :ARG0 (f / figure\n            :ARG1-of (o / obtain-01\n                  :ARG0 (p / publication\n                        :name (n / name\n                              :op1 \"BBC\"))))\n      :ARG1 (ii / increase-01\n            :ARG1 (n2 / number\n                  :quant-of (c / child\n                        :ARG1-of (r / refer-02\n                              :ARG2 (g / government-organization\n                                    :name (n3 / name\n                                          :op1 \"NHS\"))\n                              :ARG1-of (c2 / cause-01\n                                    :ARG0 (ii2 / issue-02\n                                          :ARG0 (ii3 / identity\n                                                :mod (g2 / gender))\n                                          :ARG1 c)))))\n            :ARG2 (s2 / significant-02)\n            :time (y / year\n                  :mod (r2 / recent))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\")))))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG2 (g / government-organization\n                                                   :name (n3 / name\n                                                             :op1 \"NHS\")))))))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :time (y / year\n                      :mod (r2 / recent))))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG0 (ii3 / identity\n                                                                          :mod (g2 / gender)))))))))",
      "(s / say-01\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG1 c)))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG2 (g / government-organization\n                                                   :name (n3 / name\n                                                             :op1 \"NHS\")))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :time (y / year\n                      :mod (r2 / recent))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG0 (ii3 / identity\n                                                                          :mod (g2 / gender)))))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG1 c)))))))",
      "(f / figure\n   :ARG1 (o / obtain-01\n            :ARG0 (p / publication\n                     :name (n / name\n                              :op1 \"BBC\"))))",
      "(o / obtain-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"BBC\")))",
      "(p / publication\n   :name (n / name\n            :op1 \"BBC\"))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\"))))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender))))))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c))))))",
      "(ii / increase-01\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG2 (s2 / significant-02)\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02)\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :ARG2 (s2 / significant-02)\n    :time (y / year\n             :mod (r2 / recent)))",
      "(n2 / number\n    :quant (c / child\n              :ARG1 (r / refer-02\n                       :ARG2 (g / government-organization\n                                :name (n3 / name\n                                          :op1 \"NHS\")))))",
      "(n2 / number\n    :quant (c / child\n              :ARG1 (r / refer-02\n                       :ARG1 (c2 / cause-01\n                                 :ARG0 (ii2 / issue-02\n                                            :ARG0 (ii3 / identity\n                                                       :mod (g2 / gender)))))))",
      "(n2 / number\n    :quant (c / child\n              :ARG1 (r / refer-02\n                       :ARG1 (c2 / cause-01\n                                 :ARG0 (ii2 / issue-02\n                                            :ARG1 c)))))",
      "(c / child\n   :ARG1 (r / refer-02\n            :ARG2 (g / government-organization\n                     :name (n3 / name\n                               :op1 \"NHS\"))))",
      "(c / child\n   :ARG1 (r / refer-02\n            :ARG1 (c2 / cause-01\n                      :ARG0 (ii2 / issue-02\n                                 :ARG1 c))))",
      "(r / refer-02\n   :ARG2 (g / government-organization\n            :name (n3 / name\n                      :op1 \"NHS\")))",
      "(r / refer-02\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG0 (ii3 / identity\n                                   :mod (g2 / gender)))))",
      "(r / refer-02\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG1 (c / child))))",
      "(r / refer-02\n   :ARG2 (g / government-organization\n            :name (n3 / name\n                      :op1 \"NHS\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (ii2 / issue-02\n                        :ARG0 (ii3 / identity\n                                   :mod (g2 / gender)))))"
    ],
    "smus": [
      "According to figures obtained by the BBC,",
      "The number of children referred to the NHS has increased, it was said.",
      "Increased significantly, said.",
      "Increased in recent years.",
      "The number of children referred to as \"gender identity issues\" has increased, it was said.",
      "The number of children referred to as \"children\" for their issues has increased, the statement said.",
      "According to figures obtained by the BBC, the number of children referred to the NHS has increased.",
      "According to figures obtained by the BBC, the number has increased significantly.",
      "According to figures obtained by the BBC, the number has increased in recent years.",
      "According to figures obtained by the BBC, the number of children referred to as \"as being due to gender identity issues\" has increased.",
      "According to figures obtained by the BBC, the number of children referred to as \"caused by\" the issues has increased.",
      "Figures obtained by the BBC",
      "The BBC obtained.",
      "The number of children referred to the NHS has increased.",
      "The number of children referred to as \"gender identity issues\" has increased.",
      "The number of children referred to as having \"issues\" has increased.",
      "In recent years, it has increased.",
      "The number of children referred to the NHS has increased significantly.",
      "The number of children referred to as \"gender identity issues\" has significantly increased.",
      "The number of children referred to as having issues has increased significantly.",
      "The number of children referred to the NHS has increased in recent years.",
      "In recent years, the number of children referred to as \"gender identity issues\" has increased.",
      "In recent years, the number of children referred to as having issues has increased.",
      "In recent years, the number of increases has increased significantly.",
      "In recent years, the number of children referred to the NHS has increased significantly.",
      "In recent years, the number of children referred to as \"gender identity issues\" has significantly increased.",
      "In recent years, the number of children referred to as having issues has increased significantly.",
      "The number of children referred to as \"gender identity issues\"",
      "There are a number of children referred to as having \"issues\".",
      "The children were referred to the NHS.",
      "Children were referred to as \"because of gender identity issues.\"",
      "Referred to the NHS.",
      "Referred to gender identity issues.",
      "Referred to as \"children's issues\".",
      "The NHS referred to gender identity issues.",
      "The NHS referred to the children's issues."
    ]
  },
  {
    "instance_id": "pyrxsum-26",
    "summary": "The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.",
    "summary_trees": [
      "# ::snt The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / borough\n                        :location (e / east\n                              :part-of (c / city\n                                    :name (n / name\n                                          :op1 \"London\"))))\n                  :ARG2 (m / mayor)))\n      :ARG2 (p2 / practice-01\n            :ARG0 p\n            :ARG1-of (c2 / corrupt-01)\n            :ARG1-of (l / legal-02\n                  :polarity -))\n      :time (h2 / hearing-02\n            :ARG0 (c3 / court)\n            :ARG1 p\n            :ARG1-of (s / special-02)))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor))))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :time (h2 / hearing-02\n             :ARG1 (p / person)))",
      "(a / accuse-01\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG0 (p / person))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (p / person)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (p / person)))",
      "(a / accuse-01\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))"
    ],
    "smus": [
      "The mayor has been accused.",
      "accused of being in the practices of people.",
      "accused of corrupt practices.",
      "accused of illegal practices.",
      "The accusations were made at a court hearing.",
      "The people were accused at the hearing.",
      "Accused at a special hearing.",
      "The borough of East London has been accused of corrupt practices.",
      "The borough of East London has been accused of illegal practices.",
      "The mayor has been accused of \"practices\".",
      "The mayor has been accused of corrupt practices.",
      "The mayor has been accused of illegal practices.",
      "At a court hearing the borough of East London has been accused.",
      "At the hearing a borough of East London was accused.",
      "At the special hearing a borough of east London is accused.",
      "The mayor has been accused at a court hearing.",
      "The mayor has been accused at the hearing.",
      "The mayor has been accused at a special hearing.",
      "During the court hearing, people were accused of their practices.",
      "During the hearing, people were accused of their practices.",
      "During the special hearing, people were accused of their practices.",
      "Accused of corrupt practices at a court hearing.",
      "During the hearing, people were accused of corrupt practices.",
      "During the special hearing, the practices were accused of being corrupt.",
      "Accused of illegal practices at a court hearing.",
      "At the hearing, people were accused of illegal practices.",
      "During the special hearing, the accused were accused of illegal practices.",
      "At the hearing a borough in east London was accused of corrupt practices.",
      "At the special hearing a borough in east London was accused of corrupt practices.",
      "At a court hearing the borough of East London has been accused of illegal practices.",
      "At the hearing a borough in east London was accused of illegal practices.",
      "At the special hearing a borough in east London was accused of illegal practices.",
      "The mayor has been accused of \"practices\" during the hearing.",
      "At the special hearing the mayor is accused of \"practices\"",
      "The mayor has been accused of corruption practices at a court hearing.",
      "The mayor has been accused of corruption practices at the hearing.",
      "At the special hearing the mayor is accused of corrupt practices.",
      "The mayor has been accused of illegal practices at a court hearing.",
      "The mayor has been accused of illegal practices at the hearing.",
      "At the special hearing the mayor is accused of illegal practices."
    ]
  },
  {
    "instance_id": "pyrxsum-27",
    "summary": "A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.",
    "summary_trees": [
      "# ::snt A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.\n(a / appear-01\n      :ARG1 (m / man\n            :age (t / temporal-quantity\n                  :quant 21\n                  :unit (y / year))\n            :ARG1-of (c / charge-05\n                  :ARG2 (s / stab-01\n                        :ARG1 (p / person\n                              :name (n / name\n                                    :op1 \"Karl\"\n                                    :op2 \"Haugh\"))\n                        :mod (f / fatal)\n                        :location (c2 / city\n                              :name (n2 / name\n                                    :op1 \"Kilkee\"))\n                        :time (w / weekend))))\n      :location (c3 / court\n            :location (c4 / county\n                  :name (n3 / name\n                        :op1 \"Clare\"))))"
    ],
    "tree": [
      "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21)))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\"))))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal)))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\"))))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :time (w / weekend)))))",
      "(a / appear-01\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :time (w / weekend))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(m / man\n   :age (t / temporal-quantity\n           :quant 21))",
      "(m / man\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(m / man\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Karl\"\n                                       :op2 \"Haugh\")))))",
      "(m / man\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :mod (f / fatal))))",
      "(m / man\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :location (c2 / city\n                                   :name (n2 / name\n                                             :op1 \"Kilkee\")))))",
      "(m / man\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :time (w / weekend))))",
      "(m / man\n   :age (t / temporal-quantity\n           :quant 21)\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :mod (f / fatal))))",
      "(m / man\n   :age (t / temporal-quantity\n           :quant 21)\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :time (w / weekend))))",
      "(m / man\n   :age (t / temporal-quantity\n           :unit (y / year))\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Karl\"\n                                       :op2 \"Haugh\")))))",
      "(m / man\n   :age (t / temporal-quantity\n           :unit (y / year))\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :mod (f / fatal))))",
      "(m / man\n   :age (t / temporal-quantity\n           :unit (y / year))\n   :ARG1 (c / charge-05\n            :ARG2 (s / stab-01\n                     :time (w / weekend))))",
      "(c / charge-05\n   :ARG2 (s / stab-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Karl\"\n                              :op2 \"Haugh\"))))",
      "(c / charge-05\n   :ARG2 (s / stab-01\n            :location (c2 / city\n                          :name (n2 / name\n                                    :op1 \"Kilkee\"))))",
      "(c / charge-05\n   :ARG2 (s / stab-01\n            :time (w / weekend)))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\")))",
      "(s / stab-01\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\")))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :mod (f / fatal))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\")))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :time (w / weekend))",
      "(s / stab-01\n   :mod (f / fatal)\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\")))",
      "(s / stab-01\n   :mod (f / fatal)\n   :time (w / weekend))",
      "(s / stab-01\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\"))\n   :time (w / weekend))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :mod (f / fatal)\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\")))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :mod (f / fatal)\n   :time (w / weekend))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\"))\n   :time (w / weekend))"
    ],
    "smus": [
      "The 21-year-old man appeared.",
      "The man charged with the stabbing of Karl Haugh has appeared.",
      "The man was apparently charged with fatal stab.",
      "The man charged with the stabbery in Kilkee has appeared.",
      "The man was apparently charged with stabbery at the weekend.",
      "The case was heard in Clare County court.",
      "The 21-year-old man was appeared in Clare County court.",
      "The man charged with Karl Haugh's stabbing appeared in Clare County court.",
      "The man charged with fatal stab wounds appeared in court in Clare County.",
      "The man charged with stab wound in Kilkee appeared in court in Clare County.",
      "The man charged with a weekend stabber appeared in Clare County court.",
      "The man charged with the stabbing of Karl Haugh.",
      "The man was charged with fatal stab wounds.",
      "The man charged with the stabbery in Kilkee.",
      "The man was charged with stabbery at the weekend.",
      "The 21-year-old man was charged with stabbing Karl Haugh.",
      "The 21-year-old man was charged with fatal stab.",
      "The 21-year-old man was charged with stabbedness at the weekend.",
      "A year old man was charged with fatal stab wound.",
      "A year old man was charged with stab wounds in Kilkee.",
      "A year old man was charged with stabbedness at the weekend.",
      "The fatal stabbing was charged.",
      "Kilkee stabbing charged",
      "Karl Haugh got stabbed",
      "The stab wounds occurred in Kilkee.",
      "Karl Haugh was fatally stabbed.",
      "Karl Haugh was stabbed in Kilkee.",
      "Karl Haugh got stabbed at the weekend.",
      "A fatal stabbing occurred in Kilkee.",
      "A fatal stabbing occurred over the weekend.",
      "The stabbed occurred in Kilkee over the weekend.",
      "Karl Haugh was fatally stabbed in Kilkee.",
      "Karl Haugh was fatally stabbed over the weekend.",
      "Karl Haugh was stabbed in Kilkee over the weekend.",
      "A fatal stabbing occurred in Kilkee over the weekend.",
      "Karl Haugh was fatally stabbed in Kilkee over the weekend."
    ]
  },
  {
    "instance_id": "pyrxsum-28",
    "summary": "Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, workers union says.",
    "summary_trees": [
      "# ::snt Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, workers union says.\n(s / say-01\n      :ARG0 (u / union\n            :mod (p / person\n                  :ARG0-of (w / work-01)))\n      :ARG1 (s2 / strike-02\n            :ARG0 (p2 / person\n                  :ARG0-of (w2 / work-01\n                        :ARG2 (g / government-organization\n                              :name (n / name\n                                    :op1 \"Post\"\n                                    :op2 \"Office\"))))\n            :duration (t / temporal-quantity\n                  :quant 5\n                  :unit (d / day))\n            :time (f / from\n                  :op1 (d2 / date-entity\n                        :weekday (m / monday)))\n            :ARG1-of (c / cause-01\n                  :ARG0 (d3 / dispute-01\n                        :ARG2 (a / and\n                              :op1 (j / job)\n                              :op2 (p3 / pension)\n                              :op3 (c2 / close-01\n                                    :ARG1 (b / branch)))\n                        :ARG1-of (c3 / continue-01)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG0 (p2 / person\n                       :ARG0 (w2 / work-01\n                                 :ARG2 (g / government-organization\n                                          :name (n / name\n                                                   :op1 \"Post\"\n                                                   :op2 \"Office\"))))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :time (f / from\n                      :op1 (d2 / date-entity\n                               :weekday (m / monday)))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (j / job)))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :unit (d / day))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))",
      "(s / say-01\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (p3 / pension)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG0 (p2 / person\n                       :ARG0 (w2 / work-01\n                                 :ARG2 (g / government-organization\n                                          :name (n / name\n                                                   :op1 \"Post\"\n                                                   :op2 \"Office\"))))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :time (f / from\n                      :op1 (d2 / date-entity\n                               :weekday (m / monday)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (j / job)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :unit (d / day))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (p3 / pension)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :mod (p / person\n                    :ARG0 (w / work-01)))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (c2 / close-01\n                                          :ARG1 (b / branch))))))",
      "(u / union\n   :mod (p / person\n           :ARG0 (w / work-01)))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\")))))",
      "(s2 / strike-02\n    :duration (t / temporal-quantity\n                 :quant 5))",
      "(s2 / strike-02\n    :duration (t / temporal-quantity\n                 :unit (d / day)))",
      "(s2 / strike-02\n    :time (f / from\n             :op1 (d2 / date-entity\n                      :weekday (m / monday))))",
      "(s2 / strike-02\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (j / job))))",
      "(s2 / strike-02\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG1 (c3 / continue-01))))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\"))))\n    :duration (t / temporal-quantity\n                 :unit (d / day)))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\"))))\n    :time (f / from\n             :op1 (d2 / date-entity\n                      :weekday (m / monday))))",
      "(s2 / strike-02\n    :ARG0 (p2 / person\n              :ARG0 (w2 / work-01\n                        :ARG2 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"Post\"\n                                          :op2 \"Office\"))))\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (p3 / pension))))",
      "(s2 / strike-02\n    :duration (t / temporal-quantity\n                 :quant 5)\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (j / job))))",
      "(s2 / strike-02\n    :duration (t / temporal-quantity\n                 :quant 5)\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG1 (c3 / continue-01))))",
      "(s2 / strike-02\n    :duration (t / temporal-quantity\n                 :quant 5)\n    :ARG1 (c / cause-01\n             :ARG0 (d3 / dispute-01\n                       :ARG2 (p3 / pension))))"
    ],
    "smus": [
      "\"The Workers Union says...",
      "Says Post Office workers are on strike.",
      "Strikes will take place from Monday, says the group.",
      "Strikes over jobs dispute says",
      "Strikes for days says",
      "Strikes are said to be caused by continuing dispute.",
      "Strikes over pensions dispute says",
      "The Post Office workers' union says there are strikes.",
      "Workers Union says strikes will take place from Monday.",
      "Workers Union says strikes are caused by a jobs dispute.",
      "The Workers Union says there will be days of strikes.",
      "The Workers Union says strikes are being made over a continuing dispute.",
      "Workers Union says strikes are caused by a pensions dispute.",
      "Workers Union says strikes are caused by a dispute over branch closures.",
      "Strikes over continuing dispute",
      "Post Office workers are on strike over a continuing dispute.",
      "Post Office workers are striking over a dispute over branch closures.",
      "Five strikes over continuing dispute.",
      "There have been days of strikes over the continuing dispute.",
      "Strikes from Monday over continuing dispute.",
      "From Monday, strikes will occur over a pensions dispute.",
      "From Monday, Post Office workers are striking over a continuing dispute.",
      "From Monday, five strikes were in place over a continuing dispute.",
      "From Monday, Post Office workers will strike for five days over a continuing dispute.",
      "The continuing dispute is about jobs.",
      "The continuing dispute is about pensions.",
      "The continuing dispute is over branch closures."
    ]
  },
  {
    "instance_id": "pyrxsum-29",
    "summary": "Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.",
    "summary_trees": [
      "# ::snt Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.\n(r / regulate-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Education\"\n                  :op2 \"Workforce\"\n                  :op3 \"Council\"))\n      :ARG1 (p / person\n            :ARG0-of (w / work-01\n                  :ARG2 (y / youth))\n            :location (c / country\n                  :name (n2 / name\n                        :op1 \"Wales\")))\n      :ord (o / ordinal-entity\n            :value 1)\n      :time (f / from\n            :op1 (d / date-entity\n                  :month 4\n                  :day 1)))"
    ],
    "tree": [
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth))))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\"))))",
      "(r / regulate-01\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))"
    ],
    "smus": [
      "Youth workers are regulated.",
      "The Welsh are regulated.",
      "Youth workers are regulated by the Education Workforce Council.",
      "The Education Workforce Council is the first to regulate.",
      "Youth workers are the first to be regulated.",
      "Youth workers are regulated from April.",
      "Youth workers will be regulated from the first of the year.",
      "Welsh people will be regulated from April.",
      "Youth workers are the first to be regulated by the Education Workforce Council.",
      "Youth workers are regulated by the Education Workforce Council from April.",
      "Youth workers will be regulated by the Education Workforce Council from the 1st.",
      "From April the Welsh people will be regulated by the Education Workforce Council.",
      "From the 1st, people in Wales will be regulated by the Education Workforce Council.",
      "From April, the Education Workforce Council will be the first to regulate.",
      "Youth workers are the first to be regulated from April.",
      "Youth workers will be the first to be regulated from the first of the year.",
      "Wales will be the first to be regulated from April.",
      "Youth workers are the first to be regulated by the Education Workforce Council from April.",
      "From April the Welsh population will be the first to be regulated by the Education Workforce Council."
    ]
  },
  {
    "instance_id": "pyrxsum-30",
    "summary": "Liberal Democrat leader Tim Farron says Farron does not believe gay sex is a sin, following questions about Farron views on the subject.",
    "summary_trees": [
      "# ::snt Liberal Democrat leader Tim Farron says Farron does not believe gay sex is a sin, following questions about Farron views on the subject.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Farron\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Liberal\"\n                              :op2 \"Democrat\"))))\n      :ARG1 (b / believe-01\n            :polarity -\n            :ARG0 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Farron\"))\n            :ARG1 (s2 / sin-01\n                  :ARG0 (s3 / sex-01\n                        :ARG1 (p4 / person\n                              :ARG1-of (g / gay-01)))))\n      :ARG1-of (f / follow-01\n            :ARG2 (q / question-01\n                  :ARG1 (v / view-02\n                        :ARG0 p3\n                        :ARG1 (s4 / subject)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\"))\n   :ARG1 (b / believe-01\n            :ARG1 (s2 / sin-01\n                      :ARG0 (s3 / sex-01\n                                :ARG1 (p4 / person\n                                          :ARG1 (g / gay-01))))))",
      "(l / lead-02\n   :ARG1 (p2 / political-party\n             :name (n2 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(p2 / political-party\n    :name (n2 / name\n              :op1 \"Liberal\"\n              :op2 \"Democrat\"))",
      "(b / believe-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Farron\")))"
    ],
    "smus": [
      "According to the leader of the Liberal Democrats,",
      "The Liberal Democrat leader says he does not believe.",
      "Following questioning of Ferran's views:",
      "Following questioning of views on the subject:",
      "The views on the subject are questioned."
    ]
  },
  {
    "instance_id": "pyrxsum-31",
    "summary": "Paint has been thrown over an Orange hall in north Belfast.",
    "summary_trees": [
      "# ::snt Paint has been thrown over an Orange hall in north Belfast.\n(t / throw-01\n      :ARG1 (p / paint)\n      :ARG2 (o / over\n            :op1 (h / hall\n                  :mod (o2 / organization\n                        :name (n / name\n                              :op1 \"Society\"\n                              :op2 \"of\"\n                              :op3 \"Orange\"))\n                  :location (n2 / north\n                        :part-of (c / city\n                              :name (n3 / name\n                                    :op1 \"Belfast\"))))))"
    ],
    "tree": [
      "(t / throw-01\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\")))))",
      "(t / throw-01\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :location (n2 / north\n                                  :part (c / city\n                                           :name (n3 / name\n                                                     :op1 \"Belfast\"))))))",
      "(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\")))))",
      "(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :location (n2 / north\n                                  :part (c / city\n                                           :name (n3 / name\n                                                     :op1 \"Belfast\"))))))"
    ],
    "smus": [
      "Thrown over the Orange Society hall.",
      "Thrown over the hall in northern Belfast.",
      "Paint was thrown over the Orange Hall.",
      "Paint thrown over the hall in northern Belfast."
    ]
  },
  {
    "instance_id": "pyrxsum-32",
    "summary": "Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after Mignolet latest uncertain display in the draw with Arsenal at Anfield.",
    "summary_trees": [
      "# ::snt Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after Mignolet latest uncertain display in the draw with Arsenal at Anfield.\n(d / defend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Liverpool\"))\n                  :ARG2 (b / boss)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Simon\"\n                  :op2 \"Mignolet\")\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (g / goalkeeper))\n            :ARG1-of (f / fire-02\n                  :mod (u / under)))\n      :time (a / after\n            :op1 (d2 / display-01\n                  :ARG0 p2\n                  :ARG1 (t2 / thing\n                        :ARG1-of (k / know-01\n                              :polarity -))\n                  :mod (l / last)\n                  :subevent-of (d3 / draw-01\n                        :ARG0 t\n                        :ARG1 (t3 / team\n                              :name (n4 / name\n                                    :op1 \"Arsenal\"))\n                        :location (s / sports-facility\n                              :name (n5 / name\n                                    :op1 \"Anfield\"))))))"
    ],
    "tree": [
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\")))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 t))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 t))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 t))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (t2 / thing\n                               :ARG1 (k / know-01\n                                        :polarity -)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (t / team :name (n2 / name :op1 \"Liverpool\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG1 (t3 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Jurgen\"\n            :op2 \"Klopp\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (b / boss)))",
      "(p / person\n   :name (n / name\n            :op1 \"Jurgen\"\n            :op2 \"Klopp\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (b / boss)))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Liverpool\")))"
    ],
    "smus": [
      "Jurgen Klopp defended.",
      "Liverpool defenders defended.",
      "The boss defended.",
      "The under fire person was defended.",
      "After Simon Merlot's display, he defended.",
      "The defence defended after a display in the Liverpool draw.",
      "The defence defended after a display in the draw with Arsenal.",
      "The defence was defended after a display in the draw at Anfield.",
      "Jurgen Klopp defended the goalkeeper.",
      "Jurgen Klopp defended the under fire person.",
      "Liverpool defended the goalkeeper.",
      "Liverpool defended the under fire.",
      "The boss defended the goalkeeper.",
      "The boss defended the under fire person.",
      "After the last display, Jurgen Klopp defended.",
      "Jurgen Klopp defended after the display in the Liverpool draw.",
      "Jurgen Klopp defended after the display in the draw with Arsenal.",
      "Jurgen Klopp defended after a display in the draw at Anfield.",
      "Liverpool defender defended after Simon Merlot's display.",
      "Liverpool defender defended after a display of \"no knowing\".",
      "Liverpool defender defended after last display.",
      "Liverpool defender defended after the display in the draw.",
      "Liverpool defender defended after the display in the draw with Arsenal.",
      "Liverpool defender defended after a display at anfield during the draw.",
      "The boss defended after Simon Merlot's display.",
      "After a display of ignorance, the boss defended.",
      "After the last display, the boss defended.",
      "The boss defended after the display in the Liverpool draw.",
      "The boss defended after the display in the draw with Arsenal.",
      "The boss defended after the display at Anfield's draw.",
      "The goalkeeper defended after the last display.",
      "The goalkeeper defended after a display in the Liverpool draw.",
      "The goalkeeper defended after a display in the draw with Arsenal.",
      "The goalkeeper defended after a display in the draw at Anfield.",
      "The under fire person defended after the display.",
      "After a display of ignorance, the under fire person defended.",
      "After the last display, the under fire person defended.",
      "The under fire defender defended after the display in the Liverpool draw.",
      "The under fire defenders were defended after a display in the draw with Arsenal.",
      "The under fire person was defended after a display at anfield's draw.",
      "Jurgen Klopp defended the goalkeeper after his display.",
      "After the last display, Jurgen Klopp defended the goalkeeper.",
      "Jurgen Klopp defended the goalkeeper after the display in the Liverpool draw.",
      "Jurgen Klopp defended the goalkeeper after the display in the draw with Arsenal.",
      "Jurgen Klopp defended the goalkeeper after the display at Anfield.",
      "After a display, Jurgen Klopp defended the under fire person.",
      "After a display of \"unknownness\", Jurgen Klopp defended the under fire person.",
      "After the last display, Jurgen Klopp defended the under fire person.",
      "Jurgen Klopp defended the under fire fire after the display in the Liverpool draw.",
      "Jurgen Klopp defended the under fire fire after the display in the draw with Arsenal.",
      "Jurgen Klopp defended the under fire person after the display at the Anfield draw.",
      "Liverpool defender defended goalkeeper after display.",
      "Liverpool defender defended goalkeeper after display of ignorance.",
      "After the last display, Liverpool defended the goalkeeper.",
      "Liverpool defender defended goalkeeper after display in draw.",
      "Liverpool defender defended goalkeeper after display in draw with Arsenal.",
      "Liverpool defender defended goalkeeper after display at anfield",
      "Liverpool defender defended under fire after his display.",
      "Liverpool defenders defended under fire after a display of \"unknownness\".",
      "Liverpool defenders defended under fire after last display.",
      "Liverpool defended the under fire after a display in the draw.",
      "Liverpool defender defended under fire after display in draw with Arsenal.",
      "Liverpool defenders defended under fire after display at anfield",
      "After Simon Merlot's display, the boss defended him.",
      "The boss defended the goalkeeper after the display.",
      "After a display of ignorance, the boss defended the goalkeeper.",
      "After the last display, the boss defended the goalkeeper.",
      "After a display in the Liverpool draw, the boss defended the goalkeeper.",
      "After a display in the draw with Arsenal, the boss defended the goalkeeper.",
      "After a display in the draw at Anfield, the boss defended the goalkeeper.",
      "After a display the boss defended the under fire person.",
      "After a display of ignorance, the boss defended the under fire person.",
      "After the last display, the boss defended the under fire person.",
      "After a display in the Liverpool draw, the boss defended the under fire person.",
      "After a display in the draw with Arsenal, the boss defended the under fire person.",
      "After a display at the draw at Anfield, the boss defended the under fire person.",
      "Display at Anfield draw",
      "Unknowing.",
      "Draw at Anfield",
      "Arsenal drew at Anfield"
    ]
  },
  {
    "instance_id": "pyrxsum-33",
    "summary": "Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.",
    "summary_trees": [
      "# ::snt Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.\n(l / leave-11\n      :ARG0 (p / person\n            :quant (m / multiple\n                  :op1 1000))\n      :ARG1 (d / district\n            :location (e / east)\n            :ARG1-of (b / besiege-01)\n            :ARG1-of (h / hold-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (r / rebel-01)))\n            :part-of (c / city\n                  :name (n / name\n                        :op1 \"Aleppo\")\n                  :location (c2 / country\n                        :name (n2 / name\n                              :op1 \"Syria\"))))\n      :ARG1-of (f / follow-01\n            :ARG2 (r2 / resume-01\n                  :ARG1 (e2 / evacuate-01\n                        :ARG1-of (a / agree-01\n                              :part-of (d2 / deal-01\n                                    :ARG2 (c3 / cease-01\n                                          :ARG1 (f2 / fire-01))\n                                    :time (w / week\n                                          :mod (l2 / last))))))))"
    ],
    "tree": [
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG1 (d / district\n            :ARG1 (h / hold-01\n                     :ARG0 (p2 / person\n                               :ARG0 (r / rebel-01)))))",
      "(l / leave-11\n   :ARG1 (d / district\n            :part (c / city\n                     :name (n / name\n                              :op1 \"Aleppo\"))))",
      "(l / leave-11\n   :ARG1 (d / district\n            :part (c / city\n                     :location (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Syria\")))))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (h / hold-01\n                     :ARG0 (p2 / person\n                               :ARG0 (r / rebel-01)))))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :part (c / city\n                     :name (n / name\n                              :op1 \"Aleppo\"))))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :part (c / city\n                     :location (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Syria\")))))",
      "(p / person\n   :quant (m / multiple\n             :op1 1000))",
      "(d / district\n   :part (c / city\n            :name (n / name\n                     :op1 \"Aleppo\")))",
      "(d / district\n   :part (c / city\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Syria\"))))",
      "(d / district\n   :location (e / east)\n   :ARG1 (b / besiege-01))",
      "(d / district\n   :location (e / east)\n   :part (c / city\n            :name (n / name\n                     :op1 \"Aleppo\")))",
      "(d / district\n   :location (e / east)\n   :part (c / city\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Syria\"))))",
      "(d / district\n   :ARG1 (b / besiege-01)\n   :part (c / city\n            :name (n / name\n                     :op1 \"Aleppo\")))",
      "(d / district\n   :ARG1 (b / besiege-01)\n   :part (c / city\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Syria\"))))",
      "(d / district\n   :location (e / east)\n   :ARG1 (b / besiege-01)\n   :part (c / city\n            :name (n / name\n                     :op1 \"Aleppo\")))",
      "(d / district\n   :location (e / east)\n   :ARG1 (b / besiege-01)\n   :part (c / city\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Syria\"))))",
      "(h / hold-01\n   :ARG0 (p2 / person\n             :ARG0 (r / rebel-01)))"
    ],
    "smus": [
      "Thousands of people are leaving.",
      "leaving the eastern districts.",
      "leaving districts of besieged.",
      "Leaving districts held by rebels",
      "Leaving districts of Aleppo",
      "Leaving districts of the Syrian city",
      "Thousands are leaving eastern districts.",
      "Thousands of people are leaving besieged districts.",
      "Thousands are leaving districts held by the rebels.",
      "Thousands are leaving the districts of Aleppo.",
      "Thousands are leaving districts of a Syrian city.",
      "Besieged eastern districts of Aleppo city",
      "Besieged eastern districts of Syrian city",
      "The Rebels have held.",
      "Following the resume of evacuations agreed as part of the ceasefire deal.",
      "Following the resume of evacuations agreed as part of last week's deal.",
      "The evacuations resumed as part of a ceasefire deal.",
      "The evacuations that were agreed to as part of last week's deal resumed.",
      "There were evacuations as part of a cease fire deal.",
      "The evacuations were part of an agreement reached last week.",
      "The deal happened last week.",
      "A cease fire deal was struck last week."
    ]
  },
  {
    "instance_id": "pyrxsum-34",
    "summary": "Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.",
    "summary_trees": [
      "# ::snt Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.\n(m / march-01\n      :ARG0 (p / person\n            :quant (m2 / multiple\n                  :op1 1000))\n      :purpose (o / oppose-01\n            :ARG0 p\n            :ARG1 (p2 / plan-01\n                  :ARG1 (d / downgrade-02\n                        :ARG1 (s / service\n                              :poss (h / hospital\n                                    :name (n / name\n                                          :op1 \"Stafford\"\n                                          :op2 \"Hospital\")))))))"
    ],
    "tree": [
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000)))",
      "(m / march-01\n   :purpose (o / oppose-01\n               :ARG0 (p / person)))",
      "(m / march-01\n   :purpose (o / oppose-01\n               :ARG1 (p2 / plan-01\n                         :ARG1 (d / downgrade-02\n                                  :ARG1 (s / service\n                                           :poss (h / hospital\n                                                    :name (n / name\n                                                             :op1 \"Stafford\"\n                                                             :op2 \"Hospital\")))))))",
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG0 p))",
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG1 (p2 / plan-01\n                         :ARG1 (d / downgrade-02\n                                  :ARG1 (s / service\n                                           :poss (h / hospital\n                                                    :name (n / name\n                                                             :op1 \"Stafford\"\n                                                             :op2 \"Hospital\")))))))",
      "(p / person\n   :quant (m2 / multiple\n              :op1 1000))",
      "(o / oppose-01\n   :ARG1 (p2 / plan-01\n             :ARG1 (d / downgrade-02\n                      :ARG1 (s / service\n                               :poss (h / hospital\n                                        :name (n / name\n                                                 :op1 \"Stafford\"\n                                                 :op2 \"Hospital\"))))))"
    ],
    "smus": [
      "Thousands marched.",
      "Marched in opposition to people.",
      "Marched in opposition to plans to downgrade Stafford Hospital's services.",
      "Thousands marched in opposition.",
      "Thousands marched in opposition to plans to downgrade Stafford Hospital's services.",
      "There was opposition to plans to downgrade Stafford Hospital's services.",
      "Plans to downgrade Stafford Hospital's services."
    ]
  },
  {
    "instance_id": "pyrxsum-35",
    "summary": "Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.",
    "summary_trees": [
      "# ::snt Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.\n(e / embark-01\n      :ARG0 (y / you\n            :ARG1-of (f / fill-01\n                  :ARG2 (a / and\n                        :op1 (g / goodwill)\n                        :op2 (o / optimism\n                              :ARG1-of (c / conceive-01\n                                    :polarity -))\n                        :op3 (h / heart\n                              :mod (h2 / heavy\n                                    :degree (s / slight))))))\n      :ARG1 (k / kick-01\n            :ARG0 y\n            :ARG1 (h3 / health)))"
    ],
    "tree": [
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill))))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (h / heart\n                              :mod (h2 / heavy\n                                       :degree (s / slight))))))",
      "(e / embark-01\n   :ARG1 (k / kick-01\n            :ARG0 (y / you)))",
      "(e / embark-01\n   :ARG1 (k / kick-01\n            :ARG1 (h3 / health)))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill)))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (o / optimism\n                              :ARG1 (c / conceive-01\n                                       :polarity -))))\n   :ARG1 (k / kick-01\n            :ARG1 (h3 / health)))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (h / heart\n                              :mod (h2 / heavy\n                                       :degree (s / slight)))))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(y / you\n   :ARG1 (f / fill-01\n            :ARG2 (g / goodwill)))",
      "(y / you\n   :ARG1 (f / fill-01\n            :ARG2 (o / optimism\n                     :ARG1 (c / conceive-01\n                              :polarity -))))"
    ],
    "smus": [
      "You embark on a journey filled with goodwill.",
      "You embark on a journey filled with a slightly heavy heart.",
      "You embark on a kick.",
      "You embark on a kick, full of goodwill.",
      "You embark on a health kick, full of goodwill.",
      "You embark on a kick, slightly heavy hearted.",
      "You embark on a health kick, filled with a slightly heavy heart.",
      "You are filled with a slightly heavy heart.",
      "A slightly heavy heart is filled."
    ]
  },
  {
    "instance_id": "pyrxsum-36",
    "summary": "Russia and Qatar may have had to pay bribes to secure bribes World Cups, Sepp Blatter's former special advisor has suggested.",
    "summary_trees": [
      "# ::snt Russia and Qatar may have had to pay bribes to secure bribes World Cups, Sepp Blatter's former special advisor has suggested.\n(s / suggest-01\n      :ARG0 (p / person\n            :ARG0-of (a / advise-01\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Sepp\"\n                              :op2 \"Blatter\"))\n                  :time (f / former)\n                  :ARG1-of (s2 / special-02)))\n      :ARG1 (p3 / possible-01\n            :ARG1 (o / obligate-01\n                  :ARG1 (a2 / and\n                        :op1 (c / country\n                              :name (n2 / name\n                                    :op1 \"Russia\"))\n                        :op2 (c2 / country\n                              :name (n3 / name\n                                    :op1 \"Qatar\")))\n                  :ARG2 (p4 / pay-01\n                        :ARG0 a2\n                        :ARG1 (b / bribe-01)\n                        :purpose (s3 / secure-01\n                              :ARG0 a2\n                              :ARG1 (g / game\n                                    :name (n4 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")\n                                    :mod (b2 / bribe-01)))))))"
    ],
    "tree": [
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :mod (b2 / bribe-01)))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :mod (b2 / bribe-01)))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :mod (b2 / bribe-01)))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-01\n                                             :ARG1 (g / game\n                                                      :mod (b2 / bribe-01)))))))",
      "(p / person\n   :ARG0 (a / advise-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Sepp\"\n                               :op2 \"Blatter\"))))",
      "(p / person\n   :ARG0 (a / advise-01\n            :time (f / former)))",
      "(p / person\n   :ARG0 (a / advise-01\n            :ARG1 (s2 / special-02)))",
      "(a / advise-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Sepp\"\n                      :op2 \"Blatter\")))",
      "(a / advise-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Sepp\"\n                      :op2 \"Blatter\"))\n   :time (f / former))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Sepp\"\n             :op2 \"Blatter\"))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"Russia\"))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :ARG1 (b / bribe-01))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-01\n                                    :ARG1 (g / game\n                                             :name (n4 / name\n                                                       :op1 \"World\"\n                                                       :op2 \"Cup\"))))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\")))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :ARG0 (a2 / and)))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :ARG1 (b / bribe-01)))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :ARG0 (a2 / and)))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :ARG1 (b / bribe-01)))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :name (n4 / name\n                                             :op1 \"World\"\n                                             :op2 \"Cup\")))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :ARG0 (a2 / and)))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-01\n                          :ARG1 (g / game\n                                   :mod (b2 / bribe-01)))))"
    ],
    "smus": [
      "As suggested by a former adviser.",
      "It is suggested that Russia may have to.",
      "It is suggested that the parties may have to pay.",
      "It is suggested that Qatar may have to.",
      "It is suggested that bribes may have to be paid.",
      "It is suggested that to secure the payment, the parties may have to pay.",
      "It is suggested that to secure the World Cup, there may have to be a payment obligation.",
      "It is suggested that to secure the bribe games, the players may have to pay.",
      "Advice from Sepp Blatter has suggested that Russia may have to.",
      "Advice from Sepp Blatter has suggested that the parties may have to pay.",
      "Advice from Sepp Blatter has suggested that Qatar may have to.",
      "Advice from Sepp Blatter has suggested that bribes may have to be paid.",
      "Advice from Sepp Blatter has suggested that to secure the payment may have to be made.",
      "Advice from Sepp Blatter has suggested that it might be necessary to pay to secure the World Cup.",
      "Advice from Sepp Blatter has suggested that it might be necessary to pay to secure the bribe games.",
      "A former adviser has suggested that Russia may have to.",
      "Former advisers have suggested that they may have to pay.",
      "A former adviser has suggested Qatar may have to.",
      "Former advisers have suggested that bribes may have to be paid.",
      "Former advisers have suggested that to secure the payments may have to be made.",
      "Former adviser has suggested that it may have to pay to secure the World Cup.",
      "A former adviser has suggested that it may have to pay to secure the bribe games.",
      "Special advisers have suggested that Russia may have to.",
      "Special advisers have suggested that they may have to pay.",
      "Special advisers have suggested Qatar may have to.",
      "Special advisers have suggested that bribes may have to be paid.",
      "Special advisers have suggested that to secure the money the parties may have to pay.",
      "Special advisers have suggested that it might have to pay to secure the World Cup.",
      "Special advisers have suggested that it might be necessary to pay to secure the bribe games.",
      "Russia may have to.",
      "Maybe they have to pay.",
      "Qatar may have to.",
      "Maybe bribes have to be paid.",
      "Maybe to secure, the payer has to pay.",
      "Maybe to secure the World Cup, it has to pay.",
      "Maybe to secure the bribe games, the payments have to be made.",
      "To secure, the payer must pay.",
      "To secure the bribe games, the payments must be made.",
      "Russia must pay to secure.",
      "Russia must pay to secure the World Cup.",
      "Russia must pay to secure the bribery game.",
      "Qatar must pay to secure.",
      "Qatar must pay to secure the World Cup.",
      "Qatar must pay to secure the bribe games.",
      "pay to secure.",
      "pay to secure the World Cup",
      "pay to secure the bribe games.",
      "Bribes are paid to secure.",
      "pay bribes to secure the bribe games.",
      "World Cup bribes"
    ]
  },
  {
    "instance_id": "pyrxsum-37",
    "summary": "The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.",
    "summary_trees": [
      "# ::snt The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.\n(b / begin-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"High\"\n                  :op2 \"Court\"))\n      :ARG1 (h / hear-01\n            :ARG0 g\n            :ARG1 (c / challenge-01\n                  :ARG0 (m / man\n                        :ARG1-of (ii / ill-01\n                              :mod (t / terminal))\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"UK\"))\n                        :ARG0-of (w / want-01\n                              :ARG1 (r / right-05\n                                    :ARG1 m\n                                    :ARG2 (d / die-01\n                                          :ARG1 m))))\n                  :ARG1-of (l / legal-02))))"
    ],
    "tree": [
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\")))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"High\" :op2 \"Court\"))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG1 (ii / ill-01\n                                        :mod (t / terminal))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG1 (l / legal-02))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :mod (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"UK\"))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG0 (w / want-01\n                                       :ARG1 (r / right-05\n                                                :ARG1 m))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG0 (w / want-01\n                                       :ARG1 (r / right-05\n                                                :ARG2 (d / die-01\n                                                         :ARG1 m)))))))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG0 g))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG1 (ii / ill-01\n                                        :mod (t / terminal))))))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG1 (l / legal-02))))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :mod (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"UK\"))))))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG0 (w / want-01\n                                       :ARG1 (r / right-05\n                                                :ARG1 m))))))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG0 (w / want-01\n                                       :ARG1 (r / right-05\n                                                :ARG2 (d / die-01\n                                                         :ARG1 m)))))))",
      "(g / government-organization\n   :name (n / name\n            :op1 \"High\"\n            :op2 \"Court\"))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG1 (ii / ill-01\n                               :mod (t / terminal)))))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG1 (l / legal-02)))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :mod (c2 / country\n                              :name (n2 / name\n                                        :op1 \"UK\")))))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG0 (w / want-01\n                              :ARG1 (r / right-05\n                                       :ARG1 m)))))",
      "(h / hear-01\n   :ARG1 (c / challenge-01\n            :ARG0 (m / man\n                     :ARG0 (w / want-01\n                              :ARG1 (r / right-05\n                                       :ARG2 (d / die-01\n                                                :ARG1 m))))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\"))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m)))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal)))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\")))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m)))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m))))\n   :ARG1 (l / legal-02))",
      "(m / man\n   :ARG1 (ii / ill-01\n             :mod (t / terminal)))",
      "(m / man\n   :mod (c2 / country\n            :name (n2 / name\n                      :op1 \"UK\")))",
      "(m / man\n   :ARG0 (w / want-01\n            :ARG1 (r / right-05\n                     :ARG1 m)))",
      "(m / man\n   :ARG0 (w / want-01\n            :ARG1 (r / right-05\n                     :ARG2 (d / die-01\n                              :ARG1 m))))",
      "(m / man\n   :ARG1 (ii / ill-01\n             :mod (t / terminal))\n   :ARG0 (w / want-01\n            :ARG1 (r / right-05\n                     :ARG1 m)))"
    ],
    "smus": [
      "The High Court has begun.",
      "The High Court has begun hearing.",
      "Hearing the challenge of a terminally ill man, began.",
      "Hearings of legal challenge have begun.",
      "Hearing the challenge of a British man has begun.",
      "Hearing the challenge of a man who wants his right...",
      "Hearing the challenge of a man who wants the right to die, began.",
      "The High Court has begun hearing the challenge from a terminally ill man.",
      "The High Court has begun hearing a legal challenge.",
      "The High Court has begun hearing the challenge from a British man.",
      "The High Court has begun hearing the challenge from a man who wants his right.",
      "The High Court has begun hearing the challenge from a man who wants the right to die.",
      "hearing the challenge of a terminally ill man.",
      "Hearing legal challenge.",
      "hearing the challenge of a man from the UK",
      "hearing the challenge from a man who wants his right.",
      "hearing the challenge from a man who wants the right to die.",
      "The man who wants his right is a challenge.",
      "The man who wants the right to die is a challenge.",
      "A UK man is facing legal challenge.",
      "A man who wants his right is a legal challenge.",
      "A man who wants the right to die is a legal challenge.",
      "The man who wants the right.",
      "A man who wants the right to die.",
      "A terminally ill man who wants his right.",
      "A terminally ill man who wants the right to die.",
      "The UK man who wants the right.",
      "A UK man who wants the right to die.",
      "The UK man who wants his right is terminally ill.",
      "A terminally ill UK man who wants the right to die.",
      "wants the man's right.",
      "The right to die is for a man."
    ]
  },
  {
    "instance_id": "pyrxsum-38",
    "summary": "An online appeal set up to help the family of a five-year-old girl who died when girl head became stuck in a lift in Dorset has raised more than \u00a312,000.",
    "summary_trees": [
      "# ::snt An online appeal set up to help the family of a five-year-old girl who died when girl head became stuck in a lift in Dorset has raised more than \u00a312,000.\n(r / raise-02\n      :ARG0 (a / appeal-02\n            :mod (o / online)\n            :ARG1-of (s / set-up-03\n                  :purpose (h / help-01\n                        :ARG0 a\n                        :ARG1 (f / family\n                              :poss (g / girl\n                                    :age (t / temporal-quantity\n                                          :quant 5\n                                          :unit (y / year))\n                                    :ARG1-of (d / die-01\n                                          :ARG1-of (c / cause-01\n                                                :ARG0 (b / become-01\n                                                      :ARG1 (h2 / head\n                                                            :part-of (g2 / girl))\n                                                      :ARG2 (s2 / stick-01\n                                                            :ARG1 h2\n                                                            :ARG2 (l / lift)\n                                                            :location (c2 / county\n                                                                  :name (n / name\n                                                                        :op1 \"Dorset\")))))))))))\n      :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                  :quant 12000\n                  :unit (p / pound))))"
    ],
    "tree": [
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5)))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head)))))))))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG2 (l / lift)))))))))))",
      "(r / raise-02\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a)))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a)))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG1 (h2 / head\n                                                                                        :part (g2 / girl))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :unit (y / year)))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :unit (y / year)))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG2 (l / lift))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG2 (l / lift))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :location (c2 / county\n                                                                                                      :name (n / name\n                                                                                                               :op1 \"Dorset\")))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG0 a)))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :age (t / temporal-quantity\n                                                  :quant 5))))))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :age (t / temporal-quantity\n                                                  :unit (y / year)))))))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :ARG1 (d / die-01\n                                                   :ARG1 (c / cause-01\n                                                            :ARG0 (b / become-01\n                                                                     :ARG2 (s2 / stick-01\n                                                                               :ARG1 (h2 / head))))))))))",
      "(a / appeal-02\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :ARG1 (d / die-01\n                                                   :ARG1 (c / cause-01\n                                                            :ARG0 (b / become-01\n                                                                     :ARG2 (s2 / stick-01\n                                                                               :ARG2 (l / lift))))))))))",
      "(a / appeal-02\n   :mod (o / online)\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :age (t / temporal-quantity\n                                                  :quant 5))))))",
      "(a / appeal-02\n   :mod (o / online)\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :ARG1 (d / die-01\n                                                   :ARG1 (c / cause-01\n                                                            :ARG0 (b / become-01\n                                                                     :ARG1 (h2 / head\n                                                                               :part (g2 / girl))))))))))",
      "(a / appeal-02\n   :mod (o / online)\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :age (t / temporal-quantity\n                                                  :unit (y / year)))))))",
      "(a / appeal-02\n   :mod (o / online)\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :ARG1 (d / die-01\n                                                   :ARG1 (c / cause-01\n                                                            :ARG0 (b / become-01\n                                                                     :ARG2 (s2 / stick-01\n                                                                               :ARG1 (h2 / head))))))))))",
      "(a / appeal-02\n   :mod (o / online)\n   :ARG1 (s / set-up-03\n            :purpose (h / help-01\n                        :ARG1 (f / family\n                                 :poss (g / girl\n                                          :ARG1 (d / die-01\n                                                   :ARG1 (c / cause-01\n                                                            :ARG0 (b / become-01\n                                                                     :ARG2 (s2 / stick-01\n                                                                               :ARG2 (l / lift))))))))))",
      "(s / set-up-03\n   :purpose (h / help-01\n               :ARG0 (a / appeal-02)))",
      "(s / set-up-03\n   :purpose (h / help-01\n               :ARG1 (f / family\n                        :poss (g / girl\n                                 :age (t / temporal-quantity\n                                         :quant 5)))))",
      "(s / set-up-03\n   :purpose (h / help-01\n               :ARG1 (f / family\n                        :poss (g / girl\n                                 :ARG1 (d / die-01\n                                          :ARG1 (c / cause-01\n                                                   :ARG0 (b / become-01\n                                                            :ARG2 (s2 / stick-01\n                                                                      :ARG1 (h2 / head)))))))))",
      "(s / set-up-03\n   :purpose (h / help-01\n               :ARG1 (f / family\n                        :poss (g / girl\n                                 :ARG1 (d / die-01\n                                          :ARG1 (c / cause-01\n                                                   :ARG0 (b / become-01\n                                                            :ARG2 (s2 / stick-01\n                                                                      :ARG2 (l / lift)))))))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :age (t / temporal-quantity\n                             :quant 5))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :ARG1 (d / die-01\n                              :ARG1 (c / cause-01\n                                       :ARG0 (b / become-01\n                                                :ARG1 (h2 / head\n                                                          :part (g2 / girl))))))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :age (t / temporal-quantity\n                             :unit (y / year)))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :ARG1 (d / die-01\n                              :ARG1 (c / cause-01\n                                       :ARG0 (b / become-01\n                                                :ARG2 (s2 / stick-01\n                                                          :ARG1 (h2 / head))))))))",
      "(h / help-01\n   :ARG1 (f / family\n            :poss (g / girl\n                     :ARG1 (d / die-01\n                              :ARG1 (c / cause-01\n                                       :ARG0 (b / become-01\n                                                :ARG2 (s2 / stick-01\n                                                          :ARG2 (l / lift))))))))",
      "(f / family\n   :poss (g / girl\n            :age (t / temporal-quantity\n                    :quant 5)))",
      "(f / family\n   :poss (g / girl\n            :ARG1 (d / die-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (b / become-01\n                                       :ARG1 (h2 / head\n                                                 :part (g2 / girl)))))))",
      "(f / family\n   :poss (g / girl\n            :age (t / temporal-quantity\n                    :unit (y / year))))",
      "(f / family\n   :poss (g / girl\n            :ARG1 (d / die-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (b / become-01\n                                       :ARG2 (s2 / stick-01\n                                                 :location (c2 / county\n                                                               :name (n / name\n                                                                        :op1 \"Dorset\"))))))))",
      "(g / girl\n   :age (t / temporal-quantity\n           :quant 5))",
      "(g / girl\n   :age (t / temporal-quantity\n           :unit (y / year)))",
      "(g / girl\n   :ARG1 (d / die-01\n            :ARG1 (c / cause-01\n                     :ARG0 (b / become-01\n                              :ARG2 (s2 / stick-01\n                                        :ARG1 (h2 / head))))))",
      "(g / girl\n   :ARG1 (d / die-01\n            :ARG1 (c / cause-01\n                     :ARG0 (b / become-01\n                              :ARG2 (s2 / stick-01\n                                        :ARG2 (l / lift))))))",
      "(g / girl\n   :ARG1 (d / die-01\n            :ARG1 (c / cause-01\n                     :ARG0 (b / become-01\n                              :ARG2 (s2 / stick-01\n                                        :location (c2 / county\n                                                      :name (n / name\n                                                               :op1 \"Dorset\")))))))",
      "(g / girl\n   :age (t / temporal-quantity\n           :unit (y / year))\n   :ARG1 (d / die-01\n            :ARG1 (c / cause-01\n                     :ARG0 (b / become-01\n                              :ARG2 (s2 / stick-01\n                                        :ARG2 (l / lift))))))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (b / become-01\n                     :ARG1 (h2 / head\n                               :part (g2 / girl)))))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (b / become-01\n                     :ARG2 (s2 / stick-01\n                               :ARG1 (h2 / head)))))",
      "(c / cause-01\n   :ARG0 (b / become-01\n            :ARG1 (h2 / head\n                      :part (g2 / girl))))",
      "(c / cause-01\n   :ARG0 (b / become-01\n            :ARG2 (s2 / stick-01\n                      :ARG2 (l / lift))))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl)))",
      "(b / become-01\n   :ARG2 (s2 / stick-01\n             :ARG1 (h2 / head)))",
      "(b / become-01\n   :ARG2 (s2 / stick-01\n             :ARG2 (l / lift)))",
      "(b / become-01\n   :ARG1 (h2 / head\n             :part (g2 / girl))\n   :ARG2 (s2 / stick-01\n             :ARG1 h2))"
    ],
    "smus": [
      "An online appeal has raised the issue.",
      "The appeal to set up to help was raised.",
      "The appeal was raised to set up to help the family of the 5-year-old girl.",
      "The appeal was raised to help the family of the girl who died when her head became stuck.",
      "The appeal was raised to help the family of the girl who died when the lift became stuck.",
      "More than 2,000 have been raised.",
      "More than PS100 was raised.",
      "An online appeal has raised more than 2,000 dollars.",
      "An online appeal has raised more than PS1,000.",
      "The appeal to set up to help has raised more than 2,000 dollars.",
      "The appeal to set up to help has raised more than PS1,000.",
      "An appeal to set up to help the family of the 5-year-old girl has raised more than 2,000 dollars.",
      "An appeal to set up to help the family of the 5-year-old girl has raised more than PS1,000.",
      "An appeal to set up to help the family of a girl who died when her head became a 'head' has raised more than 2,000.",
      "An appeal to set up to help the family of the year girl has raised more than 2,000 dollars.",
      "An appeal to set up to help the family of the year girl has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when her head became stuck has raised more than 10,000.",
      "An appeal to set up to help the family of the girl who died when her head became stuck has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when the lift became stuck has raised more than 10,000.",
      "An appeal to set up to help the family of the girl who died when the lift became stuck has raised more than PS1,000.",
      "An appeal to help the family of a girl who died because she became stuck in Dorset has raised more than 2,000.",
      "The appeal was for a set up to help.",
      "Set up to help the family of the 5-year-old girl is an appeal.",
      "An appeal was made to set up to help the family of the year-old girl.",
      "The appeal was set up to help the family of the girl who died when her head became stuck.",
      "The appeal was set up to help the family of the girl who died when the lift became stuck.",
      "There was an online appeal to set up to help the family of the 5-year-old girl.",
      "There was an online appeal to set up to help the family of the girl who died when her head became a thing.",
      "There was an online appeal to set up to help the family of the year old girl.",
      "There was an online appeal set up to help the family of the girl who died when her head became stuck.",
      "There was an online appeal set up to help the family of the girl who died when the lift became stuck.",
      "Set up to help with the appeal.",
      "Set up to help the family of the 5 girl.",
      "Set up to help the family of the girl who died because her head became stuck.",
      "Set up to help the family of the girl who died because the lift became stuck.",
      "Help the family of the 5 year old girl.",
      "Help the girl's family who died because her head became a'spin.",
      "Help the family of the year old girl.",
      "Help the family of the girl who died because her head became stuck.",
      "Help the family of the girl who died because she became stuck on a lift.",
      "The family of the girl who died because her head became a'spin.",
      "The family of the girl who died because her head became stuck.",
      "The family of the girl who died because the lift became stuck.",
      "The girl died because her head became stuck.",
      "The girl died because the lift became stuck.",
      "The girl died because the stick became in Dorset.",
      "The 5 year old girl died because her head became stuck.",
      "The 5 year old girl died when the lift became stuck.",
      "A 5 year old girl died when she became stuck in Dorset.",
      "Death came when the lift became stuck.",
      "Because the girl's head became.",
      "Because it became a stick in the head.",
      "The girl's head became.",
      "became a stick of the lift.",
      "The girl's head became stuck.",
      "The girl's head became stuck in a lift.",
      "The girl's head became a stick in Dorset.",
      "Dorset"
    ]
  },
  {
    "instance_id": "pyrxsum-39",
    "summary": "Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.",
    "summary_trees": [
      "# ::snt Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.\n(b / beat-03\n      :ARG0 (m / man\n            :source (c / city\n                  :name (n / name\n                        :op1 \"Swindon\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Mountain\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b2 / broadcast-program\n                        :name (n3 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))))\n      :ARG2 (t / title-01\n            :ARG1 p\n            :ARG2 (s / strong-02\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 m\n                        :ARG3 (m2 / most)\n                        :ARG5 (c2 / continent\n                              :name (n4 / name\n                                    :op1 \"Europe\"))))))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\"))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\")))",
      "(b / beat-03\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\")))))",
      "(b / beat-03\n   :ARG2 (t / title-01\n            :ARG1 (p / person :name (n2 / name :op1 \"The\" :op2 \"Mountain\")))))",
      "(b / beat-03\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\")))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\")))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG1 (p / person :name (n2 / name :op1 \"The\" :op2 \"Mountain\")))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 m))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 (m / man)))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 m))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 m))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))"
    ],
    "smus": [
      "The man from Swindon was beat.",
      "The Mountain was beaten.",
      "The Game of Thrones has been beaten.",
      "beat the Mountain title",
      "Beat for title of Strongest.",
      "Beat for title of European Strongest.",
      "The Mountain was beaten by a man from Swindon.",
      "A Swindon man has beat the Game of Thrones host.",
      "The Mountain was beaten by a Swindon man for the title.",
      "The Swindon man has beaten the title of \"Most Strong\".",
      "The Swindon man has beaten the title of strongest.",
      "The Swindon man has beaten the title of Strongest European.",
      "The Mountain was beaten to the title.",
      "The Mountain was beaten to the title of Strong Man.",
      "The Mountain was beaten for the title of strongest.",
      "The Mountain was beaten in the title of Strongest European.",
      "The Mountain was beaten to the title by a Swindon man.",
      "The Mountain was beaten by a Swindon man for the title of \"The Strong Man\".",
      "The Mountain was beaten by a Swindon man for the title of strongest.",
      "The Mountain was beaten by a Swindon man for the title of \"European Strong\".",
      "A Swindon man has beaten the title of Game of Thrones.",
      "The man from Swindon has beaten Game of Thrones's title of Strongest.",
      "The man from Swindon has beaten Game of Thrones's title of strongest.",
      "A Swindon man has beaten the Game of Thrones host to the title of Strongest European."
    ]
  },
  {
    "instance_id": "pyrxsum-40",
    "summary": "Labour leadership contender Andy Burnham has told supporters Burnham has an \"outside but realistic chance\" of winning the contest.",
    "summary_trees": [
      "# ::snt Labour leadership contender Andy Burnham has told supporters Burnham has an \"outside but realistic chance\" of winning the contest.\n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Andy\"\n                  :op2 \"Burnham\")\n            :ARG0-of (c / contend-02\n                  :ARG1 (l / lead-02\n                        :ARG1 (p2 / political-party\n                              :name (n2 / name\n                                    :op1 \"Labour\")))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (w / win-01\n                  :ARG0 p\n                  :ARG2 (c3 / contest-02))\n            :ARG2 (o / outside)\n            :ARG1-of (c4 / contrast-01\n                  :ARG2 (r / realistic-03\n                        :ARG1 c2)))\n      :ARG2 (p3 / person\n            :ARG0-of (s / support-01)))"
    ],
    "tree": [
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\"))))))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2))))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02))))",
      "(t / tell-01\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 p)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\"))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p)\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 p))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (c4 / contrast-01\n                       :ARG2 (r / realistic-03\n                                :ARG1 c2)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p)\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG0 p))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG2 (o / outside))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (w / win-01\n                      :ARG2 (c3 / contest-02)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(p / person\n   :name (n / name\n            :op1 \"Andy\"\n            :op2 \"Burnham\"))",
      "(p / person\n   :ARG0 (c / contend-02\n            :ARG1 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Andy\"\n            :op2 \"Burnham\")\n   :ARG0 (c / contend-02\n            :ARG1 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\")))))",
      "(c / contend-02\n   :ARG1 (l / lead-02\n            :ARG1 (p2 / political-party\n                      :name (n2 / name\n                                :op1 \"Labour\"))))",
      "(l / lead-02\n   :ARG1 (p2 / political-party\n             :name (n2 / name\n                       :op1 \"Labour\")))",
      "(p2 / political-party\n    :name (n2 / name\n              :op1 \"Labour\"))"
    ],
    "smus": [
      "The labour leadership contention has been told.",
      "Andy Burnham was told he had a chance.",
      "Andy Burnham's chance of winning was told.",
      "told there was an outside chance.",
      "told there is a chance but it is realistic.",
      "The chance of winning the contest is being told.",
      "Supporters were told.",
      "Andy Burnham has told his chance.",
      "Andy Burnham has told the story that there is an outside chance.",
      "Andy Burnham has told the story that there is a chance but it is realistic.",
      "Andy Burnham has told of the chance of winning the contest.",
      "Labour's leadership contendors have told them they have a chance.",
      "Labour's leadership contendors have told them there is a chance of winning.",
      "Labour's leadership contendors have told the story that there is an outside chance.",
      "Labour's leadership contendors have told the public there is a chance of winning the contest.",
      "Andy Burnham has told supporters --",
      "Labour's leadership contendors have told supporters:",
      "Andy Burnham is being told by supporters that he has a chance.",
      "Supporters were told that Andy Burnham had a chance of winning.",
      "Supporters were told there was an outside chance.",
      "Supporters were told there was a chance but it was realistic.",
      "Supporters were told there was a chance of winning the contest.",
      "Andy Burnham has told supporters he has a chance.",
      "Andy Burnham has told supporters that he has a chance of winning.",
      "Andy Burnham has told supporters there is an outside chance.",
      "Andy Burnham has told supporters there is a chance but it is realistic.",
      "Andy Burnham has told supporters there is a chance of winning the contest.",
      "Labour's leadership contendors have told supporters they have a chance.",
      "Labour supporters have been told they have a chance of winning in the labour leadership competition.",
      "Labour's leadership contendors have told supporters there is an outside chance.",
      "Labour's leadership contendors have told supporters there is a chance of winning the contest.",
      "The contending party is Labour's leadership.",
      "Andy Burnham is the contending leader of Labour.",
      "There's a chance of Andy Burnham winning.",
      "There is a chance of winning the contest.",
      "Andy Burnham has an outside chance of winning.",
      "The chance of winning the contest is outside."
    ]
  },
  {
    "instance_id": "pyrxsum-41",
    "summary": "Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.",
    "summary_trees": [
      "# ::snt Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.\n(c / close-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Belfast\"\n                  :op2 \"Giants\"))\n      :ARG1 (g / gap)\n      :ARG4 (t2 / team\n            :name (n2 / name\n                  :op1 \"Cardiff\"\n                  :op2 \"Devils\")\n            :ARG0-of (l / lead-01\n                  :ARG1 (l2 / league\n                        :name (n3 / name\n                              :op1 \"Elite\"\n                              :op2 \"League\"))))\n      :extent (p / point\n            :quant 6)\n      :manner (w / win-01\n            :ARG0 t\n            :ARG4 (t3 / team\n                  :name (n4 / name\n                        :op1 \"Capitals\"))\n            :ARG0-of (c2 / comfortable-02)\n            :location (s / sports-facility\n                  :name (n5 / name\n                        :op1 \"SSE\"\n                        :op2 \"Arena\"))\n            :mod (t4 / this)))"
    ],
    "tree": [
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\")))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :extent (p / point\n              :quant 6)\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\")))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :manner (w / win-01\n              :ARG0 t\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6)\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6)\n   :manner (w / win-01\n              :ARG0 (t / team :name (n / name :op1 \"Belfast\" :op2 \"Giants\"))\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :name (n2 / name\n                       :op1 \"Cardiff\"\n                       :op2 \"Devils\"))\n   :manner (w / win-01\n              :ARG0 t\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\"))))\n   :extent (p / point\n              :quant 6)\n   :manner (w / win-01\n              :ARG0 t\n              :ARG4 (t3 / team :name (n4 / name :op1 \"Capitals\"))\n              :ARG0 (c2 / comfortable-02)\n              :location (s / sports-facility :name (n5 / name :op1 \"SSE\" :op2 \"Arena\"))\n              :mod (t4 / this)))"
    ],
    "smus": [
      "Belfast Giants have closed.",
      "Closed to the Carliff Devils.",
      "Closed by 6 points.",
      "The Belfast Giants - Capitals comfortable win in the SSE Arena has this close.",
      "The Belfast Giants have closed the gap.",
      "Belfast Giants have closed on the Carliff Devils.",
      "The Belfast Giants have closed on the league leaders of the Elite League.",
      "The Belfast Giants have closed the gap to six points.",
      "The gap has closed for the Elite League leaders.",
      "The gap has closed by six points.",
      "The gap was closed with this comfortable win over the Capitals at the SSE Arena by the Belfast Giants.",
      "With this comfortable win over the Capitals at the SSE Arena, the Belfast Giants have closed the gap to six points.",
      "The Belfast Giants have closed the gap on the league leaders of the Elite League.",
      "The Belfast Giants have closed the gap by six points.",
      "The Belfast Giants have closed the gap with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the Elite League leaders by six points.",
      "The Belfast Giants have closed the Elite League teams with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the gap to six points with this comfortable win over the Capitals at the SSE Arena.",
      "The gap has closed six points for the Elite League leaders.",
      "The gap has closed by six points with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the gap to the league's elite league leaders by six points.",
      "The Belfast Giants have closed the gap on the Elite League leaders with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the gap by six points with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the gap on the Cardiff Devils by six points with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the Elite League leaders by 6 points with this comfortable win over the Capitals at the SSE Arena.",
      "The Belfast Giants have closed the gap to the Elite League leaders by six points with this comfortable win over the Capitals at the SSE Arena."
    ]
  },
  {
    "instance_id": "pyrxsum-42",
    "summary": "Hayley Turner, Britain's most successful female jockey, believes Turner career has helped inspire other women to progress in the sport.",
    "summary_trees": [
      "# ::snt Hayley Turner, Britain's most successful female jockey, believes Turner career has helped inspire other women to progress in the sport.\n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Hayley\"\n                  :op2 \"Turner\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"Britain\"))\n                  :ARG2 (j / jockey\n                        :mod (f / female)\n                        :ARG1-of (s / succeed-01\n                              :ARG2-of (h2 / have-degree-91\n                                    :ARG1 j\n                                    :ARG3 (m / most))))))\n      :ARG1 (h3 / help-01\n            :ARG0 (c2 / career\n                  :poss p)\n            :ARG1 (ii / inspire-01\n                  :ARG0 c2\n                  :ARG1 (w / woman\n                        :mod (o / other))\n                  :ARG2 (p2 / progress-01\n                        :ARG1 w\n                        :ARG4 (s2 / sport)))))"
    ],
    "tree": [
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\")))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG3 (m / most)))))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :mod (f / female))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j)))))\n   :ARG1 (h3 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j)))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j)))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j)))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG1 j)))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG3 (m / most))))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG3 (m / most))))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG3 (m / most))))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (j / jockey\n                              :ARG1 (s / succeed-01\n                                       :ARG2 (h2 / have-degree-91\n                                                 :ARG3 (m / most))))))\n   :ARG1 (h3 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Hayley\"\n            :op2 \"Turner\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (c / country\n                     :name (n2 / name\n                               :op1 \"Britain\"))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (j / jockey\n                     :mod (f / female))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (j / jockey\n                     :ARG1 (s / succeed-01\n                              :ARG2 (h2 / have-degree-91\n                                        :ARG1 j)))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (j / jockey\n                     :ARG1 (s / succeed-01\n                              :ARG2 (h2 / have-degree-91\n                                        :ARG3 (m / most))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Hayley\"\n            :op2 \"Turner\")\n   :ARG0 (h / have-org-role-91\n            :ARG1 (c / country\n                     :name (n2 / name\n                               :op1 \"Britain\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Hayley\"\n            :op2 \"Turner\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (j / jockey\n                     :mod (f / female))))",
      "(p / person\n   :name (n / name\n            :op1 \"Hayley\"\n            :op2 \"Turner\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (j / jockey\n                     :ARG1 (s / succeed-01\n                              :ARG2 (h2 / have-degree-91\n                                        :ARG1 j)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Hayley\"\n            :op2 \"Turner\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (j / jockey\n                     :ARG1 (s / succeed-01\n                              :ARG2 (h2 / have-degree-91\n                                        :ARG3 (m / most))))))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Britain\")))",
      "(h / have-org-role-91\n   :ARG2 (j / jockey\n            :mod (f / female)))",
      "(h / have-org-role-91\n   :ARG2 (j / jockey\n            :ARG1 (s / succeed-01\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 j))))"
    ],
    "smus": [
      "Hayley Turner believes --",
      "The female jockey believes.",
      "Believes the most successful jockey.",
      "Hayley Turner's career has helped, she believes.",
      "believes that career inspiration has helped.",
      "believes that it has helped inspire other women.",
      "believes that it has helped inspire women to progress.",
      "believes that it has helped inspire sport to progress.",
      "Hayley Turner believes her career has helped.",
      "Hayley Turner believes that career inspiration has helped.",
      "Hayley Turner believes that helping other women to inspire is what has helped her.",
      "Hayley Turner believes that it has helped inspire women to progress.",
      "Hayley Turner believes that it has helped inspire sport to progress.",
      "The female jockey believes her career has helped.",
      "A female jockey believes that a career has helped inspire her.",
      "A female jockey believes that it has helped inspire other women.",
      "Female jockey believes that it has helped inspire women to progress.",
      "The female jockey believes that it has helped inspire sport to progress.",
      "A successful jockey believes his career has helped.",
      "A successful jockey believes that a career has helped inspire him.",
      "A successful jockey believes that other women will be helped to inspire.",
      "A successful jockey believes that it has helped inspire women to progress.",
      "A successful jockey believes that it has helped inspire sport to progress.",
      "The most successful jockey believes that a career has helped inspire.",
      "The most successful jockey believes that other women will be helped to inspire.",
      "The most successful jockey believes that it has helped inspire women to progress.",
      "The most successful jockey believes that it has helped inspire sport to progress.",
      "Hayley Turner's career has helped.",
      "Careers have helped inspire.",
      "Helped inspire other women.",
      "Helped inspire women to progress.",
      "Helped inspire sport to progress",
      "Hayley Turner's career has helped inspire.",
      "Hayley Turner's career has helped inspire other women.",
      "Hayley Turner's career has helped inspire women to progress.",
      "Hayley Turner's career has helped inspire sport to progress.",
      "inspire other women.",
      "inspire women to progress",
      "inspire to progress in sport."
    ]
  },
  {
    "instance_id": "pyrxsum-43",
    "summary": "An elderly woman has died in a house fire in Enniskillen.",
    "summary_trees": [
      "# ::snt An elderly woman has died in a house fire in Enniskillen.\n(d / die-01\n      :ARG1 (w / woman\n            :mod (e / elderly))\n      :ARG1-of (c / cause-01\n            :ARG0 (f / fire\n                  :location (h / house)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Enniskillen\")))))"
    ],
    "tree": [
      "(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly)))",
      "(c / cause-01\n   :ARG0 (f / fire\n            :location (h / house)))"
    ],
    "smus": [
      "An elderly woman has died.",
      "Caused by a fire in the house."
    ]
  },
  {
    "instance_id": "pyrxsum-44",
    "summary": "Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.",
    "summary_trees": [
      "# ::snt Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.\n(s / sign-02\n      :ARG0 (s2 / side\n            :name (n / name\n                  :op1 \"Fulham\")\n            :mod (c / championship))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Gohi\"\n                  :op2 \"Cyriac\")\n            :ARG0-of (s3 / strike-02))\n      :ARG3 (s4 / side\n            :name (n3 / name\n                  :op1 \"KV\"\n                  :op2 \"Oostende\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Pro\"\n                        :op2 \"League\")\n                  :mod (c2 / country\n                        :name (n5 / name\n                              :op1 \"Belgium\"))))\n      :manner (l2 / loan)\n      :time (u / until\n            :op1 (e / end-01\n                  :ARG1 (s5 / season))))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\"))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\")))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\"))))\n   :manner (l2 / loan)\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))"
    ],
    "smus": [
      "Fulham have signed.",
      "The championship side has signed.",
      "Gohi Cyriac was signed.",
      "The striker was signed.",
      "Signed for a Belgian League side",
      "Signed until the end of the season.",
      "Fulham have signed Gohi Cyriac.",
      "Fulham have signed a striker.",
      "Gohi Cyriac has been signed by the championship side.",
      "The championship side has signed a striker.",
      "Fulham have signed for a Pro League side.",
      "Fulham have signed with a Belgian league side.",
      "The championship side has signed with the Pro League side.",
      "The championship side has signed with the Belgian league side.",
      "Fulham have signed on loan.",
      "The championship side has signed on loan.",
      "Fulham have signed until the end of the season.",
      "The championship side will be signed until the end of the season.",
      "The striker was signed by the Pro League side.",
      "The striker was signed by the Belgian League side.",
      "Gohi Cyriac was signed on loan.",
      "The striker was signed on loan.",
      "Gohi Cyriac was signed until the end of the season.",
      "The striker was signed until the end of the season.",
      "Signed on loan to the Pro League side",
      "Signed for the Pro League side until the end of the season",
      "Signed on loan until the end of season.",
      "Fulham have signed Gohi Cyriac from a Pro League side.",
      "Fulham have signed Gohi Cyriac from a Belgian league side.",
      "Fulham have signed a striker from KV Oostende.",
      "Fulham have signed a striker from a Pro League side.",
      "Fulham have signed a striker from a Belgian league side.",
      "Gohi Cyriac has been signed by the championship side for the Pro League side.",
      "The championship side have signed a striker from KV Oostende.",
      "The championship side have signed a striker from the Pro League side.",
      "The championship side has signed a striker for the Belgian league side.",
      "Fulham have signed Gohi Cyriac on loan.",
      "Fulham have signed a striker on loan.",
      "Gohi Cyriac was signed on loan by the championship side.",
      "The championship side has signed the striker on loan.",
      "Fulham have signed Gohi Cyriac until the end of the season.",
      "Fulham have signed a striker until the end of the season.",
      "Gohi Cyriac was signed by the championship side until the end of the season.",
      "The championship side has signed a striker until the end of the season.",
      "Fulham have signed on loan from KV Oostende.",
      "Fulham have signed on loan from a Pro League side.",
      "Fulham have signed on loan from a Belgian league side.",
      "The championship side has signed on loan from KV Oostende.",
      "The championship side has signed on loan from the Pro League side.",
      "The championship side has signed on loan with the Belgian League side.",
      "Fulham have signed for a Pro League side until the end of the season.",
      "Fulham have signed with a Belgian league side until the end of the season.",
      "Fulham have signed on loan until the end of the season.",
      "The championship side will be signed on loan until the end of the season.",
      "Gohi Cyriac was signed on loan from the KV Oostende side.",
      "Gohi Cyriac has been signed on loan from the Pro League side.",
      "The striker was signed on loan from KV Oostende.",
      "The striker was signed on loan from the Pro League side.",
      "The striker was signed on loan from the Belgian League side.",
      "Gohi Cyriac was signed by the Pro League side until the end of the season.",
      "The striker was signed by the Pro League side until the end of the season.",
      "The striker was signed by the Belgian league side until the end of the season.",
      "Gohi Cyriac was signed on loan until the end of the season.",
      "The striker was signed on loan until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from KV Oostende.",
      "Fulham have signed Gohi Cyriac on loan from the Pro League side.",
      "Fulham have signed Gohi Cyriac on loan from the Belgian league side.",
      "Fulham have signed a striker on loan from KV Oostende.",
      "Fulham have signed a striker on loan from the Pro League side.",
      "Fulham have signed a striker on loan from a Belgian league side.",
      "Gohi Cyriac has been signed by the championship side on loan from KV Oostende.",
      "Gohi Cyriac has been signed by the championship side on loan from the Pro League side.",
      "Gohi Cyriac has been signed by the championship side on loan from the Belgian league side.",
      "The championship side have signed a striker on loan from KV Oostende.",
      "The championship side have signed a striker on loan from the Pro League side.",
      "The championship side have signed a striker on loan from the Belgian League side.",
      "Fulham have signed Gohi Cyriac from KV Oostende until the end of the season.",
      "Fulham have signed Gohi Cyriac from a Pro League side until the end of the season.",
      "Fulham have signed Gohi Cyriac from a Belgian league side until the end of the season.",
      "Fulham have signed a striker from KV Oostende until the end of the season.",
      "Fulham have signed a striker from a Pro League side until the end of the season.",
      "Fulham have signed a striker from a Belgian league side until the end of the season.",
      "Gohi Cyriac was signed by the championship side to the Pro League side until the end of the season.",
      "Gohi Cyriac was signed by the championship side to the Belgian league side until the end of the season.",
      "The championship side have signed a striker from KV Oostende until the end of the season.",
      "The championship side have signed a striker from the Pro League side until the end of the season.",
      "The championship side will have signed a striker from the Belgian League side until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan until the end of the season.",
      "Fulham have signed a striker on loan until the end of the season.",
      "Gohi Cyriac was signed on loan by the championship side until the end of the season.",
      "The championship side has signed the striker on loan until the end of the season.",
      "Fulham have signed on loan from KV Oostende until the end of the season.",
      "Fulham have signed on loan from a Pro League side until the end of the season.",
      "Fulham have signed on loan from a Belgian league side until the end of the season.",
      "The championship side has signed on loan from KV Oostende until the end of the season.",
      "The championship side will be signed on loan from the Pro League side until the end of the season.",
      "The championship side will be signed on loan from the Belgian League side until the end of the season.",
      "Gohi Cyriac has signed on loan from KV Oostende until the end of the season.",
      "Gohi Cyriac was signed on loan from the Pro League side until the end of the season.",
      "Gohi Cyriac was signed on loan from the Belgian league side until the end of the season.",
      "The striker was signed on loan from KV Oostende until the end of the season.",
      "The striker was signed on loan from the Pro League side until the end of the season.",
      "The striker was signed on loan from the Belgian League side until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from KV Oostende until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from the Pro League side until the end of the season.",
      "Fulham have signed Gohi Cyriac on loan from the Belgian league side until the end of the season.",
      "Fulham have signed a striker on loan from KV Oostende until the end of the season.",
      "Fulham have signed a striker on loan from the Pro League side until the end of the season.",
      "Fulham have signed a striker on loan from a Belgian league side until the end of the season.",
      "Gohi Cyriac has been signed by the championship side on loan from KV Oostende until the end of the season.",
      "Gohi Cyriac was signed by the championship side on loan from the Pro League side until the end of the season.",
      "Gohi Cyriac was signed by the championship side on loan from the Belgian League side until the end of the season.",
      "The championship side have signed a striker on loan from KV Oostende until the end of the season.",
      "The championship side have signed a striker on loan from the Pro League side until the end of the season.",
      "The championship side have signed the striker on loan from the Belgian League side until the end of the season."
    ]
  },
  {
    "instance_id": "pyrxsum-45",
    "summary": "Wales started Wales 2018 World Cup qualifying campaign in confident fashion as Wales convincingly beat Moldova.",
    "summary_trees": [
      "# ::snt Wales started Wales 2018 World Cup qualifying campaign in confident fashion as Wales convincingly beat Moldova.\n(s / start-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Wales\"))\n      :ARG1 (c / campaign-01\n            :ARG0 t\n            :ARG1 (q / qualify-02\n                  :ARG2 (g / game\n                        :name (n2 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\")\n                        :time (d / date-entity\n                              :year 2018))))\n      :manner (c2 / confident-01\n            :ARG1 t)\n      :time (b / beat-03\n            :ARG0 t\n            :ARG1 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Moldova\"))\n            :ARG0-of (c3 / convince-01)))"
    ],
    "tree": [
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\")))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018)))))",
      "(s / start-01\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018)))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :manner (c2 / confident-01\n               :ARG1 t))"
    ],
    "smus": [
      "Wales started.",
      "Wales' campaign started.",
      "The campaign started with qualification for the World Cup.",
      "The campaign started with qualification for the 2018 game.",
      "Wales started confident.",
      "Wales started the campaign.",
      "Wales started the campaign for qualification for the World Cup.",
      "Wales started the campaign for qualification for the 2018 game.",
      "Wales started when they beat.",
      "Wales started when they beat Moldova.",
      "Wales started when they beat convincingly.",
      "Wales started confidently.",
      "Wales started their campaign when they beat.",
      "Wales started their campaign when they beat Moldova.",
      "Wales' campaign started when they beat a convincing goal.",
      "The campaign for qualification for the World Cup started when the World Cup was beaten convincingly.",
      "The campaign for qualification for the 2018 game started when it was defeated convincingly.",
      "Wales started the campaign confidently.",
      "Wales started the campaign confidently for qualification for the World Cup.",
      "Wales started the campaign confidently for qualification for the 2018-2019 game.",
      "Wales started the campaign when they beat Moldova.",
      "Wales started their campaign when they beat convincingly.",
      "Wales started the campaign for qualification for the World Cup when they beat Moldova.",
      "Wales started the campaign for qualification for the World Cup when they beat a convincingly.",
      "Wales started the campaign for qualification for the 2018-19 game when they beat Moldova.",
      "Wales started the campaign for qualification for the 2018-19 game when they beat convincingly.",
      "Qualifying for the World Cup",
      "The World Cup will take place in 2018.",
      "Moldova beaten"
    ]
  },
  {
    "instance_id": "pyrxsum-46",
    "summary": "The BBC's director general has accused the Iranian authorities of intimidating those working for general Persian service.",
    "summary_trees": [
      "# ::snt The BBC's director general has accused the Iranian authorities of intimidating those working for general Persian service.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / publication\n                        :name (n / name\n                              :op1 \"BBC\"))\n                  :ARG2 (d / director\n                        :mod (g / general))))\n      :ARG1 (a2 / authority\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Iran\")))\n      :ARG2 (ii / intimidate-01\n            :ARG0 a2\n            :ARG1 (p3 / person\n                  :ARG0-of (w / work-01\n                        :ARG2 (s / service\n                              :mod c\n                              :name (n3 / name\n                                    :op1 \"Persia\"))\n                        :mod (g2 / general)))))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general)))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG0 (a2 / authority)))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (c / country :name (n2 / name :op1 \"Iran\")))))))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :name (n3 / name\n                                                   :op1 \"Persia\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG2 (ii / intimidate-01\n             :ARG0 (a2 / authority)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod c)))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :name (n3 / name\n                                                   :op1 \"Persia\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod c)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :name (n3 / name\n                                                   :op1 \"Persia\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :mod (g2 / general)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :name (n3 / name\n                                                   :op1 \"Persia\"))))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (p2 / publication\n                      :name (n / name\n                               :op1 \"BBC\"))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (d / director\n                     :mod (g / general))))",
      "(h / have-org-role-91\n   :ARG1 (p2 / publication\n             :name (n / name\n                      :op1 \"BBC\")))",
      "(h / have-org-role-91\n   :ARG2 (d / director\n            :mod (g / general)))",
      "(h / have-org-role-91\n   :ARG1 (p2 / publication\n             :name (n / name\n                      :op1 \"BBC\"))\n   :ARG2 (d / director\n            :mod (g / general)))",
      "(p2 / publication\n    :name (n / name\n             :op1 \"BBC\"))",
      "(a2 / authority\n    :mod (c / country\n            :name (n2 / name\n                      :op1 \"Iran\")))",
      "(c / country\n   :name (n2 / name\n             :op1 \"Iran\"))",
      "(ii / intimidate-01\n    :ARG1 (p3 / person\n              :ARG0 (w / work-01\n                       :ARG2 (s / service\n                                :mod (c / country :name (n2 / name :op1 \"Iran\"))))))"
    ],
    "smus": [
      "The director general has accused the person.",
      "Iranian authorities are accused.",
      "accused of intimidating authorities.",
      "The accused accused of intimidating people working in the Iranian service.",
      "accused of intimidating the general worker.",
      "The accused accused of intimidating people working for the Persian service.",
      "The BBC has accused Iranian authorities.",
      "The director general has accused Iranian authorities.",
      "The director general has accused the authorities of intimidating the people.",
      "The director general has accused the people of intimidating the general worker.",
      "Iranian authorities have been accused of intimidating.",
      "Iranian authorities have been accused of intimidating people working in Iranian service.",
      "Iranian authorities have been accused of intimidating the general worker.",
      "Iranian authorities have been accused of intimidating people working in the Persian service.",
      "The BBC has accused Iranian authorities of intimidating the people.",
      "The BBC has accused Iranian authorities of intimidating people working in the Iranian service.",
      "The BBC has accused Iranian authorities of intimidating the general worker.",
      "The BBC has accused Iranian authorities of intimidating people working in the Persian service.",
      "The director general has accused Iranian authorities of intimidating.",
      "The director general has accused Iranian authorities of intimidating the general worker.",
      "The director general has accused Iranian authorities of intimidating people working in the Persian service.",
      "Intimidating people working in Iranian service.",
      "Intimidating to people in general working.",
      "The people working in the Persian service were intimidated.",
      "People working in Iranian service.",
      "People working in the Persian service.",
      "Working in the Iranian service.",
      "Working with the Persian service.",
      "Working in the Iranian service in general.",
      "Working in general for the Persian service."
    ]
  },
  {
    "instance_id": "pyrxsum-47",
    "summary": "A mother of six with an IQ of 70 should be sterilised for mother own safety, the Court of Protection has ruled.",
    "summary_trees": [
      "# ::snt A mother of six with an IQ of 70 should be sterilised for mother own safety, the Court of Protection has ruled.\n(r / rule-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Court\"\n                  :op2 \"of\"\n                  :op3 \"Protection\"))\n      :ARG3 (r2 / recommend-01\n            :ARG1 (s / sterilize-01\n                  :ARG1 (p / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / child\n                                    :quant 6)\n                              :ARG2 (m / mother))\n                        :ARG0-of (h2 / have-03\n                              :ARG1 (q / quotient\n                                    :quant 70\n                                    :degree-of (ii / intelligent-01))))\n                  :purpose (s2 / safe-01\n                        :ARG1 p))))"
    ],
    "tree": [
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\")))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :purpose (s2 / safe-01\n                                   :ARG1 (p / person)))))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :quant 70))))))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother))))))",
      "(r / rule-01\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :degree (ii / intelligent-01)))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :purpose (s2 / safe-01\n                                   :ARG1 (p / person)))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :quant 70))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :degree (ii / intelligent-01)))))))",
      "(g / government-organization\n   :name (n / name\n            :op1 \"Court\"\n            :op2 \"of\"\n            :op3 \"Protection\"))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (c / child\n                                        :quant 6)))))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h2 / have-03\n                                :ARG1 (q / quotient\n                                         :quant 70)))))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (m / mother)))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :quant 70)))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :degree (ii / intelligent-01))))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG1 (c / child\n                     :quant 6)))",
      "(p / person\n   :ARG0 (h / have-rel-role-91\n            :ARG2 (m / mother)))"
    ],
    "smus": [
      "The Court of Protection has ruled that --",
      "It is ruled that sterilization should be done for the safety of the people.",
      "It is ruled that people with 70 should be sterilized.",
      "Ruled that a mother should be sterilized.",
      "It is ruled that people with an intelligence quotient should be sterilized.",
      "The Court of Protection has ruled that sterilization should be done for the safety of people.",
      "The Court of Protection has ruled that people with 70 should be sterilized.",
      "The Court of Protection has ruled that the mother should be sterilized.",
      "The Court of Protection has ruled that people with an \"intellectual quotient\" should be sterilized.",
      "6 children should be sterilized.",
      "People should be sterilized for safety reasons.",
      "The mother should be sterilized.",
      "People with an \"intellectual quotient\" should be sterilized.",
      "People with an \"intellectual quotient\" are sterilized.",
      "The mother is sterilized for safety.",
      "People with an intelligence quotient are sterilized for safety.",
      "has six children.",
      "The mother has six children.",
      "has an intelligence quotient."
    ]
  },
  {
    "instance_id": "pyrxsum-48",
    "summary": "China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).",
    "summary_trees": [
      "# ::snt China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).\n(j / join-01\n      :ARG0 (c / conglomerate\n            :name (n / name\n                  :op1 \"Fosun\")\n            :ARG1-of (o / own-01\n                  :ARG1-of (p / private-03))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (b / big)\n                  :ARG3 (m / most)\n                  :ARG5 (c2 / country\n                        :name (n2 / name\n                              :op1 \"China\"))))\n      :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                  :ARG3 (c3 / company\n                        :name (n3 / name\n                              :op1 \"Espirito\"\n                              :op2 \"Santo\"\n                              :op3 \"Saude\")\n                        :ARG0-of (o2 / operate-01\n                              :ARG1 (h2 / hospital))\n                        :mod (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Portugal\"))))))"
    ],
    "tree": [
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\")))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(j / join-01\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"China\"))))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"China\"))))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"China\"))))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(c / conglomerate\n   :name (n / name\n            :op1 \"Fosun\"))",
      "(c / conglomerate\n   :ARG1 (o / own-01\n            :ARG1 (p / private-03)))",
      "(c / conglomerate\n   :name (n / name\n            :op1 \"Fosun\")\n   :ARG1 (o / own-01\n            :ARG1 (p / private-03)))",
      "(h / have-degree-91\n   :ARG5 (c2 / country\n             :name (n2 / name\n                       :op1 \"China\")))"
    ],
    "smus": [
      "The conglomerate of Fosun has joined.",
      "The conglomerate is a private-owned company.",
      "The big conglomerate has joined.",
      "The most conglomerate has joined.",
      "The war over the bids for Espirito Santo Saude has joined.",
      "The war over bids from hospital operating companies has joined.",
      "The war over the bids of Portuguese companies has joined.",
      "The conglomerate Fosun has joined a war over a bid to Espirito Santo Saude.",
      "The Sun conglomerate has joined a war over a bid for a hospital operating company.",
      "The fossil conglomerate has joined a war over a bid from a Portuguese company.",
      "The private-equity conglomerate has joined the war on the bid for Espirito Santo Saude.",
      "The private-owned conglomerate has joined the war over the hospital operating company's bid.",
      "The private-owned conglomerate has joined the war on the bids of Portuguese companies.",
      "The big conglomerate has joined the war over the bid for Espirito Santo Saude.",
      "The big conglomerate has joined the war over the hospital operating company's bid.",
      "The big conglomerate has joined the war on the bids of Portuguese companies.",
      "The most conglomerate has joined the war over the bid for Espirito Santo Saude.",
      "The largest conglomerate has joined a war over a bid for the hospital operating company.",
      "The most conglomerate has joined a war over a bid from a Portuguese company.",
      "The conglomerate of China has joined the war over the bid for Espirito Santo Saude.",
      "The conglomerate of China has joined a war over a bid for the hospital operating company.",
      "The conglomerate of Chinese has joined the war on the bids of Portuguese companies.",
      "The private-owned conglomerate of Fosun",
      "There was a war over the bids from Espirito Santo Saude.",
      "There was a war over the bids from hospital operating companies.",
      "Bid for Espirito Santo Saude"
    ]
  },
  {
    "instance_id": "pyrxsum-49",
    "summary": "Bosses have been urged not to indulge in invasive surveillance by reading Bosses employees' private messages.",
    "summary_trees": [
      "# ::snt Bosses have been urged not to indulge in invasive surveillance by reading Bosses employees' private messages.\n(u / urge-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (b / boss)))\n      :ARG2 (ii / indulge-01\n            :polarity -\n            :ARG0 p\n            :ARG1 (s / surveil-01\n                  :ARG0 p\n                  :ARG0-of (ii2 / invade-01)\n                  :manner (r / read-01\n                        :ARG0 p\n                        :ARG1 (m / message-01\n                              :ARG0 (p2 / person\n                                    :ARG1-of (e / employ-01\n                                          :ARG0 p))\n                              :ARG1-of (p3 / private-02))))))"
    ],
    "tree": [
      "(u / urge-01\n   :ARG2 (ii / indulge-01\n             :polarity -))",
      "(u / urge-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG2 (ii / indulge-01\n             :polarity -))",
      "(ii / indulge-01\n    :ARG1 (s / surveil-01\n             :manner (r / read-01\n                        :ARG1 (m / message-01\n                                 :ARG1 (p3 / private-02)))))",
      "(r / read-01\n   :ARG1 (m / message-01\n            :ARG1 (p3 / private-02)))"
    ],
    "smus": [
      "Not to indulge is urged.",
      "Bosses are urged not to indulge.",
      "Surveillance by people reading the message.",
      "Employed."
    ]
  },
  {
    "instance_id": "pyrxsum-50",
    "summary": "Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.",
    "summary_trees": [
      "# ::snt Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.\n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01\n                  :ARG2 (ii / industry\n                        :mod (r / retail-01))))\n      :ARG1 (ii2 / increase-01\n            :ARG0 (c / chain\n                  :name (n / name\n                        :op1 \"Morrisons\")\n                  :mod (s2 / supermarket))\n            :ARG1 (c2 / cost-01\n                  :ARG1 (j / jar\n                        :consist-of (p2 / product\n                              :name (n2 / name\n                                    :op1 \"Mariane\"))))\n            :ARG2 (p3 / percentage-entity\n                  :value 12.5)))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01)))))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :name (n / name\n                                :op1 \"Morrisons\"))))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG1 (c2 / cost-01\n                        :ARG1 (j / jar\n                                 :consist-of (p2 / product\n                                                 :name (n2 / name\n                                                           :op1 \"Mariane\"))))))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG2 (p3 / percentage-entity\n                        :value 12.5)))",
      "(s / say-01\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :mod (s2 / supermarket))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :name (n / name\n                                :op1 \"Morrisons\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG1 (c2 / cost-01\n                        :ARG1 (j / jar\n                                 :consist-of (p2 / product\n                                                 :name (n2 / name\n                                                           :op1 \"Mariane\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG2 (p3 / percentage-entity\n                        :value 12.5)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :mod (s2 / supermarket))))",
      "(p / person\n   :ARG1 (e / expert-01\n            :ARG2 (ii / industry\n                      :mod (r / retail-01))))",
      "(e / expert-01\n   :ARG2 (ii / industry\n             :mod (r / retail-01)))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\")))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket)))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(ii2 / increase-01\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\"))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\"))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))"
    ],
    "smus": [
      "Retail industry experts say --",
      "The Morrisons chain say that increased.",
      "The cost of a jar of Mariane has increased, they say.",
      "Says increased by 12.5%.",
      "The supermarket chain say they have increased.",
      "Retail industry experts say the Morrisons chain has increased.",
      "Retail industry experts say the cost of a jar of Mariane has increased.",
      "Retail industry experts say the increase has increased by 12.5%.",
      "Retail industry experts say supermarket chain has increased.",
      "The Morrisons chain has increased.",
      "The supermarket chain has increased.",
      "The cost of a jar of Mariane has increased.",
      "increased by 12.5%",
      "The Morrisons chain has increased the cost per jar of Mariane.",
      "The supermarket chain has increased the cost of a jar of Mariane.",
      "Morrisons chain increased by 12.5%.",
      "The supermarket chain has increased by 12.5%.",
      "The cost of a jar of Mariane has increased by 12.5%.",
      "Morrisons has increased the cost of a jar of Mariane by 12.5%.",
      "The supermarket chain has increased the cost of a jar of Mariane by 12.5%."
    ]
  },
  {
    "instance_id": "pyrxsum-51",
    "summary": "More should be done to help deaf people into work in Wales, a charity has said.",
    "summary_trees": [
      "# ::snt More should be done to help deaf people into work in Wales, a charity has said.\n(s / say-01\n      :ARG0 (c / charity)\n      :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                  :ARG1 (m / more)\n                  :ARG2 (h / help-01\n                        :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                    :ARG0-of (d2 / deaf-02))\n                              :location (c2 / country\n                                    :name (n / name\n                                          :op1 \"Wales\")))\n                        :ARG2 p))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more))))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :ARG0 (p / person\n                                                :ARG0 (d2 / deaf-02)))))))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG2 (p / person\n                                       :ARG0 (d2 / deaf-02))))))",
      "(s / say-01\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :location (c2 / country\n                                                     :name (n / name\n                                                              :op1 \"Wales\")))))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :ARG0 (p / person\n                                                :ARG0 (d2 / deaf-02)))))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG2 (p / person\n                                       :ARG0 (d2 / deaf-02))))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :location (c2 / country\n                                                     :name (n / name\n                                                              :op1 \"Wales\")))))))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG1 (m / more)))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                       :ARG0 (d2 / deaf-02))))))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG2 (p / person\n                              :ARG0 (d2 / deaf-02)))))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG1 (w / work-01\n                              :location (c2 / country\n                                            :name (n / name\n                                                     :op1 \"Wales\"))))))",
      "(d / do-02\n   :ARG2 (h / help-01\n            :ARG2 (p / person\n                     :ARG0 (d2 / deaf-02))))",
      "(h / help-01\n   :ARG1 (w / work-01\n            :ARG0 (p / person\n                     :ARG0 (d2 / deaf-02))))",
      "(h / help-01\n   :ARG1 (w / work-01\n            :location (c2 / country\n                          :name (n / name\n                                   :op1 \"Wales\"))))",
      "(w / work-01\n   :ARG0 (p / person\n            :ARG0 (d2 / deaf-02)))",
      "(w / work-01\n   :location (c2 / country\n                 :name (n / name\n                          :op1 \"Wales\")))"
    ],
    "smus": [
      "More should be done, it was said.",
      "It is said that help with deaf people's work should be done.",
      "It is said that help for the deaf should be done.",
      "It is said that work in Wales should be done.",
      "Charity has said more should be done.",
      "The charity has said that something should be done to help deaf people do their work.",
      "The charity has said that something should be done to help the deaf.",
      "The charity has said that work should be done to help in Wales.",
      "More should be done.",
      "It should be done to help deaf people do their work.",
      "It should be done to help the deaf.",
      "It should be done to help work in Wales.",
      "Doing to help the deaf.",
      "Help deaf people do their work.",
      "Help work in Wales.",
      "Work in Wales.",
      "Deaf people work in Wales."
    ]
  },
  {
    "instance_id": "pyrxsum-52",
    "summary": "Five teenagers have been sentenced after admitting teenagers part in a \"riot\" which saw part of Newport city centre \"under siege\".",
    "summary_trees": [
      "# ::snt Five teenagers have been sentenced after admitting teenagers part in a \"riot\" which saw part of Newport city centre \"under siege\".\n(s / sentence-01\n      :ARG1 (t / teenager\n            :quant 5)\n      :time (a / after\n            :op1 (a2 / admit-01\n                  :ARG0 t\n                  :ARG1 (p / participate-01\n                        :ARG0 (t2 / teenager)\n                        :ARG1 (r / riot-01\n                              :ARG0-of (s2 / see-01\n                                    :ARG1 (s3 / siege-01\n                                          :ARG1 (p2 / part\n                                                :part-of (c / center\n                                                      :part-of (c2 / city\n                                                            :name (n / name\n                                                                  :op1 \"Newport\")))))))))))"
    ],
    "tree": [
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5))",
      "(s / sentence-01\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG0 (t / teenager))))",
      "(s / sentence-01\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG1 (p / participate-01\n                              :ARG0 (t2 / teenager)))))",
      "(s / sentence-01\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG1 (p / participate-01\n                              :ARG1 (r / riot-01\n                                       :ARG0 (s2 / see-01\n                                                 :ARG1 (s3 / siege-01\n                                                           :ARG1 (p2 / part\n                                                                     :part (c / center\n                                                                              :part (c2 / city\n                                                                                        :name (n / name\n                                                                                                 :op1 \"Newport\")))))))))))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG0 t)))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG1 (p / participate-01\n                              :ARG1 (r / riot-01\n                                       :ARG0 (s2 / see-01\n                                                 :ARG1 (s3 / siege-01\n                                                           :ARG1 (p2 / part\n                                                                     :part (c / center\n                                                                              :part (c2 / city\n                                                                                        :name (n / name\n                                                                                                 :op1 \"Newport\")))))))))))",
      "(a / after\n   :op1 (a2 / admit-01\n            :ARG0 (t / teenager)))",
      "(a / after\n   :op1 (a2 / admit-01\n            :ARG1 (p / participate-01\n                     :ARG0 (t2 / teenager))))",
      "(a / after\n   :op1 (a2 / admit-01\n            :ARG1 (p / participate-01\n                     :ARG1 (r / riot-01\n                              :ARG0 (s2 / see-01\n                                        :ARG1 (s3 / siege-01\n                                                  :ARG1 (p2 / part\n                                                            :part (c / center\n                                                                     :part (c2 / city\n                                                                               :name (n / name\n                                                                                        :op1 \"Newport\"))))))))))",
      "(a2 / admit-01\n    :ARG1 (p / participate-01\n             :ARG0 (t2 / teenager)))",
      "(a2 / admit-01\n    :ARG1 (p / participate-01\n             :ARG1 (r / riot-01\n                      :ARG0 (s2 / see-01\n                                :ARG1 (s3 / siege-01\n                                          :ARG1 (p2 / part\n                                                    :part (c / center\n                                                             :part (c2 / city\n                                                                       :name (n / name\n                                                                                :op1 \"Newport\")))))))))",
      "(p / participate-01\n   :ARG1 (r / riot-01\n            :ARG0 (s2 / see-01\n                      :ARG1 (s3 / siege-01\n                                :ARG1 (p2 / part\n                                          :part (c / center\n                                                   :part (c2 / city\n                                                             :name (n / name\n                                                                      :op1 \"Newport\"))))))))",
      "(p / participate-01\n   :ARG0 (t2 / teenager)\n   :ARG1 (r / riot-01\n            :ARG0 (s2 / see-01\n                      :ARG1 (s3 / siege-01\n                                :ARG1 (p2 / part\n                                          :part (c / center\n                                                   :part (c2 / city\n                                                             :name (n / name\n                                                                      :op1 \"Newport\"))))))))",
      "(r / riot-01\n   :ARG0 (s2 / see-01\n             :ARG1 (s3 / siege-01\n                       :ARG1 (p2 / part\n                                 :part (c / center\n                                          :part (c2 / city\n                                                    :name (n / name\n                                                             :op1 \"Newport\")))))))",
      "(s2 / see-01\n    :ARG1 (s3 / siege-01\n              :ARG1 (p2 / part\n                        :part (c / center\n                                 :part (c2 / city\n                                           :name (n / name\n                                                    :op1 \"Newport\"))))))"
    ],
    "smus": [
      "Five teenagers were sentenced.",
      "The sentence was given after the teenagers admitted.",
      "The sentence was given after admitting to part-cipation by the teenagers.",
      "The sentence was handed down after admitting part of the riots that saw the siege of part of the center of Newport city.",
      "Five teenagers were sentenced after admitting.",
      "Five teenagers were sentenced after admitting part in the riots that saw the siege of part of the center of Newport.",
      "After the teenagers admitted.",
      "After admitting part-cipation by teenagers.",
      "After admitting part of the riots that saw the siege of part of the center of Newport.",
      "admitting to being part of the participation of teenagers.",
      "admitting part of the riots that saw the siege of part of the center of Newport.",
      "Part of the riots that saw the siege of part of the center of Newport.",
      "Teenagers took part in a riot that saw the siege of part of the city center of Newport.",
      "There was rioting as a siege of part of the city center saw the city.",
      "Part of the center of Newport was seen under siege."
    ]
  },
  {
    "instance_id": "pyrxsum-53",
    "summary": "Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.",
    "summary_trees": [
      "# ::snt Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.\n(a / and\n      :op1 (f / fetch-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG2 (d / dog\n                  :poss y))\n      :op2 (s / sit-01\n            :mode imperative\n            :ARG1 y\n            :ARG2 d)\n      :op3 (r / roll-01\n            :mode imperative\n            :ARG0 y\n            :ARG2 (o / over))\n      :domain (t / thing\n            :ARG1-of (n / normal-02)\n            :mod (k / kind\n                  :mod (a2 / all))\n            :ARG1-of (s2 / say-01\n                  :ARG0 y\n                  :ARG2 d)))"
    ],
    "tree": [
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you))))",
      "(a / and\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :op3 (r / roll-01\n           :mode imperative))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :op3 (r / roll-01\n           :ARG0 y))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :op3 (r / roll-01\n           :ARG2 (o / over)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss y))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG1 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op2 (s / sit-01\n           :ARG2 d)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG0 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op1 (f / fetch-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG0 (y / you))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 (y / you))))",
      "(a / and\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG1 (y / you))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 (d / dog))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG0 y)\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG0 y)))",
      "(a / and\n   :op2 (s / sit-01\n           :ARG2 (d / dog\n                    :poss (y / you)))\n   :op3 (r / roll-01\n           :ARG2 (o / over))\n   :domain (t / thing\n              :ARG1 (s2 / say-01\n                        :ARG2 d)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :ARG1 (n / normal-02)))",
      "(a / and\n   :op1 (f / fetch-01\n           :mode imperative)\n   :op2 (s / sit-01\n           :mode imperative)\n   :op3 (r / roll-01\n           :mode imperative)\n   :domain (t / thing\n              :mod (k / kind\n                      :mod (a2 / all))))"
    ],
    "smus": [
      "and fetch.",
      "and fetch your dog.",
      "and sit.",
      "and roll.",
      "and you roll.",
      "and roll over.",
      "And what to say about a dog.",
      "fetch and sit.",
      "Fetch and sit with your dog.",
      "fetch and sit with your dog.",
      "fetch your dog and sit.",
      "fetch and roll.",
      "Fetch and roll.",
      "Fetch and roll over.",
      "fetch and roll over.",
      "fetch your dog and roll.",
      "fetch your dog and roll over.",
      "and normal things are to fetch.",
      "And what you're going to say, fetch.",
      "And things to say to the dog: \"Fetch.",
      "And all kinds of things you'll fetch.",
      "And what you say is \"Fetch\".",
      "And what to say to the dog is \"Fetch.",
      "And all kinds of things to fetch your dog.",
      "And what to say to your dog is to fetch it.",
      "Sit and roll.",
      "Sit and roll over.",
      "and sit and roll over.",
      "Sit your dog and roll.",
      "and normal things are to sit.",
      "And all kinds of things are sit down.",
      "And things to say to the dog, sit.",
      "and you sit.. things are normal.",
      "And what you say is sit down.",
      "And things to say about a dog are sit you.",
      "and sit with your dog are normal things.",
      "And what do you say, roll.",
      "And what to say about the dog is roll.",
      "And all kinds of things you roll.",
      "And what you say is roll.",
      "And things to say about the dog are roll over.",
      "fetch, sit, roll.",
      "fetch, sit and roll.",
      "fetch, sit and roll over.",
      "fetch, sit with your dog and roll over.",
      "fetch your dog, sit and roll.",
      "fetch your dog, sit and roll over.",
      "fetch your dog, sit on it and roll.",
      "fetch your dog, sit on it and roll over.",
      "Normal things are fetch and sit.",
      "All kinds of things are fetch and sit.",
      "Things you're going to say are fetch and sit.",
      "Things to say to the dog are fetch and sit.",
      "Things to say, fetch and sit.",
      "Things to say about a dog are fetch and sit.",
      "Normal things are to fetch and sit with your dog.",
      "All kinds of things are fetch and sit with your dog.",
      "Things to say, fetch and sit with your dog.",
      "Things to say to your dog are fetch and sit.",
      "Things to say to the dog, fetch and sit.",
      "Normal things are to fetch and sit.",
      "Things to say about a dog are to fetch and sit.",
      "All kinds of things are to fetch and sit with your dog.",
      "Things you'll say are fetch and sit with your dog.",
      "Things to say to your dog are to fetch and sit with your dog.",
      "Normal things are to fetch your dog and sit.",
      "All kinds of things: fetch your dog and sit.",
      "Things to say, fetch your dog and sit.",
      "Things to say to your dog are to fetch and sit.",
      "All kinds of things are to fetch your dog and sit.",
      "Things you'll say are fetch your dog and sit.",
      "Normal things are to fetch and sit your dog.",
      "All kinds of things to fetch and sit your dog.",
      "Things you'll say are fetch your dog and sit with it.",
      "Things to say to your dog are to fetch and sit your dog.",
      "Normal things are fetch and roll.",
      "All kinds of things are fetch and roll.",
      "Things you're going to say are fetch and roll.",
      "Things to say to the dog: \"Fetch and roll.\"",
      "Things to say, fetch and roll.",
      "Things to say about a dog are fetch and roll.",
      "Normal things are fetch and roll over.",
      "All kinds of things are fetch and roll over.",
      "Things you're going to say, fetch and roll over.",
      "Things to say to the dog: \"Fetch and roll over.\"",
      "All kinds of things, fetch and roll.",
      "Things to say about the dog are: \"Fetch and roll.\"",
      "All kinds of things you'll fetch and roll.",
      "Things you'll say are fetch and roll.",
      "Things to say about a dog are, \"Fetch and roll.\"",
      "Things you'll say are fetch and roll over.",
      "Things to say to the dog are, fetch and roll over.",
      "Normal things are to fetch your dog and roll.",
      "All kinds of things: fetch your dog and roll.",
      "Things to say, fetch your dog and roll.",
      "Things to say to your dog are to fetch and roll.",
      "All kinds of things are to fetch your dog and roll.",
      "Things you'll say are fetch your dog and roll.",
      "Normal things are to fetch your dog and roll over.",
      "All kinds of things are to fetch your dog and roll over.",
      "Things you're going to say are fetch your dog and roll over.",
      "Things to say to your dog are to fetch and roll over.",
      "Normal things are sit and roll.",
      "All kinds of things are sit and roll.",
      "Things you're going to say are sit and roll.",
      "Things to say to the dog are sit and roll.",
      "Things to say, sit and roll.",
      "Things to say about a dog are sit and roll.",
      "Normal things are sit and roll over.",
      "All kinds of things are sit and roll over.",
      "Things you're going to say, sit and roll over.",
      "Things to say about the dog are sit and roll over.",
      "Normal things are to sit and roll.",
      "Normal things are to sit and roll over.",
      "Things you're going to say are sit and roll over.",
      "Things to say about a dog are sit and roll over.",
      "Normal things are to sit with your dog and roll.",
      "All kinds of things are to sit on your dog and roll.",
      "Things to say, sit on your dog and roll.",
      "And what to say to your dog is sit your dog and roll.",
      "Things you're going to say are sit your dog and roll.",
      "And what you're going to say about your dog is sit with it and roll.",
      "Normal things are to sit with your dog and roll over.",
      "All kinds of things are to sit on your dog and roll over.",
      "What you are going to say is sit your dog and roll over.",
      "And what you're going to say is sit your dog and roll over.",
      "Normal things are fetch, sit, roll.",
      "All kinds of things are fetch, sit, roll.",
      "Things you're going to say are fetch, sit and roll.",
      "Things to say to the dog: fetch, sit, roll.",
      "Normal things are fetch, sit and roll.",
      "All kinds of things are fetch, sit and roll.",
      "Things to say, fetch, sit and roll.",
      "Things to say about a dog are fetch, sit and roll.",
      "Normal things are fetch, sit, roll over.",
      "All kinds of things are fetch, sit and roll over.",
      "Things you're going to say are fetch, sit and roll over.",
      "Things to say to the dog: fetch, sit, roll over.",
      "Things to say to the dog: fetch, sit and roll.",
      "Normal things are fetch, sit and roll over.",
      "Things to say, fetch, sit and roll over.",
      "Things to say about a dog are fetch, sit and roll over.",
      "Normal things are to fetch, sit with your dog and roll.",
      "All kinds of things: fetch, sit with your dog and roll.",
      "Things to say, fetch, sit on your dog and roll.",
      "Things to say to your dog: fetch, sit with your dog and roll.",
      "Things to say to your dog are fetch and sit with your dog and roll.",
      "Normal things are to fetch, sit with your dog and roll over.",
      "All kinds of things: fetch, sit your dog and roll over.",
      "Things to say, fetch, sit your dog and roll over.",
      "Things to say to your dog are fetch, sit with your dog and roll over.",
      "Things to say to the dog are: fetch, sit, roll.",
      "Things to say about a dog are: fetch, sit and roll.",
      "Normal things are to fetch, sit and roll over.",
      "All kinds of things are fetch and sit and roll over.",
      "Things to say about the dog are: fetch, sit, and roll over.",
      "Normal things are to fetch, sit and roll.",
      "All kinds of things are fetch and sit and roll.",
      "Things to say about the dog are: fetch, sit, roll.",
      "All kinds of things are to fetch, sit and roll.",
      "Things you'll say are: fetch, sit, roll.",
      "Things to say about a dog are to fetch, sit and roll.",
      "All kinds of things are to fetch, sit and roll over.",
      "Things to say about a dog are to fetch, sit and roll over.",
      "All kinds of things are fetch and sit with your dog and roll.",
      "Things to say to your dog are to fetch, sit with your dog and roll.",
      "All kinds of things are to fetch, sit with your dog and roll.",
      "Things you'll say are fetch, sit with your dog and roll.",
      "Things to say to your dog are to fetch, sit on your dog and roll.",
      "All kinds of things, you fetch, sit with your dog and roll over.",
      "Things you'll say are: fetch, sit with your dog and roll over.",
      "Things to say to your dog are to fetch, sit with your dog and roll over.",
      "Normal things are to fetch your dog, sit and roll.",
      "All kinds of things: fetch your dog, sit and roll.",
      "Things to say, fetch your dog, sit and roll.",
      "Things to say to your dog are to fetch, sit and roll.",
      "All kinds of things are to fetch your dog, sit and roll.",
      "Normal things are to fetch your dog, sit and roll over.",
      "All kinds of things: fetch your dog, sit and roll over.",
      "Things to say, fetch your dog, sit and roll over.",
      "Things to say to your dog are to fetch your dog, sit and roll over.",
      "Things you'll say are fetch your dog, sit and roll.",
      "Things you're going to say are fetch your dog, sit and roll over.",
      "Things to say to your dog are to fetch, sit and roll over.",
      "Normal things are to fetch your dog, sit with it and roll.",
      "All kinds of things: fetch your dog, sit with it, roll.",
      "Things to say, fetch your dog, sit on it and roll.",
      "All kinds of things: fetch your dog, sit with it and roll.",
      "Things you'll say are fetch your dog, sit with it and roll.",
      "Things you would say to your dog are to fetch, sit and roll.",
      "Normal things are to fetch your dog, sit with it and roll over.",
      "All kinds of things: fetch your dog, sit with it and roll over.",
      "What you are going to say is fetch your dog, sit with it and roll over.",
      "fetch your dog",
      "fetch your dog."
    ]
  },
  {
    "instance_id": "pyrxsum-54",
    "summary": "A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.",
    "summary_trees": [
      "# ::snt A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.\n(d / decide-01\n      :ARG0 (j / jury\n            :mod (g / grand))\n      :ARG1 (ii / indict-01\n            :polarity -\n            :ARG0 j\n            :ARG1 (a / anyone)\n            :topic (c / case-04\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Sandra\"\n                              :op2 \"Bland\")\n                        :ARG1-of (d2 / die-01\n                              :location (j2 / jail\n                                    :location (s / state\n                                          :name (n2 / name\n                                                :op1 \"Texas\")))\n                              :time (b / before)\n                              :time (y / year\n                                    :mod (t / this)))))))"
    ],
    "tree": [
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand)))",
      "(d / decide-01\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :ARG1 (a / anyone)))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :topic (c / case-04\n                       :ARG1 (p / person\n                                :name (n / name\n                                         :op1 \"Sandra\"\n                                         :op2 \"Bland\")))))",
      "(c / case-04\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Bland\")))",
      "(c / case-04\n   :ARG1 (p / person\n            :ARG1 (d2 / die-01\n                      :time (y / year\n                               :mod (t / this)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Sandra\"\n            :op2 \"Bland\"))",
      "(p / person\n   :ARG1 (d2 / die-01\n             :location (j2 / jail\n                           :location (s / state\n                                        :name (n2 / name\n                                                  :op1 \"Texas\")))))",
      "(p / person\n   :ARG1 (d2 / die-01\n             :time (b / before)))",
      "(p / person\n   :ARG1 (d2 / die-01\n             :time (y / year\n                      :mod (t / this))))",
      "(p / person\n   :name (n / name\n            :op1 \"Sandra\"\n            :op2 \"Bland\")\n   :ARG1 (d2 / die-01\n             :location (j2 / jail\n                           :location (s / state\n                                        :name (n2 / name\n                                                  :op1 \"Texas\")))))"
    ],
    "smus": [
      "The grand jury decided.",
      "It was decided not to indict.",
      "The grand jury has decided not to indict.",
      "The grand jury has decided not to indict anyone.",
      "The case against Sandra Land was decided by a grand jury.",
      "In the case of the person who died in jail in Texas.",
      "People who have died before.",
      "The people who died this year",
      "Sandra Land died in jail in Texas.",
      "Sandra Land has died before.",
      "Sandra Land died this year.",
      "Before, there was a death in jail in Texas."
    ]
  },
  {
    "instance_id": "pyrxsum-55",
    "summary": "A man was limp \"like a teddy bear\" after man was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.",
    "summary_trees": [
      "# ::snt A man was limp \"like a teddy bear\" after man was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.\n(h / hear-01\n      :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n      :ARG1 (l / limp-01\n            :ARG1 (m2 / man)\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b / bear\n                        :mod (t2 / teddy)))\n            :time (a / after\n                  :op1 (r2 / restrain-01\n                        :ARG0 (p / person\n                              :ARG0-of (h2 / have-org-role-91\n                                    :ARG2 (b2 / bouncer)))\n                        :ARG1 m2\n                        :location (g / ground\n                              :location (o / outside\n                                    :op1 (b3 / bar\n                                          :location (c / city\n                                                :name (n / name\n                                                      :op1 \"Aberdeen\")))))))))"
    ],
    "tree": [
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01)))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :ARG1 (r / resemble-01\n                     :ARG2 (b / bear\n                              :mod (t2 / teddy)))))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG0 (p / person\n                                       :ARG0 (h2 / have-org-role-91\n                                                 :ARG2 (b2 / bouncer)))))))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG1 (m2 / man)))))",
      "(h / hear-01\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :location (g / ground\n                                           :location (o / outside\n                                                        :op1 (b3 / bar\n                                                                 :location (c / city\n                                                                              :name (n / name\n                                                                                       :op1 \"Aberdeen\")))))))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (r / resemble-01\n                     :ARG2 (b / bear\n                              :mod (t2 / teddy)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG0 (p / person\n                                       :ARG0 (h2 / have-org-role-91\n                                                 :ARG2 (b2 / bouncer)))))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG1 (m2 / man)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :location (g / ground\n                                           :location (o / outside\n                                                        :op1 (b3 / bar\n                                                                 :location (c / city\n                                                                              :name (n / name\n                                                                                       :op1 \"Aberdeen\")))))))))",
      "(l / limp-01\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG0 (p / person\n                              :ARG0 (h2 / have-org-role-91\n                                        :ARG2 (b2 / bouncer))))))",
      "(l / limp-01\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG1 (m2 / man))))",
      "(l / limp-01\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :location (g / ground\n                                  :location (o / outside\n                                               :op1 (b3 / bar\n                                                        :location (c / city\n                                                                     :name (n / name\n                                                                              :op1 \"Aberdeen\"))))))))",
      "(l / limp-01\n   :ARG1 (m2 / man)\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG0 (p / person\n                              :ARG0 (h2 / have-org-role-91\n                                        :ARG2 (b2 / bouncer))))))",
      "(l / limp-01\n   :ARG1 (m2 / man)\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :ARG1 m2)))",
      "(l / limp-01\n   :ARG1 (m2 / man)\n   :time (a / after\n            :op1 (r2 / restrain-01\n                     :location (g / ground\n                                  :location (o / outside\n                                               :op1 (b3 / bar\n                                                        :location (c / city\n                                                                     :name (n / name\n                                                                              :op1 \"Aberdeen\"))))))))",
      "(r / resemble-01\n   :ARG2 (b / bear\n            :mod (t2 / teddy)))",
      "(a / after\n   :op1 (r2 / restrain-01\n            :ARG0 (p / person\n                     :ARG0 (h2 / have-org-role-91\n                               :ARG2 (b2 / bouncer)))))",
      "(a / after\n   :op1 (r2 / restrain-01\n            :ARG1 (m2 / man)))",
      "(r2 / restrain-01\n    :ARG0 (p / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (b2 / bouncer))))"
    ],
    "smus": [
      "The murder trial has heard.",
      "The man was heard limping.",
      "Heard a limp like a Teddy Bear.",
      "Heard limping after being restrained by bouncers.",
      "Heard limping after being restrained by man.",
      "Heard limping after being restrained on the ground outside an Aberdeen bar.",
      "The murder trial has heard the man limp.",
      "The murder trial has heard limping teddy bears.",
      "The murder trial has heard limped after being restrained by bouncers.",
      "The murder trial has heard that after the man was restrained he was limping.",
      "The murder trial has heard a limp after being restrained on the ground outside an Aberdeen bar.",
      "After being restrained by bouncers, limps.",
      "After the man was restrained, he was limping.",
      "-Limping after being restrained on the ground outside an Aberdeen bar.",
      "The man was limping after being restrained by bouncers.",
      "The man was limping after being restrained.",
      "The man was limping after being restrained on the ground outside an Aberdeen bar.",
      "After being restrained by bouncers.",
      "After the man was restrained.",
      "After being restrained on the ground outside an Aberdeen bar.",
      "Restrained on the ground outside an Aberdeen bar."
    ]
  },
  {
    "instance_id": "pyrxsum-56",
    "summary": "A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking busker was collecting for a Hillsborough charity.",
    "summary_trees": [
      "# ::snt A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking busker was collecting for a Hillsborough charity.\n(c / convict-01\n      :ARG1 (b / busker\n            :ARG0-of (p / play-11\n                  :ARG2 (b2 / bagpipe)))\n      :ARG2 (d / dupe-01\n            :ARG0 b\n            :ARG1 (p2 / person\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Liverpool\")))\n            :ARG2 (t / think-01\n                  :ARG0 p2\n                  :ARG1 (c3 / collect-01\n                        :ARG0 b\n                        :ARG3 (c4 / charity\n                              :mod (e / event\n                                    :name (n2 / name\n                                          :op1 \"Hillsborough\")))))))"
    ],
    "tree": [
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe))))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG0 (b / busker)))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG1 (p2 / person\n                      :location (c2 / city\n                                    :name (n / name\n                                             :op1 \"Liverpool\")))))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG0 (b / busker)))))",
      "(c / convict-01\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG3 (c4 / charity\n                                         :mod (e / event\n                                                 :name (n2 / name\n                                                           :op1 \"Hillsborough\")))))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG0 b))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG1 (p2 / person\n                      :location (c2 / city\n                                    :name (n / name\n                                             :op1 \"Liverpool\")))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG0 b))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG3 (c4 / charity\n                                         :mod (e / event\n                                                 :name (n2 / name\n                                                           :op1 \"Hillsborough\")))))))",
      "(b / busker\n   :ARG0 (p / play-11\n            :ARG2 (b2 / bagpipe)))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\"))))",
      "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person)))",
      "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 (b / busker))))",
      "(d / dupe-01\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG3 (c4 / charity\n                                :mod (e / event\n                                        :name (n2 / name\n                                                  :op1 \"Hillsborough\"))))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG0 p2))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 (b / busker))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG3 (c4 / charity\n                                :mod (e / event\n                                        :name (n2 / name\n                                                  :op1 \"Hillsborough\"))))))"
    ],
    "smus": [
      "A busker playing the bagpipe was convicted.",
      "Convicted for duping a busker.",
      "convicted of duping a Liverpool person.",
      "Convicted for duping people's thinking.",
      "Convicted for duping the thought of a busker collecting.",
      "The thought of collecting for a Hillsborough charity was duped, the convictions were made.",
      "A busker playing the bagpipe was convicted of duping.",
      "A bagpipe playing busker was convicted of duping a Liverpool person.",
      "A busker playing the bagpipe was convicted of duping people's thinking.",
      "A busker playing bagpipes was convicted of duping the thought of collecting.",
      "A busker playing bagpipes was convicted of duping the thought of collecting for a Hillsborough charity.",
      "Playing bagpipes is a busker.",
      "Duping Liverpool people.",
      "Duping people's thinking.",
      "Dupeing the thought of the busker collecting.",
      "Duping the thought of collecting for a Hillsborough charity.",
      "Duping Liverpool people for their thinking.",
      "Duping Liverpool people into thinking a busker was collecting.",
      "People in Liverpool are being duped into thinking of collecting for a Hillsborough charity."
    ]
  },
  {
    "instance_id": "pyrxsum-57",
    "summary": "New Morocco coach Herve Renard begins Renard quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.",
    "summary_trees": [
      "# ::snt New Morocco coach Herve Renard begins Renard quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.\n(b / begin-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Herve\"\n                  :op2 \"Renard\")\n            :ARG0-of (c / coach-01\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Morocco\")))\n            :ARG1-of (n3 / new-01))\n      :ARG1 (q / quest-01\n            :ARG0 p\n            :ARG1 (q2 / qualify-02\n                  :ARG2 (g / game\n                        :name (n4 / name\n                              :op1 \"Africa\"\n                              :op2 \"Cup\"\n                              :op3 \"of\"\n                              :op4 \"Nations\")\n                        :ord (o / ordinal-entity\n                              :value 3)\n                        :ARG0-of (e / equal-01\n                              :ARG1 (r / record)))))\n      :time (r2 / resume-01\n            :ARG1 q2\n            :time (w / week\n                  :mod (t2 / this))))"
    ],
    "tree": [
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\")))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01)))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ord (o / ordinal-entity\n                                        :value 3)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (g / game\n                                :ARG0 (e / equal-01\n                                         :ARG1 (r / record))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\")\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ord (o / ordinal-entity\n                                       :value 3)\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :name (n4 / name\n                                         :op1 \"Africa\"\n                                         :op2 \"Cup\"\n                                         :op3 \"of\"\n                                         :op4 \"Nations\"))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t2 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record))\n                               :ord (o / ordinal-entity\n                                       :value 3))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-01))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (g / game\n                               :ARG0 (e / equal-01\n                                        :ARG1 (r / record)))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(p / person\n   :ARG0 (c / coach-01\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Morocco\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Herve\"\n            :op2 \"Renard\")\n   :ARG0 (c / coach-01\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Morocco\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Herve\"\n            :op2 \"Renard\")\n   :ARG1 (n3 / new-01))",
      "(c / coach-01\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Morocco\")))"
    ],
    "smus": [
      "Morocco coach begins",
      "The new people begins.",
      "Herve Renard's quest begins.",
      "The quest for qualifying for the Africa Cup of Nations begins.",
      "The quest for qualifying for the third game begins.",
      "The quest for qualifying for the record-equaling game begins.",
      "Qualification for the Africa Cup of Nations resumes.",
      "begins when resumes this week.",
      "As qualifying for the third game resumes, the process begins.",
      "As qualification for the record-equaling game resumes, the beginnings of the game begin.",
      "Herve Renard begins his quest.",
      "Herve Renard begins the quest for qualifying for the third game.",
      "Morocco coach begins quest.",
      "Morocco coach begins quest for qualification for the Africa Cup of Nations",
      "Morocco coach begins quest for qualifying for third game",
      "Morocco coach begins quest for qualifying for game with record equaling",
      "The new person begins his quest.",
      "The new people begins the quest for qualifying for the Africa Cup of Nations.",
      "New person begins quest for qualifying for third game.",
      "The new person begins the quest for qualifying for the record-equaling game.",
      "Herve Renard begins when this week's resume resumes.",
      "When qualifying for the third game resumes, Herve Renard begins.",
      "When preparing for the record-equaling game resumes, Herve Renard begins.",
      "The Moroccan coach begins qualifying for the Africa Cup of Nations when the tournament resumes.",
      "Morocco's coach begins when this week's resume resumes.",
      "Morocco coach begins qualifying for the third game.",
      "The Moroccan coach begins qualifying for the game with the record equaling.",
      "The new people begins when qualifying for the Africa Cup of Nations resumes.",
      "The new person begins when this week's resume resumes.",
      "The new person begins when qualifying for the third game resumes.",
      "The new person begins qualifying for the record-equaling game as the record-equalization game resumes.",
      "When qualifying for the Africa Cup of Nations resumes, Herve Renard's quest begins.",
      "Herve Renard's quest begins when this week's resume resumes.",
      "When qualifying for the third game resumes, Herve Renard's quest begins.",
      "When qualifying for the record-equaling game resumes, Herve Renard's quest begins.",
      "The quest for qualifying for the Africa Cup of Nations begins when it resumes.",
      "The quest for qualifying for the Africa Cup of Nations begins this week, which resumes.",
      "The quest for qualifying for the third Africa Cup of Nations begins when it resumes.",
      "The quest for qualifying for the African Cup of Nations by equaling record begins when it resumes.",
      "The quest for qualifying for the third African Cup of Nations begins when it resumes.",
      "Quest for qualifying for the third game begins this week as it resumes.",
      "The quest for qualifying for the third game begins when it resumes.",
      "The quest for qualifying for the third game of equaling the record begins when it resumes.",
      "The quest for qualifying for the record-equaling Africa Cup of Nations begins as it resumes.",
      "The quest for qualifying for the record-equaling game begins this week, which resumes.",
      "The quest for qualifying for the record-equaling game begins as it resumes.",
      "When qualifying for the Africa Cup of Nations resumes, Herve Renard begins his quest.",
      "Herve Renard begins his quest as the week this resumes.",
      "When qualifying for the third game resumes, Herve Renard begins his quest.",
      "When qualifying for the record-equaling game resumes, Herve Renard begins his quest.",
      "When the quest for qualifying for the Africa Cup of Nations resumes, Herve Renard begins.",
      "When the quest for qualifying for the third Africa Cup of Nations resumes, Herve Renard begins.",
      "When the quest for qualifying for the African Cup of Nations by equaling the record begins, Herve Renard begins.",
      "When the quest for qualifying for the third African Cup of Nations resumes, Herve Renard begins.",
      "When the quest for qualifying for the third game resumes, Herve Renard begins.",
      "When the quest for qualifying for the third game of equaling the record resumes, Herve Renard begins.",
      "When the quest for qualifying for the record-equaling Africa Cup of Nations resumes, Herve Renard begins.",
      "When the quest for qualifying for the record-equaling game resumes, Herve Renard begins.",
      "Morocco coach begins quest as qualification for Africa Cup of Nations resumes.",
      "Morocco coach begins quest as week resumes.",
      "Morocco coach begins quest as qualification for third game resumes.",
      "Morocco coach begins quest as qualification for game against equaling record resumes.",
      "Morocco coach begins quest for qualifying for Africa Cup of Nations when quest resumes.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations when resumes this week.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations with record equaling as quest resumes.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations third game when quest resumes.",
      "Morocco coach begins quest for qualifying for third game as week resumes this week.",
      "Morocco coach begins quest for qualifying for third game when quest resumes.",
      "Morocco coach begins quest for qualifying for third game with record equaling as quest resumes.",
      "Morocco coach begins quest for qualifying for the record-equaling Africa Cup of Nations when quest resumes.",
      "Morocco coach begins quest for qualifying for game with record equaling as week resumes.",
      "Morocco coach begins quest for qualifying for third game in record-equaling quest as quest resumes.",
      "Morocco coach begins quest for qualifying for game with record equaling as quest resumes.",
      "The new person begins his quest as preparing for the Africa Cup of Nations resumes.",
      "The new person begins his quest when this week's resume.",
      "The new person begins his quest as qualifying for the third game resumes.",
      "The new person begins his quest as resumption of qualifying for the record-equaling game.",
      "The new person begins the quest for qualifying for the Africa Cup of Nations when it resumes.",
      "The quest for qualifying for the Africa Cup of Nations begins for new people when it resumes this week.",
      "The new person begins the quest for qualifying for the third Africa Cup of Nations when it resumes.",
      "The new person begins the quest for qualifying for the Africa Cup of Nations record-equaling when it resumes.",
      "The new person begins the quest for qualifying for the third African Cup of Nations when it resumes.",
      "The quest for qualifying for the third game begins for new people when this week's resumes.",
      "The new person begins the quest for qualifying for the third game when it resumes.",
      "The new person begins the quest for qualifying for the third game of equaling the record when it resumes.",
      "The new person begins the quest for qualifying for the record-equaling Africa Cup of Nations when it resumes.",
      "The quest for qualifying for the record-equaling game begins for new people as the week resumes.",
      "The new person begins the quest for qualifying for the record-equaling game when it resumes.",
      "Quest for qualifying for the Africa Cup of Nations",
      "Quest for qualifying for the third game",
      "Quest for qualifying for the record-equaling game.",
      "Qualifying for the Africa Cup of Nations",
      "Qualifying for the record-equalling game.",
      "Equaling the record is a game.",
      "Equaling the record, the Africa Cup of Nations.",
      "This week resumes."
    ]
  },
  {
    "instance_id": "pyrxsum-58",
    "summary": "Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.",
    "summary_trees": [
      "# ::snt Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.\n(t / top-01\n      :ARG1 (l / list\n            :name (n / name\n                  :op1 \"Sound\"\n                  :op2 \"Of\"\n                  :op3 \"2017\")\n            :poss (p / publication\n                  :name (n2 / name\n                        :op1 \"BBC\"))\n            :ARG0-of (a / aim-01\n                  :ARG1 (p2 / predict-01\n                        :ARG1 (m / music\n                              :ARG1-of (n3 / new-01)\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (e / excite-01\n                                          :ARG0 m)\n                                    :ARG3 (m2 / most))\n                              :time (y / year\n                                    :mod (a2 / ahead))))))\n      :ARG2 (p3 / person\n            :name (n4 / name\n                  :op1 \"Ray\"\n                  :op2 \"BlK\")\n            :ARG0-of (s / sing-01\n                  :ARG1 (s2 / soul))))"
    ],
    "tree": [
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\"))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01))))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :time (y / year\n                                                 :mod (a2 / ahead)))))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m2 / most)))))))",
      "(t / top-01\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (e / excite-01\n                                                          :ARG0 m))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (e / excite-01\n                                                          :ARG0 m))))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :time (y / year\n                                                 :mod (a2 / ahead))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :time (y / year\n                                                 :mod (a2 / ahead))))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m2 / most))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m2 / most))))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(l / list\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\")))",
      "(l / list\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (n3 / new-01)))))",
      "(l / list\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (h / have-degree-91\n                                        :ARG2 (e / excite-01\n                                                 :ARG0 m))))))",
      "(l / list\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :time (y / year\n                                        :mod (a2 / ahead))))))",
      "(l / list\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m2 / most))))))",
      "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\")))",
      "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (n3 / new-01)))))",
      "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :time (y / year\n                                        :mod (a2 / ahead))))))",
      "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m2 / most))))))",
      "(l / list\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\"))\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (n3 / new-01)))))",
      "(l / list\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\"))\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :time (y / year\n                                        :mod (a2 / ahead))))))",
      "(l / list\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\"))\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m2 / most))))))",
      "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\"))\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :ARG1 (n3 / new-01)))))",
      "(l / list\n   :name (n / name\n            :op1 \"Sound\"\n            :op2 \"Of\"\n            :op3 \"2017\")\n   :poss (p / publication\n            :name (n2 / name\n                      :op1 \"BBC\"))\n   :ARG0 (a / aim-01\n            :ARG1 (p2 / predict-01\n                      :ARG1 (m / music\n                               :time (y / year\n                                        :mod (a2 / ahead))))))",
      "(p / publication\n   :name (n2 / name\n             :op1 \"BBC\"))"
    ],
    "smus": [
      "Top list of aims to predict new music",
      "Top of the list that aims to predict what music is exciting",
      "Top of list that aims to predict music for year ahead",
      "Topped by Ray Blak.",
      "Top of soul singing",
      "Ray Blak tops the Sound of 2017 list.",
      "Ray Blak tops the BBC list.",
      "The BBC's list topped soul-singers.",
      "Ray Blak tops list of aims to predict new music",
      "The list aimed at predicting new music has topped the soul-singing list.",
      "Ray Blak tops list that aims to predict what music is exciting.",
      "The list aimed at predicting what music has been exciting has topped the soul-singing list.",
      "Ray Blak tops list that aims to predict music for the year ahead",
      "The list aimed at predicting the music of the year ahead has topped soul singers.",
      "Ray Blak tops list that aims to predict music that has the most to say.",
      "The list aimed at predicting the most music has topped the soul singers.",
      "a list that aims to predict new music",
      "The list aims to predict what music is exciting.",
      "A list that aims to predict the music of the year ahead.",
      "The Sound of 2017 list aims to predict new music.",
      "The Sound of 2017 list aims to predict what music is going to be exciting.",
      "The Sound of 2017 list aims to predict the music for the year ahead.",
      "The Sound of 2017 list aims to predict the music that has the most.",
      "The BBC list aims to predict new music",
      "The BBC list aims to predict what music is going to be exciting.",
      "The BBC's list aims to predict the music for the year ahead.",
      "The BBC's Sound of 2017 list aims to predict new music.",
      "The BBC's Sound of 2017 list aims to predict what music is going to be exciting.",
      "The BBC's Sound of 2017 list aims to predict the music of the year ahead.",
      "aims to predict the new music",
      "The aim is to predict what music will be exciting.",
      "aims to predict the music for the year ahead.",
      "predict new music",
      "Predict the music for the year ahead."
    ]
  },
  {
    "instance_id": "pyrxsum-59",
    "summary": "Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.",
    "summary_trees": [
      "# ::snt Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / protest-01)\n            :quant (m / multiple\n                  :op1 100)\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Kabul\")))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 \"Iran\"))\n      :ARG2 (s / stop-03\n            :ARG0 c2\n            :ARG1 (t / tanker\n                  :mod (f / fuel))\n            :ARG2 (c3 / cross-02\n                  :ARG0 t\n                  :ARG1 (b / border-01\n                        :ARG2 (c4 / country\n                              :name (n3 / name\n                                    :op1 \"Afghanistan\"))))))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100)))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\"))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG0 (c2 / country :name (n2 / name :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(p / person\n   :quant (m / multiple\n             :op1 100))",
      "(p / person\n   :ARG0 (p2 / protest-01)\n   :quant (m / multiple\n             :op1 100))",
      "(p / person\n   :ARG0 (p2 / protest-01)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Kabul\")))"
    ],
    "smus": [
      "The protesters have accused.",
      "Hundreds have been accused.",
      "The people of Kabul have accused.",
      "Iran is accused.",
      "Iran is accused of stopping.",
      "accused of stopping fuel tankers.",
      "accused of stopping tanks from crossing.",
      "accused of stopping cross-border crossing with Afghanistan.",
      "The protesters have accused Iran.",
      "Hundreds have accused Iran.",
      "Kabul people have accused Iran.",
      "The protesters have accused Iran of stopping.",
      "The protesters have accused of stopping the crossing of the border with Afghanistan.",
      "Hundreds have accused Iran of stopping.",
      "Hundreds have accused the government of stopping cross-border crossing with Afghanistan.",
      "Kabul people have accused Iran of stopping.",
      "Kabul people have accused the fuel tankers of stopping.",
      "Kabul people have accused the tanks of stopping at the crossing.",
      "Kabul people have accused of stopping crossing the border with Afghanistan.",
      "Iran is accused of stopping fuel tankers.",
      "Iran is accused of stopping tanks from crossing the border.",
      "Iran is accused of stopping the crossing of the border with Afghanistan.",
      "Protestors have accused Iran of stopping fuel tanks.",
      "Protesters have accused Iran of stopping tanks from crossing.",
      "Protesters have accused Iran of stopping the crossing of the border with Afghanistan.",
      "Hundreds of people have accused Iran of stopping.",
      "Hundreds of people have accused Iran of stopping fuel tankers.",
      "Hundreds of people have accused Iran of stopping tanks from crossing.",
      "Hundreds of people have accused Iran of stopping crossing the border with Afghanistan.",
      "Kabul people have accused Iran of stopping them.",
      "Kabul people have accused Iran of stopping fuel tankers.",
      "Kabul people have accused Iran of stopping tanks from crossing.",
      "Kabul people have accused Iran of stopping the crossing of the border with Afghanistan.",
      "Stopping fuel tankers.",
      "Stopping the tankers from crossing.",
      "Stopping cross-border crossing Afghanistan.",
      "Fuel tankers are stopping crossing the border with Afghanistan.",
      "Crossing the border with Afghanistan."
    ]
  },
  {
    "instance_id": "pyrxsum-60",
    "summary": "Some police forces are putting the public at risk by rationing forces response as forces struggle with cutbacks, the police standards watchdog has warned.",
    "summary_trees": [
      "# ::snt Some police forces are putting the public at risk by rationing forces response as forces struggle with cutbacks, the police standards watchdog has warned.\n(w / warn-01\n      :ARG0 (w2 / watchdog\n            :mod (s / standard\n                  :mod (p / police)))\n      :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                  :quant (s2 / some)\n                  :mod p)\n            :ARG1 (p2 / public)\n            :manner (r / ration-01\n                  :ARG0 f\n                  :ARG1 (t / thing\n                        :ARG2-of (r2 / respond-01\n                              :ARG0 f))\n                  :time (s3 / struggle-02\n                        :ARG0 f\n                        :ARG1 (c / cut-back-05)))))"
    ],
    "tree": [
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG1 (t / thing\n                                :ARG2 (r2 / respond-01\n                                          :ARG0 (f / force))))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG1 (c / cut-back-05)))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG1 (p2 / public)))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :mod p)))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG1 (t / thing\n                                :ARG2 (r2 / respond-01\n                                          :ARG0 (f / force))))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard\n                     :mod (p / police)))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG1 (c / cut-back-05)))))",
      "(w2 / watchdog\n    :mod (s / standard\n            :mod (p / police)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :ARG1 (p2 / public))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :ARG1 (p2 / public))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :ARG0 f\n              :ARG1 (t / thing)\n              :time (s3 / struggle-02)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :mod (p / police))\n   :manner (r / ration-01\n              :ARG0 f\n              :ARG1 (t / thing)\n              :time (s3 / struggle-02)))",
      "(e / endanger-01\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG0 (f / force)\n              :ARG1 (t / thing)\n              :time (s3 / struggle-02)))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :ARG1 (p2 / public)\n   :manner (r / ration-01\n              :ARG0 f\n              :ARG1 (t / thing)\n              :time (s3 / struggle-02)))"
    ],
    "smus": [
      "A watchdog with police standards was warned.",
      "Some forces have been warned to be in danger.",
      "Warning of dangers from forces rationing",
      "Warnings of danger by rationing the response of forces.",
      "Rationing as forces struggle is warned of danger.",
      "Rationing as cutbacks struggle is dangerous, warned.",
      "A police standards watchdog has warned that some forces are in danger.",
      "A police standards watchdog has warned of dangers to the public.",
      "A police standards watchdog has warned of dangers from forces rationing.",
      "A police standards watchdog has warned of the dangers of police forces.",
      "A police standards watchdog has warned that rationing of the forces response is dangerous.",
      "A police standards watchdog has warned of dangers of rationing as forces struggle.",
      "A police standards watchdog has warned of dangers of rationing as cutsbacks struggle.",
      "Perpetrating things while forces struggle is dangerous.",
      "Some forces are putting the public in danger.",
      "Rationing things while forces struggle is a danger to the public.",
      "Some forces endanger the public by rationing things while they struggle.",
      "Police forces are putting the public in danger by rationing things while they struggle.",
      "Rationing occurs as forces struggle.",
      "Rationing of forces response as they struggle",
      "Rationing of forces response as they struggle to cut back"
    ]
  },
  {
    "instance_id": "pyrxsum-61",
    "summary": "Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.",
    "summary_trees": [
      "# ::snt Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chris\"\n                  :op2 \"Read\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Nottinghamshire\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jake\"\n                        :op2 \"Ball\")\n                  :ARG0-of (b / bowl-01\n                        :manner (p3 / pace-01)))\n            :ARG1-of (l / lively-00)\n            :ARG1-of (f / follow-01\n                  :ARG2 (p4 / play-01\n                        :ARG0 p2\n                        :ARG3 (t2 / team\n                              :name (n4 / name\n                                    :op1 \"England\"\n                                    :op2 \"Lions\"))\n                        :time (d / date-entity\n                              :season (w / winter))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\")))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\"))))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))))))",
      "(s / say-01\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG3 (t2 / team\n                                         :name (n4 / name\n                                                   :op1 \"England\"\n                                                   :op2 \"Lions\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :ARG0 (b / bowl-01\n                               :manner (p3 / pace-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG3 (t2 / team\n                                         :name (n4 / name\n                                                   :op1 \"England\"\n                                                   :op2 \"Lions\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Chris\"\n            :op2 \"Read\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Nottinghamshire\"))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / captain)))",
      "(p / person\n   :name (n / name\n            :op1 \"Chris\"\n            :op2 \"Read\")\n   :ARG0 (h / have-org-role-91\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Nottinghamshire\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Chris\"\n            :op2 \"Read\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / captain)))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Nottinghamshire\")))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Nottinghamshire\"))\n   :ARG2 (c / captain))"
    ],
    "smus": [
      "Chris Read says --",
      "Jake Ball returns.",
      "\"A lively return,\" says",
      "Returning to following the Jake Ball play, says the man.",
      "\"The pace bowler is in return,\" says the report.",
      "Chris Read says Jake Ball is in return.",
      "\"A lively return,\" says Chris Read.",
      "Chris Read says the return is following the play of Jake Ball.",
      "Chris Read says the pace bowling is in return.",
      "Chris Read says the return will be following the England Lions' play.",
      "Chris Read says the return will be following winter play.",
      "Nottinghamshire says it is a lively return.",
      "Nottinghamshire says pace bowling is in return.",
      "Nottinghamshire says the return will be following the England Lions' play.",
      "Nottinghamshire says the return will be following winter play.",
      "The captain says the return will be following winter play.",
      "Bowling at pace.",
      "Following the Jake Ball play.",
      "Following the play of the England Lions.",
      "Following winter play.",
      "Playing for the England Lions",
      "Play in the winter.",
      "England Lions play in winter."
    ]
  },
  {
    "instance_id": "pyrxsum-62",
    "summary": "A serial robber who threatened an 18-year-old shop worker with a knife was caught after robber streak of grey hair was recognised in CCTV footage.",
    "summary_trees": [
      "# ::snt A serial robber who threatened an 18-year-old shop worker with a knife was caught after robber streak of grey hair was recognised in CCTV footage.\n(c / catch-01\n      :ARG1 (p / person\n            :ARG0-of (r / rob-01\n                  :mod (s / serial))\n            :ARG0-of (t / threaten-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (w / work-01\n                              :ARG2 (s2 / shop))\n                        :age (t2 / temporal-quantity\n                              :quant 18\n                              :unit (y / year)))\n                  :ARG2 (k / knife))\n            :ARG0-of (s3 / streak-01\n                  :ARG1 (h / hair\n                        :ARG1-of (g / gray-02))))\n      :time (a / after\n            :op1 (r2 / recognize-02\n                  :ARG1 p\n                  :location (f / footage\n                        :mod (t3 / television\n                              :mod (c2 / circuit\n                                    :ARG1-of (c3 / close-01)))))))"
    ],
    "tree": [
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (s3 / streak-01\n                      :ARG1 (h / hair\n                               :ARG1 (g / gray-02)))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18)))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :unit (y / year))))))",
      "(c / catch-01\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 (p / person))))",
      "(c / catch-01\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (s3 / streak-01\n                      :ARG1 (h / hair\n                               :ARG1 (g / gray-02))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (s3 / streak-01\n                      :ARG1 (h / hair\n                               :ARG1 (g / gray-02))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :unit (y / year)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(p / person\n   :ARG0 (r / rob-01\n            :mod (s / serial)))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18)))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop)))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year)))\n   :ARG2 (k / knife))",
      "(p2 / person\n    :ARG0 (w / work-01\n             :ARG2 (s2 / shop)))",
      "(p2 / person\n    :age (t2 / temporal-quantity\n             :quant 18))"
    ],
    "smus": [
      "Serial robbers are caught.",
      "The person who threatened the shop worker was caught.",
      "People caught with a streak of gray hair.",
      "The person who was caught was threatened with a knife.",
      "The people who were caught when the threat was made against the 18-year-old.",
      "The person who threatened a year old was caught.",
      "Catched after the person is recognized.",
      "Catched after being recognized on CCTV footage.",
      "Serial robbers are caught after they are recognized.",
      "The person who threatened the shop worker was caught after being recognized.",
      "The person who threatened the shop worker was caught after the CCTV footage was recognized.",
      "People with gray hair streaks were caught after being recognized.",
      "The streak of gray hair was caught after it was recognized on CCTV footage.",
      "The person who was threatened with a knife was caught after being recognized.",
      "The knife-threatened people were caught after the CCTV footage was recognized.",
      "The people who threatened the 18 were caught after they were recognized.",
      "The people who threatened the 18-year-old were caught after the CCTV footage was recognized.",
      "The person who threatened a year old was caught after he was recognized.",
      "The shop worker threatened.",
      "The 18-year-old was threatened.",
      "The year old was threatened.",
      "The shop worker threatened with a knife.",
      "The 18-year-old threatened with a knife.",
      "The year old threatened with a knife.",
      "Gray hair streaks.",
      "After the person is recognized.",
      "After the CCTV footage was recognized."
    ]
  },
  {
    "instance_id": "pyrxsum-63",
    "summary": "A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.",
    "summary_trees": [
      "# ::snt A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.\n(r / report-01\n      :ARG0 (m / media\n            :ARG1-of (l / local-02))\n      :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :ARG1 (f / fall-01\n                  :ARG1 m2\n                  :ARG3 (f2 / floor\n                        :ord (o / ordinal-entity\n                              :value 15)\n                        :part-of (b / building\n                              :location (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"New\"\n                                          :op2 \"Zealand\")))))))"
    ],
    "tree": [
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02)))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :part (b / building\n                                        :location (c2 / country\n                                                      :name (n2 / name\n                                                                :op1 \"New\"\n                                                                :op2 \"Zealand\")))))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :part (b / building\n                                        :location (c2 / country\n                                                      :name (n2 / name\n                                                                :op1 \"New\"\n                                                                :op2 \"Zealand\")))))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\"))))",
      "(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG1 (m2 / man)))",
      "(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :ord (o / ordinal-entity\n                              :value 15))))",
      "(s / survive-01\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :part (b / building\n                               :location (c2 / country\n                                             :name (n2 / name\n                                                       :op1 \"New\"\n                                                       :op2 \"Zealand\"))))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG1 m2))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :ord (o / ordinal-entity\n                              :value 15))))"
    ],
    "smus": [
      "Reports of a British man having survived",
      "Reports of a man having survived the fall.",
      "A report said the fall from the floor of a building in New Zealand had survived.",
      "Local media reports that a British man has survived.",
      "Local media report that the man survived the fall.",
      "Local media reports that the fall from the 15th floor has survived.",
      "Local media reports that the fall from the floor of a building in New Zealand has survived.",
      "The British man survived.",
      "The man survived the fall.",
      "The fall from the 15th floor has survived.",
      "The fall from the floor of a building in New Zealand has survived.",
      "The British man survived the fall.",
      "A British man has survived the fall from the 15th floor.",
      "A British man has survived the fall from the floor of a New Zealand building.",
      "The fall occurred on the 15th floor."
    ]
  },
  {
    "instance_id": "pyrxsum-64",
    "summary": "The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.",
    "summary_trees": [
      "# ::snt The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.\n(r / release-01\n      :ARG0 (m / military\n            :name (n / name\n                  :op1 \"Royal\"\n                  :op2 \"Navy\"))\n      :ARG1 (ii / image\n            :topic (ii2 / improve-01\n                  :ARG1 (j / jetty\n                        :location (f / facility\n                              :name (n2 / name\n                                    :op1 \"Portsmouth\"\n                                    :op2 \"Naval\"\n                                    :op3 \"Base\")))\n                  :ARG1-of (p / plan-01))))"
    ],
    "tree": [
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\")))",
      "(r / release-01\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (j / jetty\n                                  :location (f / facility\n                                               :name (n2 / name\n                                                         :op1 \"Portsmouth\"\n                                                         :op2 \"Naval\"\n                                                         :op3 \"Base\"))))))",
      "(r / release-01\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))",
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\"))\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (j / jetty\n                                  :location (f / facility\n                                               :name (n2 / name\n                                                         :op1 \"Portsmouth\"\n                                                         :op2 \"Naval\"\n                                                         :op3 \"Base\"))))))",
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\"))\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))",
      "(m / military\n   :name (n / name\n            :op1 \"Royal\"\n            :op2 \"Navy\"))"
    ],
    "smus": [
      "The Royal Navy has released.",
      "Image released of improvements to the jetty at Portsmouth Naval Base.",
      "The image was released of planned improvements.",
      "The Royal Navy has released an image of improvements to the jetty at Portsmouth Naval Base.",
      "The Royal Navy has released an image of planned improvements.",
      "Image of planned improvements"
    ]
  },
  {
    "instance_id": "pyrxsum-65",
    "summary": "China has said Japan is endangering peace in the region after China passed controversial laws expanding the role of China military abroad.",
    "summary_trees": [
      "# ::snt China has said Japan is endangering peace in the region after China passed controversial laws expanding the role of China military abroad.\n(s / say-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 \"China\"))\n      :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Japan\"))\n            :ARG1 (p / peace\n                  :location (r / region)))\n      :time (a / after\n            :op1 (p2 / pass-01\n                  :ARG0 c\n                  :ARG2 (l / law\n                        :mod (c3 / controversy)\n                        :ARG0-of (e2 / expand-01\n                              :ARG1 (r2 / role\n                                    :poss (m / military\n                                          :poss c\n                                          :location (a2 / abroad))))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\")))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\"))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region))))",
      "(s / say-01\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 (c / country :name (n / name :op1 \"China\")))))",
      "(s / say-01\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c / country :name (n / name :op1 \"China\")))))))))",
      "(s / say-01\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\"))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss c)))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 (c / country :name (n / name :op1 \"China\")))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c / country :name (n / name :op1 \"China\")))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 (c / country :name (n / name :op1 \"China\")))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c / country :name (n / name :op1 \"China\")))))))))",
      "(s / say-01\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss c)))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(c / country\n   :name (n / name\n            :op1 \"China\"))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\")))",
      "(e / endanger-01\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\"))\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(c2 / country\n    :name (n2 / name\n              :op1 \"Japan\"))",
      "(a / after\n   :op1 (p2 / pass-01\n            :ARG0 (c / country :name (n / name :op1 \"China\"))))",
      "(a / after\n   :op1 (p2 / pass-01\n            :ARG2 (l / law\n                     :mod (c3 / controversy))))",
      "(a / after\n   :op1 (p2 / pass-01\n            :ARG2 (l / law\n                     :ARG0 (e2 / expand-01\n                               :ARG1 (r2 / role\n                                         :poss (m / military\n                                                  :poss (c / country :name (n / name :op1 \"China\"))))))))",
      "(a / after\n   :op1 (p2 / pass-01\n            :ARG2 (l / law\n                     :ARG0 (e2 / expand-01\n                               :ARG1 (r2 / role\n                                         :poss (m / military\n                                                  :location (a2 / abroad)))))))",
      "(p2 / pass-01\n    :ARG2 (l / law\n             :mod (c3 / controversy)))",
      "(p2 / pass-01\n    :ARG2 (l / law\n             :ARG0 (e2 / expand-01\n                       :ARG1 (r2 / role\n                                 :poss (m / military\n                                          :poss (c / country :name (n / name :op1 \"China\")))))))",
      "(p2 / pass-01\n    :ARG2 (l / law\n             :ARG0 (e2 / expand-01\n                       :ARG1 (r2 / role\n                                 :poss (m / military\n                                          :location (a2 / abroad))))))",
      "(l / law\n   :ARG0 (e2 / expand-01\n             :ARG1 (r2 / role\n                       :poss (m / military\n                                :poss (c / country :name (n / name :op1 \"China\"))))))",
      "(l / law\n   :ARG0 (e2 / expand-01\n             :ARG1 (r2 / role\n                       :poss (m / military\n                                :location (a2 / abroad)))))",
      "(l / law\n   :mod (c3 / controversy)\n   :ARG0 (e2 / expand-01\n             :ARG1 (r2 / role\n                       :poss (m / military\n                                :poss (c / country :name (n / name :op1 \"China\"))))))",
      "(l / law\n   :mod (c3 / controversy)\n   :ARG0 (e2 / expand-01\n             :ARG1 (r2 / role\n                       :poss (m / military\n                                :location (a2 / abroad)))))"
    ],
    "smus": [
      "China has said --",
      "Japan is said to be dangerous.",
      "Peace in the region is said to be in danger.",
      "said after China passed.",
      "said after controversial laws passed.",
      "said after laws expanding the role of China's military were passed.",
      "said after laws expanding the role of the military abroad passed.",
      "China has said Japan is dangerous.",
      "China has said that the peace in the region is in danger.",
      "China said after it passed.",
      "China said after controversial laws passed.",
      "China said after laws expanding the role of its military passed.",
      "China said after laws expanding the role of the military abroad were passed.",
      "After China passed, it was said that Japan was dangerous.",
      "After controversial laws passed, Japan was said to be dangerous.",
      "Japan was said to be \"dangering\" after laws expanding the role of China's military passed.",
      "Japan was said to be \"dangering\" after laws expanding the role of the military abroad passed.",
      "Peace in the region was said to be in danger after China passed.",
      "Endangering peace in the region was said after controversial laws passed.",
      "Endangering peace in the region was said after laws expanding the role of China's military passed.",
      "Endangering peace in the region was said after laws expanding the role of the military abroad passed.",
      "After Japan passed, China had said Japan was dangerous.",
      "China has said that Japan is dangerous after controversial laws passed.",
      "China has said that Japan is dangerous after laws expanding the role of the military abroad were passed.",
      "After China passed, it has said that the peace in the region is in danger.",
      "China has said that extending the role of its military is dangerous in the region after laws extending the military's role were passed.",
      "China has said that extending the role of the military abroad is dangerous to peace in the region after laws on expanding the military abroad passed.",
      "Japan is threatening.",
      "Endangering peace in the region.",
      "Japan is endangering peace in the region.",
      "After China passed.",
      "After the controversial laws passed.",
      "After laws expanding the role of China's military were passed.",
      "After laws expanding the role of the military abroad passed...",
      "The laws passed were controversial.",
      "Laws expanding the role of China's military were passed.",
      "Laws expanding the role of the military abroad passed.",
      "Laws expanding the role of China's military",
      "laws expanding the role of the military abroad",
      "Expanding the role of China's military is one of the controversial laws.",
      "Expanding the role of the military abroad is controversial law.",
      "Expanding the role of China's military",
      "Expanding the role of the military abroad"
    ]
  },
  {
    "instance_id": "pyrxsum-66",
    "summary": "Celtic restored Celtic 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.",
    "summary_trees": [
      "# ::snt Celtic restored Celtic 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.\n(r / restore-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Celtic\"))\n      :ARG1 (l / lead-01\n            :ARG0 t\n            :ARG2 (p / point\n                  :quant 10)\n            :location (t2 / top\n                  :part-of (t3 / table)))\n      :time (a / after\n            :op1 (o / overcome-01\n                  :ARG0 t\n                  :ARG1 (t4 / team\n                        :name (n2 / name\n                              :op1 \"Inverness\"\n                              :op2 \"Cedonian\"\n                              :op3 \"Thistle\")))))"
    ],
    "tree": [
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\")))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\"))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(r / restore-01\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 (t / team :name (n / name :op1 \"Celtic\")))))",
      "(r / restore-01\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\")))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\")))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 (t / team :name (n / name :op1 \"Celtic\")))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 (t / team :name (n / name :op1 \"Celtic\")))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t)\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t)\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(l / lead-01\n   :ARG2 (p / point\n            :quant 10))",
      "(l / lead-01\n   :location (t2 / top\n                 :part (t3 / table)))"
    ],
    "smus": [
      "Celtic restored.",
      "Celtic's leadership was restored.",
      "The lead was restored to 10 points.",
      "Restored leadership at the table top.",
      "After overcoming Celtic, the team was restored.",
      "After defeating Inverness Celtic Thistle, the team was restored.",
      "Celtic restored leadership.",
      "Celtic restored a 10 point lead.",
      "Celtic restored leadership at the top of the table.",
      "After overcoming, Celtic restored.",
      "Celtic restored after defeating Inverness Celtic Thistle",
      "After overcoming, Celtic restored leadership.",
      "After defeating Inverness Celtic Thistle Celtic's leadership was restored.",
      "After overcoming Celtic, the lead was restored to 10 points.",
      "After defeating Inverness Celtic thistle, the lead was restored to 10 points.",
      "After overcoming Celtic, the table top leader was restored.",
      "After defeating Inverness Celtic Thistle, the table toppers restored their lead.",
      "After overcoming, Celtic restored their leadership.",
      "After defeating Inverness Celtic Thistle, Celtic restored their leadership.",
      "After overcoming, Celtic restored the 10 point lead.",
      "After defeating Inverness Celtic Thistle, Celtic restored a 10 point lead.",
      "After overcoming, Celtic restored the lead at the top of the table.",
      "After defeating Inverness Celtic Thistle Celtic restored the top-table lead.",
      "After defeating Inverness Celtic Thistle",
      "overcoming Inverness - Celtic Thistle"
    ]
  },
  {
    "instance_id": "pyrxsum-67",
    "summary": "England captain Sean O'Loughlin says O'Loughlin would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.",
    "summary_trees": [
      "# ::snt England captain Sean O'Loughlin says O'Loughlin would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sean\"\n                  :op2 \"O'Loughlin\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"England\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (c2 / contrast-01\n            :ARG1 (p2 / prefer-01\n                  :ARG0 p\n                  :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                              :mod (c4 / country)\n                              :ARG2 (t2 / team\n                                    :mod (n3 / nation))))\n                  :ARG2 (l / look-forward-03\n                        :ARG0 p\n                        :ARG1 (w / work-01\n                              :ARG3 (p3 / person\n                                    :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")\n                                    :mod c4\n                                    :name (n5 / name\n                                          :op1 \"Australia\")))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\")))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\"))))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG1 (w / work-01\n                                         :ARG3 (p3 / person\n                                                   :name (n4 / name\n                                                             :op1 \"Wayne\"\n                                                             :op2 \"Bennett\")))))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))",
      "(s / say-01\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG1 (w / work-01\n                                         :ARG3 (p3 / person\n                                                   :name (n5 / name\n                                                             :op1 \"Australia\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG1 (w / work-01\n                                         :ARG3 (p3 / person\n                                                   :name (n4 / name\n                                                             :op1 \"Wayne\"\n                                                             :op2 \"Bennett\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Sean\"\n            :op2 \"O'Loughlin\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"England\"))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (c / captain)))",
      "(p / person\n   :name (n / name\n            :op1 \"Sean\"\n            :op2 \"O'Loughlin\")\n   :ARG0 (h / have-org-role-91\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"England\"))))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"England\")))",
      "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"England\"))\n   :ARG2 (c / captain))",
      "(t / team\n   :name (n2 / name\n             :op1 \"England\"))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                                 :mod (c4 / country)))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG2 (l / look-forward-03\n                       :ARG1 (w / work-01\n                                :ARG3 (p3 / person\n                                          :name (n4 / name\n                                                    :op1 \"Wayne\"\n                                                    :op2 \"Bennett\"))))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                                 :ARG2 (t2 / team\n                                           :mod (n3 / nation))))))",
      "(c2 / contrast-01\n    :ARG1 (p2 / prefer-01\n              :ARG2 (l / look-forward-03\n                       :ARG1 (w / work-01\n                                :ARG3 (p3 / person\n                                          :mod (c4 / country))))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :ARG2 (t2 / team\n                                 :mod (n3 / nation)))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :mod (c4 / country)))))",
      "(p2 / prefer-01\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Australia\")))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :mod (c4 / country)))\n    :ARG2 (l / look-forward-03\n             :ARG1 (w / work-01\n                      :ARG3 (p3 / person\n                                :mod c4))))",
      "(p2 / prefer-01\n    :ARG1 (c3 / charge-08\n              :ARG1 (m / man\n                       :ARG2 (t2 / team\n                                 :mod (n3 / nation))))\n    :ARG2 (l / look-forward-03\n             :ARG0 (p / person :name (n / name :op1 \"Sean\" :op2 \"O'Loughlin\")))))"
    ],
    "smus": [
      "Sean O'Loughlin says --",
      "But Sean O'Loughlin preferred, says.",
      "But it would be preferred that the country man be in charge, says the man.",
      "But looking forward to working with Wayne Bennett, says says he prefers.",
      "But it would be preferred that the man in charge of the national team be the one, says the man.",
      "But looking forward to working with Australians, says says.",
      "But he's preferred,\" says Sean O'Loughlin.",
      "But it would be preferred that the countrymen take charge, says Sean O'Loughlin.",
      "Sean O'Loughlin says he would rather be looking forward to working with Wayne Bennett.",
      "Sean O'Loughlin says the national team's man in charge would be preferred.",
      "But England's says he would have preferred.",
      "But it would be preferred for the countrymen to take charge, says an Englishman.",
      "But it would be preferable to have a national team man in charge, says an Englishman.",
      "The captain says he would have preferred, but...",
      "The captain says the countrymen would be preferred in charge.",
      "The captain says it would be preferable to have a national team man in charge.",
      "But Sean O'Loughlin preferred...",
      "But it would be preferred that Sean O'Loughlin be looking forward.",
      "But looking forward to working with Wayne Bennett.",
      "But it would be preferred that the national team man was in charge.",
      "But preferable to looking forward to working with Australians.",
      "The country man is preferred in charge.",
      "The national team's man in charge would be preferred.",
      "Rather, Sean O'Loughlin is looking forward to.",
      "Preferably looking forward to working with Wayne Bennett.",
      "preferring looking forward to working with Australians.",
      "The country man's charge would be preferred over Sean O'Loughlin looking forward.",
      "The country man was preferred in charge, looking forward to working with Wayne Bennett.",
      "The national team's man in charge would be preferred over Sean O'Loughlin looking forward.",
      "The national team's man in charge would be preferred over looking forward to working with Wayne Bennett.",
      "The national team men would be in charge, rather than looking forward to working with the countrypeople.",
      "The national team men would be in charge, rather than looking forward to working with the Australians.",
      "Looking forward to working with Wayne Bennett.",
      "Looking forward to working with Australians.",
      "Working with Wayne Bennett.",
      "Working with Australians."
    ]
  },
  {
    "instance_id": "pyrxsum-68",
    "summary": "Promotion-chasing Stevenage were held to a by Cambridge in League Two.",
    "summary_trees": [
      "# ::snt Promotion-chasing Stevenage were held to a by Cambridge in League Two.\n(h / hold-04\n      :ARG0 (u / university\n            :name (n / name\n                  :op1 \"Cambridge\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Stevenage\")\n            :ARG0-of (c / chase-01\n                  :ARG1 (p / promote-01\n                        :ARG1 t)))\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"League\"\n                  :op2 \"Two\")))"
    ],
    "tree": [
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(u / university\n   :name (n / name\n            :op1 \"Cambridge\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Stevenage\"))",
      "(t / team\n   :ARG0 (c / chase-01\n            :ARG1 (p / promote-01\n                     :ARG1 t)))"
    ],
    "smus": [
      "Cambridge University has held.",
      "Stevenage are held.",
      "The team chasing their promotion is held.",
      "held in League Two.",
      "Cambridge has held Stevenage.",
      "Cambridge has held a team chasing promotion.",
      "Cambridge is held in the League Two.",
      "Stevenage are held in the League Two.",
      "The team chasing promotion is held in the League Two.",
      "Cambridge has held Stevenage in the League Two.",
      "Cambridge has held the promotion chasing team in the League Two.",
      "The team chasing their promotion.",
      "Stevenage are chasing promotion.",
      "chasing Stevenage promotion"
    ]
  },
  {
    "instance_id": "pyrxsum-69",
    "summary": "Yet again, we are looking at shocking pictures of a plane crash.",
    "summary_trees": [
      "# ::snt Yet again, we are looking at shocking pictures of a plane crash.\n(l / look-01\n      :ARG0 (w / we)\n      :ARG1 (p / picture\n            :topic (c / crash-01\n                  :ARG1 (p2 / plane))\n            :ARG0-of (s / shock-01))\n      :mod (a / again\n            :mod (y / yet)))"
    ],
    "tree": [
      "(l / look-01\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane)))\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01))\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane)))\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01))\n   :mod (a / again\n           :mod (y / yet)))"
    ],
    "smus": [
      "Looking at the pictures of the plane crash.",
      "Looking at the shocking pictures.",
      "Looking yet again.",
      "We are looking at the pictures of the plane crash.",
      "We're looking at shocking pictures.",
      "We are looking yet again.",
      "Looking at the pictures of the plane crash yet again.",
      "Looking at the shocking pictures yet again.",
      "Yet again, we are looking at the pictures of the plane crash.",
      "Yet again, we are looking at shocking pictures."
    ]
  },
  {
    "instance_id": "pyrxsum-70",
    "summary": "Prime Minister David Cameron will later attempt to halt the civil war in Cameron party caused by Iain Duncan Smith's resignation from the cabinet.",
    "summary_trees": [
      "# ::snt Prime Minister David Cameron will later attempt to halt the civil war in Cameron party caused by Iain Duncan Smith's resignation from the cabinet.\n(a / attempt-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Cameron\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p2 / prime))))\n      :ARG1 (h2 / halt-01\n            :ARG0 p\n            :ARG1 (w / war-01\n                  :ARG0 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Cameron\"))\n                  :mod (c / civil)\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (r / resign-01\n                              :ARG0 (p4 / person\n                                    :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\"))\n                              :ARG1 (c3 / cabinet)))))\n      :time (a2 / after))"
    ],
    "tree": [
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\")))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime)))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\"))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\"))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\"))))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p)\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\"))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\"))))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG0 p)\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG0 (p3 / political-party\n                                :name (n2 / name\n                                          :op1 \"Cameron\"))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\"))))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(p / person\n   :name (n / name\n            :op1 \"David\"\n            :op2 \"Cameron\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / minister\n                     :mod (p2 / prime))))",
      "(h / have-org-role-91\n   :ARG2 (m / minister\n            :mod (p2 / prime)))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG0 (p3 / political-party\n                       :name (n2 / name\n                                 :op1 \"Cameron\"))))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :mod (c / civil)))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG0 (p4 / person\n                                          :name (n3 / name\n                                                    :op1 \"Iain\"\n                                                    :op2 \"Duncan\"\n                                                    :op3 \"Smith\"))))))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG1 (c3 / cabinet)))))",
      "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n3 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))",
      "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG1 (c3 / cabinet))))"
    ],
    "smus": [
      "David Cameron will attempt.",
      "The Prime Minister will attempt.",
      "attempt to halt the Cameron war.",
      "attempt to halt civil war",
      "To attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will attempt to halt.",
      "David Cameron will attempt to halt the Cameron war.",
      "David Cameron will attempt to halt the civil war.",
      "David Cameron will attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "David Cameron will attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will attempt to halt.",
      "The Prime Minister will attempt to halt the Cameron war.",
      "The Prime Minister will attempt to halt the civil war.",
      "The Prime Minister will attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "The Prime Minister will attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will attempt later.",
      "The Prime Minister will later attempt.",
      "Later, David Cameron will attempt to halt.",
      "Later, attempt to halt the Cameron war.",
      "Later, attempt to halt civil war.",
      "Later, attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "Later, attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will later attempt to halt.",
      "David Cameron will later attempt to halt the Cameron war.",
      "David Cameron would later attempt to halt the civil war.",
      "David Cameron would later attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "David Cameron will later attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will later attempt to halt.",
      "The Prime Minister will later attempt to halt the Cameron war.",
      "The Prime Minister will later attempt to halt the civil war.",
      "The Prime Minister will later attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "The Prime Minister will later attempt to halt the war caused by the resignation of the cabinet.",
      "halt the Cameron war",
      "halt the civil war",
      "halt the war caused by the resignation of the cabinet.",
      "The war was caused by the resignation of Iain Duncan Smith.",
      "The war was caused by the resignation of the cabinet.",
      "Caused by the resignation of Iain Duncan Smith, it was a civil war.",
      "Caused by cabinet resignation, civil war.",
      "Caused by the resignation of Iain Duncan Smith.",
      "caused by a resignation from the cabinet."
    ]
  },
  {
    "instance_id": "pyrxsum-71",
    "summary": "The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.",
    "summary_trees": [
      "# ::snt The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.\n(s / say-01\n      :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                  :name (n / name\n                        :op1 \"US\"\n                        :op2 \"Census\")))\n      :ARG1 (c / change-01\n            :polarity -\n            :ARG1 (p / percentage\n                  :quant-of (p2 / person\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"America\"))\n                        :ARG0-of (l / live-01\n                              :manner (p3 / poor))))\n            :ARG2 (h / high-02\n                  :ARG1 p\n                  :mod (r2 / record)\n                  :time (d / date-entity\n                        :year 2010))\n            :mod (s2 / statistical)\n            :concession (e / even-as\n                  :op1 (f / fall-01\n                        :ARG1 (ii / income\n                              :mod (h2 / household))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"US\"\n                              :op2 \"Census\"))))",
      "(s / say-01\n   :ARG1 (c / change-01\n            :polarity -))",
      "(s / say-01\n   :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"US\"\n                              :op2 \"Census\")))\n   :ARG1 (c / change-01\n            :polarity -))",
      "(c / change-01\n   :ARG1 (p / percentage\n            :quant (p2 / person\n                       :ARG0 (l / live-01\n                                :manner (p3 / poor))))\n   :ARG2 (h / high-02\n            :mod (r2 / record))\n   :concession (e / even-as\n                  :op1 (f / fall-01\n                          :ARG1 (ii / income\n                                    :mod (h2 / household)))))",
      "(c / change-01\n   :ARG1 (p / percentage\n            :quant (p2 / person\n                       :ARG0 (l / live-01\n                                :manner (p3 / poor))))\n   :ARG2 (h / high-02\n            :time (d / date-entity\n                     :year 2010))\n   :concession (e / even-as\n                  :op1 (f / fall-01\n                          :ARG1 (ii / income\n                                    :mod (h2 / household)))))",
      "(p / percentage\n   :quant (p2 / person\n              :mod (c2 / country\n                       :name (n2 / name\n                                 :op1 \"America\"))))",
      "(p / percentage\n   :quant (p2 / person\n              :ARG0 (l / live-01\n                       :manner (p3 / poor))))",
      "(p2 / person\n    :mod (c2 / country\n             :name (n2 / name\n                       :op1 \"America\")))"
    ],
    "smus": [
      "According to the US Census report --",
      "Says \"no change.\"",
      "The US Census report says nothing has changed.",
      "A percentage of people living in poverty.",
      "People living in poverty.",
      "Americans living in poverty.",
      "Even as household income fell.",
      "household income fell."
    ]
  },
  {
    "instance_id": "pyrxsum-72",
    "summary": "A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.",
    "summary_trees": [
      "# ::snt A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (d / die-01\n            :ARG1 (w / woman\n                  :ARG1-of (ii / injure-01\n                        :ARG0 (a / attack-01\n                              :ARG0 (k / knifeman)\n                              :ARG1 w\n                              :location (t / train\n                                    :mod (c / country\n                                          :name (n / name\n                                                :op1 \"Switzerland\")))))\n                  :age (t2 / temporal-quantity\n                        :quant 34\n                        :unit (y / year)))\n            :location (h / hospital)))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :ARG1 (ii / injure-01\n                               :ARG0 (a / attack-01\n                                        :ARG0 (k / knifeman))))))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :location (h / hospital)))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :age (t2 / temporal-quantity\n                              :quant 34))))",
      "(s / say-01\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :ARG1 (ii / injure-01\n                               :ARG0 (a / attack-01\n                                        :ARG1 w)))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :age (t2 / temporal-quantity\n                              :quant 34))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :quant 34)))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG0 (k / knifeman))))\n   :location (h / hospital))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :quant 34))\n   :location (h / hospital))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :unit (y / year)))\n   :location (h / hospital))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG1 w)))\n   :location (h / hospital))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :location (t / train\n                                            :mod (c / country\n                                                    :name (n / name\n                                                             :op1 \"Switzerland\"))))))\n   :location (h / hospital))",
      "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :ARG0 (k / knifeman))))",
      "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :ARG1 w)))",
      "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :location (t / train\n                                   :mod (c / country\n                                           :name (n / name\n                                                    :op1 \"Switzerland\"))))))",
      "(w / woman\n   :age (t2 / temporal-quantity\n            :quant 34))",
      "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :ARG0 (k / knifeman)))\n   :age (t2 / temporal-quantity\n            :quant 34))",
      "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :ARG1 w))\n   :age (t2 / temporal-quantity\n            :quant 34))",
      "(w / woman\n   :ARG1 (ii / injure-01\n             :ARG0 (a / attack-01\n                      :location (t / train\n                                   :mod (c / country\n                                           :name (n / name\n                                                    :op1 \"Switzerland\")))))\n   :age (t2 / temporal-quantity\n            :unit (y / year)))",
      "(ii / injure-01\n    :ARG0 (a / attack-01\n             :location (t / train\n                          :mod (c / country\n                                  :name (n / name\n                                           :op1 \"Switzerland\")))))",
      "(ii / injure-01\n    :ARG0 (a / attack-01\n             :ARG1 (w :age (t2 / temporal-quantity\n                               :unit (y / year)))))"
    ],
    "smus": [
      "A woman has died in the knifeman attack, the report said.",
      "Died in hospital, say.",
      "The 34-year-old woman has died, the say.",
      "The woman, who was injured in the attack, has died, the statement said.",
      "Police say the 34-year-old woman died.",
      "The 34-year-old woman died.",
      "A woman who was injured in the knifeman attack died in hospital.",
      "The 34-year-old woman died in hospital.",
      "The year old woman died in hospital.",
      "The woman who was injured in the attack died in hospital.",
      "A woman who was injured in the attack on a Swiss train died in hospital.",
      "A woman was injured in the knifeman attack.",
      "The woman was injured in the attack.",
      "A woman was injured in the attack on a Swiss train.",
      "A 34-year-old woman was injured in the knifeman's attack.",
      "The 34-year-old woman was injured in the attack.",
      "A 34-year-old woman was injured in the attack on a Swiss train.",
      "The 34-year-old was injured in the attack.",
      "The attack occurred on a Swiss train.",
      "A knifeman attacked a Swiss train."
    ]
  },
  {
    "instance_id": "pyrxsum-73",
    "summary": "Boeing has shown off Boeing \"space bins\" that can hold 50% more luggage than existing designs.",
    "summary_trees": [
      "# ::snt Boeing has shown off Boeing \"space bins\" that can hold 50% more luggage than existing designs.\n(s / show-off-03\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Boeing\"))\n      :ARG1 (b / bin\n            :mod (s2 / space)\n            :poss c\n            :ARG0-of (h / hold-01\n                  :ARG1 (l / luggage\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (m / more\n                                    :quant (p / percentage-entity\n                                          :value 50))\n                              :ARG4 (l2 / luggage\n                                    :ARG1-of (d / design-01\n                                          :ARG1-of (e / exist-01)))))\n                  :ARG1-of (p2 / possible-01))))"
    ],
    "tree": [
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\")))",
      "(s / show-off-03\n   :ARG1 (b / bin\n            :mod (s2 / space)))",
      "(s / show-off-03\n   :ARG1 (b / bin\n            :poss (c / company :name (n / name :op1 \"Boeing\"))))",
      "(s / show-off-03\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (l / luggage\n                              :ARG1 (h2 / have-quant-91\n                                        :ARG3 (m / more\n                                                 :quant (p / percentage-entity\n                                                           :value 50)))))))",
      "(s / show-off-03\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (p2 / possible-01))))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :mod (s2 / space)))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :poss c))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (l / luggage\n                              :ARG1 (h2 / have-quant-91\n                                        :ARG3 (m / more\n                                                 :quant (p / percentage-entity\n                                                           :value 50)))))))",
      "(s / show-off-03\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :ARG0 (h / hold-01\n                     :ARG1 (p2 / possible-01))))",
      "(c / company\n   :name (n / name\n            :op1 \"Boeing\"))",
      "(b / bin\n   :ARG0 (h / hold-01\n            :ARG1 (l / luggage\n                     :ARG1 (h2 / have-quant-91\n                               :ARG3 (m / more\n                                        :quant (p / percentage-entity\n                                                  :value 50))))))",
      "(b / bin\n   :ARG0 (h / hold-01\n            :ARG1 (p2 / possible-01)))",
      "(b / bin\n   :ARG0 (h / hold-01\n            :ARG1 (l / luggage\n                     :ARG1 (h2 / have-quant-91\n                               :ARG4 (l2 / luggage\n                                         :ARG1 (d / design-01\n                                                  :ARG1 (e / exist-01)))))))",
      "(b / bin\n   :mod (s2 / space)\n   :ARG0 (h / hold-01\n            :ARG1 (l / luggage\n                     :ARG1 (h2 / have-quant-91\n                               :ARG4 (l2 / luggage\n                                         :ARG1 (d / design-01\n                                                  :ARG1 (e / exist-01)))))))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG4 (l2 / luggage\n                                :ARG1 (d / design-01\n                                         :ARG1 (e / exist-01))))))",
      "(l / luggage\n   :ARG1 (h2 / have-quant-91\n             :ARG3 (m / more\n                      :quant (p / percentage-entity\n                                :value 50))))",
      "(l / luggage\n   :ARG1 (h2 / have-quant-91\n             :ARG4 (l2 / luggage\n                       :ARG1 (d / design-01\n                                :ARG1 (e / exist-01)))))"
    ],
    "smus": [
      "Boeing has shown off.",
      "Space bins are shown off.",
      "Boeing bins were shown off.",
      "The bins were shown off to hold 50 percent more luggage.",
      "Bins to hold a possible were shown off.",
      "Boeing has shown off space bins.",
      "Boeing has shown off its bins.",
      "Boeing has shown off bins to hold 50 percent more luggage.",
      "Boeing has shown off bins to hold the possibility.",
      "There are bins to hold 50 percent more luggage.",
      "Bins to hold a possible.",
      "There are bins to hold luggage with existing designs.",
      "There are space bins to hold 50 percent more luggage.",
      "Hold 50 percent more luggage.",
      "Baggage has 50 percent more.",
      "There is a quantity of luggage with existing designs.",
      "50% more than luggage with existing designs."
    ]
  },
  {
    "instance_id": "pyrxsum-74",
    "summary": "Australia is a step closer to exporting live cattle to China, opening a new market for Australia farmers.",
    "summary_trees": [
      "# ::snt Australia is a step closer to exporting live cattle to China, opening a new market for Australia farmers.\n(c / close-06\n      :ARG1 (c2 / country\n            :name (n / name\n                  :op1 \"Australia\"))\n      :ARG2 (e / export-01\n            :ARG0 c2\n            :ARG1 (c3 / cattle\n                  :mod (l / live))\n            :ARG2 (c4 / country\n                  :name (n2 / name\n                        :op1 \"China\")))\n      :ARG1-of (h / have-degree-91\n            :ARG2 (c5 / close-10)\n            :ARG3 (m / more))\n      :ARG0-of (o / open-01\n            :ARG1 (m2 / market\n                  :ARG1-of (n3 / new-01))\n            :ARG2 (p / person\n                  :ARG0-of (f / farm-01)\n                  :mod c2)))"
    ],
    "tree": [
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\")))",
      "(c / close-06\n   :ARG0 (o / open-01\n            :ARG1 (m2 / market\n                      :ARG1 (n3 / new-01))))",
      "(c / close-06\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :ARG0 (f / farm-01))))",
      "(c / close-06\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :mod (c2 / country :name (n / name :op1 \"Australia\")))))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\"))))",
      "(c / close-06\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live)))\n   :ARG0 (o / open-01\n            :ARG1 (m2 / market\n                      :ARG1 (n3 / new-01))))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live)))\n   :ARG0 (o / open-01\n            :ARG1 (m2 / market\n                      :ARG1 (n3 / new-01))))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG1 (c3 / cattle\n                      :mod (l / live)))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :mod c2)))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\")))\n   :ARG0 (o / open-01\n            :ARG1 (m2 / market\n                      :ARG1 (n3 / new-01))))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\")))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :ARG0 (f / farm-01))))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG2 (c4 / country\n                      :name (n2 / name\n                                :op1 \"China\")))\n   :ARG0 (o / open-01\n            :ARG2 (p / person\n                     :mod c2)))",
      "(c2 / country\n    :name (n / name\n             :op1 \"Australia\"))",
      "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live)))",
      "(e / export-01\n   :ARG2 (c4 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live))\n   :ARG2 (c4 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(c4 / country\n    :name (n2 / name\n              :op1 \"China\"))"
    ],
    "smus": [
      "Exporting to China is close.",
      "Australia is close to exporting.",
      "Australia is close to exporting live cattle.",
      "Australia is close to exporting to China.",
      "Australia is closing in on opening to Australians.",
      "Opening the new market, exporting to China is close.",
      "Opening the new market, Australia is close to exporting to China.",
      "Opening to Chinese, Australia is close to exporting to China.",
      "Exporting live cattle.",
      "Exporting to China",
      "Live cattle exporting to China",
      "Opening the new market.",
      "Opening for farmers.",
      "Opening for Australians",
      "Opening a new market for farmers.",
      "Opening a new market for Australians."
    ]
  },
  {
    "instance_id": "pyrxsum-75",
    "summary": "Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.",
    "summary_trees": [
      "# ::snt Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lennox\"\n                  :op2 \"Lewis\"))\n      :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Anthony\"\n                              :op2 \"Joshua\"))\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Wladimir\"\n                              :op2 \"Klitschko\"))\n                  :ARG3 (t / title\n                        :mod (w / world)))\n            :ARG3 (t2 / time\n                  :ARG1-of (p4 / perfect-02)))\n      :ARG2 (c2 / champion\n            :mod (h / heavyweight)\n            :ARG1-of (d / dispute-01\n                  :polarity -)\n            :domain p2\n            :time (f / former)))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\")))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\")))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\")))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world)))))",
      "(s / say-01\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :domain p2))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :domain p2))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Lennox\"\n            :op2 \"Lewis\"))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\"))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Wladimir\"\n                                :op2 \"Klitschko\"))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG3 (t / title\n                     :mod (w / world))))",
      "(c / come-04\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\")))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))"
    ],
    "smus": [
      "\"Lennox Lewis says --",
      "\"It comes to a bout of Anthony Joshua,\" says the man.",
      "\"It's time for a perfect time,\" says the man.",
      "\"It comes a bout of Vladimir Klitschko,\" says the man.",
      "\"It's a bout of world title,\" says the says.",
      "Says champion of non-disputing.",
      "Anthony Joshua is a champion, says",
      "says former champion.",
      "\"It comes to the bout of Anthony Joshua,\" says Lewis Lewis.",
      "\"It's time for a perfect time,\" says Lenox Lewis.",
      "\"It comes to a bout with Vladimir Klitschko,\" says Lewis Lewis.",
      "\"It comes to a bout of world title,\" says Lenox Lewis.",
      "\"Heavyweight champion,\" says Lewis.",
      "\"Anthony Joshua is a champion,\" says Lenox Lewis.",
      "Former champion, Lewis says.",
      "Anthony Joshua comes as champion, says says",
      "Anthony Joshua bout comes, former champion says.",
      "\"It's time for a perfect time,\" says the heavyweight champion.",
      "\"It's time for perfection,\" says the champion of non-disputing.",
      "\"It's time for perfection,\" says the former champion.",
      "The bout with Vladimir Klitschko comes as the heavyweight champion says.",
      "The bout with Vladimir Klitschko comes as the champion of non-disputing.",
      "The bout for the world title comes, says the heavyweight champion.",
      "The bout for the world title comes as the undisputed champion says.",
      "Anthony Joshua is the champion, says says the bout for the world title.",
      "The bout for the world title comes, says the former champion.",
      "\"The bout with Anthony Joshua comes as the heavyweight champion,\" says Lewis Lewis.",
      "\"The Anthony Joshua bout comes as the champion of non-disputing,\" says Lenox Lewis.",
      "\"Anthony Joshua's bout comes as champion,\" says Lenox Lewis.",
      "\"The bout with Anthony Joshua comes from a former champion,\" says Lenox Lewis.",
      "\"It's time for a perfect time,\" says Lenox Lewis, the heavyweight champion.",
      "\"It's time for perfection,\" says Lenox Lewis, the champion of non-disputing.",
      "\"It's time for perfection,\" says Lenox Lewis, \"Anthony Joshua is a champion.",
      "\"It's time for perfection,\" says Lenox Lewis, a former champion.",
      "Lenox Lewis says the bout with Vladimir klitschko comes as the heavyweight champion.",
      "\"The bout with Vladimir Klitschko comes as the champion of non-disputing,\" says Lewis Lewis.",
      "\"The bout with Vladimir Klitschko comes as the champion, Anthony Joshua,\" says Lewis Lewis.",
      "Former champion Lenox Lewis says the bout with Vladimir Klitschko comes from a former champion.",
      "\"The bout for the world title comes as the undisputed champion,\" says Lenox Lewis.",
      "\"The bout for the world title comes with the champion, Anthony Joshua,\" says Lewis Lewis.",
      "It comes to an Anthony Joshua bout.",
      "It comes to a bout with Vladimir Klitschko.",
      "Anthony Joshua's bout comes at the perfect time.",
      "The bout with Vladimir Klitschko comes at the perfect time.",
      "The bout for the world title comes at the perfect time.",
      "The champion of non-disputing."
    ]
  },
  {
    "instance_id": "pyrxsum-76",
    "summary": "People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease People suffering on London transport.",
    "summary_trees": [
      "# ::snt People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease People suffering on London transport.\n(o / offer-01\n      :ARG1 (b / badge\n            :mod (o2 / offer-01\n                  :mode imperative\n                  :polite +\n                  :ARG0 (y / you)\n                  :ARG1 (s / seat)\n                  :ARG3 (p / person\n                        :ARG0-of (h / have-03\n                              :ARG1 (c / condition\n                                    :mod (h2 / health)\n                                    :ARG1-of (h3 / hide-01))))))\n      :ARG3 p\n      :purpose (b2 / bid-01\n            :ARG1 (h4 / help-01\n                  :ARG0 p\n                  :ARG1 (e / ease-02\n                        :ARG0 p\n                        :ARG1 (p2 / person\n                              :ARG0-of (s2 / suffer-01\n                                    :ARG1 (t / transport\n                                          :mod (c2 / city\n                                                :name (n / name\n                                                      :op1 \"London\")))))))))"
    ],
    "tree": [
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :mode imperative))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :polite +))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG0 (y / you)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :mod (h2 / health)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG1 (s / seat)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person\n                                   :ARG0 (h / have-03\n                                            :ARG1 (c / condition\n                                                     :ARG1 (h3 / hide-01)))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 p))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :mod (h2 / health)\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01)\n                                                :mod (h2 / health))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 p))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (p2 / person\n                                             :ARG0 (s2 / suffer-01\n                                                       :ARG1 (t / transport\n                                                                :mod (c2 / city\n                                                                         :name (n / name\n                                                                                  :op1 \"London\")))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :mod (o2 / offer-01\n                     :ARG3 (p / person\n                              :ARG0 (h / have-03\n                                       :ARG1 (c / condition\n                                                :ARG1 (h3 / hide-01))))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(b / badge\n   :mod (o2 / offer-01\n            :mode imperative))",
      "(b / badge\n   :mod (o2 / offer-01\n            :polite +))",
      "(b / badge\n   :mod (o2 / offer-01\n            :ARG0 (y / you)))",
      "(b / badge\n   :mod (o2 / offer-01\n            :ARG1 (s / seat)))",
      "(b / badge\n   :mod (o2 / offer-01\n            :ARG3 (p / person\n                     :ARG0 (h / have-03\n                              :ARG1 (c / condition\n                                       :mod (h2 / health))))))",
      "(b / badge\n   :mod (o2 / offer-01\n            :ARG3 (p / person\n                     :ARG0 (h / have-03\n                              :ARG1 (c / condition\n                                       :ARG1 (h3 / hide-01))))))",
      "(o2 / offer-01\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG1 (s / seat))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :mod (h2 / health)))))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG1 (s / seat)\n    :ARG3 (p / person\n             :ARG0 (h / have-03\n                      :ARG1 (c / condition\n                               :ARG1 (h3 / hide-01)))))",
      "(p / person\n   :ARG0 (h / have-03\n            :ARG1 (c / condition\n                     :mod (h2 / health))))",
      "(p / person\n   :ARG0 (h / have-03\n            :ARG1 (c / condition\n                     :ARG1 (h3 / hide-01))))",
      "(h / have-03\n   :ARG1 (c / condition\n            :mod (h2 / health)))",
      "(h / have-03\n   :ARG1 (c / condition\n            :ARG1 (h3 / hide-01)))"
    ],
    "smus": [
      "Offer badges please.",
      "Offer badges to offer.",
      "Offer seat offer badges.",
      "Offer badges to people with health conditions.",
      "Offer badges to people with hiding conditions.",
      "Offer as a bid to help people with health conditions.",
      "Offer to help people ease",
      "Offer in bid to help ease the suffering of London transport",
      "Offer as a bid to help people with hiding conditions.",
      "Offer offer badges in a bid to help people with health conditions.",
      "Offer offer badges in a bid to help people ease.",
      "Offer offer badges in bid to help those suffering from London transport",
      "Offer offer badges in bid to help people with hiding conditions.",
      "Offer badges of \"please offer\" in bid to help people with health conditions.",
      "Offer badges of offer please in bid to help people ease.",
      "Offer offer please badges in bid to help those suffering from London transport.",
      "Offer badges of \"please offer\" in bid to help people with hiding conditions.",
      "Offer badges to help people with health conditions.",
      "Offer badges to help people ease.",
      "Offer badges to help those suffering from London transport.",
      "Offer badges to people with hiding conditions in bid to help.",
      "Offer seat offer badges in bid to help people with health conditions.",
      "Offer seat offer badges in bid to help people ease.",
      "Offer seat offer badges in bid to help those suffering from London transport.",
      "Offer seat offer badges in bid to help people with hiding conditions.",
      "Offer badges to people with health conditions in bid to help.",
      "Offer badges to people with health conditions in a bid to help them ease.",
      "Offer badges to people with health conditions in a bid to help those suffering from London transport.",
      "Offer badges to people with hidden health conditions in a bid to help.",
      "Offer badges to people with hiding conditions in a bid to help ease the situation.",
      "Offer badges to people with hiding conditions in a bid to help those suffering from London transport.",
      "badges to offer please",
      "badges to offer",
      "badges to offer people with health conditions",
      "badges to offer people with hiding conditions",
      "Offer people with health conditions",
      "Offer people with hiding conditions",
      "Offer a seat.",
      "Offer people with health conditions.",
      "Offer people with hiding conditions.",
      "Offer a seat to people with health conditions.",
      "Offer a seat to people with hiding conditions.",
      "have health conditions.",
      "There are conditions for hiding.",
      "Hidden health conditions.",
      "Bid to help people",
      "A bid to help people ease.",
      "In a bid to help those suffering from London transport.",
      "Help people ease.",
      "Help ease the suffering of London transport",
      "To ease the suffering of London transport.",
      "People suffering from London transport.",
      "London transport is suffering."
    ]
  },
  {
    "instance_id": "pyrxsum-77",
    "summary": "Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.",
    "summary_trees": [
      "# ::snt Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.\n(s / sign-02\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Leicester\"\n                  :op2 \"Tigers\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Ellis\"\n                  :op2 \"Genge\")\n            :ARG0-of (p2 / prop-01)\n            :mod (l / loose-head)\n            :mod (t2 / team\n                  :name (n3 / name\n                        :op1 \"England\"))\n            :ARG1-of (n4 / new-02))\n      :ARG3 (t3 / team\n            :name (n5 / name\n                  :op1 \"Bristol\")\n            :ARG1-of (p3 / promote-01\n                  :ARG1-of (n6 / new-02))))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :mod (l / loose-head)))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\"))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :mod (l / loose-head))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\")))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\")))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Ellis\"\n             :op2 \"Genge\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Ellis\"\n             :op2 \"Genge\")\n   :ARG0 (p2 / prop-01))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Ellis\"\n             :op2 \"Genge\")\n   :mod (l / loose-head))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Ellis\"\n             :op2 \"Genge\")\n   :ARG1 (n4 / new-02))",
      "(p / person\n   :ARG0 (p2 / prop-01)\n   :mod (l / loose-head))"
    ],
    "smus": [
      "Leicester Tigers have signed",
      "Ellis Genge was signed.",
      "The prop was signed.",
      "The loose-headed were signed.",
      "New people signed.",
      "Leicester Tigers have signed Ellis Genge.",
      "Leicester Tigers have signed a prop.",
      "Leicester Tigers have signed a loose-headed.",
      "Leicester Tigers have signed an Englishman.",
      "Leicester Tigers have signed a new player.",
      "Leicester Tigers have signed for a new promoted team.",
      "Ellis Genge has signed on to the new promoted team.",
      "The prop has signed on to the new promoted team.",
      "The loose-headed were signed to the new promoted team.",
      "The new people have been signed onto the new promoted team.",
      "Leicester Tigers have signed Ellis Genge from Bristol.",
      "Leicester Tigers have signed Ellis Genge for a new promoted team.",
      "Leicester Tigers have signed a prop from Bristol.",
      "Leicester Tigers have signed a prop for a new promoted team.",
      "Leicester Tigers have signed a loose-head for Bristol.",
      "Leicester Tigers have signed loose-headed players for a new promoted team.",
      "Leicester Tigers have signed Englishmen from Bristol.",
      "Leicester Tigers have signed Englishmen for a new promoted team.",
      "Leicester Tigers have signed a new signing from Bristol.",
      "Leicester Tigers have signed a new player to the newly-promoted team.",
      "loose-headed Ellis Genge.",
      "loose-headed prop, Ellis Genge.",
      "New loose-headed Ellis Genge.",
      "New loose-headed prop.",
      "New prop, loose-headed Ellis Genge.",
      "New team promoted"
    ]
  },
  {
    "instance_id": "pyrxsum-78",
    "summary": "Keith Farmer followed up Farmer double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.",
    "summary_trees": [
      "# ::snt Keith Farmer followed up Farmer double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.\n(f / follow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Keith\"\n                  :op2 \"Farmer\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :ARG2 (r / race-02\n                  :mod (s / sprint)\n                  :mod (e / event\n                        :name (n2 / name\n                              :op1 \"Supersport\"))\n                  :location (c / city-district\n                        :name (n3 / name\n                              :op1 \"Snetterton\")))\n            :time (d / date-entity\n                  :weekday (s2 / saturday)))\n      :ARG4 (d2 / double-01\n            :ARG0 p\n            :location (l / location\n                  :name (n4 / name\n                        :op1 \"Knockhill\"))))"
    ],
    "tree": [
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\")))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\")))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\")))))",
      "(f / follow-01\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\")))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\")))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint)))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint)))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday)))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :time (d / date-entity\n                     :weekday (s2 / saturday)))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\"))))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\"))))\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG0 p)\n   :ARG4 (d2 / double-01\n             :location (l / location\n                          :name (n4 / name\n                                    :op1 \"Knockhill\"))))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint)))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n2 / name\n                                       :op1 \"Supersport\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(f / follow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keith\"\n                     :op2 \"Farmer\"))\n   :ARG1 (w / win-01\n            :ARG2 (r / race-02\n                     :location (c / city-district\n                                  :name (n3 / name\n                                            :op1 \"Snetterton\"))))\n   :ARG4 (d2 / double-01\n             :ARG0 p))",
      "(p / person\n   :name (n / name\n            :op1 \"Keith\"\n            :op2 \"Farmer\"))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (s / sprint)))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (e / event\n                    :name (n2 / name\n                              :op1 \"Supersport\"))))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (s / sprint))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))",
      "(w / win-01\n   :ARG2 (r / race-02\n            :mod (e / event\n                    :name (n2 / name\n                              :op1 \"Supersport\")))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))"
    ],
    "smus": [
      "Keith Farmer followed.",
      "Following Keith Farmer's victory.",
      "Following a victory in a sprint race.",
      "Following Saturday's victory.",
      "Following a victory in the Supersport race.",
      "Following a victory in the Snetterton race.",
      "followed by Keith Farmer double.",
      "followed by a double at Knockhill.",
      "Keith Farmer followed suit by winning.",
      "Keith Farmer followed by winning the sprint race.",
      "Keith Farmer followed up by winning Saturday.",
      "Keith Farmer followed up by winning the Supersport race.",
      "Keith Farmer followed suit by winning the Snetterton race.",
      "Keith Farmer followed him double.",
      "Keith Farmer followed suit by doubling at Knockhill.",
      "Keith Farmer's victory followed him double.",
      "Keith Farmer's victory followed a double at Knockhill.",
      "The sprint race followed a victory for Keith Farmer, who doubled.",
      "The sprint race followed a double at Knockhill.",
      "Saturday's victory followed a double by Keith Farmer.",
      "Saturday's victory followed a double at Knockhill.",
      "The Supersport race victory followed a double by Keith Farmer.",
      "The Supersport race victory followed a double at Knockhill.",
      "The win in Snetterton followed a double by Keith Farmer.",
      "The win in Snetterton followed a double at Knockhill.",
      "Keith Farmer followed by doubling his victory.",
      "Keith Farmer followed his victory by double at Knockhill.",
      "Keith Farmer followed by a double victory in the sprint race.",
      "Keith Farmer followed up by a double victory in the Supersport race.",
      "Keith Farmer followed by doubling his victory in the Snetterton race.",
      "winning the sprint race",
      "Winning the Supersport race",
      "Winning on Saturday.",
      "The race took place in Snetterton.",
      "The sprint race took place in Snetterton."
    ]
  },
  {
    "instance_id": "pyrxsum-79",
    "summary": "Northern Ireland striker Conor Washington counts Washington a lucky man as man prepares to head to Euro 2016.",
    "summary_trees": [
      "# ::snt Northern Ireland striker Conor Washington counts Washington a lucky man as man prepares to head to Euro 2016.\n(c / count-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Conor\"\n                  :op2 \"Washington\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Northern\"\n                              :op2 \"Ireland\"))\n                  :ARG3 (s / striker)))\n      :ARG1 p\n      :ARG2 (m / man\n            :mod (l / lucky))\n      :time (p2 / prepare-02\n            :ARG1 m)\n      :ARG2 (h2 / head-02\n            :ARG0 m\n            :ARG1 (g / game\n                  :name (n3 / name\n                        :op1 \"Euro\"\n                        :op2 \"2016\"))))"
    ],
    "tree": [
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\")))))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\")))))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))))",
      "(c / count-02\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\")))\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p)",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG2 (m / man\n            :mod (l / lucky))\n   :time (p2 / prepare-02\n             :ARG1 m))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p\n   :ARG2 (m / man\n            :mod (l / lucky)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\")\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))\n                     :ARG3 (s / striker)))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker))\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 p\n   :time (p2 / prepare-02\n             :ARG1 (m / man)))"
    ],
    "smus": [
      "Northern Ireland counts.",
      "The striker counts.",
      "The lucky man counts.",
      "When the man prepares, the count counts.",
      "Conor Washington counts himself.",
      "Conor Washington counts for Northern Ireland.",
      "Conor Washington counts as the striker.",
      "Northern Ireland's Coron Washington counts.",
      "The striker counts himself.",
      "Conor Washington counts as a lucky man.",
      "The striker counts as a lucky man.",
      "The striker counts as the man prepares.",
      "When the man prepares, Conor Washington counts.",
      "The lucky man counts as he prepares.",
      "Conor Washington counts himself a lucky man.",
      "Conor Washington counts as a lucky man for Northern Ireland.",
      "Northern Ireland's Coron Washington counts himself as a lucky man.",
      "Northern Ireland striker counts himself a lucky man.",
      "Conor Washington counts himself as a lucky man.",
      "The Northern Ireland striker counts himself a lucky man.",
      "The striker counts himself as a lucky man.",
      "When the man prepares, Conor Washington counts for Northern Ireland.",
      "When the man prepares, Conor Washington counts on the striker.",
      "Northern Ireland striker counts on him as the man prepares.",
      "The striker counts on himself as the man prepares.",
      "Conor Washington counts as a lucky man as he prepares.",
      "The striker counts as a lucky man as he prepares.",
      "When preparations begin, Conor Washington counts as a lucky man for Northern Ireland.",
      "When the striker prepares, Conor Washington counts himself as a lucky man.",
      "Northern Ireland's Coron Washington counts himself as a lucky man as he prepares.",
      "Northern Ireland striker counts himself a lucky man as he prepares.",
      "When he prepares, Conor Washington counts himself as a lucky man.",
      "Northern Ireland striker counts himself lucky man as he prepares.",
      "The striker counts himself as a lucky man as he prepares."
    ]
  },
  {
    "instance_id": "pyrxsum-80",
    "summary": "The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.",
    "summary_trees": [
      "# ::snt The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.\n(a / answer-01\n      :ARG0 (t / team\n            :ARG0-of (c / check-01\n                  :ARG1 (r / reality)))\n      :ARG1 (q / question-01\n            :ARG0 (y / you)\n            :ARG1 (ii / implicate-01\n                  :ARG2 (v / vote-01\n                        :ARG0 (c2 / country\n                              :name (n / name\n                                    :op1 \"UK\"))\n                        :ARG1 (l / leave-15\n                              :ARG0 c2\n                              :ARG1 (o / organization\n                                    :name (n2 / name\n                                          :op1 \"European\"\n                                          :op2 \"Union\")))))\n            :quant (m / more)))"
    ],
    "tree": [
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality))))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG0 (c2 / country\n                                         :name (n / name\n                                                  :op1 \"UK\"))))))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG1 (l / leave-15\n                                        :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG1 (l / leave-15\n                                        :ARG1 (o / organization\n                                                 :name (n2 / name\n                                                           :op1 \"European\"\n                                                           :op2 \"Union\")))))))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG0 (c2 / country\n                                         :name (n / name\n                                                  :op1 \"UK\"))))))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG1 (l / leave-15\n                                        :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG1 (l / leave-15\n                                        :ARG1 (o / organization\n                                                 :name (n2 / name\n                                                           :op1 \"European\"\n                                                           :op2 \"Union\")))))))",
      "(t / team\n   :ARG0 (c / check-01\n            :ARG1 (r / reality)))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG1 (o / organization\n                                        :name (n2 / name\n                                                  :op1 \"European\"\n                                                  :op2 \"Union\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG1 (o / organization\n                                        :name (n2 / name\n                                                  :op1 \"European\"\n                                                  :op2 \"Union\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :quant (m / more))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\"))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\"))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG1 (o / organization\n                                        :name (n2 / name\n                                                  :op1 \"European\"\n                                                  :op2 \"Union\")))))\n   :quant (m / more))",
      "(ii / implicate-01\n    :ARG2 (v / vote-01\n             :ARG0 (c2 / country\n                       :name (n / name\n                                :op1 \"UK\"))))"
    ],
    "smus": [
      "The reality check team answers.",
      "Answers your questions.",
      "answers more questions.",
      "Answers questions about the implications of the vote to leave the UK.",
      "Answers questions about the implications of the vote to leave the European Union.",
      "Reality check team answers your questions.",
      "Reality check team answers questions about the implications of the UK vote.",
      "Reality check team answers more questions.",
      "Reality check team answers questions about the implications of the vote to leave the UK.",
      "Reality check team answers questions about the implications of the vote to leave the European Union.",
      "Questions about the implications of the UK's vote to leave.",
      "Questions about the implications of the vote to leave the European Union.",
      "Your questions are about the implications of the vote to leave the UK.",
      "Your questions are about the implications of the vote to leave the European Union.",
      "There are more questions about the implications of the vote to leave the UK.",
      "There are more questions about the implications of the vote to leave the European Union.",
      "More questions about the implications of the vote to leave the UK.",
      "More questions about the implications of the vote to leave the European Union.",
      "The UK vote is implicated.",
      "The vote to leave the UK has implications.",
      "Implicaties of the vote to leave the European Union.",
      "Leave the European Union vote is a",
      "The UK voted to leave.",
      "The UK voted to leave the European Union.",
      "Leave the European Union."
    ]
  },
  {
    "instance_id": "pyrxsum-81",
    "summary": "Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.",
    "summary_trees": [
      "# ::snt Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.\n(r / relish-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Martyn\"\n                  :op2 \"Phillips\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (s / stadium\n                        :name (n2 / name\n                              :op1 \"Principality\"\n                              :op2 \"Stadium\"))\n                  :ARG2 (e / executive\n                        :mod (c / chief))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (h2 / host-01\n                  :ARG0 p\n                  :ARG1 (b / bout\n                        :mod (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Anthony\"\n                                    :op2 \"Joshua\")))\n                  :location (v / venue\n                        :ARG0-of (h3 / have-03\n                              :ARG1 (c3 / capacity\n                                    :quant 74500))\n                        :location (c4 / city\n                              :name (n4 / name\n                                    :op1 \"Cardiff\"))))))"
    ],
    "tree": [
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\")))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief)))))",
      "(r / relish-01\n   :ARG1 (c2 / chance-02\n             :ARG0 (p / person :name (n / name :op1 \"Martyn\" :op2 \"Phillips\")))))",
      "(r / relish-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG1 (b / bout\n                                :mod (p2 / person\n                                         :name (n3 / name\n                                                   :op1 \"Anthony\"\n                                                   :op2 \"Joshua\"))))))",
      "(r / relish-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :ARG0 (h3 / have-03\n                                              :ARG1 (c3 / capacity\n                                                        :quant 74500))))))",
      "(r / relish-01\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :location (c4 / city\n                                                  :name (n4 / name\n                                                            :op1 \"Cardiff\"))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG1 (b / bout\n                                :mod (p2 / person\n                                         :name (n3 / name\n                                                   :op1 \"Anthony\"\n                                                   :op2 \"Joshua\"))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :ARG0 (h3 / have-03\n                                              :ARG1 (c3 / capacity\n                                                        :quant 74500))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :location (c4 / city\n                                                  :name (n4 / name\n                                                            :op1 \"Cardiff\"))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG1 (b / bout\n                                :mod (p2 / person\n                                         :name (n3 / name\n                                                   :op1 \"Anthony\"\n                                                   :op2 \"Joshua\"))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG1 (b / bout\n                                :mod (p2 / person\n                                         :name (n3 / name\n                                                   :op1 \"Anthony\"\n                                                   :op2 \"Joshua\"))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :ARG0 (h3 / have-03\n                                              :ARG1 (c3 / capacity\n                                                        :quant 74500))))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :location (c4 / city\n                                                  :name (n4 / name\n                                                            :op1 \"Cardiff\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Martyn\"\n            :op2 \"Phillips\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (s / stadium\n                     :name (n2 / name\n                               :op1 \"Principality\"\n                               :op2 \"Stadium\"))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (e / executive\n                     :mod (c / chief))))",
      "(h / have-org-role-91\n   :ARG1 (s / stadium\n            :name (n2 / name\n                      :op1 \"Principality\"\n                      :op2 \"Stadium\")))"
    ],
    "smus": [
      "Martyn Phillips will relish.",
      "The chief executive would relish.",
      "relish the chance for Martyn Phillips.",
      "relish the chance to host an Anthony Joshua bout.",
      "relish the chance to host at a venue with a capacity of 74500.",
      "relish the chance to host at a venue in Cardiff.",
      "Martyn Phillips will relish the chance.",
      "Martyn Phillips would relish the chance to host.",
      "Martyn Phillips will relish the chance to host an Anthony Joshua bout.",
      "Martyn Phillips would relish the chance to host at a venue with a capacity of 74500.",
      "Martyn Phillips would relish the chance to host at a venue in Cardiff.",
      "The Prince Stadium people will relish the chance to host.",
      "The Prince Stadium people will relish the chance to host an Anthony Joshua bout.",
      "The chief executive would relish the chance.",
      "The chief executive would relish the chance to host.",
      "The chief executive would relish the chance to host an Anthony Joshua bout.",
      "The chief executive would relish the chance to host at a venue with a capacity of 74500.",
      "The chief executive would relish the chance to host at a venue in Cardiff.",
      "There's a chance to host an Anthony Joshua bout.",
      "A chance to host at a venue with a capacity of 74500.",
      "A chance to host at a venue in Cardiff.",
      "The venue has a capacity of 74500 in Cardiff."
    ]
  },
  {
    "instance_id": "pyrxsum-82",
    "summary": "Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.",
    "summary_trees": [
      "# ::snt Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.\n(r / rise-01\n      :ARG1 (ii / income\n            :mod (n / net)\n            :poss (c / company\n                  :name (n2 / name\n                        :op1 \"Google\")))\n      :ARG2 (p / percentage-entity\n            :value 17)\n      :ARG4 (m / monetary-quantity\n            :quant 3393000000000\n            :unit (d / dollar))\n      :time (d2 / date-entity\n            :month 6)\n      :time (q / quarter\n            :mod (l / last))\n      :ARG1-of (b / boost-01\n            :ARG0 (r2 / rise-01\n                  :ARG1 (r3 / revenue\n                        :poss c)\n                  :ARG2 (p2 / percentage-entity\n                        :value 11)\n                  :ARG4 (m2 / monetary-quantity\n                        :quant 170000000000\n                        :unit (d3 / dollar)))))"
    ],
    "tree": [
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\"))))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar))\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar))\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000)\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar))\n   :time (d2 / date-entity\n             :month 6))"
    ],
    "smus": [
      "Net income rose.",
      "The rise occurred in June.",
      "Net income rose 17%.",
      "Google's income rose 17%.",
      "Net income rose by $$.",
      "Google's income is going up by $$.",
      "Net income rose in June.",
      "Google's income rose in June.",
      "Net income rose 17% to $.",
      "Google's income rose 17% to $.",
      "Net income rose 17% in June.",
      "Google's income rose 17% in June.",
      "In June, net income rose by $.",
      "Google's income rose by $$ in June.",
      "In June, net income rose 17% to $.",
      "Google's revenue rise has boosted.",
      "A 11% rise was boosted.",
      "The rise of 17 billion monetized dollars has boosted.",
      "Google's revenues have seen a rise.",
      "Google's revenues rose 11%.",
      "Google's revenues rose by 17 billion dollars.",
      "Google's revenues rose 11% to $."
    ]
  },
  {
    "instance_id": "pyrxsum-83",
    "summary": "Pregnant women should visit countries with a risk of malaria only if experts trip is essential, experts are warning.",
    "summary_trees": [
      "# ::snt Pregnant women should visit countries with a risk of malaria only if experts trip is essential, experts are warning.\n(w / warn-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01))\n      :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                  :ARG0 (w2 / woman\n                        :ARG1-of (ii / impregnate-01))\n                  :ARG1 (c / country\n                        :ARG0-of (r2 / risk-01\n                              :ARG2 (m / malaria))))\n            :condition (e2 / essential\n                  :domain (t / trip-03\n                        :ARG0 (p2 / person\n                              :ARG1-of (e3 / expert-01)))\n                  :mod (o / only))))"
    ],
    "tree": [
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01)))",
      "(w / warn-01\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :domain (t / trip-03\n                                      :ARG0 (p2 / person\n                                                :ARG1 (e3 / expert-01))))))",
      "(w / warn-01\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :mod (o / only))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :ARG0 (w2 / woman\n                               :ARG1 (ii / impregnate-01)))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :domain (t / trip-03\n                                      :ARG0 (p2 / person\n                                                :ARG1 (e3 / expert-01))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :condition (e2 / essential\n                           :mod (o / only))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG0 (w2 / woman\n                      :ARG1 (ii / impregnate-01))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG1 (c / country\n                     :ARG0 (r2 / risk-01\n                               :ARG2 (m / malaria)))))",
      "(r / recommend-01\n   :condition (e2 / essential\n                  :domain (t / trip-03\n                             :ARG0 (p2 / person\n                                       :ARG1 (e3 / expert-01)))))",
      "(r / recommend-01\n   :condition (e2 / essential\n                  :mod (o / only)))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG0 (w2 / woman\n                      :ARG1 (ii / impregnate-01)))\n   :condition (e2 / essential\n                  :domain (t / trip-03\n                             :ARG0 (p2 / person\n                                       :ARG1 (e3 / expert-01)))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG0 (w2 / woman\n                      :ARG1 (ii / impregnate-01)))\n   :condition (e2 / essential\n                  :mod (o / only)))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG1 (c / country\n                     :ARG0 (r2 / risk-01\n                               :ARG2 (m / malaria))))\n   :condition (e2 / essential\n                  :mod (o / only)))"
    ],
    "smus": [
      "Experts are warning.",
      "Warning: If trips are essential for experts, they should be.",
      "Warning: Only if essential.",
      "Experts are warning pregnant women should visit.",
      "Experts are warning that if trips are essential, experts should.",
      "Experts are warning that only if essential should it happen.",
      "Women who are pregnant should visit.",
      "Countries at risk of malaria should be visited.",
      "Women who are pregnant should visit if experts trip is essential.",
      "Women who are pregnant should visit only if essential.",
      "If experts trip is essential, countries at risk of malaria should be visited.",
      "Only if essential should countries at risk of malaria be visited.",
      "Visit countries at risk of malaria"
    ]
  },
  {
    "instance_id": "pyrxsum-84",
    "summary": "In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.",
    "summary_trees": [
      "# ::snt In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.\n(r / replace-01\n      :ARG1 (t / textbook\n            :mod (d / dusty)\n            :mod (f / fashion\n                  :mod (o / old)))\n      :ARG2 (a / and\n            :op1 (t2 / tablet)\n            :op2 (c / computer)\n            :op3 (p / phone\n                  :ARG1-of (m / mobile-02)))\n      :manner (g / gradual)\n      :location (s / school\n            :location (c2 / continent\n                  :name (n / name\n                        :op1 \"Africa\"))))"
    ],
    "tree": [
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old))))",
      "(r / replace-01\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG2 (c / computer)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG2 (c / computer)\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer)\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))"
    ],
    "smus": [
      "The dusty textbooks were replaced.",
      "The old-fashioned textbooks were replaced.",
      "replaced by mobile phones",
      "Replaced in African schools.",
      "Dusty textbooks replaced by tablets.",
      "Dusty textbooks replaced by computers.",
      "Dusty textbooks replaced by mobile phones.",
      "Old-fashion textbooks are replaced with tablets.",
      "Old-fashioned textbooks were replaced by computers.",
      "Old-fashioned textbooks are replaced by mobile phones.",
      "Dusty textbooks are gradually being replaced.",
      "Old-fashioned textbooks are gradually being replaced.",
      "Old-fashioned textbooks have been replaced in African schools.",
      "Computers are replaced in African schools.",
      "In African schools, the replacements are gradually being made.",
      "Dusty textbooks are gradually replaced by tablets.",
      "Dusty textbooks are gradually replaced by computers.",
      "Dusty textbooks are gradually replaced by mobile phones.",
      "Old-fashioned textbooks are gradually being replaced by tablets.",
      "Old-fashioned textbooks are gradually being replaced by computers.",
      "Old-fashioned textbooks are gradually being replaced by mobile phones.",
      "Dusty textbooks are replaced with tablets in African schools.",
      "Dusty textbooks were replaced with computers in African schools.",
      "Dusty textbooks are replaced with mobile phones in African schools.",
      "In African schools, old-fashioned textbooks were replaced with tablets.",
      "In African schools, old-fashioned textbooks were replaced with computers.",
      "In African schools, old-fashioned textbooks were replaced with mobile phones.",
      "Dusty textbooks are gradually being replaced in African schools.",
      "The old-fashioned textbooks are gradually being replaced in African schools.",
      "Computers are gradually being replaced in African schools.",
      "Dusty textbooks are gradually replaced by tablets in African schools.",
      "Dusty textbooks are gradually replaced by computers in African schools.",
      "Dusty textbooks are gradually replaced by mobile phones in African schools.",
      "In African schools, old-fashioned textbooks are gradually replaced with tablets.",
      "In African schools, old-fashioned textbooks were gradually replaced with computers.",
      "In African schools, old-fashioned textbooks were gradually replaced with mobile phones."
    ]
  },
  {
    "instance_id": "pyrxsum-85",
    "summary": "More than half of Scots have run out of money before pay day, according to a new report.",
    "summary_trees": [
      "# ::snt More than half of Scots have run out of money before pay day, according to a new report.\n(s / say-01\n      :ARG0 (r / report\n            :ARG1-of (n / new-01))\n      :ARG1 (r2 / run-out-05\n            :ARG1 (m / money)\n            :ARG2 (p / person\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"Scotland\"))\n                  :quant (m2 / more-than\n                        :op1 \"1/2\"))\n            :time (b / before\n                  :op1 (d / day\n                        :time-of (p2 / pay-01)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01)))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :mod (c / country\n                              :name (n2 / name\n                                        :op1 \"Scotland\")))))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :time (b / before\n                      :op1 (d / day\n                              :time (p2 / pay-01)))))",
      "(s / say-01\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :mod (c / country\n                              :name (n2 / name\n                                        :op1 \"Scotland\")))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :time (b / before\n                      :op1 (d / day\n                              :time (p2 / pay-01)))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(r2 / run-out-05\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\")))\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))",
      "(r2 / run-out-05\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\"))\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))"
    ],
    "smus": [
      "According to the new report --",
      "Run out of money.",
      "The Scots are running out.",
      "ran out before the pay day.",
      "The new report said the money had run out.",
      "The new report said the Scots had run out.",
      "The new report said the run-out was before the day of pay.",
      "More than half have run out, according to the new report.",
      "More than half have run out.",
      "Run out before the pay day.",
      "The Scots are running out of money.",
      "More than half ran out of money.",
      "ran out of money before the pay day.",
      "The Scots ran out before the pay day.",
      "More than half ran out before the day of pay.",
      "The scottish people ran out of money before the day of pay.",
      "More than half ran out of money before the day of the pay."
    ]
  },
  {
    "instance_id": "pyrxsum-86",
    "summary": "The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give group control of an important supply line with the provincial capital Lashkar Gah",
    "summary_trees": [
      "# ::snt The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give group control of an important supply line with the provincial capital Lashkar Gah\n(a / and\n      :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                  :ARG0 (c2 / criminal-organization\n                        :name (n / name\n                              :op1 \"Taliban\"))\n                  :ARG1 (c3 / city\n                        :name (n2 / name\n                              :op1 \"Sangin\")\n                        :ARG1-of (l / locate-01\n                              :manner (s / strategic))\n                        :ARG1-of (c4 / consider-02\n                              :ARG2 (b / battlefield\n                                    :location (c5 / country\n                                          :name (n3 / name\n                                                :op1 \"Afghanistan\")\n                                          :part (n4 / north))\n                                    :beneficiary (a2 / and\n                                          :op1 (t / troop\n                                                :mod (c6 / country\n                                                      :name (n5 / name\n                                                            :op1 \"United\"\n                                                            :op2 \"States\")))\n                                          :op2 (t2 / troop\n                                                :mod (c7 / country\n                                                      :name (n6 / name\n                                                            :op1 \"Britain\"))))\n                                    :ARG1-of (h / have-degree-91\n                                          :ARG2 (k / kill-01\n                                                :ARG0 b)\n                                          :ARG3 (m / most)))\n                              :time (o / once))))\n            :ARG1 (m2 / mobility\n                  :poss c2\n                  :location n4))\n      :op2 (g / give-01\n            :ARG0 c\n            :ARG1 (c8 / control-01\n                  :ARG0 c2\n                  :ARG1 (l2 / line\n                        :ARG1-of (ii2 / important-01)\n                        :ARG3-of (s2 / supply-01\n                              :ARG2 (c9 / city\n                                    :name (n7 / name\n                                          :op1 \"Lashkar\"\n                                          :op2 \"Gah\")\n                                    :ARG0-of (h2 / have-org-role-91\n                                          :ARG1 (p / province\n                                                :ARG2 (c10 / capital))))))\n                  :ARG2 c2)))"
    ],
    "tree": [
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\")))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG0 (c2 / criminal-organization\n                              :name (n / name\n                                       :op1 \"Taliban\")))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :name (n2 / name\n                                        :op1 \"Sangin\")))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :location (c5 / country\n                                                               :name (n3 / name\n                                                                         :op1 \"Afghanistan\"))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :time (o / once))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :beneficiary (t / troop\n                                                                 :mod (c6 / country\n                                                                          :name (n5 / name\n                                                                                    :op1 \"United\"\n                                                                                    :op2 \"States\")))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :ARG1 (h / have-degree-91\n                                                          :ARG2 (k / kill-01\n                                                                   :ARG0 b))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :location (c5 / country\n                                                               :part (n4 / north))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :beneficiary (t2 / troop\n                                                                  :mod (c7 / country\n                                                                           :name (n6 / name\n                                                                                     :op1 \"Britain\")))))))))",
      "(a / and\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :ARG1 (h / have-degree-91\n                                                          :ARG3 (m / most))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 c2)))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG0 c2)))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 c2)))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :name (n2 / name\n                                        :op1 \"Sangin\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 c2)))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (l / locate-01\n                                       :manner (s / strategic))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :location (c5 / country\n                                                               :name (n3 / name\n                                                                         :op1 \"Afghanistan\"))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :time (o / once))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :beneficiary (t / troop\n                                                                 :mod (c6 / country\n                                                                          :name (n5 / name\n                                                                                    :op1 \"United\"\n                                                                                    :op2 \"States\")))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :ARG1 (h / have-degree-91\n                                                          :ARG2 (k / kill-01\n                                                                   :ARG0 b))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :location (c5 / country\n                                                               :part (n4 / north))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :beneficiary (t2 / troop\n                                                                  :mod (c7 / country\n                                                                           :name (n6 / name\n                                                                                     :op1 \"Britain\")))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :poss (c2 / criminal-organization\n                                :name (n / name\n                                         :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :ARG1 (h / have-degree-91\n                                                          :ARG3 (m / most))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :name (n2 / name\n                                         :op1 \"Sangin\")\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG0 (c2 / criminal-organization\n                              :name (n / name\n                                       :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :name (n2 / name\n                                        :op1 \"Sangin\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (l / locate-01\n                                       :manner (s / strategic))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :location (c5 / country\n                                                               :name (n3 / name\n                                                                         :op1 \"Afghanistan\"))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :time (o / once))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :beneficiary (t / troop\n                                                                 :mod (c6 / country\n                                                                          :name (n5 / name\n                                                                                    :op1 \"United\"\n                                                                                    :op2 \"States\")))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :ARG1 (h / have-degree-91\n                                                          :ARG2 (k / kill-01\n                                                                   :ARG0 b))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :location (c5 / country\n                                                               :part n4)))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG1 (m2 / mobility\n                      :location (n4 / north)))\n   :op2 (g / give-01\n           :ARG0 (c / capture-01\n                    :ARG1 (c3 / city\n                              :ARG1 (c4 / consider-02\n                                        :ARG2 (b / battlefield\n                                                 :ARG1 (h / have-degree-91\n                                                          :ARG3 (m / most))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic))\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\"))))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\"))))\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\"))\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\"))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\"))\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\"))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :time (o / once)\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\")))))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\")))))\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\")))\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\")))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\")))\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\")))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b))))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b))))\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b))\n                                                  :location (c5 / country\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b))\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b))\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))))\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)\n                                                                :name (n3 / name\n                                                                          :op1 \"Afghanistan\")))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))\n                                                  :beneficiary (t / troop\n                                                                  :mod (c6 / country\n                                                                           :name (n5 / name\n                                                                                     :op1 \"United\"\n                                                                                     :op2 \"States\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :location (c5 / country\n                                                                :part (n4 / north))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\")))))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\")))))\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :name (n7 / name\n                                                             :op1 \"Lashkar\"\n                                                             :op2 \"Gah\")))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\")))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG2 (k / kill-01\n                                                                    :ARG0 b)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\")))\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\"))))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :beneficiary (t2 / troop\n                                                                   :mod (c7 / country\n                                                                            :name (n6 / name\n                                                                                      :op1 \"Britain\")))\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG0 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most))))\n                               :name (n2 / name\n                                         :op1 \"Sangin\"))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG1 (ii2 / important-01)))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG2 (c2 / criminal-organization\n                               :name (n / name\n                                        :op1 \"Taliban\")))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most))))\n                               :ARG1 (l / locate-01\n                                        :manner (s / strategic)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))\n                                         :time (o / once)))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG1 (c8 / control-01\n                     :ARG1 (l2 / line\n                               :ARG3 (s2 / supply-01\n                                         :ARG2 (c9 / city\n                                                   :ARG0 (h2 / have-org-role-91\n                                                             :ARG1 (p / province\n                                                                      :ARG2 (c10 / capital)))))))))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most))\n                                                  :location (c5 / country\n                                                                :part (n4 / north)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(a / and\n   :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                     :ARG1 (c3 / city\n                               :ARG1 (c4 / consider-02\n                                         :ARG2 (b / battlefield\n                                                  :ARG1 (h / have-degree-91\n                                                           :ARG3 (m / most)))))))\n   :op2 (g / give-01\n           :ARG0 c))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :name (n3 / name\n                                                                  :op1 \"Afghanistan\")))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once)))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t / troop\n                                                          :mod (c6 / country\n                                                                   :name (n5 / name\n                                                                             :op1 \"United\"\n                                                                             :op2 \"States\"))))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG2 (k / kill-01\n                                                            :ARG0 b)))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north)))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t2 / troop\n                                                           :mod (c7 / country\n                                                                    :name (n6 / name\n                                                                              :op1 \"Britain\"))))))))",
      "(ii / increase-01\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\")))\n    :ARG1 (m2 / mobility\n              :poss c2))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG0 (c2 / criminal-organization\n                       :name (n / name\n                                :op1 \"Taliban\")))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :name (n3 / name\n                                                                  :op1 \"Afghanistan\"))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :name (n3 / name\n                                                                  :op1 \"Afghanistan\"))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :time (o / once))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t / troop\n                                                          :mod (c6 / country\n                                                                   :name (n5 / name\n                                                                             :op1 \"United\"\n                                                                             :op2 \"States\")))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t / troop\n                                                          :mod (c6 / country\n                                                                   :name (n5 / name\n                                                                             :op1 \"United\"\n                                                                             :op2 \"States\")))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG2 (k / kill-01\n                                                            :ARG0 b))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG2 (k / kill-01\n                                                            :ARG0 b))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north))))))\n    :ARG1 (m2 / mobility\n              :location n4))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t2 / troop\n                                                           :mod (c7 / country\n                                                                    :name (n6 / name\n                                                                              :op1 \"Britain\")))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG3 (m / most))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG3 (m / most))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\")))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :name (n2 / name\n                       :op1 \"Sangin\")))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :name (n3 / name\n                                                        :op1 \"Afghanistan\"))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :time (o / once))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t / troop\n                                                :mod (c6 / country\n                                                         :name (n5 / name\n                                                                   :op1 \"United\"\n                                                                   :op2 \"States\")))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG2 (k / kill-01\n                                                  :ARG0 b))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :part (n4 / north))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t2 / troop\n                                                 :mod (c7 / country\n                                                          :name (n6 / name\n                                                                    :op1 \"Britain\")))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :name (n2 / name\n                       :op1 \"Sangin\")))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (l / locate-01\n                      :manner (s / strategic))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :name (n3 / name\n                                                        :op1 \"Afghanistan\"))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :time (o / once))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t / troop\n                                                :mod (c6 / country\n                                                         :name (n5 / name\n                                                                   :op1 \"United\"\n                                                                   :op2 \"States\")))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG2 (k / kill-01\n                                                  :ARG0 b))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(c2 / criminal-organization\n    :name (n / name\n             :op1 \"Taliban\"))",
      "(c3 / city\n    :name (n2 / name\n              :op1 \"Sangin\"))",
      "(c3 / city\n    :ARG1 (l / locate-01\n             :manner (s / strategic)))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :location (c5 / country\n                           :name (n3 / name\n                                     :op1 \"Afghanistan\"))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :beneficiary (t / troop\n                             :mod (c6 / country\n                                      :name (n5 / name\n                                                :op1 \"United\"\n                                                :op2 \"States\")))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :location (c5 / country\n                           :part (n4 / north))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :ARG1 (h / have-degree-91\n                      :ARG3 (m / most))))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :location (c5 / country\n                           :name (n3 / name\n                                     :op1 \"Afghanistan\")))\n    :time (o / once))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :beneficiary (t / troop\n                             :mod (c6 / country\n                                      :name (n5 / name\n                                                :op1 \"United\"\n                                                :op2 \"States\"))))\n    :time (o / once))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :ARG1 (h / have-degree-91\n                      :ARG2 (k / kill-01\n                               :ARG0 b)))\n    :time (o / once))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :location (c5 / country\n                           :part (n4 / north)))\n    :time (o / once))",
      "(c4 / consider-02\n    :ARG2 (b / battlefield\n             :ARG1 (h / have-degree-91\n                      :ARG3 (m / most)))\n    :time (o / once))"
    ],
    "smus": [
      "And the capture by the Taliban would increase.",
      "and increase the mobility of the Taliban.",
      "And the capture of Sangin would increase.",
      "and increase mobility in the north.",
      "And capture of a city considered a battlefield for British troops would increase.",
      "And capture of the city considered the most battlefield would increase.",
      "And the Taliban's capture would give.",
      "and give Taliban control.",
      "And the capture of Sangin would give.",
      "And give control over the important line.",
      "and give control to the Taliban.",
      "And capture of a city considered a battlefield in Afghanistan would give.",
      "And give control of the supply line to Lashkar Gah.",
      "And the capture of a city once considered would give.",
      "And capture of a city considered a battlefield for American troops would give.",
      "And capture of a city considered a deadly battlefield would give.",
      "And give control of the supply line to the provincial capital.",
      "And capture of a city considered a battlefield in the northern country would give.",
      "And capture of a city considered a battlefield for British troops would give.",
      "And capture of a city considered the most battlefield would give.",
      "The Taliban's capture would increase and give.",
      "The Taliban's capture would increase and give them control.",
      "The Taliban's capture of Sangin would increase and give.",
      "The Taliban capture would increase and give control of the important line.",
      "The Taliban's capture of strategically located cities would increase and give.",
      "The Taliban's capture of a city considered a battlefield in Afghanistan would increase and give.",
      "The Taliban capture would increase and give control of the supply line to Lashkar Gah.",
      "The Taliban's capture of what once was considered a city would increase and give.",
      "The Taliban's capture of a city considered a battlefield for American troops would increase and give.",
      "The Taliban's capture of cities considered a deadly battlefield would increase and give.",
      "The capture by the Taliban would increase and give control of the supply line to the provincial capital.",
      "The capture of a city considered a battlefield in northern country by the Taliban would increase and give.",
      "The capture of a city considered a battlefield for British troops by the Taliban would increase and give.",
      "The Taliban's capture of the city considered the most battlefield would increase and give.",
      "Increase the mobility of the Taliban and give the Taliban a capture.",
      "Increase the mobility of the Taliban and give them control.",
      "Increase the Taliban's mobility and give way to Sangin's capture.",
      "Increase the Taliban's mobility and give control of the important line.",
      "Increase the Taliban's mobility and give a strategically located city a capture.",
      "Increase the Taliban's mobility and give the capture of a city considered a battlefield in Afghanistan.",
      "Increase the Taliban's mobility and give control of the supply line to Lashkar Gah.",
      "Increase the Taliban's mobility and give a city once considered a \"capture\"",
      "Increase the Taliban's mobility and give the capture of a city considered a battlefield for American troops.",
      "Increase the Taliban's mobility and give capture of cities considered a deadly battlefield.",
      "Increase the Taliban's mobility and give control of the supply line to the provincial capital.",
      "Increase the Taliban's mobility and give the capture of a city considered a battlefield in northern country.",
      "Increase the Taliban's mobility and give the capture of a city considered a battlefield for British troops.",
      "Increase the Taliban's mobility and give capture of the city considered the most battlefield.",
      "Sangin's capture by the Taliban would increase and give.",
      "Capture Sangin would increase and give the Taliban control.",
      "Capture Sangin would increase and give.",
      "Capture Sangin would increase and give control of the important line.",
      "Capture Sangin would increase and give control to the Taliban.",
      "Capture of strategically located Sangin would increase and give.",
      "Capture of Sangin, considered a battlefield in Afghanistan, would increase and give.",
      "Capture Sangin would increase and give control of the supply line to Lashkar Gah.",
      "Capture Sangin would increase and give consideration to the battlefield for American troops.",
      "Capture Sangin, considered a deadly battlefield, would increase and give.",
      "Capture Sangin would increase and give control of the supply line to the provincial capital.",
      "Capture of Sangin would increase and give the city a considered a battlefield in the northern country.",
      "Capture of Sangin, considered the most battlefield, would increase and give.",
      "Increase mobility in the north and give to Taliban capture.",
      "Increase mobility in the north and give Taliban control.",
      "Increase mobility in the north and give control of the important line.",
      "Increase mobility in the north and give control to the Taliban.",
      "Increase mobility in the north and give a city a strategic location.",
      "Increase mobility in the north and give capture of cities considered a battlefield in Afghanistan.",
      "Increase mobility in the north and give control of the supply line to Lashkar Gah.",
      "Increase mobility in the north and give a city once considered a capture.",
      "Increase the mobility in the north and give the capture of a city considered a battlefield for American troops.",
      "Increase mobility in the north and give capture of cities considered a deadly battlefield.",
      "Increase mobility in the north and give control of the supply line to the provincial capital.",
      "Increase mobility in the north and give the capture of a city considered a battlefield in the north.",
      "Increase mobility in the north and give the capture of a city considered a battlefield for British troops.",
      "Capture strategically located cities by the Taliban would increase and give.",
      "Capture strategically located cities would increase and give the Taliban control.",
      "Capture the strategically located Sangin would increase and give.",
      "Capture strategically located cities would increase and give control of the important line.",
      "Capture strategically located cities would increase and give control to the Taliban.",
      "Capture strategically located cities will increase and give.",
      "Capture strategically located cities that are considered a battlefield in Afghanistan would increase and give.",
      "Capture strategically located cities would increase and give control of the supply line to Lashkar Gah.",
      "Capture strategically located cities once considered will increase and give.",
      "Capture strategically located cities would increase and give consideration to the battlefield for American troops.",
      "Capture strategically located cities that are considered a deadly battlefield would increase and give.",
      "Capture strategically located cities would increase and give control of the supply line to the provincial capital.",
      "Capture strategically located cities that are considered a battlefield in the north will increase and give.",
      "Capture strategically located cities that are considered battlefields for British troops would increase and give.",
      "Capture strategically located cities that are considered the most battlefields will increase and give.",
      "Capture of cities considered a battlefield in Afghanistan by the Taliban would increase and give.",
      "Capture of cities considered a battlefield in Afghanistan would increase and give Taliban control.",
      "Capture of cities considered a battlefield in Afghanistan would increase and give control of an important line.",
      "Capture of cities considered a battlefield in Afghanistan would increase and give control to the Taliban.",
      "Capture of cities considered strategically located on Afghanistan's battlefield would increase and give.",
      "Capture of cities considered a battlefield in Afghanistan would increase and give.",
      "Capture of cities considered a battlefield in Afghanistan would increase and give control of the supply line to Lashkar Gah.",
      "Capture of a city once considered a battlefield in Afghanistan would increase and give.",
      "Capture of a city considered a battlefield for American troops in Afghanistan would increase and give.",
      "Capture of cities considered a deadly battlefield in Afghanistan would increase and give.",
      "Capture of cities considered a battlefield in Afghanistan would increase and give control of the supply line to the provincial capital.",
      "Capture of a city considered a battlefield in northern Afghanistan would increase and give.",
      "Capture of a city considered a battlefield in Afghanistan for British troops would increase and give.",
      "Capture the cities considered the most battlefield in Afghanistan would increase and give.",
      "Capture of what once was considered a city by the Taliban would increase and give.",
      "Capture of what once was considered a city would increase and give the Taliban control.",
      "Capture the once considered Sangin would increase and give.",
      "Capture of what once was considered a city would increase and give control to the Taliban.",
      "Capture a city once considered strategically located would increase and give.",
      "Capture of cities once considered a battlefield in Afghanistan would increase and give.",
      "Capture of what once was considered a city would increase and give.",
      "Capture of a city once considered a battlefield for American troops would increase and give.",
      "Capture a city once considered a deadly battlefield would increase and give.",
      "Capture of a city once considered a battlefield in the north would increase and give.",
      "Capture of a city once considered a battlefield for British troops would increase and give.",
      "Capture the cities once considered the most battlefield would increase and give.",
      "Capture of cities considered a battlefield for American troops by the Taliban would increase and give.",
      "Capture of cities considered a battlefield for American troops would increase and give Taliban control.",
      "Capture of Sangin, considered a battlefield for American troops, would increase and give.",
      "Capture of cities considered a battlefield for American troops would increase and give control of an important line.",
      "Capture of cities considered a battlefield for American troops would increase and give control to the Taliban.",
      "Capture of cities considered strategically located as battlefields for American troops would increase and give.",
      "Capture of cities considered a battlefield for American troops in Afghanistan would increase and give.",
      "Capture of the city considered a battlefield for American troops would increase and give control of the supply line to Lashkar Gah.",
      "Capture of cities considered a battlefield for American troops would increase and give.",
      "Capture of a city considered a killing battlefield for American troops would increase and give.",
      "Capture of cities considered battlefields for American troops would increase and give control of the supply line to the capital city of the province.",
      "Capture of a city considered a battlefield for American troops in the north would increase and give.",
      "Capture of the city considered the battlefield for most American troops would increase and give.",
      "Capture of cities considered a deadly battlefield by the Taliban would increase and give.",
      "Capture of cities considered a deadly battlefield would increase and give Taliban control.",
      "Capture of Sangin, considered a deadly battlefield, would increase and give.",
      "Capture of cities considered a deadly battlefield would increase and give control of an important line.",
      "Capture cities considered a deadly battlefield would increase and give control to the Taliban.",
      "Capture of cities considered a battlefield of deadly will increase and give.",
      "Capture of cities considered a deadly battlefield would increase and give control of the supply line to Lashkar Gah.",
      "Capture of a city considered a deadly battlefield for American troops would increase and give.",
      "Capture a city considered a deadly battlefield would increase and give.",
      "Capture of cities considered a deadly battlefield would increase and give control of the supply line to the provincial capital.",
      "Capture of a city considered a deadly battlefield in the north will increase and give.",
      "Capture of a city considered a deadly battlefield for British troops would increase and give.",
      "Capture the cities considered the deadliest battlefield would increase and give.",
      "Capture of cities considered a battlefield in the northern country by the Taliban would increase and give.",
      "Capture of cities considered a battlefield in the northern country would increase and give control to the Taliban.",
      "Capture of cities considered a battlefield in the north would increase and give control of an important line.",
      "Capture of cities considered a battlefield in the north will increase and give strategic location.",
      "Capture of cities considered a battlefield in the north would increase and give control of the supply line to Lashkar Gah.",
      "Capture of a city considered a battlefield in the northern country for American troops would increase and give.",
      "Capture of cities considered a battlefield in the north will increase and give control of the supply line to the provincial capital.",
      "Capture of a city considered a battlefield in the north would increase and give.",
      "Capture of a city considered a battlefield in the north for British troops would increase and give.",
      "Capture the city considered the northern country's most battlefield would increase and give.",
      "Capture of a city considered a battlefield for British troops by the Taliban would increase and give.",
      "Capture of cities considered a battlefield for British troops would increase and give Taliban control.",
      "Capture of Sangin, considered a battlefield for British troops, would increase and give.",
      "Capture of cities considered a battlefield for British troops would increase and give control of an important line.",
      "Capture of cities considered a battlefield for British troops would increase and give control to the Taliban.",
      "Capture of cities considered strategically located as battlefields for British troops would increase and give.",
      "Capture of a city considered a battlefield for British troops in Afghanistan would increase and give.",
      "Capture of the city considered a battlefield for British troops would increase and give control of the supply line to Lashkar Gah.",
      "Capture of a city considered a killing battlefield for British troops would increase and give.",
      "Capture of cities considered a battlefield for British troops would increase and give control of the supply line to the provincial capital.",
      "Capture of a city considered a battlefield for British troops in the north would increase and give.",
      "Capture of a city considered a battlefield for British troops would increase and give.",
      "Capture the city considered the battlefield for British troops would increase and give.",
      "Capture of the city considered the most battlefield by the Taliban would increase and give.",
      "Capture of cities considered the most battlefield would increase and give the Taliban control.",
      "Capture the cities considered the most battlefield would increase and give control to the Taliban.",
      "Capture of cities considered the most battlefield would increase and give strategic location.",
      "Capture of the city considered Afghanistan's most battlefield would increase and give.",
      "Capture of the city considered the most battlefield would increase and give control of the supply line to Lashkar Gah.",
      "Capture the city once considered the most battlefield would increase and give.",
      "Capture the city considered the most battlefield for American troops would increase and give.",
      "Capture the city considered the deadliest battlefield and give it more.",
      "Capture of cities considered the most battlefield would increase and give control of the supply line to the provincial capital.",
      "Capture of a city considered the northern country's most battlefield would increase and give.",
      "Capture the city considered the most battlefield for British troops would increase and give.",
      "Capture the city considered the most battlefield would increase and give.",
      "The Taliban's capture would increase.",
      "Capture of Sangin would increase.",
      "Capture of what once was considered a city will increase.",
      "Capture of cities considered a battlefield in the northern country would increase.",
      "Capture of a city considered a battlefield for British troops would increase.",
      "Increase the mobility of the Taliban.",
      "Increase mobility in the north.",
      "Sangin's capture would increase the Taliban's mobility.",
      "Sangin capture would increase mobility in the north.",
      "Capture of strategically located cities would increase the Taliban's mobility.",
      "Capture of strategically located cities will increase mobility in the north.",
      "Capture of cities considered a battlefield in Afghanistan would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield in Afghanistan will increase mobility in the north.",
      "Capture of cities considered a battlefield for American troops would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for American troops would increase mobility in the north.",
      "Capture of cities considered a deadly battlefield would increase the Taliban's mobility.",
      "Capture of cities considered a deadly battlefield would increase mobility in the north.",
      "Capture of cities considered a battlefield in the northern country would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield in the north will increase mobility in the north.",
      "Capture of cities considered a battlefield for British troops would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for British troops would increase mobility in the north.",
      "Capture of cities considered the most battlefield would increase the Taliban's mobility.",
      "Capture of cities considered the most battlefield would increase mobility in the north.",
      "The Taliban captured.",
      "Sangin was captured.",
      "Capture a strategically located city.",
      "Capture of a city considered a battlefield in Afghanistan.",
      "Capture a city once considered.",
      "The capture of a city considered a battlefield for American troops.",
      "The capture of a city considered a deadly battlefield.",
      "The capture of a city considered a battlefield in northern country.",
      "The capture of the city considered the most battlefield.",
      "Sangin was captured by the Taliban.",
      "The Taliban captured a strategically located city.",
      "The Taliban captured a city considered a battlefield in Afghanistan.",
      "The Taliban captured a city considered a battlefield for American troops.",
      "The Taliban captured a city considered a deadly battlefield.",
      "The Taliban captured a city considered a battlefield in northern country.",
      "The Taliban captured a city considered a battlefield for British troops.",
      "The Taliban captured the city considered the most battlefield.",
      "Sangin",
      "a strategically located city",
      "Sangin is strategically located.",
      "Considered a battlefield in Afghanistan.",
      "Considered a battlefield for American troops.",
      "Considered a battlefield that is deadly.",
      "Considered a battlefield in northern country.",
      "Considered a battlefield for British troops.",
      "Once considered a battlefield for American troops.",
      "Once considered a battlefield of deadly.",
      "Once considered a battlefield in northern country.",
      "Once considered a battlefield for British troops.",
      "battlefield for American troops",
      "battlefield for British troops",
      "There is a battlefield in Afghanistan where it is deadly.",
      "Killing battlefield for British troops",
      "battlefield kills.",
      "Give the Taliban control.",
      "Give control of the important line.",
      "Give control to the Taliban.",
      "Give control of the supply line to the provincial capital."
    ]
  },
  {
    "instance_id": "pyrxsum-87",
    "summary": "Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.",
    "summary_trees": [
      "# ::snt Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.\n(a / area\n      :ARG1-of (p / populate-01\n            :manner (s / sparse))\n      :consist-of (d / desert\n            :quant (m / most))\n      :domain (c / country-region\n            :name (n / name\n                  :op1 \"Western\"\n                  :op2 \"Sahara\"))\n      :ARG1-of (s2 / situate-01\n            :ARG2 (c2 / coast\n                  :mod (n2 / northwest)\n                  :part-of (c3 / continent\n                        :name (n3 / name\n                              :op1 \"Africa\")))))"
    ],
    "tree": [
      "(a / area\n   :ARG1 (p / populate-01\n            :manner (s / sparse)))",
      "(a / area\n   :domain (c / country-region\n              :name (n / name\n                       :op1 \"Western\"\n                       :op2 \"Sahara\")))",
      "(a / area\n   :ARG1 (p / populate-01\n            :manner (s / sparse))\n   :consist-of (d / desert\n                  :quant (m / most)))"
    ],
    "smus": [
      "The area is sparsely populated.",
      "located on the northwest coast.",
      "located on the African coast."
    ]
  },
  {
    "instance_id": "pyrxsum-88",
    "summary": "Deputy First Minister John Swinney will give MSPs Swinney response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.",
    "summary_trees": [
      "# ::snt Deputy First Minister John Swinney will give MSPs Swinney response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.\n(g / give-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (d / deputy)\n                        :ord (o / ordinal-entity\n                              :value 1))))\n      :ARG1 (r / respond-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                  :ARG1 (d2 / die-01\n                        :ARG1 (s / schoolboy\n                              :name (n2 / name\n                                    :op1 \"Bailey\"\n                                    :op2 \"Gwynne\")\n                              :mod (c / city\n                                    :name (n3 / name\n                                          :op1 \"Aberdeen\"))))))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n4 / name\n                              :op1 \"MSP\"))))\n      :time (w / week\n            :mod (n5 / next)))"
    ],
    "tree": [
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\")))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy)))))",
      "(g / give-01\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\"))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\")))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\"))))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\"))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG1 (p3 / political-party\n                                 :name (n4 / name\n                                           :op1 \"MSP\"))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\")))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\"))))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :name (n2 / name\n                                                   :op1 \"Bailey\"\n                                                   :op2 \"Gwynne\")))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (s / schoolboy\n                                         :mod (c / city\n                                                 :name (n3 / name\n                                                           :op1 \"Aberdeen\"))))))\n   :time (w / week\n            :mod (n5 / next)))",
      "(p / person\n   :name (n / name\n            :op1 \"John\"\n            :op2 \"Swinney\"))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / minister\n                     :mod (d / deputy))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / minister\n                     :ord (o / ordinal-entity\n                             :value 1))))",
      "(p / person\n   :name (n / name\n            :op1 \"John\"\n            :op2 \"Swinney\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / minister\n                     :mod (d / deputy))))",
      "(p / person\n   :name (n / name\n            :op1 \"John\"\n            :op2 \"Swinney\")\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / minister\n                     :ord (o / ordinal-entity\n                             :value 1))))"
    ],
    "smus": [
      "John Swinney will give.",
      "The Deputy Minister will give.",
      "Give the MSPs.",
      "Give John Swinney a response.",
      "Give a response to the report of the death of the schoolboy, Bailey Gwynne.",
      "Give response to the report of the death of an Aberdeen schoolboy.",
      "Give next week.",
      "John Swinney will give the MSPs.",
      "The Deputy Minister will give the MSPs.",
      "John Swinney will give a response.",
      "John Swinney will give a response to the report of the death of the schoolboy, Bailey Gwynne.",
      "John Swinney will give a response to the report of the death of an Aberdeen schoolboy.",
      "The Deputy Minister will give his response.",
      "The Deputy Minister will give response to the report of the death of the schoolboy, Bailey Gwynne.",
      "The Deputy Minister will give response to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give next week.",
      "The Deputy Minister will give next week.",
      "Give the MSPs next week.",
      "Give John Swinney a response next week.",
      "Give next week to respond to the report of the death of the schoolboy, Bailey Gwynne.",
      "Give next week to respond to the report of the death of an Aberdeen schoolboy.",
      "John Swinney will give the MSPs next week.",
      "The Deputy Minister will give the MSPs next week.",
      "John Swinney will give a response next week.",
      "John Swinney will give a response next week to the report of the death of a schoolboy named Bailey Gwynne.",
      "John Swinney will give a response next week to the report of the death of an Aberdeen schoolboy.",
      "The Deputy Minister will give his response next week.",
      "The Deputy Minister will give next week to respond to the report of the death of the schoolboy, Bailey Gwynne.",
      "The Deputy Minister will give next week to respond to the report of the death of an Aberdeen schoolboy.",
      "Respond to report of death of Bayley Gwynne.",
      "Respond to report of death of Aberdeen schoolboy",
      "Report of the death of a schoolboy named Bailey Gwynne",
      "Bailey Gwynne, a schoolboy, died.",
      "The Aberdeen schoolboy died."
    ]
  },
  {
    "instance_id": "pyrxsum-89",
    "summary": "Police at the Download Festival have kept Police promise and have been posing for fan photos despite extra security.",
    "summary_trees": [
      "# ::snt Police at the Download Festival have kept Police promise and have been posing for fan photos despite extra security.\n(a / and\n      :op1 (k / keep-01\n            :ARG0 (p / police\n                  :location (f / festival\n                        :name (n / name\n                              :op1 \"Download\"\n                              :op2 \"Festival\")))\n            :ARG1 (p2 / promise-01\n                  :ARG0 p))\n      :op2 (p3 / pose-01\n            :ARG0 p\n            :ARG2 (p4 / photo\n                  :mod (f2 / fan))\n            :concession (s / security\n                  :mod (e / extra))))"
    ],
    "tree": [
      "(a / and\n   :op1 (k / keep-01\n           :ARG0 (p / police\n                    :location (f / festival\n                                 :name (n / name\n                                          :op1 \"Download\"\n                                          :op2 \"Festival\")))))",
      "(a / and\n   :op1 (k / keep-01\n           :ARG1 (p2 / promise-01\n                     :ARG0 (p / police))))",
      "(a / and\n   :op2 (p3 / pose-01\n            :ARG0 (p / police\n                     :location (f / festival\n                                  :name (n / name\n                                           :op1 \"Download\"\n                                           :op2 \"Festival\")))))",
      "(a / and\n   :op2 (p3 / pose-01\n            :ARG2 (p4 / photo\n                      :mod (f2 / fan))))",
      "(a / and\n   :op2 (p3 / pose-01\n            :concession (s / security\n                           :mod (e / extra))))",
      "(a / and\n   :op1 (k / keep-01\n           :ARG0 (p / police\n                    :location (f / festival\n                                 :name (n / name\n                                          :op1 \"Download\"\n                                          :op2 \"Festival\"))))\n   :op2 (p3 / pose-01\n            :ARG0 p))",
      "(a / and\n   :op1 (k / keep-01\n           :ARG0 (p / police\n                    :location (f / festival\n                                 :name (n / name\n                                          :op1 \"Download\"\n                                          :op2 \"Festival\"))))\n   :op2 (p3 / pose-01\n            :ARG2 (p4 / photo\n                      :mod (f2 / fan))))",
      "(a / and\n   :op1 (k / keep-01\n           :ARG1 (p2 / promise-01\n                     :ARG0 (p / police\n                              :location (f / festival\n                                           :name (n / name\n                                                    :op1 \"Download\"\n                                                    :op2 \"Festival\")))))\n   :op2 (p3 / pose-01\n            :ARG0 p))",
      "(a / and\n   :op1 (k / keep-01\n           :ARG1 (p2 / promise-01\n                     :ARG0 (p / police)))\n   :op2 (p3 / pose-01\n            :ARG2 (p4 / photo\n                      :mod (f2 / fan))))",
      "(a / and\n   :op1 (k / keep-01\n           :ARG1 (p2 / promise-01\n                     :ARG0 (p / police)))\n   :op2 (p3 / pose-01\n            :concession (s / security\n                           :mod (e / extra))))",
      "(k / keep-01\n   :ARG0 (p / police\n            :location (f / festival\n                         :name (n / name\n                                  :op1 \"Download\"\n                                  :op2 \"Festival\"))))",
      "(k / keep-01\n   :ARG1 (p2 / promise-01\n             :ARG0 (p / police)))",
      "(k / keep-01\n   :ARG0 (p / police\n            :location (f / festival\n                         :name (n / name\n                                  :op1 \"Download\"\n                                  :op2 \"Festival\")))\n   :ARG1 (p2 / promise-01\n             :ARG0 p))",
      "(p / police\n   :location (f / festival\n                :name (n / name\n                         :op1 \"Download\"\n                         :op2 \"Festival\")))",
      "(f / festival\n   :name (n / name\n            :op1 \"Download\"\n            :op2 \"Festival\"))",
      "(p3 / pose-01\n    :ARG2 (p4 / photo\n              :mod (f2 / fan)))"
    ],
    "smus": [
      "And the police at the Download Festival have kept them.",
      "And the police have kept their promise.",
      "And the police at the Download Festival were posing.",
      "and posing for fan photos.",
      "and posing despite extra security.",
      "Police at the Download Festival have kept on posing and keeping a watchful eye on them.",
      "Police at the Download Festival have kept posing with fan photos.",
      "Police at the Download Festival have kept their promise and are posing.",
      "Police have kept their promise and are posing with fan photos.",
      "Police have kept their promise and posing despite extra security.",
      "Police at the Download Festival have kept.",
      "The police have kept their promise.",
      "Police at the Download Festival have kept their promise.",
      "Posing for fan photos.",
      "Posing despite extra security.",
      "Posing for fan photos despite extra security."
    ]
  },
  {
    "instance_id": "pyrxsum-90",
    "summary": "Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.",
    "summary_trees": [
      "# ::snt Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.\n(p / possible-01\n      :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                  :ARG2 (s / site\n                        :location-of (n / nest-01)))\n            :ARG1 (t / thing\n                  :ARG0-of (c2 / cause-01\n                        :ARG1 (d / decline-01\n                              :ARG1 (a / and\n                                    :op1 (b / bird\n                                          :mod (s2 / some))\n                                    :op2 (b2 / bee\n                                          :mod s2))\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (f / fast-02)\n                                    :ARG3 (m / more)\n                                    :ARG4 (o / other)))))))"
    ],
    "tree": [
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                     :ARG2 (s / site\n                              :location (n / nest-01)))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (b / bird\n                                                 :mod (s2 / some)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (f / fast-02)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (b2 / bee\n                                                  :mod (s2 / some)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m / more)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG4 (o / other)))))))",
      "(e / explain-01\n   :ARG0 (c / compete-01\n            :ARG2 (s / site\n                     :location (n / nest-01))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b / bird\n                                        :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG2 (f / fast-02))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b2 / bee\n                                         :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m / more))))))",
      "(e / explain-01\n   :ARG0 (c / compete-01\n            :ARG2 (s / site\n                     :location (n / nest-01)))\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG2 (f / fast-02))))))",
      "(e / explain-01\n   :ARG0 (c / compete-01\n            :ARG2 (s / site\n                     :location (n / nest-01)))\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b2 / bee\n                                         :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG0 (c / compete-01\n            :ARG2 (s / site\n                     :location (n / nest-01)))\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m / more))))))",
      "(c / compete-01\n   :ARG2 (s / site\n            :location (n / nest-01)))",
      "(t / thing\n   :ARG0 (c2 / cause-01\n             :ARG1 (d / decline-01\n                      :ARG1 (b / bird\n                               :mod (s2 / some)))))",
      "(t / thing\n   :ARG0 (c2 / cause-01\n             :ARG1 (d / decline-01\n                      :ARG1 (h / have-degree-91\n                               :ARG2 (f / fast-02)))))",
      "(t / thing\n   :ARG0 (c2 / cause-01\n             :ARG1 (d / decline-01\n                      :ARG1 (h / have-degree-91\n                               :ARG4 (o / other)))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (b / bird\n                      :mod (s2 / some))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (h / have-degree-91\n                      :ARG2 (f / fast-02))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (b2 / bee\n                       :mod (s2 / some))))",
      "(c2 / cause-01\n    :ARG1 (d / decline-01\n             :ARG1 (h / have-degree-91\n                      :ARG4 (o / other))))",
      "(d / decline-01\n   :ARG1 (b / bird\n            :mod (s2 / some)))"
    ],
    "smus": [
      "Competition for nest sites can explain this.",
      "It's possible to explain why some birds are declining.",
      "It's possible to explain why fast declines are occurring.",
      "It's possible to explain why some bees are declining.",
      "Could explain why the decline is more.",
      "It is possible to explain why others are declining.",
      "Explain the competition for nest sites.",
      "Explain why some birds are declining.",
      "Explain why fast declines are occurring.",
      "Explain why some bees are declining.",
      "Explain why it is declining more.",
      "Competition for nest sites will explain why fast declining sites are occurring.",
      "Competition for nest sites will explain why some bees are declining.",
      "Competition for nest sites will explain why it is declining more.",
      "Why are some birds declining?",
      "Why is the fast declining?",
      "Why are some bees declining?",
      "So some birds are declining.",
      "So fast declines are occurring.",
      "So some bees are declining.",
      "So, declining more.",
      "Some birds are declining.",
      "Some bees are declining."
    ]
  },
  {
    "instance_id": "pyrxsum-91",
    "summary": "The UK should not have to pay \"large\" sums to the EU to trade with EU after Brexit, Boris Johnson has said.",
    "summary_trees": [
      "# ::snt The UK should not have to pay \"large\" sums to the EU to trade with EU after Brexit, Boris Johnson has said.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Boris\"\n                  :op2 \"Johnson\"))\n      :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                  :polarity -\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"UK\"))\n                  :ARG2 (p2 / pay-01\n                        :ARG0 c\n                        :ARG1 (s2 / sum\n                              :mod (l / large))\n                        :ARG2 (o2 / organization\n                              :name (n3 / name\n                                    :op1 \"EU\"))\n                        :purpose (t / trade-01\n                              :ARG0 c\n                              :ARG2 o2\n                              :time (a / after\n                                    :op1 (l2 / leave-15\n                                          :ARG0 c\n                                          :ARG1 o2)))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Boris\"\n                     :op2 \"Johnson\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                     :polarity -)))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :purpose (t / trade-01\n                         :ARG0 c)))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :purpose (t / trade-01\n                         :ARG2 (o2 / organization :name (n3 / name :op1 \"EU\")))))",
      "(c / country\n   :name (n2 / name\n             :op1 \"UK\"))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large)))",
      "(p2 / pay-01\n    :purpose (t / trade-01\n                :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))",
      "(p2 / pay-01\n    :purpose (t / trade-01\n                :ARG2 (o2 / organization :name (n3 / name :op1 \"EU\"))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\")))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG1 (o2 / organization :name (n3 / name :op1 \"EU\"))))))",
      "(p2 / pay-01\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))",
      "(p2 / pay-01\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))))",
      "(p2 / pay-01\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG1 o2))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :ARG2 o2))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))))"
    ],
    "smus": [
      "Boris Johnson has said that it should not.",
      "Paying large sums.",
      "Paying for by the EU.",
      "Payment for trade after the UK leaves.",
      "Payment for trade after leaving the EU",
      "Paying large sums for the UK trade.",
      "Paying large sums for trade with the EU.",
      "The EU pays for the UK's trade.",
      "Payment to the EU for trade after the EU leaves.",
      "Large sums are paid to the EU for the UK's trade.",
      "Large sums are paid to the EU for trade purposes.",
      "Large sums are paid to the EU for trade after the EU leaves.",
      "Trade after the UK leaves.",
      "Trade after leaving the EU.",
      "After the UK leaves.",
      "After leaving the EU."
    ]
  },
  {
    "instance_id": "pyrxsum-92",
    "summary": "A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.",
    "summary_trees": [
      "# ::snt A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / and\n            :op1 (a2 / attack-01\n                  :ARG0 (b / bear\n                        :mod (g / grizzly))\n                  :ARG1 (p2 / person\n                        :ARG0-of (c / cycle-01)))\n            :op2 (k / kill-01\n                  :ARG0 b\n                  :ARG1 p2)\n            :location (o / outside\n                  :op1 (p3 / park\n                        :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\")\n                        :location (n2 / north\n                              :part-of (s2 / state\n                                    :name (n3 / name\n                                          :op1 \"Montana\")\n                                    :location (c2 / country\n                                          :name (n4 / name\n                                                :op1 \"US\")))))\n                  :mod (j / just))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (a2 / attack-01\n             :ARG0 (b / bear\n                      :mod (g / grizzly))))",
      "(s / say-01\n   :ARG1 (k / kill-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly))))",
      "(s / say-01\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\"))))",
      "(s / say-01\n   :ARG1 (a2 / attack-01\n             :ARG1 (p2 / person\n                       :ARG0 (c / cycle-01))))",
      "(s / say-01\n   :ARG1 (o / outside\n            :mod (j / just)))",
      "(s / say-01\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :location (n2 / north\n                                   :part (s2 / state\n                                             :location (c2 / country\n                                                           :name (n4 / name\n                                                                     :op1 \"US\")))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a2 / attack-01\n             :ARG0 (b / bear\n                      :mod (g / grizzly))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\"))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a2 / attack-01\n             :ARG1 (p2 / person\n                       :ARG0 (c / cycle-01))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :mod (j / just)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :location (n2 / north\n                                   :part (s2 / state\n                                             :name (n3 / name\n                                                       :op1 \"Montana\"))))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :location (n2 / north\n                                   :part (s2 / state\n                                             :location (c2 / country\n                                                           :name (n4 / name\n                                                                     :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01))))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly))))",
      "(a / and\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))",
      "(a / and\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG0 b))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG1 p2))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG0 b)\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG0 b)\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG0 b)\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG0 (b / bear\n                     :mod (g / grizzly)))\n   :op2 (k / kill-01\n           :ARG1 (p2 / person\n                     :ARG0 (c / cycle-01)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :name (n / name\n                                  :op1 \"Glacier\"\n                                  :op2 \"National\"\n                                  :op3 \"Park\"))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG0 (b / bear\n                    :mod (g / grizzly)))\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :location (c2 / country\n                                                               :name (n4 / name\n                                                                         :op1 \"US\")))))))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG1 p2)\n   :location (o / outside\n                :mod (j / just)))",
      "(a / and\n   :op1 (a2 / attack-01\n            :ARG1 (p2 / person\n                      :ARG0 (c / cycle-01)))\n   :op2 (k / kill-01\n           :ARG1 p2)\n   :location (o / outside\n                :op1 (p3 / park\n                         :location (n2 / north\n                                       :part (s2 / state\n                                                 :name (n3 / name\n                                                           :op1 \"Montana\"))))))"
    ],
    "smus": [
      "The grizzly bear was said to have attacked.",
      "The grizzly bear killed, they say.",
      "Outside Glacier National Park, say.",
      "Cyclers are said to be attacked.",
      "Just outside say.",
      "Outside the park in the northern US state, say the folks.",
      "Police say a grizzly bear attacked.",
      "Police say outside Glacier National Park.",
      "Police say a cyclist was attacked.",
      "Police say it was just outside.",
      "Police say they were outside a park in northern Montana.",
      "Police say outside a park in the northern US state.",
      "And cyclists were attacked.",
      "and the grizzly bear killed.",
      "A grizzly bear attacked and killed.",
      "A grizzly bear attacked and killed a cyclist.",
      "A cyclist was attacked and a grizzly bear killed.",
      "The cyclist was attacked and killed.",
      "And outside Glacier National Park a grizzly bear attacked.",
      "And outside a park in northern Montana a grizzly bear was attacked.",
      "And outside a park in the northern US state a grizzly bear was attacked.",
      "And a cyclist was attacked outside Glacier National Park.",
      "And just outside, cyclists were attacked.",
      "And a cyclist was attacked outside a park in northern Montana.",
      "And a cyclist was attacked outside a park in the northern US state.",
      "And a grizzly bear killed outside Glacier National Park.",
      "And just outside a grizzly bear killed.",
      "And a grizzly bear killed outside a park in northern Montana.",
      "And a grizzly bear killed outside a park in northern US state.",
      "And a cyclist killed outside Glacier National Park.",
      "And just outside, a cyclist was killed.",
      "And a cyclist killed outside a park in northern Montana.",
      "And a cyclist killed outside a park in the northern US state.",
      "Outside Glacier National Park a grizzly bear attacked and killed.",
      "Just outside a grizzly bear attacked and killed.",
      "A grizzly bear attacked and killed outside a park in northern US state.",
      "Outside Glacier National Park a grizzly bear attacked and killed a cyclist.",
      "Just outside a grizzly bear attacked and killed a cyclist.",
      "Outside a park in northern US state a grizzly bear attacked and killed a cyclist.",
      "Outside Glacier National Park, a cyclist was attacked and a grizzly bear killed.",
      "Just outside a cyclist was attacked and a grizzly bear killed.",
      "A cyclist was attacked and a grizzly bear killed outside a park in northern Montana.",
      "A cyclist was attacked and a grizzly bear killed outside a park in northern US state.",
      "Outside Glacier National Park, a cyclist was attacked and killed.",
      "Just outside, a cyclist was attacked and killed.",
      "A cyclist was attacked and killed outside a park in northern Montana.",
      "A cyclist was attacked and killed outside a park in northern US state.",
      "The cyclists were attacked.",
      "A grizzly bear attacked a cyclist."
    ]
  },
  {
    "instance_id": "pyrxsum-93",
    "summary": "A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.",
    "summary_trees": [
      "# ::snt A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (m / man)\n            :ARG2 (a2 / and\n                  :op1 (a3 / assault-01\n                        :ARG0 m\n                        :ARG1 (w / woman)\n                        :mod (v / violent))\n                  :op2 (r / rape-01\n                        :ARG0 m\n                        :ARG1 w)\n                  :location (p2 / park\n                        :mod (c / car)\n                        :mod (s2 / station\n                              :mod (r2 / railway))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG1 (m / man)))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :ARG0 (m / man))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (r / rape-01\n                     :ARG0 (m / man))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (p2 / park\n                      :mod (c / car))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :mod (v / violent))))",
      "(s / say-01\n   :ARG1 (a / arrest-01\n            :ARG2 (p2 / park\n                      :mod (s2 / station\n                               :mod (r2 / railway)))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (m / man)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :ARG0 (m / man))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG2 (r / rape-01\n                     :ARG0 (m / man))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG2 (a3 / assault-01\n                      :mod (v / violent))))",
      "(a / arrest-01\n   :ARG2 (a3 / assault-01\n             :ARG0 (m / man)))",
      "(a / arrest-01\n   :ARG2 (r / rape-01\n            :ARG0 (m / man)))",
      "(a / arrest-01\n   :ARG2 (a3 / assault-01\n             :ARG1 (w / woman)))",
      "(a / arrest-01\n   :ARG2 (a3 / assault-01\n             :mod (v / violent)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (r / rape-01\n            :ARG0 m))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (p2 / park\n             :mod (c / car)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG1 (w / woman)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (r / rape-01\n            :ARG1 (w / woman)))",
      "(a2 / and\n    :op2 (r / rape-01\n            :ARG0 (m / man)))",
      "(a2 / and\n    :location (p2 / park\n                  :mod (s2 / station\n                           :mod (r2 / railway))))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :ARG0 (m / man))\n    :op2 (r / rape-01\n            :ARG0 m))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :ARG0 (m / man))\n    :op2 (r / rape-01\n            :ARG1 (w / woman)))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :ARG1 (w / woman))\n    :op2 (r / rape-01\n            :ARG0 (m / man)))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :mod (v / violent))\n    :op2 (r / rape-01\n            :ARG1 (w / woman)))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :ARG0 (m / man))\n    :location (p2 / park\n                  :mod (c / car)))",
      "(a2 / and\n    :op2 (r / rape-01\n            :ARG0 (m / man))\n    :location (p2 / park\n                  :mod (s2 / station\n                           :mod (r2 / railway))))",
      "(a2 / and\n    :op2 (r / rape-01\n            :ARG1 (w / woman))\n    :location (p2 / park\n                  :mod (c / car)))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :ARG0 (m / man))\n    :op2 (r / rape-01\n            :ARG0 m)\n    :location (p2 / park\n                  :mod (s2 / station\n                           :mod (r2 / railway))))",
      "(a2 / and\n    :op1 (a3 / assault-01\n             :ARG0 (m / man))\n    :op2 (r / rape-01\n            :ARG1 (w / woman))\n    :location (p2 / park\n                  :mod (c / car)))"
    ],
    "smus": [
      "The man was said to have been arrested.",
      "The man was arrested for assault, it was said.",
      "The man was arrested for rape, it was said.",
      "Arrests were said to have occurred in a car park.",
      "It is said that the arrest was for a violent assault.",
      "Arrests were said to have occurred in a railway station park.",
      "Police said the man was arrested.",
      "Police said the man was arrested for assault.",
      "Police said the man was arrested for rape.",
      "Police say the arrest was for violent assault.",
      "The man was arrested for assault.",
      "The man was arrested for rape.",
      "The assault on the woman was arrested.",
      "Arrested for violent assault.",
      "The man was arrested for assaulting a woman.",
      "The man was arrested for violent assault.",
      "The man was arrested for rape of a woman.",
      "and assault on a woman.",
      "A woman was assaulted and raped.",
      "And the woman was assaulted in a car park.",
      "And the woman was assaulted in a railway station park.",
      "And there was a violent assault in a car park.",
      "And there was a violent assault in the railway station park.",
      "and a woman was raped in a car park.",
      "and a woman was raped in a railway station park.",
      "A woman was assaulted and raped in a car park.",
      "In a railway station park a woman was assaulted and raped.",
      "Violent assault and rape of woman took place in a car park.",
      "In a railway station park, there was a violent assault and a woman was raped."
    ]
  },
  {
    "instance_id": "pyrxsum-94",
    "summary": "A diabetic MP who asked Coca-Cola not to take MP Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.",
    "summary_trees": [
      "# ::snt A diabetic MP who asked Coca-Cola not to take MP Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member))\n            :mod (d / diabetes)\n            :ARG0-of (a2 / ask-02\n                  :ARG1 (t / take-01\n                        :polarity -\n                        :ARG0 (c / company\n                              :name (n / name\n                                    :op1 \"Coke-Cola\"))\n                        :ARG1 (t2 / truck\n                              :mod (f / festival\n                                    :name (n2 / name\n                                          :op1 \"Christmas\"))\n                              :poss p2)\n                        :ARG3 (c2 / city\n                              :name (n3 / name\n                                    :op1 \"Leicester\")))\n                  :ARG2 c))\n      :ARG2 (h2 / hypocrisy)\n      :ARG1-of (c3 / cause-01\n            :ARG0 (o / open-01\n                  :ARG0 p\n                  :ARG1 (s / shop\n                        :mod (s2 / sweet))\n                  :location c2)))"
    ],
    "tree": [
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG2 (c / company\n                               :name (n / name\n                                        :op1 \"Coke-Cola\")))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :ARG1 (t2 / truck\n                                         :mod (f / festival\n                                                 :name (n2 / name\n                                                           :op1 \"Christmas\")))))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :ARG1 (t2 / truck\n                                         :poss (p2 / parliament))))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :mod (d / diabetes))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -)))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG2 (c / company\n                               :name (n / name\n                                        :op1 \"Coke-Cola\"))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :ARG0 (c / company\n                                        :name (n / name\n                                                 :op1 \"Coke-Cola\")))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :ARG1 (t2 / truck\n                                         :mod (f / festival\n                                                 :name (n2 / name\n                                                           :op1 \"Christmas\"))))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :ARG1 (t2 / truck\n                                         :poss (p2 / parliament)))))\n   :ARG2 (h2 / hypocrisy))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (p2 / parliament)))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG2 (m / member)))",
      "(a2 / ask-02\n    :ARG1 (t / take-01\n             :ARG1 (t2 / truck\n                       :mod (f / festival\n                               :name (n2 / name\n                                         :op1 \"Christmas\")))))",
      "(a2 / ask-02\n    :ARG1 (t / take-01\n             :ARG1 (t2 / truck\n                       :poss (p2 / parliament))))",
      "(t / take-01\n   :ARG1 (t2 / truck\n             :mod (f / festival\n                     :name (n2 / name\n                               :op1 \"Christmas\")))\n   :ARG3 (c2 / city\n             :name (n3 / name\n                       :op1 \"Leicester\")))"
    ],
    "smus": [
      "Parliamentarians are accused.",
      "The person who asked not to take was accused.",
      "The members are accused.",
      "The people who asked Coke-Cola were accused.",
      "People were accused of asking to take a Christmas truck.",
      "The people who asked to take the parliament's truck were accused.",
      "Parliamentarians are accused of hypocrisy.",
      "The diabetics are accused of hypocrisy.",
      "The people who asked not to take were accused of hypocrisy.",
      "Members are accused of hypocrisy.",
      "The people who asked Coke-Cola were accused of hypocrisy.",
      "People who asked Coke-Cola to take were accused of hypocrisy.",
      "People who asked to take a Christmas truck were accused of hypocrisy.",
      "The people who asked to take the parliament's truck were accused of hypocrisy.",
      "Parliament has a member.",
      "\"Don't take,\" asked.",
      "Take a Christmas truck.",
      "Take Leicester.",
      "Because the opening took place in Leicester."
    ]
  },
  {
    "instance_id": "pyrxsum-95",
    "summary": "An Orlando mother who was found not guilty of murdering mother two-year old daughter Caylee has broken Caylee silence six years later.",
    "summary_trees": [
      "# ::snt An Orlando mother who was found not guilty of murdering mother two-year old daughter Caylee has broken Caylee silence six years later.\n(b / break-13\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother))\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Orlando\"))\n            :ARG0-of (f / find-02\n                  :ARG1 (g / guilty-01\n                        :polarity -\n                        :ARG1 p\n                        :ARG2 (m2 / murder-01\n                              :ARG0 p\n                              :ARG1 (p2 / person\n                                    :name (n2 / name\n                                          :op1 \"Caylee\")\n                                    :ARG0-of (h2 / have-rel-role-91\n                                          :ARG1 p\n                                          :ARG2 (d / daughter))\n                                    :age (t / temporal-quantity\n                                          :quant 2\n                                          :unit (y / year)))))))\n      :ARG1 (s / silence\n            :poss p2)\n      :time (a / after\n            :quant (t2 / temporal-quantity\n                  :quant 6\n                  :unit (y2 / year))))"
    ],
    "tree": [
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 (p / person)))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\"))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year)))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year)))))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year)))))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 (p / person))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :unit (y / year))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :age (t / temporal-quantity\n                              :quant 2)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :polarity -)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (d / daughter))))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG1 p)))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p)))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Caylee\")))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\")\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year)))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p)\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p\n                                                            :ARG2 (d / daughter)))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :quant 2)\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter))\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG2 (d / daughter))\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year)))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year)\n                                                          :quant 2))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-13\n   :ARG0 (p / person\n            :ARG0 (f / find-02\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :age (t / temporal-quantity\n                                                          :unit (y / year)\n                                                          :quant 2))))))\n   :ARG1 (s / silence\n            :poss p2)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(f / find-02\n   :ARG1 (g / guilty-01\n            :ARG2 (m2 / murder-01\n                      :ARG0 (p / person))))",
      "(f / find-02\n   :ARG1 (g / guilty-01\n            :ARG2 (m2 / murder-01\n                      :ARG1 (p2 / person\n                                :age (t / temporal-quantity\n                                        :unit (y / year))))))",
      "(g / guilty-01\n   :ARG2 (m2 / murder-01\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Caylee\"))))",
      "(g / guilty-01\n   :ARG2 (m2 / murder-01\n             :ARG1 (p2 / person\n                       :age (t / temporal-quantity\n                               :quant 2))))"
    ],
    "smus": [
      "The mother has broken.",
      "People in Orlando have broken.",
      "The person who was not found guilty was broken.",
      "Caylee's silence was broken.",
      "The silence of the people has been broken.",
      "The silence of the two was broken.",
      "The daughter's silence has been broken.",
      "The silence of years has broken.",
      "Broken after years.",
      "The mother has broken Caylee's silence.",
      "The mother has broken the silence of the two.",
      "The mother has broken the silence of her daughter.",
      "The mother has broken the silence of years.",
      "People in Orlando have broken Caylee's silence.",
      "People in Orlando have broken the silence of their own.",
      "People in Orlando have broken the silence of two.",
      "People in Orlando have broken the silence of the daughter.",
      "People in Orlando have broken the silence of years.",
      "The silence of Caylee was broken by those who were not found guilty.",
      "The person who has broken their silence is not found guilty.",
      "The silence of the two has been broken by those who have not been found guilty.",
      "The daughter's silence has been broken by those whose not found guilty.",
      "The silence of the years has been broken by those who have not been found guilty.",
      "The silence of the two has been broken by those found guilty of murder.",
      "The silence of the years has been broken by those found guilty of murder.",
      "The Orlando people broke in years.",
      "Those found not guilty are broken 6 years later.",
      "The person who is not found guilty is broken after years.",
      "Six years later, people who were found guilty of murdering their own were broken.",
      "Years later, Caylee's silence was broken.",
      "Sixty days later, the silence of the people has broken.",
      "Years later, the silence of the people has broken.",
      "The silence of the two was broken a couple of years later.",
      "Years later, the daughter's silence was broken.",
      "Six years later, the silence of the years has broken.",
      "Years later, the silence of years old was broken.",
      "Years later, the mother has broken Caylee's silence.",
      "The mother has broken the silence of the two years later.",
      "Years later, the mother has broken the daughter's silence.",
      "Six years later, the mother has broken the silence of six years.",
      "Years later, the mother has broken the silence of years.",
      "Years later, people in Orlando have broken Caylee's silence.",
      "Six years later, people in Orlando have broken the silence of two.",
      "In the next two years, people in Orlando have broken the silence of two.",
      "Six years later, people in Orlando have broken the silence of the daughter.",
      "Years later, people in Orlando have broken the silence of their daughter.",
      "Six years later, people in Orlando have broken the silence of six years old.",
      "Years later, people in Orlando have broken the silence of years.",
      "Years later, people who were not found guilty have broken Caylee's silence.",
      "Sixty after, those found not guilty have broken their silence.",
      "Years later, people who have not been found guilty have broken their silence.",
      "The two-year-old's silence was broken by those found not guilty six years later.",
      "After years, people who have not been found guilty have broken the silence of two - age.",
      "Years later, people who have not been found guilty have broken the daughter's silence.",
      "Six years later, people who have not been found guilty have broken the silence of the years.",
      "Years later, people who have not been found guilty have broken the silence of years.",
      "Six years later, people who were found guilty have broken the silence of two.",
      "After years, people who have found guilty have broken the silence of the two.",
      "Six years later, people found guilty of murder have broken the silence of two.",
      "Six years later, people who have been found guilty of murdering their own people have broken their silence.",
      "Years later, people who have been found guilty of murdering their own people have broken their silence.",
      "Years later, people who have been found guilty of murdering their own years-olds have broken their silence.",
      "After years, people whose guilt has found guilty of murdering a two -  age person have broken their silence.",
      "Years later, people whose guilt has been found for murdering their daughter have broken their silence.",
      "After years, people whose guilt has found guilty of murdering two years old have broken their silence.",
      "The mother has.",
      "Not guilty was found.",
      "Caylee was murdered.",
      "The person has.",
      "Caylee has a daughter.",
      "Caylee has a daughter, who is 2."
    ]
  },
  {
    "instance_id": "pyrxsum-96",
    "summary": "The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.",
    "summary_trees": [
      "# ::snt The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Wales\"))\n                  :ARG2 (a / archbishop)))\n      :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                  :mod (d / devolve-01)\n                  :beneficiary c)\n            :ARG2-of (h2 / have-degree-91\n                  :ARG1 s2\n                  :ARG3 (l / less)\n                  :ARG4 (s3 / settlement\n                        :ARG1-of (o / offer-01\n                              :ARG3 (a2 / and\n                                    :op1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Scotland\"))\n                                    :op2 (c3 / country\n                                          :name (n3 / name\n                                                :op1 \"Northern\"\n                                                :op2 \"Ireland\"))))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (c2 / country\n                                                   :name (n2 / name\n                                                             :op1 \"Scotland\")))))))",
      "(s / say-01\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (c3 / country\n                                                   :name (n3 / name\n                                                             :op1 \"Northern\"\n                                                             :op2 \"Ireland\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                      :beneficiary (c / country\n                                      :name (n / name\n                                               :op1 \"Wales\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG3 (l / less))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (c2 / country\n                                                   :name (n2 / name\n                                                             :op1 \"Scotland\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG2 (h2 / have-degree-91\n                      :ARG4 (s3 / settlement\n                                :ARG1 (o / offer-01\n                                         :ARG3 (c3 / country\n                                                   :name (n3 / name\n                                                             :op1 \"Northern\"\n                                                             :op2 \"Ireland\")))))))",
      "(p / person\n   :ARG0 (h / have-org-role-91\n            :ARG1 (c / country\n                     :name (n / name\n                              :op1 \"Wales\"))))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01)))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :beneficiary (c / country :name (n / name :op1 \"Wales\"))))",
      "(f / fair-01\n   :ARG2 (h2 / have-degree-91\n             :ARG1 (s2 / settlement)))",
      "(f / fair-01\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (l / less)))",
      "(f / fair-01\n   :ARG2 (h2 / have-degree-91\n             :ARG4 (s3 / settlement\n                       :ARG1 (o / offer-01\n                                :ARG3 (c2 / country\n                                          :name (n2 / name\n                                                    :op1 \"Scotland\"))))))",
      "(f / fair-01\n   :ARG2 (h2 / have-degree-91\n             :ARG4 (s3 / settlement\n                       :ARG1 (o / offer-01\n                                :ARG3 (c3 / country\n                                          :name (n3 / name\n                                                    :op1 \"Northern\"\n                                                    :op2 \"Ireland\"))))))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01))\n   :ARG2 (h2 / have-degree-91\n             :ARG1 s2))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01))\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (l / less)))"
    ],
    "smus": [
      "It is said that the settlement offered to Scotland is fair.",
      "It is said that the settlement offered to Northern Ireland is fair.",
      "The Archbishop has said it is less fair.",
      "The Archbishop has said that the settlement offered to Scotland is fair.",
      "The Archbishop has said that the settlement offered to Northern Ireland is fair.",
      "Fair is the settlement offered to Scotland.",
      "Fair is the settlement offered to Northern Ireland.",
      "settlement offered to Scotland",
      "settlement offered to Northern Ireland",
      "Less than the settlement offered to Scotland.",
      "Less than the settlement offered to Northern Ireland.",
      "Settlement offered to Scotland",
      "Settlement offered to Northern Ireland",
      "Scotland is offered.",
      "Northern Ireland is offered."
    ]
  },
  {
    "instance_id": "pyrxsum-97",
    "summary": "Labour will keep Labour election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.",
    "summary_trees": [
      "# ::snt Labour will keep Labour election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.\n(w / warn-01\n      :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                  :polarity -\n                  :ARG1 (a / avoid-01\n                        :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                    :mod (s2 / some)))))\n            :ARG2 (k / keep-01\n                  :ARG0 (p2 / political-party\n                        :name (n / name\n                              :op1 \"Labour\"))\n                  :ARG1 (p3 / promise-01\n                        :ARG0 p2\n                        :mod (e / elect-01))\n                  :concession (c2 / certain\n                        :polarity -\n                        :domain (l / leave-15\n                              :ARG1 (c3 / country\n                                    :name (n2 / name\n                                          :op1 \"Great\"\n                                          :op2 \"Britain\")))))))"
    ],
    "tree": [
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                     :polarity -)))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                     :ARG1 (a / avoid-01\n                              :ARG1 (c / cut-02\n                                       :ARG1 (s / service\n                                                :mod (s2 / some)))))))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :concession (c2 / certain\n                                     :polarity -))))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                     :polarity -)))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                     :ARG1 (a / avoid-01\n                              :ARG1 (c / cut-02\n                                       :ARG1 (s / service\n                                                :mod (s2 / some)))))))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :concession (c2 / certain\n                                     :polarity -))))",
      "(m / minister\n   :ord (o / ordinal-entity\n           :value 1))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :polarity -))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :ARG1 (a / avoid-01\n                     :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                       :mod (s2 / some))))))",
      "(h / have-concession-91\n   :ARG2 (k / keep-01\n            :ARG0 (p2 / political-party\n                      :name (n / name\n                               :op1 \"Labour\"))))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :ARG1 (a / avoid-01\n                     :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                       :mod (s2 / some)))))\n   :ARG2 (k / keep-01\n            :ARG1 (p3 / promise-01\n                      :mod (e / elect-01))))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :ARG1 (a / avoid-01\n                     :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                       :mod (s2 / some)))))\n   :ARG2 (k / keep-01\n            :concession (c2 / certain\n                            :domain (l / leave-15\n                                       :ARG1 (c3 / country\n                                                 :name (n2 / name\n                                                           :op1 \"Great\"\n                                                           :op2 \"Britain\"))))))",
      "(p / possible-01\n   :ARG1 (a / avoid-01\n            :ARG1 (c / cut-02\n                     :ARG1 (s / service\n                              :mod (s2 / some)))))",
      "(a / avoid-01\n   :ARG1 (c / cut-02\n            :ARG1 (s / service\n                     :mod (s2 / some))))",
      "(c / cut-02\n   :ARG1 (s / service\n            :mod (s2 / some)))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01)))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01)))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\")))\n   :concession (c2 / certain\n                   :domain (l / leave-15\n                              :ARG1 (c3 / country\n                                        :name (n2 / name\n                                                  :op1 \"Great\"\n                                                  :op2 \"Britain\")))))"
    ],
    "smus": [
      "The first minister has warned.",
      "warned, Labour will keep.",
      "Labour has been warned to keep its promises, but",
      "warned, but keep despite uncertainty.",
      "warned, but does keep election promises.",
      "The first minister has warned that Labour will keep.",
      "The first minister has warned that Labour will keep its promises.",
      "The first minister has warned that despite uncertainty, \"keep.\"",
      "The first minister has warned that despite keeping election promises,",
      "Labour will keep, though.",
      "Labour will keep its promises, however.",
      "Keep, despite uncertainty.",
      "But keep the election promises.",
      "Some services are cut.",
      "Labour will keep.",
      "Labour will keep its promises.",
      "Keep the election promises.",
      "Keep despite uncertainty.",
      "Labour will keep its election promises.",
      "Labour will keep, if not for certain.",
      "Keep election promises, if not for certain.",
      "Labour will keep its election promises, but with no certainty."
    ]
  },
  {
    "instance_id": "pyrxsum-98",
    "summary": "A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.",
    "summary_trees": [
      "# ::snt A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.\n(h / hear-01\n      :ARG0 (c / court)\n      :ARG1 (u / use-01\n            :ARG0 (p / person\n                  :ARG0-of (d / defraud-01)\n                  :ARG1-of (c2 / convict-01))\n            :ARG1 (p2 / plot-01\n                  :ARG0 p\n                  :ARG1 (e / escape-01\n                        :ARG0 p)\n                  :mod (ii / ingenious))\n            :ARG2 (t / trick-01\n                  :ARG0 p\n                  :ARG1 (w / warden\n                        :mod (p3 / prison))\n                  :ARG2 (l / let-01\n                        :ARG0 w\n                        :ARG1 (f / free-04\n                              :ARG1 p)))))"
    ],
    "tree": [
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG0 (d / defraud-01))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG1 (c2 / convict-01))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG1 (e / escape-01\n                               :ARG0 (p / person)))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :mod (ii / ingenious))))",
      "(h / hear-01\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG1 (w / warden\n                              :mod (p3 / prison)))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG0 (d / defraud-01))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG1 (c2 / convict-01))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG1 (e / escape-01\n                               :ARG0 (p / person)))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :mod (ii / ingenious))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG1 (w / warden\n                              :mod (p3 / prison)))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(u / use-01\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 (p / person)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 (p / person)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(p / person\n   :ARG0 (d / defraud-01)\n   :ARG1 (c2 / convict-01))",
      "(p2 / plot-01\n    :ARG1 (e / escape-01\n             :ARG0 (p / person)))",
      "(p2 / plot-01\n    :ARG1 (e / escape-01\n             :ARG0 (p / person))\n    :mod (ii / ingenious))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison)))",
      "(t / trick-01\n   :ARG2 (l / let-01\n            :ARG0 (w / warden)))",
      "(t / trick-01\n   :ARG2 (l / let-01\n            :ARG1 (f / free-04\n                     :ARG1 (p / person))))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison))\n   :ARG2 (l / let-01\n            :ARG0 w))",
      "(l / let-01\n   :ARG1 (f / free-04\n            :ARG1 (p / person)))"
    ],
    "smus": [
      "It has been heard that fraudsters used.",
      "It was heard that the plot was used by the people.",
      "It was heard that people used to trick.",
      "It was heard that the convicted used.",
      "It was heard that the plot was used to escape.",
      "It was heard that an ingenious plot was used.",
      "It was heard that the prison wardens were used to trick.",
      "The court heard that the fraudsters used.",
      "The court heard that the plot was used by the people.",
      "The court heard that the trick was used by the people.",
      "The court heard that the convicted used the sentence.",
      "The court heard that the plot was used to escape.",
      "The court heard that the ingenious plot used.",
      "The court heard that the prison wardens were used to trick.",
      "People used a plot.",
      "The plot used was to escape.",
      "used an ingenious plot.",
      "People used to trick.",
      "used to trick prison wardens.",
      "used to trick people into letting them be free.",
      "The fraudster used a plot.",
      "Fraudsters used a plot to escape.",
      "The fraudsters used an ingenious plot.",
      "The convicted used a plot.",
      "The convicted used an escape plot.",
      "The convicted used an ingenious plot.",
      "Fraudsters used the trick.",
      "Fraudsters used the trick to trick prison wardens.",
      "Fraudsters used the trick of letting themselves free.",
      "The convicted used the trick.",
      "The convicted used the trick on the prison wardens.",
      "The convicted used the trick of letting the wardens.",
      "The convicted used the trick of letting them be free.",
      "People used the plot to trick prison wardens.",
      "People used the plot to trick the wardens into letting them in.",
      "The plot to 'escape' used to trick people.",
      "The plot to escape people used to trick prison wardens.",
      "The plot to escape people used to trick the wardens into letting them in.",
      "The plot to escape people used to trick the people into letting them free.",
      "Ingenious plot used to trick people.",
      "The ingenious plot used to trick prison wardens.",
      "The ingenious plot used to trick people into letting them free.",
      "Fraudsters used the plot to trick prison wardens.",
      "Fraudsters used a plot to trick the wardens into letting them in.",
      "Fraudsters used an escape plot to trick prison wardens.",
      "Fraudsters used the escape plot to trick the wardens into letting them in.",
      "Fraudsters used an ingenious plot to trick prison wardens.",
      "Fraudsters used an ingenious plot to trick the wardens into letting them in.",
      "The convicted used the plot to trick the prison wardens.",
      "The convicted used the plot to trick the wardens into letting them in.",
      "The convicted used the plot to trick the letting them free.",
      "The convicted used the plot to escape to trick the prison wardens.",
      "The convicted used the plot to escape to trick the wardens into letting them in.",
      "The convicted used the plot to escape to trick the letting them free.",
      "The convicted used an ingenious plot to trick the prison wardens.",
      "The convicted used an ingenious plot to trick the wardens into letting them in.",
      "Fraudsters get convicted.",
      "The plot was to escape.",
      "Ingenious plot to escape.",
      "Trick the prison wardens.",
      "Trick the wardens into letting them in.",
      "Trick of letting people be free.",
      "Trick the prison wardens into letting them.",
      "letting people be free."
    ]
  },
  {
    "instance_id": "pyrxsum-99",
    "summary": "The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.",
    "summary_trees": [
      "# ::snt The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.\n(r / reopen-01\n      :ARG1 (r2 / road\n            :name (n / name\n                  :op1 \"M6\")\n            :location (b / between\n                  :op1 (c / city\n                        :name (n2 / name\n                              :op1 \"Wolverhampton\"))\n                  :op2 (c2 / city\n                        :name (n3 / name\n                              :op1 \"Walsall\")))\n            :mod (m / motorway))\n      :time (a / after\n            :op1 (c3 / crash-01\n                  :mod (f / fatal))))"
    ],
    "tree": [
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\")))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway)))",
      "(r / reopen-01\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\"))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :location (b / between\n                          :op1 (c / city\n                                  :name (n2 / name\n                                            :op1 \"Wolverhampton\"))))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))"
    ],
    "smus": [
      "The M6 has been reopened.",
      "Motorway roads reopened",
      "Reopened after fatal crash",
      "The M6 was reopened after a fatal crash.",
      "The road between Wolverhampton was reopened after a fatal crash.",
      "Motorway roads reopened after a fatal crash."
    ]
  }
]