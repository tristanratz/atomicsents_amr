[
  {
    "instance_id": "pyrxsum-0",
    "summary": "Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.",
    "summary_trees": [
      "# ::snt Netherlands midfielder Wesley Sneijder has joined French Ligue 1 side Nice on a free transfer.\n(j / join-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Wesley\"\n                  :op2 \"Sneijder\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Netherlands\"))\n                  :ARG3 (m / midfielder)))\n      :ARG1 (t2 / team\n            :name (n3 / name\n                  :op1 \"Nice\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Ligue\"\n                        :op2 1)\n                  :mod (c / country\n                        :name (n5 / name\n                              :op1 \"France\"))))\n      :manner (t3 / transfer-01\n            :ARG1 p\n            :ARG1-of (f / free-03)))"
    ],
    "tree": [
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\")))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\")))))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Nice\"))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Wesley\"\n                     :op2 \"Sneijder\"))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (m / midfielder)))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Ligue\"\n                               :op2 1)))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 p))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Netherlands\"))))\n   :ARG1 (t2 / team\n             :mod (l / league\n                     :mod (c / country\n                             :name (n5 / name\n                                       :op1 \"France\"))))\n   :manner (t3 / transfer-01\n               :ARG1 (f / free-03)))"
    ],
    "smus": [
      "Wesley Sneijder has joined Nice.",
      "The midfielder has joined Nice.",
      "Wesley Sneijder has joined the Ligue 1 team.",
      "The Dutch have joined Nice.",
      "The midfielder has joined the Ligue 1 team.",
      "Wesley Sneijder has joined Nice on a transfer.",
      "The midfielder has joined Nice on a transfer.",
      "Wesley Sneijder has joined the French league team.",
      "The midfielder has joined the French league team.",
      "Wesley Sneijder has joined Nice on a free transfer.",
      "The midfielder has joined Nice on a free transfer.",
      "The Dutch have joined the Ligue 1 side.",
      "Wesley Sneijder has joined the Ligue 1 team on a transfer.",
      "The Dutch have joined Nice on transfer.",
      "The midfielder has joined the Ligue 1 team on a transfer.",
      "The Dutch have joined the French league team.",
      "Wesley Sneijder has joined the Ligue 1 team on a free transfer.",
      "Wesley sneijder has joined the French league side on a transfer.",
      "The Dutch have joined Nice on a free transfer.",
      "The midfielder has joined the Ligue 1 team on a free transfer.",
      "The midfielder has joined the French league team on a transfer.",
      "Wesley sneijder has joined the French league side on a free transfer.",
      "The midfielder has joined the French league team on a free transfer.",
      "The Dutch have joined the Ligue 1 side on a transfer.",
      "The Dutch have joined the Ligue 1 team on a free transfer.",
      "The Dutch have joined the French league team on transfer.",
      "The Dutch have joined the French league team on a free transfer."
    ]
  },
  {
    "instance_id": "pyrxsum-1",
    "summary": "A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.",
    "summary_trees": [
      "# ::snt A State Department official \"pressured\" the FBI to change the classification of a Hillary Clinton email in a \"quid pro quo\", according to FBI documents.\n(s / say-01\n      :ARG0 (d / document\n            :source (g / government-organization\n                  :name (n / name\n                        :op1 \"FBI\")))\n      :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g2 / government-organization\n                              :name (n2 / name\n                                    :op1 \"State\"\n                                    :op2 \"Department\"))\n                        :ARG2 (o / official)))\n            :ARG1 g\n            :ARG2 (c / change-01\n                  :ARG0 g\n                  :ARG1 (c2 / classify-01\n                        :ARG1 (e / email-01\n                              :ARG0 (p3 / person\n                                    :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\"))))\n                  :manner (q / quid-pro-quo))))"
    ],
    "tree": [
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official))))",
      "(c2 / classify-01\n    :ARG1 (e / email-01\n             :ARG0 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Hillary\"\n                                 :op2 \"Clinton\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG1 g))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\")))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(c / change-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (e / email-01\n                      :ARG0 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\")))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG0 g)))",
      "(c / change-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (e / email-01\n                      :ARG0 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Hillary\"\n                                          :op2 \"Clinton\"))))\n   :manner (q / quid-pro-quo))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :manner (q / quid-pro-quo))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"FBI\"))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :manner (q / quid-pro-quo)))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (o / official)))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (o / official)))\n   :ARG2 (c / change-01\n            :ARG1 (c2 / classify-01\n                      :ARG1 (e / email-01\n                               :ARG0 (p3 / person\n                                         :name (n3 / name\n                                                   :op1 \"Hillary\"\n                                                   :op2 \"Clinton\"))))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g2 / government-organization\n                                         :name (n2 / name\n                                                   :op1 \"State\"\n                                                   :op2 \"Department\"))))))",
      "(s / say-01\n   :ARG0 (d / document\n            :source (g / government-organization\n                       :name (n / name\n                                :op1 \"FBI\")))\n   :ARG1 (p / pressure-01\n            :ARG2 (c / change-01\n                     :ARG1 (c2 / classify-01\n                               :ARG1 (e / email-01\n                                        :ARG0 (p3 / person\n                                                  :name (n3 / name\n                                                            :op1 \"Hillary\"\n                                                            :op2 \"Clinton\")))))))",
      "(p / pressure-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g2 / government-organization\n                                :name (n2 / name\n                                          :op1 \"State\"\n                                          :op2 \"Department\"))))\n   :ARG2 (c / change-01\n            :ARG1 (c2 / classify-01\n                      :ARG1 (e / email-01\n                               :ARG0 (p3 / person\n                                         :name (n3 / name\n                                                   :op1 \"Hillary\"\n                                                   :op2 \"Clinton\"))))))"
    ],
    "smus": [
      "The official pressured.",
      "Clinton email classified.",
      "The official pressured the FBI to change.",
      "The FBI documents say they were under pressure.",
      "Pressure from the State Department.",
      "The official pressured for a quid pro quo change.",
      "Change the classification of Hillary Clinton's email.",
      "The FBI documents said pressure was on to change.",
      "Hillary Clinton's email classification would change quid pro quo.",
      "The FBI documents said pressure was on to change \"quid pro quo.\"",
      "The State Department pressured the FBI to change.",
      "The State Department pressured for a quid pro quo change.",
      "According to FBI documents, the official exerted pressure.",
      "The official pressured to change the classification of Hillary Clinton's email.",
      "According to the FBI documents, the State Department pressured.",
      "According to the FBI documents, pressure was exerted to change the classification of Hillary Clinton's email.",
      "The State Department pressured to change the classification of Hillary Clinton's email."
    ]
  },
  {
    "instance_id": "pyrxsum-2",
    "summary": "American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.",
    "summary_trees": [
      "# ::snt American Jason Dufner will take a five-shot lead into the third round of the Memorial Tournament after carding an eagle on the 18th hole on Friday.\n(t / take-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jason\"\n                  :op2 \"Dufner\")\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"America\")))\n      :ARG1 (l / lead-01\n            :ARG0 p\n            :ARG2 (s / shot\n                  :quant 5))\n      :ARG2 (r / round\n            :ord (o / ordinal-entity\n                  :value 3)\n            :subevent-of (g / game\n                  :name (n3 / name\n                        :op1 \"Memorial\"\n                        :op2 \"Tournament\")))\n      :time (a / after\n            :op1 (c2 / card-01\n                  :ARG0 p\n                  :ARG1 (e / eagle)\n                  :time (h / hole\n                        :ord (o2 / ordinal-entity\n                              :value 18))\n                  :time (d / date-entity\n                        :weekday (f / friday)))))"
    ],
    "tree": [
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3)))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 p)))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\"))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG0 (p / person\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"America\")))\n   :ARG1 (l / lead-01\n            :ARG0 p)\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Jason\" :op2 \"Dufner\"))))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (d / date-entity\n                              :weekday (f / friday)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :ord (o / ordinal-entity\n                    :value 3))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))",
      "(t / take-01\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :ARG2 (r / round\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Memorial\"\n                                   :op2 \"Tournament\")))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :ARG1 (e / eagle))))",
      "(t / take-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jason\"\n                     :op2 \"Dufner\"))\n   :ARG1 (l / lead-01\n            :ARG2 (s / shot\n                     :quant 5))\n   :time (a / after\n            :op1 (c2 / card-01\n                     :time (h / hole\n                              :ord (o2 / ordinal-entity\n                                       :value 18)))))"
    ],
    "smus": [
      "Take the lead with 5 shots.",
      "Jason Dufner will take the lead in the third round.",
      "After carding Jason Dufner will take the lead.",
      "Jason Dufner will take the lead.",
      "After carding an eagle, Jason Dufner will take the lead.",
      "The Americans will take the lead.",
      "Take the lead on 5 shots in round 3.",
      "Jason Dufner will take the lead with 5 shots.",
      "Jason Dufner will take the lead in the Memorial Tournament round.",
      "After carding on Friday, Jason Dufner will take the lead.",
      "After carding the eagle, take the lead on 5 shots.",
      "Americans will take the lead with 5 shots.",
      "After carding at the 18th hole, Jason Dufner will take the lead.",
      "After carding on Friday, take the lead with 5 shots.",
      "Jason Dufner will take the lead in the third round after carding.",
      "Jason Dufner will take the lead after carding.",
      "After carding on the 18th hole, take the lead with 5 shots.",
      "Jason Dufner will take the lead in the third round after carding an eagle.",
      "America will take the lead in the third round.",
      "Jason Dufner will take the lead after carding an eagle.",
      "After carding, the Americans will take the lead.",
      "After carding Jason Dufner, the lead of five shots will take the third round.",
      "Jason Dufner will take the lead with five shots in the third round.",
      "Jason Dufner will take the lead with 5 shots after carding.",
      "After carding the eagle, the Americans will take the lead.",
      "Jason Dufner will take the lead in the third round after carding on Friday.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding.",
      "After carding the eagle, take the lead on five shots into the third round.",
      "Jason Dufner will take the lead in the round of the Memorial Tournament.",
      "The Americans will take the lead with five shots in the third round.",
      "Jason Dufner will take the lead after carding on Friday.",
      "Jason Dufner will take the lead with five shots after carding an eagle.",
      "After carding, the Americans will take the lead with 5 shots.",
      "Jason Dufner will take the lead into the third round after carding at the 18th hole.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding an eagle.",
      "The Americans will take the lead in the Memorial Tournament round.",
      "Jason Dufner will take the lead after carding at the 18th hole.",
      "After carding Friday, the Americans will take the lead.",
      "After carding an eagle, the Americans will take the lead with 5 shots.",
      "After carding Friday, take the lead on five shots into the third round.",
      "After carding Jason Dufner, it will take the lead with 5 shots in the Memorial Tournament round.",
      "Jason Dufner will take the lead with five shots in the round of the Memorial Tournament.",
      "Jason Dufner will take the lead with five shots after carding on Friday.",
      "After carding in the 18th hole, the Americans will take the lead.",
      "Jason Dufner will take the lead in the Memorial Tournament round after carding on Friday.",
      "After carding at the 18th hole, take the lead with 5 shots into the third round.",
      "The Americans will take the lead with 5 shots in the round of the Memorial Tournament.",
      "Jason Dufner will take the lead with a 5-shot after carding at the 18th hole.",
      "After carding Friday, the Americans will take the lead with 5 shots.",
      "Jason Dufner will take the lead into the Memorial Tournament round after carding at the 18th hole.",
      "After carding at the 18th hole, the Americans will take the lead with 5 shots.",
      "After carding at the 18th hole, take the lead with 5 shots into the round of the Memorial Tournament."
    ]
  },
  {
    "instance_id": "pyrxsum-3",
    "summary": "A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.",
    "summary_trees": [
      "# ::snt A British man has been been questioned in Peru after posing naked at the Machu Picchu ruins, local police have said.\n(s / say-01\n      :ARG0 (p / police\n            :ARG1-of (l / local-02))\n      :ARG1 (q / question-01\n            :ARG1 (m / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 \"Peru\"))\n            :time (a / after\n                  :op1 (p2 / pose-01\n                        :ARG0 m\n                        :manner (n3 / naked)\n                        :location (r / ruin\n                              :name (n4 / name\n                                    :op1 \"Machu\"\n                                    :op2 \"Picchu\"))))))"
    ],
    "tree": [
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\"))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :location (c2 / country\n                          :name (n2 / name\n                                    :op1 \"Peru\"))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :ARG0 (m / man)))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :manner (n3 / naked)))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Peru\")))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :ARG0 m)))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :ARG1 (m / man\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"Britain\")))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :manner (n3 / naked))))",
      "(s / say-01\n   :ARG0 (p / police\n            :ARG1 (l / local-02))\n   :ARG1 (q / question-01\n            :time (a / after\n                     :op1 (p2 / pose-01\n                              :location (r / ruin\n                                           :name (n4 / name\n                                                     :op1 \"Machu\"\n                                                     :op2 \"Picchu\"))))))",
      "(q / question-01\n   :ARG1 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Britain\")))\n   :time (a / after\n            :op1 (p2 / pose-01\n                     :location (r / ruin\n                                  :name (n4 / name\n                                            :op1 \"Machu\"\n                                            :op2 \"Picchu\")))))"
    ],
    "smus": [
      "The British man was questioned.",
      "Local police said the question was being questioned in Peru.",
      "Local police said the question was asked after the man was posing.",
      "Local police said the questioning occurred after the naked man was posing.",
      "The British man was questioned in Peru.",
      "The British man was questioned after posing.",
      "Local police said the British man was questioned.",
      "The British man was questioned after posing naked.",
      "Local police said the question was posed after posing in the Ruins of Machu Picchu.",
      "The British man was questioned after posing in the Machu Picchu ruin."
    ]
  },
  {
    "instance_id": "pyrxsum-4",
    "summary": "Great Britain skeleton racer David Swift has retired from the sport.",
    "summary_trees": [
      "# ::snt Great Britain skeleton racer David Swift has retired from the sport.\n(r / retire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Swift\")\n            :ARG0-of (r2 / race-02\n                  :ARG3 (s / skeleton))\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Great\"\n                        :op2 \"Britain\")))\n      :ARG1 (s2 / sport))"
    ],
    "tree": [
      "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\")))",
      "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton))))",
      "(r / retire-01\n   :ARG0 (p / person\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Great\"\n                              :op2 \"Britain\"))))",
      "(r / retire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Swift\"))\n   :ARG1 (s2 / sport))",
      "(r / retire-01\n   :ARG0 (p / person\n            :ARG0 (r2 / race-02\n                      :ARG3 (s / skeleton)))\n   :ARG1 (s2 / sport))"
    ],
    "smus": [
      "David Swift retired.",
      "The skeleton race has retired.",
      "Great Britain retires.",
      "David Swift has retired from the sport.",
      "Skeletal racers have retired from sport."
    ]
  },
  {
    "instance_id": "pyrxsum-5",
    "summary": "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.",
    "summary_trees": [
      "# ::snt Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike and Superstock classes in Thursday's delayed practice sessions at Dundrod.\n(s / set-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\"\n                  :op2 \"Dunlop\"))\n      :ARG1 (t / time\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (f / fast-02)\n                  :ARG3 (m / most)))\n      :beneficiary (a / and\n            :op1 (c / class\n                  :name (n2 / name\n                        :op1 \"Ulster\"\n                        :op2 \"Grand\"\n                        :op3 \"Prix\"\n                        :op4 \"Superbike\"))\n            :op2 (c2 / class\n                  :name (n3 / name\n                        :op1 \"Superstock\")))\n      :time (s2 / session\n            :mod (p2 / practice-01)\n            :ARG1-of (d / delay-01)\n            :location (c3 / city\n                  :name (n4 / name\n                        :op1 \"Dundrod\"))\n            :time (d2 / date-entity\n                  :weekday (t2 / thursday))))"
    ],
    "tree": [
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :mod (p2 / practice-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :ARG1 (d / delay-01)))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c2 / class\n                    :name (n3 / name\n                              :op1 \"Superstock\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :time (d2 / date-entity\n                       :weekday (t2 / thursday))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :time (s2 / session\n             :location (c3 / city\n                           :name (n4 / name\n                                     :op1 \"Dundrod\"))))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG2 (f / fast-02)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))",
      "(s / set-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Dunlop\"))\n   :ARG1 (t / time\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :beneficiary (c / class\n                   :name (n2 / name\n                             :op1 \"Ulster\"\n                             :op2 \"Grand\"\n                             :op3 \"Prix\"\n                             :op4 \"Superbike\")))"
    ],
    "smus": [
      "Set the fastest times.",
      "Fast times were set during practice sessions.",
      "Fast times were set for delayed sessions.",
      "Fast times were set for the Superstock classes.",
      "The quickest times were set for the Superstock classes.",
      "Fast times were set for Thursday sessions.",
      "Michael Dunlop set fast times.",
      "Fast times were set during sessions in Dundrod.",
      "Sessions in Dundrod set the fastest times.",
      "Fast times were set for the Ulster Grand Prix Superbike classes.",
      "The fastest times were set for the Ulster Grand Prix Superbike classes.",
      "Michael Dunlop set fast times during practice sessions.",
      "Michael Dunlop set fast times for delayed sessions.",
      "Michael Dunlop set the fastest times for delayed sessions.",
      "Michael Dunlop set fast times for the Superstock classes.",
      "Michael Dunlop set the fastest times for the Superstock classes.",
      "Michael Dunlop set fast times for Thursday sessions.",
      "Michael Dunlop set fast times during sessions in Dundrod.",
      "Michael Dunlop set the most times for the sessions in Dundrod.",
      "Michael Dunlop set fast times for the Ulster Grand Prix Superbike classes.",
      "Michael Dunlop set the fastest times for the Ulster Grand Prix Superbike classes."
    ]
  },
  {
    "instance_id": "pyrxsum-6",
    "summary": "Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.",
    "summary_trees": [
      "# ::snt Argentine club Newell's Old Boys have re-signed Sunderland striker Ignacio Scocco on a five-year contract.\n(s / sign-02\n      :ARG0 (c / club\n            :name (n / name\n                  :op1 \"Old\"\n                  :op2 \"Boys\")\n            :mod (c2 / country\n                  :name (n2 / name\n                        :op1 \"Argentina\"))\n            :poss (t / team\n                  :name (n3 / name\n                        :op1 \"Newell's\")))\n      :ARG1 (p / person\n            :name (n4 / name\n                  :op1 \"Ignacio\"\n                  :op2 \"Scocco\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t2 / team\n                        :name (n5 / name\n                              :op1 \"Sunderland\"))\n                  :ARG3 (s2 / striker)))\n      :ARG3 (c3 / contract\n            :duration (t3 / temporal-quantity\n                  :quant 5\n                  :unit (y / year)))\n      :mod (a / again))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\")))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker))))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Old\"\n                     :op2 \"Boys\"))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t2 / team\n                               :name (n5 / name\n                                         :op1 \"Sunderland\"))))\n   :mod (a / again))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Argentina\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :name (n4 / name\n                      :op1 \"Ignacio\"\n                      :op2 \"Scocco\"))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))",
      "(s / sign-02\n   :ARG0 (c / club\n            :poss (t / team\n                     :name (n3 / name\n                               :op1 \"Newell's\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s2 / striker)))\n   :ARG3 (c3 / contract\n             :duration (t3 / temporal-quantity\n                           :quant 5)))"
    ],
    "smus": [
      "The Old Boys have signed Ignacio Scocco.",
      "Old Boys have signed a striker.",
      "Ignacio Scocco was signed by an Argentinian club.",
      "The striker has been signed by an Argentinian club.",
      "Ignacio Scocco was signed by Newell's club.",
      "The striker has been signed by Newell's club.",
      "The Old Boys have signed Ignacio Scocco again.",
      "Old Boys have signed a striker again.",
      "The Argentinian club has signed Ignacio Scocco again.",
      "The Argentinian club have again signed a striker.",
      "Newell's club has signed Ignacio Scocco again.",
      "The striker has been signed again by Newell's club.",
      "The Old Boys have signed Ignacio Scocco for a five-year contract.",
      "Old Boys have signed a striker on a five-year contract.",
      "The Argentinian club have again signed the Swans.",
      "The Argentinian club has signed Ignacio Scocco for a five-year contract.",
      "The Argentinian club have signed the striker a five-year contract.",
      "Newell's club has signed Ignacio Scocco for a five-year contract.",
      "Newell's club have signed the striker on a five-year contract."
    ]
  },
  {
    "instance_id": "pyrxsum-7",
    "summary": "West Ham say they are \"disappointed\" with a ruling that the terms of their rental of the Olympic Stadium from next season should be made public.",
    "summary_trees": [
      "# ::snt West Ham say they are \"disappointed\" with a ruling that the terms of their rental of the Olympic Stadium from next season should be made public.\n(s / say-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"West\"\n                  :op2 \"Ham\"))\n      :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                  :ARG1 (r2 / recommend-01\n                        :ARG1 (p / public-02\n                              :ARG1 (t2 / term\n                                    :mod (r3 / rent-01\n                                          :ARG0 t\n                                          :ARG1 (s2 / stadium\n                                                :name (n2 / name\n                                                      :op1 \"Olympic\"\n                                                      :op2 \"Stadium\"))\n                                          :time (s3 / season\n                                                :mod (n3 / next)))))))\n            :ARG1 t))"
    ],
    "tree": [
      "(r3 / rent-01\n    :ARG1 (s2 / stadium\n              :name (n2 / name\n                        :op1 \"Olympic\"\n                        :op2 \"Stadium\")))",
      "(r2 / recommend-01\n    :ARG1 (p / public-02\n             :ARG1 (t2 / term\n                       :mod (r3 / rent-01\n                                :ARG0 (t / team :name (n / name :op1 \"West\" :op2 \"Ham\"))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG1 t))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :ARG0 (t / team :name (n / name :op1 \"West\" :op2 \"Ham\")))))))",
      "(r2 / recommend-01\n    :ARG1 (p / public-02\n             :ARG1 (t2 / term\n                       :mod (r3 / rent-01\n                                :time (s3 / season\n                                          :mod (n3 / next))))))",
      "(r3 / rent-01\n    :ARG1 (s2 / stadium\n              :name (n2 / name\n                        :op1 \"Olympic\"\n                        :op2 \"Stadium\"))\n    :time (s3 / season\n              :mod (n3 / next)))",
      "(d / disappoint-01\n   :ARG0 (r / rule-01\n            :ARG1 (r2 / recommend-01\n                      :ARG1 (p / public-02\n                               :ARG1 (t2 / term\n                                         :mod (r3 / rent-01\n                                                  :ARG0 (t / team :name (n / name :op1 \"West\" :op2 \"Ham\"))))))))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :time (s3 / season\n                                                   :mod (n3 / next)))))))",
      "(r2 / recommend-01\n    :ARG1 (p / public-02\n             :ARG1 (t2 / term\n                       :mod (r3 / rent-01\n                                :ARG1 (s2 / stadium\n                                          :name (n2 / name\n                                                    :op1 \"Olympic\"\n                                                    :op2 \"Stadium\"))))))",
      "(d / disappoint-01\n   :ARG0 (r / rule-01\n            :ARG1 (r2 / recommend-01\n                      :ARG1 (p / public-02\n                               :ARG1 (t2 / term\n                                         :mod (r3 / rent-01\n                                                  :time (s3 / season\n                                                            :mod (n3 / next))))))))",
      "(r / rule-01\n   :ARG1 (r2 / recommend-01\n             :ARG1 (p / public-02\n                      :ARG1 (t2 / term\n                                :mod (r3 / rent-01\n                                         :ARG1 (s2 / stadium\n                                                   :name (n2 / name\n                                                             :op1 \"Olympic\"\n                                                             :op2 \"Stadium\")))))))",
      "(d / disappoint-01\n   :ARG0 (r / rule-01\n            :ARG1 (r2 / recommend-01\n                      :ARG1 (p / public-02\n                               :ARG1 (t2 / term\n                                         :mod (r3 / rent-01\n                                                  :ARG1 (s2 / stadium\n                                                            :name (n2 / name\n                                                                      :op1 \"Olympic\"\n                                                                      :op2 \"Stadium\"))))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :ARG0 t)))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :time (s3 / season\n                                                                     :mod (n3 / next)))))))))",
      "(s / say-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Ham\"))\n   :ARG1 (d / disappoint-01\n            :ARG0 (r / rule-01\n                     :ARG1 (r2 / recommend-01\n                               :ARG1 (p / public-02\n                                        :ARG1 (t2 / term\n                                                  :mod (r3 / rent-01\n                                                           :ARG1 (s2 / stadium\n                                                                     :name (n2 / name\n                                                                               :op1 \"Olympic\"\n                                                                               :op2 \"Stadium\")))))))))"
    ],
    "smus": [
      "Olympic Stadium is rented.",
      "The terms of the West Ham's rental should be public.",
      "West Ham say they are disappointed.",
      "The ruling is that the terms of the West Ham's rental should be public.",
      "Rent terms for next season should be public.",
      "The Olympic Stadium will be on rent next season.",
      "The ruling that the terms of West Ham's rental should be public was disappointing.",
      "The ruling is that the terms of the next season's rent should be public.",
      "The terms of the Olympic Stadium's rental should be public.",
      "The ruling that the terms of the next season's rent should be public was disappointing.",
      "The ruling is that the terms of the Olympic Stadium's rental should be public.",
      "The ruling that the terms of the Olympic Stadium's rental should be public was disappointing.",
      "West Ham say the ruling that their rental terms should be public is disappointing.",
      "West Ham say the ruling that the terms of the next season's rent should be public was disappointing.",
      "West Ham say the ruling that the terms of the Olympic stadium's rental should be public was disappointing."
    ]
  },
  {
    "instance_id": "pyrxsum-8",
    "summary": "Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.",
    "summary_trees": [
      "# ::snt Ex-army chief Abdul Fattah al-Sisi has vowed to to tackle \"terrorism\" and bring security, after being sworn in as Egypt's new president.\n(v / vow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abdul\"\n                  :op2 \"Fattah\"\n                  :op3 \"al-Sisi\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (a / army)\n                  :ARG2 (c / chief)\n                  :time (e / ex)))\n      :ARG1 (a2 / and\n            :op1 (t / tackle-01\n                  :ARG0 p\n                  :ARG1 (t2 / terrorism))\n            :op2 (b / bring-01\n                  :ARG0 p\n                  :ARG1 (s / security)))\n      :time (a3 / after\n            :op1 (s2 / swear-in-06\n                  :ARG1 p\n                  :ARG2 (p2 / person\n                        :ARG0-of (h2 / have-org-role-91\n                              :ARG1 (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"Egypt\"))\n                              :ARG2 (p3 / president\n                                    :ARG1-of (n3 / new-01)))))))"
    ],
    "tree": [
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\")))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG1 p)))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (e / ex)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abdul\"\n                     :op2 \"Fattah\"\n                     :op3 \"al-Sisi\"))\n   :ARG1 (b / bring-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (a / army)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG0 p)\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Egypt\")))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (t / tackle-01\n            :ARG1 (t2 / terrorism))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))",
      "(v / vow-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / chief)))\n   :ARG1 (b / bring-01\n            :ARG1 (s / security))\n   :time (a3 / after\n             :op1 (s2 / swear-in-06\n                      :ARG2 (p2 / person\n                                :ARG0 (h2 / have-org-role-91\n                                          :ARG2 (p3 / president\n                                                    :ARG1 (n3 / new-01)))))))"
    ],
    "smus": [
      "The chief vowed --",
      "Abdul Fattah al-Sisi vowed --",
      "The chief vowed to tackle the situation.",
      "The chief vowed to bring the matter to the fore.",
      "Ex vows to tackle",
      "Ex vows to bring",
      "Abdul Fattah al-Sisi vowed to tackle the situation.",
      "Abdul Fattah al-Sisi vowed to bring.",
      "The chief vowed to tackle terrorism.",
      "The chief vowed to bring security.",
      "Ex vows to tackle terrorism",
      "Ex vows to bring security",
      "Abdul Fattah al-Sisi vowed to tackle terrorism.",
      "Abdul Fattah al-Sisi vowed to bring security.",
      "The chief vowed after being sworn in.",
      "After being sworn in, the Ex vowed to.",
      "Abdul Fattah al-Sisi vowed after being sworn in.",
      "The chief vowed to tackle after being sworn in.",
      "The chief vowed to bring after being sworn in.",
      "After being sworn in, the ex vowed to tackle.",
      "After being sworn in, the Ex vowed to bring.",
      "Abdul Fattah al-Sisi vowed to tackle after being sworn in.",
      "After being sworn in, Abdul Fattah al-Sisi vowed to bring.",
      "The chief vowed to tackle terrorism after being sworn in.",
      "The chief vowed to bring security after being sworn in.",
      "Ex vows to tackle terrorism after swearing in",
      "After being sworn in, the Ex vowed to bring security.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after being sworn in.",
      "Abdul Fattah al-Sisi vowed to bring security after being sworn in.",
      "The chief vowed after the new president is sworn in.",
      "Ex-spokes vowed after the new president is sworn in.",
      "Abdul Fattah al-Sisi vowed after the new president is sworn in.",
      "The chief vowed after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed after Egypt's swearing-in.",
      "After the new president is sworn in, the Army vows to bring in.",
      "The chief vowed to tackle after the new president is sworn in.",
      "After the new president is sworn in, the chief vowed to bring in.",
      "Abdul Fattah al-Sisi vowed to tackle after the new president is sworn in.",
      "After the new president is sworn in Abdul Fattah al-Sisi vowed to bring.",
      "After the new president is sworn in, the Army vows to bring security.",
      "The chief vowed to tackle after Egypt's swearing-in.",
      "The chief vowed to tackle terrorism after the new president is sworn in.",
      "The chief vowed to bring security after the new president is sworn in.",
      "Ex vows to tackle after Egypt is sworn in",
      "After Egypt's swearing-in, the ex vowed to bring.",
      "Abdul Fattah al-Sisi vowed to tackle after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after the new president is sworn in.",
      "Abdul Fattah al-Sisi vowed to bring security after the new president is sworn in.",
      "The chief vowed to tackle terrorism after Egypt's swearing-in.",
      "The chief vowed to bring security after Egypt's sworn in.",
      "Ex vows to tackle terrorism after Egypt's swearing-in",
      "Abdul Fattah al-Sisi vowed to tackle terrorism after Egypt's swearing-in.",
      "Abdul Fattah al-Sisi vowed to bring security after Egypt's swearing-in."
    ]
  },
  {
    "instance_id": "pyrxsum-9",
    "summary": "Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in his honour at Cheltenham as 'flattering.'",
    "summary_trees": [
      "# ::snt Twenty-times champion jump jockey Sir Anthony McCoy has described having a statue put up in his honour at Cheltenham as 'flattering.'\n(d / describe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Anthony\"\n                  :op3 \"McCoy\")\n            :ARG0-of (r / ride-01\n                  :ARG1 (j / jump-03))\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / champion\n                        :frequency 20)))\n      :ARG1 (h2 / have-04\n            :ARG1 (p2 / put-up-13\n                  :ARG1 (s / statue\n                        :ARG2-of (h3 / honor-01\n                              :ARG1 p))\n                  :location (s2 / sports-facility\n                        :name (n2 / name\n                              :op1 \"Cheltenham\"))))\n      :ARG2 (f / flatter-01))"
    ],
    "tree": [
      "(d / describe-01\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Anthony\" :op3 \"McCoy\")))))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p)))))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (r / ride-01\n                     :ARG1 (j / jump-03)))\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Anthony\"\n                     :op3 \"McCoy\"))\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p))))\n   :ARG2 (f / flatter-01))",
      "(d / describe-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / champion\n                              :frequency 20)))\n   :ARG1 (h2 / have-04\n             :ARG1 (p2 / put-up-13\n                       :ARG1 (s / statue\n                                :ARG2 (h3 / honor-01\n                                          :ARG1 p))))\n   :ARG2 (f / flatter-01))"
    ],
    "smus": [
      "Having a statue put up in honor of Sir Anthony McCoy was described as flattering.",
      "Jumper described having a statue of his honor put up.",
      "Sir Anthony McCoy has described having a statue in his honor put up.",
      "The champion, who has won 20 times, has described having a statue of his honor put up.",
      "A jumper has described having an honor statue put up.",
      "Sir Anthony McCoy has described having his honor statue put up as flattering.",
      "The champion, who has won 20 times, has described having his honor statue put up as flattering."
    ]
  },
  {
    "instance_id": "pyrxsum-10",
    "summary": "A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.",
    "summary_trees": [
      "# ::snt A cafe owner has defended a sign urging people to eat cake to avoid being kidnapped in the town where April Jones was abducted and murdered in 2012.\n(d / defend-01\n      :ARG0 (p / person\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (s / sign\n            :ARG0-of (u / urge-01\n                  :ARG1 (p2 / person)\n                  :ARG2 (e / eat-01\n                        :ARG0 p2\n                        :ARG1 (c2 / cake)\n                        :purpose (a / avoid-01\n                              :ARG0 p2\n                              :ARG1 (k / kidnap-01\n                                    :ARG1 p2\n                                    :location (t / town\n                                          :location-of (a2 / and\n                                                :op1 (a3 / abduct-01\n                                                      :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                  :op1 \"April\"\n                                                                  :op2 \"Jones\")))\n                                                :op2 (m / murder-01\n                                                      :ARG1 p3)\n                                                :time (d2 / date-entity\n                                                      :year 2012)))))))))"
    ],
    "tree": [
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :ARG1 (p2 / person)))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG0 (p2 / person)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe))))",
      "(a3 / abduct-01\n    :ARG1 (p3 / person\n              :name (n / name\n                       :op1 \"April\"\n                       :op2 \"Jones\")))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :ARG1 (p2 / person))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (d2 / date-entity\n                                       :year 2012))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (d2 / date-entity\n                                                   :year 2012)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG1 (p2 / person))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (a3 / abduct-01\n                                       :ARG1 (p3 / person\n                                                 :name (n / name\n                                                          :op1 \"April\"\n                                                          :op2 \"Jones\"))))))",
      "(a / avoid-01\n   :ARG1 (k / kidnap-01\n            :location (t / town\n                         :location (m / murder-01\n                                      :ARG1 (p3 / person\n                                                :name (n / name\n                                                         :op1 \"April\"\n                                                         :op2 \"Jones\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG0 (p2 / person)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :ARG1 (c2 / cake)))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (s / sign\n            :ARG0 (u / urge-01\n                     :ARG2 (e / eat-01\n                              :purpose (a / avoid-01\n                                          :ARG0 (p2 / person))))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (a3 / abduct-01\n                                                   :ARG1 (p3 / person\n                                                             :name (n / name\n                                                                      :op1 \"April\"\n                                                                      :op2 \"Jones\")))))))",
      "(e / eat-01\n   :ARG1 (c2 / cake)\n   :purpose (a / avoid-01\n               :ARG1 (k / kidnap-01\n                        :location (t / town\n                                     :location (m / murder-01\n                                                  :ARG1 (p3 / person\n                                                            :name (n / name\n                                                                     :op1 \"April\"\n                                                                     :op2 \"Jones\")))))))"
    ],
    "smus": [
      "To avoid people being kidnapped.",
      "Eat the cake to avoid people.",
      "The cafe owners have defended.",
      "April Jones was abducted.",
      "Eat the cake to avoid people being kidnapped.",
      "To avoid being kidnapped in a 2012 town.",
      "Eat the cake to avoid being kidnapped in a 2012 town.",
      "The cafe owner has defended the urging sign.",
      "To avoid being kidnapped in the town where April Jones was abducted.",
      "To avoid being kidnapped in a town where April Jones was murdered.",
      "The cafe owner has defended the sign urging people to eat.",
      "The cafe owner has defended the sign urging people to eat the cake.",
      "The cafe owner has defended the sign urging people to eat to avoid.",
      "Eat the cake to avoid being kidnapped in the town where April Jones was abducted.",
      "Eat the cake to avoid being kidnapped in the town where April Jones was murdered.",
      "The cafe owner has defended the sign urging people to eat to avoid being kidnapped.",
      "The cafe owner has defended a sign urging people to eat to avoid being kidnapped in the town of 2012",
      "The cafe owner defended a sign urging people to eat to avoid being kidnapped in the town where April Jones was abducted.",
      "The cafe owner defended a sign urging people to eat to avoid being kidnapped in the town where April Jones was murdered."
    ]
  },
  {
    "instance_id": "pyrxsum-11",
    "summary": "Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.",
    "summary_trees": [
      "# ::snt Three people have been killed and at least 62 others wounded in two explosions on passenger buses in the Kenyan capital Nairobi, officials say.\n(s / say-01\n      :ARG0 (o / official)\n      :ARG1 (a / and\n            :op1 (k / kill-01\n                  :ARG0 (e / explode-01\n                        :quant 2\n                        :ARG1 (b / bus\n                              :mod (p / passenger))\n                        :location (c / city\n                              :name (n / name\n                                    :op1 \"Nairobi\")\n                              :ARG0-of (h / have-org-role-91\n                                    :ARG1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Kenya\"))\n                                    :ARG2 (c3 / capital))))\n                  :ARG1 (p2 / person\n                        :quant 3))\n            :op2 (w / wound-01\n                  :ARG0 e\n                  :ARG1 (p3 / person\n                        :quant (a2 / at-least\n                              :op1 62)\n                        :mod (o2 / other)))))"
    ],
    "tree": [
      "(k / kill-01\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger)))",
      "(w / wound-01\n   :ARG1 (p3 / person\n             :mod (o2 / other)))",
      "(e / explode-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Nairobi\")))",
      "(w / wound-01\n   :ARG1 (p3 / person\n             :quant (a2 / at-least\n                        :op1 62)))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2)\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :quant 2)\n   :ARG1 (p2 / person\n             :quant 3))",
      "(e / explode-01\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG2 (c3 / capital))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :quant 2)))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :quant 3)))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :mod (o2 / other))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG2 (c3 / capital)))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (w / wound-01\n            :ARG1 (p3 / person\n                      :quant (a2 / at-least\n                                 :op1 62))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :ARG1 (b / bus\n                     :mod (p / passenger)))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :ARG1 (b / bus\n                     :mod (p / passenger)))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(e / explode-01\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG1 (c2 / country\n                                   :name (n2 / name\n                                             :op1 \"Kenya\")))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :ARG1 (b / bus\n                              :mod (p / passenger)))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Nairobi\")))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Nairobi\")))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(e / explode-01\n   :ARG1 (b / bus\n            :mod (p / passenger))\n   :location (c / city\n                :ARG0 (h / have-org-role-91\n                         :ARG2 (c3 / capital))))",
      "(s / say-01\n   :ARG0 (o / official)\n   :ARG1 (k / kill-01\n            :ARG0 (e / explode-01\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Nairobi\")))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG2 (c3 / capital))))\n   :ARG1 (p2 / person\n             :quant 3))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG1 (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Kenya\"))))))",
      "(k / kill-01\n   :ARG0 (e / explode-01\n            :location (c / city\n                         :ARG0 (h / have-org-role-91\n                                  :ARG2 (c3 / capital))))\n   :ARG1 (p2 / person\n             :quant 3))"
    ],
    "smus": [
      "Three people were killed.",
      "Two explosions have killed.",
      "Passenger buses explode.",
      "Others were wounded.",
      "Explosions in Nairobi",
      "At least 62 people were wounded.",
      "Two explosions have killed three people.",
      "Explosions in capital",
      "Officials say two explosions killed.",
      "Officials say two explosions have wounded.",
      "The explosions in Nairobi have killed",
      "Explosions in the capital have killed",
      "Officials say at least 62 people were wounded.",
      "Three people were killed in explosions on passenger buses.",
      "Passenger buses explode in Nairobi",
      "Explosions occur in Kenyan cities.",
      "Three people were killed in the Nairobi explosions.",
      "Passenger buses explode in capital",
      "Officials say the explosions in Nairobi have killed.",
      "Three people have been killed in explosions in the capital.",
      "Explosions in Kenyan cities have killed",
      "Officials say explosions in the capital have killed.",
      "Kenyan passenger buses explode",
      "Three people have been killed in explosions in the Kenyan cities.",
      "Officials say explosions in Kenyan cities have killed."
    ]
  },
  {
    "instance_id": "pyrxsum-12",
    "summary": "Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.",
    "summary_trees": [
      "# ::snt Thirty homes had to be evacuated after a gas pipe was damaged in a fire that was started deliberately.\n(o / obligate-01\n      :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                  :quant 30))\n      :time (a / after\n            :op1 (d / damage-01\n                  :ARG0 (f / fire\n                        :ARG1-of (s / start-01\n                              :manner (d2 / deliberate)))\n                  :ARG1 (p / pipe\n                        :mod (g / gas)))))"
    ],
    "tree": [
      "(e / evacuate-01\n   :ARG1 (h / home\n            :quant 30))",
      "(d / damage-01\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30)))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate))))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate)))\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(d / damage-01\n   :ARG0 (f / fire\n            :ARG1 (s / start-01\n                     :manner (d2 / deliberate)))\n   :ARG1 (p / pipe\n            :mod (g / gas)))",
      "(o / obligate-01\n   :ARG2 (e / evacuate-01\n            :ARG1 (h / home\n                     :quant 30))\n   :time (a / after\n            :op1 (d / damage-01\n                    :ARG1 (p / pipe\n                             :mod (g / gas)))))"
    ],
    "smus": [
      "30 homes were evacuated.",
      "Gas pipe damaged.",
      "30 homes had to be evacuated.",
      "The fire was damaged by deliberately started fires.",
      "A fire deliberately started damaged the gas pipe.",
      "30 homes had to be evacuated after gas pipe was damaged.",
      "30 homes had to be evacuated after a fire deliberately started was damaged."
    ]
  },
  {
    "instance_id": "pyrxsum-13",
    "summary": "Friends of Keith Harris have joined his family at his funeral in Blackpool.",
    "summary_trees": [
      "# ::snt Friends of Keith Harris have joined his family at his funeral in Blackpool.\n(j / join-04\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Keith\"\n                              :op2 \"Harris\"))\n                  :ARG2 (f / friend)))\n      :ARG1 (f2 / family\n            :poss p2)\n      :location (f3 / funeral\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Blackpool\"))))"
    ],
    "tree": [
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\"))))",
      "(j / join-04\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / friend)))\n   :ARG1 (f2 / family\n             :poss (p2 / person\n                       :name (n / name\n                                :op1 \"Keith\"\n                                :op2 \"Harris\")))\n   :location (f3 / funeral\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Blackpool\"))))"
    ],
    "smus": [
      "Friends have joined Keith Harris family.",
      "Friends have joined Keith Harris family at a funeral in Blackpool."
    ]
  },
  {
    "instance_id": "pyrxsum-14",
    "summary": "Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".",
    "summary_trees": [
      "# ::snt Former Labour MP Bob Marshall-Andrews has defected to the Lib Dems after describing Jeremy Corbyn's party as a \"political basket case\".\n(d / defect-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Bob\"\n                  :op2 \"Marshall-Andrews\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member)\n                  :time (f / former))\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (p3 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (p4 / political-party\n            :name (n3 / name\n                  :op1 \"Liberal\"\n                  :op2 \"Democrat\"))\n      :time (a / after\n            :op1 (d2 / describe-01\n                  :ARG0 p\n                  :ARG1 (p5 / party\n                        :poss (p6 / person\n                              :name (n4 / name\n                                    :op1 \"Jeremy\"\n                                    :op2 \"Corbyn\")))\n                  :ARG2 (c / case\n                        :mod (b / basket)\n                        :mod (p7 / politics)))))"
    ],
    "tree": [
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\")))",
      "(d2 / describe-01\n    :ARG1 (p5 / party\n              :poss (p6 / person\n                        :name (n4 / name\n                                  :op1 \"Jeremy\"\n                                  :op2 \"Corbyn\")))\n    :ARG2 (c / case\n             :mod (b / basket)))",
      "(d2 / describe-01\n    :ARG1 (p5 / party\n              :poss (p6 / person\n                        :name (n4 / name\n                                  :op1 \"Jeremy\"\n                                  :op2 \"Corbyn\")))\n    :ARG2 (c / case\n             :mod (p7 / politics)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG0 p)))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (b / basket)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG2 (c / case\n                              :mod (p7 / politics)))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bob\"\n                     :op2 \"Marshall-Andrews\"))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))",
      "(d / defect-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :time (f / former)))\n   :ARG1 (p4 / political-party\n             :name (n3 / name\n                       :op1 \"Liberal\"\n                       :op2 \"Democrat\"))\n   :time (a / after\n            :op1 (d2 / describe-01\n                     :ARG1 (p5 / party\n                               :poss (p6 / person\n                                         :name (n4 / name\n                                                   :op1 \"Jeremy\"\n                                                   :op2 \"Corbyn\"))))))"
    ],
    "smus": [
      "Bob Marshall-Andrews has defected to the Lib Dem party.",
      "The MP has defected to the lib dem party.",
      "The members have defected to the lib dem party.",
      "describing Jeremy Corbyn's party as a basket case.",
      "describing Jeremy Corbyn's party as a political case.",
      "After describing, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing the defect, the MP has defected to the Lib Dem party.",
      "After describing, the members have defected to the Lib Dem party.",
      "After describing the defect, the former defectors have defected to the Lib Dem party.",
      "After describing the basket case, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing the political case, Bob Marshall-Andrews defected to the Lib Dem party.",
      "After describing the basket case a MP has defected to the Lib Dem party.",
      "After describing the political case a MP has defected to the Lib Dem party.",
      "After describing the basket case, the members have defected to the Lib Dem party.",
      "After describing the political case, the members have defected to the Lib Dem party.",
      "After describing the basket case the former defected to the lib dem party.",
      "After describing the political case, the former defectors have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, Bob Marshall-Andrews has defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, parliamentarians have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, the members have defected to the Lib Dem party.",
      "After describing Jeremy Corbyn's party, the former has defected to the Lib Dems."
    ]
  },
  {
    "instance_id": "pyrxsum-15",
    "summary": "Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.",
    "summary_trees": [
      "# ::snt Castleford Tigers beat local rivals Wakefield Trinity to clinch the League Leaders' Shield.\n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Castleford\"\n                  :op2 \"Tigers\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Wakefield\"\n                  :op2 \"Trinity\")\n            :ARG0-of (r / rival-01\n                  :ARG1 t)\n            :ARG1-of (l / local-02))\n      :purpose (c / clinch-01\n            :ARG0 t\n            :ARG1 (s / shield\n                  :name (n3 / name\n                        :op1 \"League\"\n                        :op2 \"Leaders'\"\n                        :op3 \"Shield\"))))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\"))\n   :purpose (c / clinch-01\n               :ARG0 t))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG1 (l / local-02))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :ARG0 (r / rival-01\n                      :ARG1 t))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Castleford\"\n                     :op2 \"Tigers\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Wakefield\"\n                       :op2 \"Trinity\"))\n   :purpose (c / clinch-01\n               :ARG1 (s / shield\n                        :name (n3 / name\n                                  :op1 \"League\"\n                                  :op2 \"Leaders'\"\n                                  :op3 \"Shield\"))))"
    ],
    "smus": [
      "Castleford Tigers beat local team",
      "Castleford Tigers beat their rivals",
      "The Castleford Tigers beat the local team to clinch.",
      "The Castleford Tigers beat their rivals to clinch.",
      "The Castleford Tigers beat Wakefield Trinity to clinch.",
      "The Castleford Tigers beat the local team to clinch the League Leaders' shield.",
      "The Castleford Tigers beat their rivals to clinch the League Leaders' shield.",
      "The Castleford Tigers beat Wakefield Trinity to clinch the League Leaders' shield."
    ]
  },
  {
    "instance_id": "pyrxsum-16",
    "summary": "At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.",
    "summary_trees": [
      "# ::snt At least 23 people have been killed in the north-eastern Nigerian town of Monguno after a Boko Haram bomb confiscated by vigilantes exploded, an MP and army source have told the BBC.\n(t / tell-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (p2 / parliament)\n                        :ARG2 (m / member)))\n            :op2 (s / source\n                  :mod (a2 / army)))\n      :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                  :quant (a3 / at-least\n                        :op1 23))\n            :location (t2 / town\n                  :name (n / name\n                        :op1 \"Monguno\")\n                  :location (n2 / northeast\n                        :part-of (c / country\n                              :name (n3 / name\n                                    :op1 \"Nigeria\"))))\n            :time (a4 / after\n                  :op1 (e / explode-01\n                        :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                    :name (n4 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Haram\"))\n                              :ARG1-of (c3 / confiscate-01\n                                    :ARG0 (v / vigilante))))))\n      :ARG2 (p4 / publication\n            :name (n5 / name\n                  :op1 \"BBC\")))"
    ],
    "tree": [
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23)))",
      "(e / explode-01\n   :ARG1 (b / bomb-01\n            :ARG1 (c3 / confiscate-01\n                      :ARG0 (v / vigilante))))",
      "(b / bomb-01\n   :ARG0 (c2 / criminal-organization\n             :name (n4 / name\n                       :op1 \"Boko\"\n                       :op2 \"Haram\")))",
      "(e / explode-01\n   :ARG1 (b / bomb-01\n            :ARG0 (c2 / criminal-organization\n                      :name (n4 / name\n                                :op1 \"Boko\"\n                                :op2 \"Haram\"))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :name (n / name\n                          :op1 \"Monguno\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\"))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :location (t2 / town\n                 :location (n2 / northeast\n                               :part (c / country\n                                        :name (n3 / name\n                                                  :op1 \"Nigeria\")))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG1 (c3 / confiscate-01\n                                        :ARG0 (v / vigilante))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\"))))))",
      "(k / kill-01\n   :ARG1 (p3 / person\n             :quant (a3 / at-least\n                        :op1 23))\n   :time (a4 / after\n             :op1 (e / explode-01\n                     :ARG1 (b / bomb-01\n                              :ARG0 (c2 / criminal-organization\n                                        :name (n4 / name\n                                                  :op1 \"Boko\"\n                                                  :op2 \"Haram\"))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante)))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :ARG1 (p3 / person\n                      :quant (a3 / at-least\n                                 :op1 23)))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :name (n / name\n                                   :op1 \"Monguno\")))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\")))))))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :location (t2 / town\n                          :location (n2 / northeast\n                                        :part (c / country\n                                                 :name (n3 / name\n                                                           :op1 \"Nigeria\")))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (s / source\n            :mod (a2 / army))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\"))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG1 (c3 / confiscate-01\n                                                 :ARG0 (v / vigilante))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG1 (k / kill-01\n            :time (a4 / after\n                      :op1 (e / explode-01\n                              :ARG1 (b / bomb-01\n                                       :ARG0 (c2 / criminal-organization\n                                                 :name (n4 / name\n                                                           :op1 \"Boko\"\n                                                           :op2 \"Haram\"))))))\n   :ARG2 (p4 / publication\n             :name (n5 / name\n                       :op1 \"BBC\")))"
    ],
    "smus": [
      "At least 23 people were killed.",
      "The bomb that exploded was a confiscated by the vigilantes.",
      "The bombing occurred by the Boko Haram group.",
      "The bombing by Boko Haram exploded.",
      "At least 23 people were killed in the town of Monguno.",
      "An army source has told the story of the killing in the town of Monguno.",
      "Parliament has told that at least 23 people have been killed.",
      "Members have told of the killings, which have killed at least 23 people.",
      "Members have told the story of the killing in the town of Monguno.",
      "At least 23 people were killed in a town in northeast Nigeria.",
      "An army source has told of the killings in a town in the northeastern Nigeria.",
      "At least 23 people were killed after a bomb that was exploded on a seized by vigilantes.",
      "An army source has told of being killed after a bomb exploded that was confiscated by vigilantes.",
      "At least 23 people were killed, an army source has told the BBC.",
      "An army source has told the BBC that the killings took place in the town of Monguno.",
      "Parliament has told of the killings in a town in the northeastern Nigeria.",
      "The members have told of the killings in a town in the northeastern Nigeria.",
      "At least 23 people were killed after a bomb from Boko Haram exploded.",
      "Parliament has told of the killings that occurred after a bomb that exploded on a confiscated by vigilantes.",
      "An army source has told of the deaths, which occurred after a bombing by Boko Haram exploded.",
      "Members have told of being killed after a bomb exploded that confiscated by vigilantes.",
      "MPs have told the BBC that at least 23 people have been killed.",
      "Parliament has told the BBC that the killings took place in the town of Monguno.",
      "At least 23 people have been killed, the BBC have been told by members.",
      "Members have told the BBC that the killings took place in the town of Monguno.",
      "Parliament has told of the killings that occurred after a bomb by Boko Haram exploded.",
      "Members have told how the killings occurred after the bombing by Boko Haram exploded.",
      "An army source has told the BBC that the killings occurred in a town in the northeastern Nigeria.",
      "A parliamentarian has told the BBC that the killings took place in a town in the northeastern Nigeria.",
      "A member has told the BBC that the killings took place in a town in the northeastern Nigeria.",
      "An army source has told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "Members have told the BBC that the killings occurred after a bomb exploded on a vigilant confiscated property.",
      "Parliamentarians have told the BBC that the killings occurred after a bomb from Boko Haram exploded.",
      "Members have told the BBC that the killings occurred after a bomb from Boko Haram exploded."
    ]
  },
  {
    "instance_id": "pyrxsum-17",
    "summary": "The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.",
    "summary_trees": [
      "# ::snt The sports centre at Ravenscraig is a homage, a \"symphony in steel\", say the architects.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (a / architect-01))\n      :ARG1 (a2 / and\n            :op1 (h / homage)\n            :op2 (s2 / symphony\n                  :location (s3 / steel))\n            :domain (c / center\n                  :mod (s4 / sport)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Ravenscraig\")))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (h / homage))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (s2 / symphony\n             :location (s3 / steel)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (c / center\n            :mod (s4 / sport)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (a / architect-01))\n   :ARG1 (c / center\n            :location (c2 / city\n                          :name (n / name\n                                   :op1 \"Ravenscraig\"))))"
    ],
    "smus": [
      "The architects say homage.",
      "Architectural say a symphony in steel.",
      "The architects say the sports center is.",
      "The architects say the centre is in Ravenscraig."
    ]
  },
  {
    "instance_id": "pyrxsum-18",
    "summary": "The winner of The Jump 2017 is Spencer Matthews.",
    "summary_trees": [
      "# ::snt The winner of The Jump 2017 is Spencer Matthews.\n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Spencer\"\n                  :op2 \"Matthews\"))\n      :ARG1 (e / event\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Jump\")\n            :time (d / date-entity\n                  :year 2017)))"
    ],
    "tree": [
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\"))\n   :ARG1 (e / event\n            :time (d / date-entity\n                     :year 2017)))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Spencer\"\n                     :op2 \"Matthews\"))\n   :ARG1 (e / event\n            :time (d / date-entity\n                     :year 2017)))"
    ],
    "smus": [
      "Spencer Matthews won.",
      "Spencer Matthews won the 2017 event.",
      "Spencer Matthews won The Jump."
    ]
  },
  {
    "instance_id": "pyrxsum-19",
    "summary": "Fifa presidential candidate Gianni Infantino says he would press for the World Cup to be held in a whole region rather than one or two countries.",
    "summary_trees": [
      "# ::snt Fifa presidential candidate Gianni Infantino says he would press for the World Cup to be held in a whole region rather than one or two countries.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Gianni\"\n                  :op2 \"Infantino\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"Fifa\"))\n                  :ARG2 (c / candidate\n                        :mod (p2 / president))))\n      :ARG1 (p3 / press-01\n            :ARG0 p\n            :ARG2 (h2 / hold-04\n                  :ARG1 (g / game\n                        :name (n3 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\"))\n                  :location (r / region\n                        :mod (w / whole)\n                        :ARG1-of (ii / instead-of-91\n                              :ARG2 (h3 / hold-04\n                                    :ARG1 g\n                                    :location (c2 / country\n                                          :quant (o2 / or\n                                                :op1 1\n                                                :op2 2))))))))"
    ],
    "tree": [
      "(h2 / hold-04\n    :ARG1 (g / game\n             :name (n3 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :mod (w / whole)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gianni\"\n                     :op2 \"Infantino\"))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op2 2))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / candidate\n                              :mod (p2 / president))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op2 2))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op1 1))))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"Fifa\"))))\n   :ARG1 (p3 / press-01\n             :ARG2 (h2 / hold-04\n                       :location (r / region\n                                    :ARG1 (ii / instead-of-91\n                                              :ARG2 (h3 / hold-04\n                                                        :location (c2 / country\n                                                                      :quant (o2 / or\n                                                                                 :op2 2))))))))"
    ],
    "smus": [
      "The Wor Cup was held.",
      "Gianni Infantino says he will press.",
      "The president's candidate says he will press.",
      "Fifa or FIFA says it will press.",
      "Gianni Infantino says press for the holding in the whole region.",
      "Gianni Infantino says press to be held to the Wor Cup.",
      "FIFA or FIFA supporters say press for the holding in the whole region.",
      "The president's candidate says he will press for the Wor Cup to be held.",
      "\"Press to be held to the Wor Cup,\" says a FIFA or FIFAr.",
      "Gianni Infantino says press for the holdings to be held in the region rather than in one country.",
      "Gianni Infantino says press for the holdings to be held in the region rather than in two countries.",
      "The president's candidate says he will press for the holdings to be held in the region rather than in one or two countries.",
      "The president's candidate says he will press for the holdings to be held in the region rather than in two countries.",
      "FIFA or FIFA officials say they will press for the holdings to be held in the region rather than in one or two countries.",
      "FIFA or FIFA officials say they will press for the holdings to be held in the region rather than in two countries."
    ]
  },
  {
    "instance_id": "pyrxsum-20",
    "summary": "Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as he prepares to set out his budget.",
    "summary_trees": [
      "# ::snt Finance Secretary John Swinney has warned of \"tough choices\" facing Scotland as he prepares to set out his budget.\n(w / warn-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (s / secretary\n                        :topic (f / finance))))\n      :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Scotland\"))\n            :ARG1-of (t / tough-02)\n            :ARG1-of (f2 / face-01\n                  :ARG0 c2))\n      :time (p2 / prepare-02\n            :ARG0 p\n            :ARG1 (s2 / set-out-06\n                  :ARG0 p\n                  :ARG1 (b / budget\n                        :poss p))))"
    ],
    "tree": [
      "(c / choose-01\n   :ARG1 (f2 / face-01\n             :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))",
      "(p2 / prepare-02\n    :ARG1 (s2 / set-out-06\n              :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(p2 / prepare-02\n    :ARG1 (s2 / set-out-06\n              :ARG1 (b / budget\n                       :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (t / tough-02))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (t / tough-02))",
      "(c / choose-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Scotland\"))\n   :ARG1 (f2 / face-01\n             :ARG0 c2))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02)))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\")))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\")))))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\"))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG0 p))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (t / tough-02))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Scotland\")))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG0 p)))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (s / secretary\n                              :topic (f / finance))))\n   :ARG1 (c / choose-01\n            :ARG1 (f2 / face-01\n                      :ARG0 (c2 / country :name (n2 / name :op1 \"Scotland\"))))\n   :time (p2 / prepare-02\n             :ARG1 (s2 / set-out-06\n                       :ARG1 (b / budget\n                                :poss p))))"
    ],
    "smus": [
      "Faced with Scotland is a choice.",
      "As John Swinney prepares to set out.",
      "Tough choice is being warned.",
      "Scotland's choice in facing the odds has been warned.",
      "As John Swinney's budget is set out,",
      "Scotland's choice was warned.",
      "As John Swinney prepares, he is warned that tough choices are to be made.",
      "Scotland is a tough choice.",
      "As John Swinney prepares, Scotland is being warned to make the choice of facing Scotland.",
      "As John Swinney prepares to set out, he is warned that it will be a tough choice.",
      "John Swinney has warned that tough choices are a choice.",
      "Scotland is being warned about its choices as John Swinney prepares.",
      "As John Swinney prepares to set out, Scotland is being warned that it is a choice to face.",
      "John Swinney has warned that facing Scotland is a choice.",
      "As John Swinney's budget is set out, tough choices are being warned.",
      "The Finance Secretary has warned of a tough choice.",
      "As John Swinney prepares to set out, Scotland is being warned to make a choice.",
      "As John Swinney's budget is set out, Scotland is being warned that it is a choice to face.",
      "John Swinney has warned that Scotland is a choice.",
      "The Finance Secretary has warned that Scotland is a choice in facing.",
      "John Swinney has warned of tough choices as he prepares.",
      "As he prepares, John Swinney has warned that Scotland is a choice to face.",
      "Scotland is being warned about its choices as the budget of John Swinney prepares.",
      "The Finance Secretary has warned that Scotland is a choice.",
      "John Swinney has warned of tough choices as he prepares to set out.",
      "As the Secretary of State prepares, he is warned of tough choices.",
      "John Swinney has warned that Scotland will make a choice as he prepares.",
      "As he prepares to set out, John Swinney has warned that Scotland is a choice to face.",
      "As the Secretary of State prepares, he has warned that Scotland is a choice to face.",
      "John Swinney has warned of tough choices as his budget prepares to be set out.",
      "As the Secretary of State prepares to set out, he has warned of a tough choice.",
      "John Swinney has warned that Scotland will make a choice as he prepares to set out.",
      "As his budget is set out, John Swinney has warned that facing Scotland is a choice.",
      "As he prepares, the Finance Secretary has warned Scotland that Scotland will make a choice.",
      "As the Secretary of State prepares to set out, he has warned that Scotland is a choice to face.",
      "As the Secretary of State prepares his budget, he has warned of tough choices.",
      "John Swinney has warned that Scotland will make a choice as Scotland prepares to set out its budget.",
      "As the Secretary of State prepares to set out, he has warned that Scotland will make a choice.",
      "As Scotland prepares to set out its budget, the Finance Secretary has warned that Scotland is a choice to face.",
      "As Scotland prepares to set out its budget, the Finance Secretary has warned that Scotland will make a choice."
    ]
  },
  {
    "instance_id": "pyrxsum-21",
    "summary": "The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for its terms of reference.",
    "summary_trees": [
      "# ::snt The judge leading the inquiry into the Grenfell Tower fire has written to the prime minister with recommendations for its terms of reference.\n(w / write-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01))\n            :ARG0-of (l / lead-02\n                  :ARG1 (ii / inquire-01\n                        :ARG2 (f / fire\n                              :location (b / building\n                                    :name (n / name\n                                          :op1 \"Grenfell\"\n                                          :op2 \"Tower\"))))))\n      :ARG1 (r / recommend-01\n            :ARG0 p\n            :ARG4 (t / term-01\n                  :ARG0 (ii2 / it)\n                  :ARG2-of (r2 / reference-04)))\n      :ARG2 (p2 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p3 / prime)))))"
    ],
    "tree": [
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG0 (ii2 / it))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG2 (r2 / reference-04))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG0 (ii2 / it))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG2 (r2 / reference-04))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\")))))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG0 p)\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG0 p))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG0 (ii2 / it))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (ii / inquire-01\n                               :ARG2 (f / fire\n                                        :location (b / building\n                                                     :name (n / name\n                                                              :op1 \"Grenfell\"\n                                                              :op2 \"Tower\"))))))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG2 (r2 / reference-04))))",
      "(w / write-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (r / recommend-01\n            :ARG4 (t / term-01\n                     :ARG0 (ii2 / it)))\n   :ARG2 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m / minister\n                                :mod (p3 / prime)))))"
    ],
    "smus": [
      "The judge has written his recommendations.",
      "The judge has written that the references should be 'terms of reference'.",
      "A person leading the inquiry into the fire at Glenfell Tower has written:",
      "The judge has written to the prime minister.",
      "A person leading the inquiry into the fire at Glenfell Tower has written his recommendations.",
      "The judge has written his recommendations to the prime minister.",
      "A person leading the inquiry into the fire at Glenfell Tower has written that it should be a \"terms-of-inquiry\".",
      "A person leading the inquiry into the Glenfell Tower fire has written that the terms should be \"reference\".",
      "The judge has written to the prime minister that it should be termed.",
      "The judge has written to the prime minister the recommendations for the terms of reference.",
      "A leader in an inquiry into the fire at Glenfell Tower has written to the prime minister.",
      "A leader in the inquiry into the fire at Glenfell Tower has written to the prime minister his recommendations.",
      "A leader in the inquiry into the fire at Glenfell Tower has written to the prime minister that it should have terms."
    ]
  },
  {
    "instance_id": "pyrxsum-22",
    "summary": "Police in a small Alaska town mistakenly told a couple their son had been killed in a car crash, leading to an extraordinary reunion hours later.",
    "summary_trees": [
      "# ::snt Police in a small Alaska town mistakenly told a couple their son had been killed in a car crash, leading to an extraordinary reunion hours later.\n(l / lead-03\n      :ARG0 (t / tell-01\n            :ARG0 (p / police\n                  :location (t2 / town\n                        :mod (s / small)\n                        :location (s2 / state\n                              :name (n / name\n                                    :op1 \"Alaska\"))))\n            :ARG1 (k / kill-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / couple)\n                              :ARG2 (s3 / son)))\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (c3 / crash-01\n                              :ARG1 (c4 / car))))\n            :ARG2 c\n            :ARG1-of (m / mistake-01))\n      :ARG2 (r / reunite-01\n            :mod (e / extraordinary)\n            :time (a / after\n                  :quant (m2 / multiple\n                        :op1 (t3 / temporal-quantity\n                              :quant 1\n                              :unit (h2 / hour))))))"
    ],
    "tree": [
      "(k / kill-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (c3 / crash-01\n                       :ARG1 (c4 / car))))",
      "(k / kill-01\n   :ARG1 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (s3 / son))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (m / mistake-01))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG0 (p / police\n                     :location (t2 / town\n                                   :mod (s / small))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :quant 1)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (k / kill-01\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG1 (c / couple)))))\n   :ARG2 (r / reunite-01\n            :mod (e / extraordinary)))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG2 (c / couple))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG1 (m / mistake-01))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (c / couple)))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / crash-01\n                                :ARG1 (c4 / car)))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 (c / couple)))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / crash-01\n                                :ARG1 (c4 / car)))))",
      "(t / tell-01\n   :ARG0 (p / police\n            :location (t2 / town\n                          :location (s2 / state\n                                        :name (n / name\n                                                 :op1 \"Alaska\"))))\n   :ARG1 (k / kill-01\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (s3 / son)))))",
      "(l / lead-03\n   :ARG0 (t / tell-01\n            :ARG0 (p / police\n                     :location (t2 / town\n                                   :mod (s / small))))\n   :ARG2 (r / reunite-01\n            :time (a / after\n                     :quant (m2 / multiple\n                                :op1 (t3 / temporal-quantity\n                                         :unit (h2 / hour))))))"
    ],
    "smus": [
      "The couple's story leading to an extraordinary reunion.",
      "The mistakenly told led to an extraordinary reunification.",
      "Police in the town of Alaska told the story that they had been mistaken.",
      "The couple was told, leading to a reunification within a few days.",
      "The fact that the story was told mistakenly led to a reunification within a few days.",
      "The couple was told, leading to a reunification hours later.",
      "The mistaken information leading to a reunification hours later.",
      "Telling that a car crash had killed led to an extraordinary reunification.",
      "Telling that the son had been killed led to an extraordinary reunification.",
      "The fact that the car crash was told was the cause of the killing was leading to a reunification within hours.",
      "Telling that the son had been killed led to a reunification within hours.",
      "The fact that the car crash was told was the cause of the killing led to a reunification hours later.",
      "Police in the Alaska town told the story, leading to a reunification within hours.",
      "Telling that the son had been killed led to a reunification hours later.",
      "Police in the Alaska town told the story, leading to a reunification hours later."
    ]
  },
  {
    "instance_id": "pyrxsum-23",
    "summary": "South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.",
    "summary_trees": [
      "# ::snt South Africa's prosecutors have sought permission to appeal against athlete Oscar Pistorius' \"shockingly light\" sentence, court papers show.\n(s / show-01\n      :ARG0 (p / paper\n            :mod (c / court))\n      :ARG1 (s2 / seek-01\n            :ARG0 (p2 / person\n                  :ARG0-of (p3 / prosecute-01)\n                  :mod (c2 / country\n                        :name (n / name\n                              :op1 \"South\"\n                              :op2 \"Africa\")))\n            :ARG1 (p4 / permit-01\n                  :ARG1 (a / appeal-01\n                        :ARG0 p2\n                        :ARG1 (s3 / sentence-01\n                              :ARG1 (p5 / person\n                                    :name (n2 / name\n                                          :op1 \"Oscar\"\n                                          :op2 \"Pistorius\")\n                                    :mod (a2 / athlete))\n                              :ARG1-of (l / light-06\n                                    :ARG0-of (s4 / shock-01)))))))"
    ],
    "tree": [
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG0 (p2 / person)))",
      "(s3 / sentence-01\n    :ARG1 (p5 / person\n              :mod (a2 / athlete)))",
      "(s3 / sentence-01\n    :ARG1 (l / light-06\n             :ARG0 (s4 / shock-01)))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s3 / sentence-01\n    :ARG1 (p5 / person\n              :name (n2 / name\n                        :op1 \"Oscar\"\n                        :op2 \"Pistorius\")))",
      "(s3 / sentence-01\n    :ARG1 (p5 / person\n              :name (n2 / name\n                        :op1 \"Oscar\"\n                        :op2 \"Pistorius\")))",
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG1 (s3 / sentence-01\n                       :ARG1 (p5 / person\n                                 :mod (a2 / athlete)))))",
      "(a / appeal-01\n   :ARG1 (s3 / sentence-01\n             :ARG1 (p5 / person\n                       :name (n2 / name\n                                 :op1 \"Oscar\"\n                                 :op2 \"Pistorius\"))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :ARG0 (p3 / prosecute-01))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))",
      "(p4 / permit-01\n    :ARG1 (a / appeal-01\n             :ARG1 (s3 / sentence-01\n                       :ARG1 (p5 / person\n                                 :name (n2 / name\n                                           :op1 \"Oscar\"\n                                           :op2 \"Pistorius\")))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG0 (p2 / person)))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (l / light-06\n                                                   :ARG0 (s4 / shock-01)))))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :mod (a2 / athlete)))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :mod (c2 / country\n                       :name (n / name\n                                :op1 \"South\"\n                                :op2 \"Africa\")))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG0 p2)))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG0 (p2 / person\n                       :mod (c2 / country\n                                :name (n / name\n                                         :op1 \"South\"\n                                         :op2 \"Africa\")))))",
      "(s / show-01\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :name (n2 / name\n                                                              :op1 \"Oscar\"\n                                                              :op2 \"Pistorius\")))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (l / light-06\n                                          :ARG0 (s4 / shock-01))))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (l / light-06\n                                                   :ARG0 (s4 / shock-01)))))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :mod (a2 / athlete)))))))",
      "(s2 / seek-01\n    :ARG0 (p2 / person\n              :ARG0 (p3 / prosecute-01))\n    :ARG1 (p4 / permit-01\n              :ARG1 (a / appeal-01\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 (p5 / person\n                                           :name (n2 / name\n                                                     :op1 \"Oscar\"\n                                                     :op2 \"Pistorius\"))))))",
      "(s / show-01\n   :ARG0 (p / paper\n            :mod (c / court))\n   :ARG1 (s2 / seek-01\n             :ARG1 (p4 / permit-01\n                       :ARG1 (a / appeal-01\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 (p5 / person\n                                                    :name (n2 / name\n                                                              :op1 \"Oscar\"\n                                                              :op2 \"Pistorius\")))))))"
    ],
    "smus": [
      "People have the right to appeal.",
      "The sentence was shockingly light.",
      "The prosecutions show they are seeking.",
      "Appeal the shockingly light sentence.",
      "Show that permission to appeal has been sought.",
      "The sentence was a shockly light sentence with the possibility to appeal.",
      "Prosecutors have sought permission to appeal.",
      "Court papers show that the prosecutors sought.",
      "The sentence of Oscar Pistorius is appealable.",
      "Court papers show that permission to appeal was sought.",
      "The shows that permission was sought to appeal a shockingly light sentence.",
      "Show that permission to appeal the sentence of an athlete has been sought.",
      "South Africans have sought permission to appeal.",
      "Court papers show South Africans sought.",
      "The shows that permission was sought to appeal Oscar Pistorius' sentence.",
      "Prosecutors have sought permission to appeal a shockingly light sentence.",
      "Prosecutors have sought permission to appeal the sentence handed down to the athlete.",
      "Court papers show that permission was sought to appeal a shockingly light sentence.",
      "Prosecutors have sought permission to appeal Oscar Pistorius' sentence.",
      "Court papers show that permission was sought to appeal Oscar Pistorius' sentence.",
      "South Africans have sought permission to appeal a shockingly light sentence.",
      "South Africans have sought permission to appeal the athlete's sentence."
    ]
  },
  {
    "instance_id": "pyrxsum-24",
    "summary": "The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.",
    "summary_trees": [
      "# ::snt The UK's first maternity clinic for women who have been victims of rape and sexual assault has opened.\n(o / open-01\n      :ARG1 (c / clinic\n            :mod (m / maternity)\n            :ord (o2 / ordinal-entity\n                  :value 1)\n            :location (c2 / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :beneficiary (w / woman\n                  :ARG1-of (v / victimize-01\n                        :ARG0 (a / and\n                              :op1 (r / rape-01\n                                    :ARG1 w)\n                              :op2 (a2 / assault-01\n                                    :ARG1 w\n                                    :manner (s / sex)))))))"
    ],
    "tree": [
      "(o / open-01\n   :ARG1 (c / clinic\n            :mod (m / maternity)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :ord (o2 / ordinal-entity\n                     :value 1)))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :location (c2 / country\n                          :name (n / name\n                                   :op1 \"UK\"))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (r / rape-01\n                                              :ARG1 w)))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :ARG1 w)))))",
      "(o / open-01\n   :ARG1 (c / clinic\n            :beneficiary (w / woman\n                            :ARG1 (v / victimize-01\n                                     :ARG0 (a2 / assault-01\n                                               :manner (s / sex))))))"
    ],
    "smus": [
      "A maternity clinic has opened.",
      "The first clinic has opened.",
      "A clinic has opened in the UK.",
      "A clinic was opened for women who have been rape victims.",
      "A clinic was opened for women who have been victims of assault.",
      "A clinic was opened for women who have been victims of sexual assault."
    ]
  },
  {
    "instance_id": "pyrxsum-25",
    "summary": "The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.",
    "summary_trees": [
      "# ::snt The number of children referred to the NHS with gender identity issues has increased significantly in recent years, according to figures obtained by the BBC.\n(s / say-01\n      :ARG0 (f / figure\n            :ARG1-of (o / obtain-01\n                  :ARG0 (p / publication\n                        :name (n / name\n                              :op1 \"BBC\"))))\n      :ARG1 (ii / increase-01\n            :ARG1 (n2 / number\n                  :quant-of (c / child\n                        :ARG1-of (r / refer-02\n                              :ARG2 (g / government-organization\n                                    :name (n3 / name\n                                          :op1 \"NHS\"))\n                              :ARG1-of (c2 / cause-01\n                                    :ARG0 (ii2 / issue-02\n                                          :ARG0 (ii3 / identity\n                                                :mod (g2 / gender))\n                                          :ARG1 c)))))\n            :ARG2 (s2 / significant-02)\n            :time (y / year\n                  :mod (r2 / recent))))"
    ],
    "tree": [
      "(ii2 / issue-02\n     :ARG0 (ii3 / identity\n                :mod (g2 / gender)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\"))))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG2 (s2 / significant-02)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender))))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :time (y / year\n                      :mod (r2 / recent))))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG2 (g / government-organization\n                                          :name (n3 / name\n                                                    :op1 \"NHS\")))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG1 c)))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :ARG2 (s2 / significant-02))",
      "(ii / increase-01\n    :ARG1 (n2 / number\n              :quant (c / child\n                        :ARG1 (r / refer-02\n                                 :ARG1 (c2 / cause-01\n                                           :ARG0 (ii2 / issue-02\n                                                      :ARG0 (ii3 / identity\n                                                                 :mod (g2 / gender)))))))\n    :time (y / year\n             :mod (r2 / recent)))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG2 (g / government-organization\n                                                   :name (n3 / name\n                                                             :op1 \"NHS\")))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG1 c)))))))",
      "(s / say-01\n   :ARG0 (f / figure\n            :ARG1 (o / obtain-01\n                     :ARG0 (p / publication\n                              :name (n / name\n                                       :op1 \"BBC\"))))\n   :ARG1 (ii / increase-01\n             :ARG1 (n2 / number\n                       :quant (c / child\n                                 :ARG1 (r / refer-02\n                                          :ARG1 (c2 / cause-01\n                                                    :ARG0 (ii2 / issue-02\n                                                               :ARG0 (ii3 / identity\n                                                                          :mod (g2 / gender)))))))))"
    ],
    "smus": [
      "Issues of gender identity.",
      "The number of children referred to the NHS has increased.",
      "The number of children referred to as having \"issues\" has increased.",
      "According to figures obtained by the BBC, the number has increased significantly.",
      "The number of children referred to the NHS has increased significantly.",
      "The number of children referred to as having issues has increased significantly.",
      "The number of children referred to as \"gender identity issues\" has increased.",
      "According to figures obtained by the BBC, the number has increased in recent years.",
      "The number of children referred to the NHS has increased in recent years.",
      "In recent years, the number of children referred to as having issues has increased.",
      "The number of children referred to as \"gender identity issues\" has significantly increased.",
      "In recent years, the number of children referred to as \"gender identity issues\" has increased.",
      "According to figures obtained by the BBC, the number of children referred to the NHS has increased.",
      "According to figures obtained by the BBC, the number of children referred to as \"caused by\" the issues has increased.",
      "According to figures obtained by the BBC, the number of children referred to as \"as being due to gender identity issues\" has increased."
    ]
  },
  {
    "instance_id": "pyrxsum-26",
    "summary": "The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.",
    "summary_trees": [
      "# ::snt The mayor of an east London borough has been accused of \"corrupt and illegal practices\", at a special court hearing.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / borough\n                        :location (e / east\n                              :part-of (c / city\n                                    :name (n / name\n                                          :op1 \"London\"))))\n                  :ARG2 (m / mayor)))\n      :ARG2 (p2 / practice-01\n            :ARG0 p\n            :ARG1-of (c2 / corrupt-01)\n            :ARG1-of (l / legal-02\n                  :polarity -))\n      :time (h2 / hearing-02\n            :ARG0 (c3 / court)\n            :ARG1 p\n            :ARG1-of (s / special-02)))"
    ],
    "tree": [
      "(p2 / practice-01\n    :ARG1 (l / legal-02\n             :polarity -))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG0 p)\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / mayor)))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (c2 / corrupt-01))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 p))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG0 (c3 / court)))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b / borough\n                              :location (e / east\n                                           :part (c / city\n                                                    :name (n / name\n                                                             :op1 \"London\"))))))\n   :ARG2 (p2 / practice-01\n             :ARG1 (l / legal-02\n                      :polarity -))\n   :time (h2 / hearing-02\n             :ARG1 (s / special-02)))"
    ],
    "smus": [
      "Illegal practices.",
      "The mayor has been accused of \"practices\".",
      "The mayor has been accused of corrupt practices.",
      "The mayor has been accused of illegal practices.",
      "The mayor has been accused of \"practices\" during the hearing.",
      "At the special hearing the mayor is accused of \"practices\"",
      "The mayor has been accused of corruption practices at the hearing.",
      "The mayor has been accused of corruption practices at a court hearing.",
      "At the special hearing the mayor is accused of corrupt practices.",
      "The mayor has been accused of illegal practices at the hearing.",
      "The mayor has been accused of illegal practices at a court hearing.",
      "At the special hearing the mayor is accused of illegal practices.",
      "The borough of East London has been accused of corrupt practices.",
      "The borough of East London has been accused of illegal practices.",
      "At the hearing a borough in east London was accused of corrupt practices.",
      "At the special hearing a borough in east London was accused of corrupt practices.",
      "At the hearing a borough in east London was accused of illegal practices.",
      "At a court hearing the borough of East London has been accused of illegal practices.",
      "At the special hearing a borough in east London was accused of illegal practices."
    ]
  },
  {
    "instance_id": "pyrxsum-27",
    "summary": "A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.",
    "summary_trees": [
      "# ::snt A 21-year-old man has appeared in court in County Clare charged over the fatal stabbing of Karl Haugh in Kilkee at the weekend.\n(a / appear-01\n      :ARG1 (m / man\n            :age (t / temporal-quantity\n                  :quant 21\n                  :unit (y / year))\n            :ARG1-of (c / charge-05\n                  :ARG2 (s / stab-01\n                        :ARG1 (p / person\n                              :name (n / name\n                                    :op1 \"Karl\"\n                                    :op2 \"Haugh\"))\n                        :mod (f / fatal)\n                        :location (c2 / city\n                              :name (n2 / name\n                                    :op1 \"Kilkee\"))\n                        :time (w / weekend))))\n      :location (c3 / court\n            :location (c4 / county\n                  :name (n3 / name\n                        :op1 \"Clare\"))))"
    ],
    "tree": [
      "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21)))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\")))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal)))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :time (w / weekend)))))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :mod (f / fatal))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :time (w / weekend))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\"))))))",
      "(s / stab-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Karl\"\n                     :op2 \"Haugh\"))\n   :location (c2 / city\n                 :name (n2 / name\n                           :op1 \"Kilkee\")))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\"))))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :age (t / temporal-quantity\n                    :quant 21))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :mod (f / fatal))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :time (w / weekend))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :location (c2 / city\n                                            :name (n2 / name\n                                                      :op1 \"Kilkee\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))",
      "(a / appear-01\n   :ARG1 (m / man\n            :ARG1 (c / charge-05\n                     :ARG2 (s / stab-01\n                              :ARG1 (p / person\n                                       :name (n / name\n                                                :op1 \"Karl\"\n                                                :op2 \"Haugh\")))))\n   :location (c3 / court\n                 :location (c4 / county\n                               :name (n3 / name\n                                         :op1 \"Clare\"))))"
    ],
    "smus": [
      "The 21-year-old man appeared.",
      "Karl Haugh got stabbed",
      "The man was apparently charged with fatal stab.",
      "The man was apparently charged with stabbery at the weekend.",
      "Karl Haugh was fatally stabbed.",
      "Karl Haugh got stabbed at the weekend.",
      "The man charged with the stabbery in Kilkee has appeared.",
      "Karl Haugh was stabbed in Kilkee.",
      "The man charged with the stabbing of Karl Haugh has appeared.",
      "The 21-year-old man was appeared in Clare County court.",
      "The man charged with fatal stab wounds appeared in court in Clare County.",
      "The man charged with a weekend stabber appeared in Clare County court.",
      "The man charged with stab wound in Kilkee appeared in court in Clare County.",
      "The man charged with Karl Haugh's stabbing appeared in Clare County court."
    ]
  },
  {
    "instance_id": "pyrxsum-28",
    "summary": "Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, their union says.",
    "summary_trees": [
      "# ::snt Post Office workers will stage five days of strikes from Monday in a continuing dispute over jobs, pensions and branch closures, their union says.\n(s / say-01\n      :ARG0 (u / union\n            :poss (p / person\n                  :ARG0-of (w / work-01\n                        :ARG2 (g / government-organization\n                              :name (n / name\n                                    :op1 \"Post\"\n                                    :op2 \"Office\")))))\n      :ARG1 (s2 / strike-02\n            :ARG0 p\n            :time (f / from\n                  :op1 (d / date-entity\n                        :weekday (m / monday)))\n            :duration (t / temporal-quantity\n                  :quant 5\n                  :unit (d2 / day))\n            :ARG1-of (c / cause-01\n                  :ARG0 (d3 / dispute-01\n                        :ARG2 (a / and\n                              :op1 (j / job)\n                              :op2 (p2 / pension)\n                              :op3 (c2 / close-01\n                                    :ARG1 (b / branch)))\n                        :ARG1-of (c3 / continue-01)))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :ARG0 p))",
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :duration (t / temporal-quantity\n                          :unit (d2 / day))))",
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :time (f / from\n                      :op1 (d / date-entity\n                              :weekday (m / monday)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (j / job)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG1 (c3 / continue-01)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (p2 / pension)))))",
      "(s / say-01\n   :ARG0 (u / union\n            :poss (p / person\n                     :ARG0 (w / work-01\n                              :ARG2 (g / government-organization\n                                       :name (n / name\n                                                :op1 \"Post\"\n                                                :op2 \"Office\")))))\n   :ARG1 (s2 / strike-02\n             :ARG1 (c / cause-01\n                      :ARG0 (d3 / dispute-01\n                                :ARG2 (c2 / close-01\n                                          :ARG1 (b / branch))))))"
    ],
    "smus": [
      "The Post Office workers union says they are on strike.",
      "The Post Office workers' union says there will be \"days of strikes.\"",
      "The Post Office workers union says strikes will take place from Monday.",
      "The Post Office workers' union says there are strikes over a jobs dispute.",
      "The Post Office workers' union says there are strikes over the continuing dispute.",
      "The Post Office workers' union says there are strikes over a pensions dispute.",
      "The Post Office workers' union says there are strikes over a dispute over branch closures."
    ]
  },
  {
    "instance_id": "pyrxsum-29",
    "summary": "Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.",
    "summary_trees": [
      "# ::snt Wales' youth workers will be regulated by the Education Workforce Council for the first time from 1 April.\n(r / regulate-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Education\"\n                  :op2 \"Workforce\"\n                  :op3 \"Council\"))\n      :ARG1 (p / person\n            :ARG0-of (w / work-01\n                  :ARG2 (y / youth))\n            :location (c / country\n                  :name (n2 / name\n                        :op1 \"Wales\")))\n      :ord (o / ordinal-entity\n            :value 1)\n      :time (f / from\n            :op1 (d / date-entity\n                  :month 4\n                  :day 1)))"
    ],
    "tree": [
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth))))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\"))))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))",
      "(r / regulate-01\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth))))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\"))))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :location (c / country\n                         :name (n2 / name\n                                   :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :month 4)))",
      "(r / regulate-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Education\"\n                     :op2 \"Workforce\"\n                     :op3 \"Council\"))\n   :ARG1 (p / person\n            :ARG0 (w / work-01\n                     :ARG2 (y / youth)))\n   :time (f / from\n            :op1 (d / date-entity\n                    :day 1)))"
    ],
    "smus": [
      "Youth workers are regulated.",
      "The Welsh are regulated.",
      "Youth workers are the first to be regulated.",
      "The Education Workforce Council is the first to regulate.",
      "Youth workers are regulated from April.",
      "Youth workers will be regulated from the first of the year.",
      "Welsh people will be regulated from April.",
      "Youth workers are regulated by the Education Workforce Council.",
      "Youth workers are the first to be regulated by the Education Workforce Council.",
      "Youth workers are regulated by the Education Workforce Council from April.",
      "Youth workers will be regulated by the Education Workforce Council from the 1st.",
      "From April the Welsh people will be regulated by the Education Workforce Council.",
      "From the 1st, people in Wales will be regulated by the Education Workforce Council."
    ]
  },
  {
    "instance_id": "pyrxsum-30",
    "summary": "Liberal Democrat leader Tim Farron says he does not believe gay sex is a sin, following questions about his views on the subject.",
    "summary_trees": [
      "# ::snt Liberal Democrat leader Tim Farron says he does not believe gay sex is a sin, following questions about his views on the subject.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Farron\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Liberal\"\n                              :op2 \"Democrat\"))))\n      :ARG1 (b / believe-01\n            :polarity -\n            :ARG0 p\n            :ARG1 (s2 / sin-01\n                  :ARG0 (s3 / sex-01\n                        :ARG1 (g / gay-01))))\n      :ARG1-of (f / follow-01\n            :ARG2 (q / question-01\n                  :ARG1 (v / view-02\n                        :ARG0 p\n                        :ARG1 s2))))"
    ],
    "tree": [
      "(q / question-01\n   :ARG1 (v / view-02\n            :ARG0 (p / person :name (n / name :op1 \"Tim\" :op2 \"Farron\")))))",
      "(q / question-01\n   :ARG1 (v / view-02\n            :ARG1 (s2 / sin-01)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\"))\n   :ARG1 (b / believe-01\n            :polarity -))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Liberal\"\n                                         :op2 \"Democrat\"))))\n   :ARG1 (b / believe-01\n            :polarity -))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Farron\"))\n   :ARG1 (f / follow-01\n            :ARG2 (q / question-01\n                     :ARG1 (v / view-02\n                              :ARG1 (s2 / sin-01)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Liberal\"\n                                         :op2 \"Democrat\"))))\n   :ARG1 (b / believe-01\n            :polarity -))"
    ],
    "smus": [
      "Questioning Tim Farron's views:",
      "The view of sin is questioned.",
      "The Liberal Democrat leader says he does not believe.",
      "Tim Farron says that questioning his views is followed.",
      "The Liberal Democrat leader says that his views are being followed by questioning.",
      "The Liberal Democrat leader says the question of the sin view is being followed."
    ]
  },
  {
    "instance_id": "pyrxsum-31",
    "summary": "Paint has been thrown over an Orange hall in north Belfast.",
    "summary_trees": [
      "# ::snt Paint has been thrown over an Orange hall in north Belfast.\n(t / throw-01\n      :ARG1 (p / paint)\n      :ARG2 (o / over\n            :op1 (h / hall\n                  :mod (o2 / organization\n                        :name (n / name\n                              :op1 \"Society\"\n                              :op2 \"of\"\n                              :op3 \"Orange\"))\n                  :location (n2 / north\n                        :part-of (c / city\n                              :name (n3 / name\n                                    :op1 \"Belfast\"))))))"
    ],
    "tree": [
      "(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :mod (o2 / organization\n                             :name (n / name\n                                      :op1 \"Society\"\n                                      :op2 \"of\"\n                                      :op3 \"Orange\")))))",
      "(t / throw-01\n   :ARG1 (p / paint)\n   :ARG2 (o / over\n            :op1 (h / hall\n                    :location (n2 / north\n                                  :part (c / city\n                                           :name (n3 / name\n                                                     :op1 \"Belfast\"))))))"
    ],
    "smus": [
      "Paint was thrown over the Orange Hall.",
      "Paint thrown over the hall in northern Belfast."
    ]
  },
  {
    "instance_id": "pyrxsum-32",
    "summary": "Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after his latest uncertain display in the draw with Arsenal at Anfield.",
    "summary_trees": [
      "# ::snt Liverpool boss Jurgen Klopp defended under-fire goalkeeper Simon Mignolet after his latest uncertain display in the draw with Arsenal at Anfield.\n(d / defend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Liverpool\"))\n                  :ARG2 (b / boss)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Simon\"\n                  :op2 \"Mignolet\")\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (g / goalkeeper))\n            :ARG1-of (f / fire-02\n                  :mod (u / under)))\n      :time (a / after\n            :op1 (d2 / display-01\n                  :ARG0 p2\n                  :ARG1-of (k / know-01\n                        :polarity -)\n                  :mod (l / last)\n                  :subevent-of (d3 / draw-01\n                        :ARG0 p2\n                        :ARG3 (t2 / team\n                              :name (n4 / name\n                                    :op1 \"Arsenal\"))\n                        :location (s / sports-facility\n                              :name (n5 / name\n                                    :op1 \"Anfield\"))))))"
    ],
    "tree": [
      "(d2 / display-01\n    :ARG1 (k / know-01\n             :polarity -))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\")))))",
      "(d2 / display-01\n    :ARG1 (k / know-01\n             :polarity -)\n    :subevent (d3 / draw-01\n                  :ARG3 (t2 / team\n                            :name (n4 / name\n                                      :op1 \"Arsenal\"))))",
      "(d2 / display-01\n    :ARG1 (k / know-01\n             :polarity -)\n    :subevent (d3 / draw-01\n                  :location (s / sports-facility\n                               :name (n5 / name\n                                         :op1 \"Anfield\"))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\")))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\")))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\")))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 (p2 / person :name (n3 / name :op1 \"Simon\" :op2 \"Mignolet\")))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG3 (t2 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG3 (t2 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 p2))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 p2))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 p2))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 p2))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG0 p2)))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :mod (l / last))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 p2))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :ARG1 (k / know-01\n                              :polarity -))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Liverpool\"))))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG0 p2))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG3 (t2 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG3 (t2 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (p2 / person\n             :ARG1 (f / fire-02\n                      :mod (u / under)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG3 (t2 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Mignolet\"))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :location (s / sports-facility\n                                                :name (n5 / name\n                                                          :op1 \"Anfield\"))))))",
      "(d / defend-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (b / boss)))\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (g / goalkeeper)))\n   :time (a / after\n            :op1 (d2 / display-01\n                     :subevent (d3 / draw-01\n                                   :ARG3 (t2 / team\n                                             :name (n4 / name\n                                                       :op1 \"Arsenal\"))))))"
    ],
    "smus": [
      "Unknowing on display.",
      "Jurgen Klopp defended.",
      "The boss defended.",
      "Liverpool defenders defended.",
      "Unknowledgement on display in Arsenal draw",
      "Unknowing on display at anfield draw.",
      "Jurgen Klopp defended after Simon Merlot's display.",
      "The boss defended after Simon Merlot's display.",
      "Jurgen Klopp defended the goalkeeper.",
      "Jurgen Klopp defended the under fire person.",
      "The boss defended the goalkeeper.",
      "The boss defended the under fire person.",
      "After the last display, Jurgen Klopp defended.",
      "After the last display, the boss defended.",
      "Jurgen Klopp defended after the display in Simon Merlot's drawing.",
      "After a display of ignorance, the boss defended.",
      "Liverpool defender defended after Simon Merlot's display.",
      "Liverpool defended the goalkeeper.",
      "Liverpool defended the under fire.",
      "Liverpool defender defended after last display.",
      "Liverpool defender defended after a display of ignorance.",
      "Liverpool defender defended after a display in Simon Merlot's draw.",
      "Jurgen Klopp defended after a display in the draw with Arsenal.",
      "Jurgen Klopp defended after a display in the draw at Anfield.",
      "The boss defended after the display in the draw with Arsenal.",
      "The boss defended after the display at Anfield's draw.",
      "Jurgen Klopp defended the goalkeeper after his display.",
      "After a display, Jurgen Klopp defended the under fire person.",
      "After Simon Merlot's display, the boss defended him.",
      "The boss defended the goalkeeper after the display.",
      "After a display the boss defended the under fire person.",
      "After the last display, Jurgen Klopp defended the goalkeeper.",
      "After the last display, Jurgen Klopp defended the under fire person.",
      "After the last display, the boss defended the goalkeeper.",
      "After the last display, the boss defended the under fire person.",
      "Jurgen Klopp defended the goalkeeper after a display in which he was drew.",
      "After a display of ignorance, Jurgen Klopp defended the under fire person.",
      "After a display in which he was drawn, Jurgen Klopp defended the under fire.",
      "After the display in Simonignolet's drawing, the boss defended Simonignolet.",
      "After a display of ignorance, the boss defended the goalkeeper.",
      "The boss defended the goalkeeper after the display in which he was drawn.",
      "After a display of ignorance, the boss defended the under fire person.",
      "After a display in which the boss was drawing, the boss defended the under fire person.",
      "Liverpool defender defended after a display in the draw with Arsenal.",
      "Liverpool defender defended after a display at anfield during the draw.",
      "Liverpool defender defended goalkeeper after display.",
      "Liverpool defender defended under fire after his display.",
      "After the last display, Liverpool defended the goalkeeper.",
      "Liverpool defender defended goalkeeper after display of innocuousness.",
      "Liverpool defender defended goalkeeper after display in draw.",
      "Liverpool defenders defended under fire after display of innocuousness.",
      "Liverpool defender defended under fire after display in draw.",
      "Jurgen Klopp defended the goalkeeper after the display in the draw with Arsenal.",
      "Jurgen Klopp defended the goalkeeper after the display at Anfield.",
      "Jurgen Klopp defended the under fire fire after the display in the draw with Arsenal.",
      "Jurgen Klopp defended the under fire person after the display at the Anfield draw.",
      "After a display in the draw with Arsenal, the boss defended the goalkeeper.",
      "After a display in the draw at Anfield, the boss defended the goalkeeper.",
      "After a display in the draw with Arsenal, the boss defended the under fire person.",
      "After a display at the draw at Anfield, the boss defended the under fire person.",
      "Liverpool defender defended goalkeeper after display in draw with Arsenal.",
      "Liverpool defender defended goalkeeper after display at anfield",
      "Liverpool defender defended under fire after display in draw with Arsenal.",
      "Liverpool defenders defended under fire after display at anfield"
    ]
  },
  {
    "instance_id": "pyrxsum-33",
    "summary": "Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.",
    "summary_trees": [
      "# ::snt Thousands of people have been leaving besieged, rebel-held eastern districts of the Syrian city of Aleppo following the resumption of evacuations agreed as part of a ceasefire deal last week.\n(l / leave-11\n      :ARG0 (p / person\n            :quant (m / multiple\n                  :op1 1000))\n      :ARG1 (d / district\n            :location (e / east)\n            :ARG1-of (b / besiege-01)\n            :ARG1-of (h / hold-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (r / rebel-01)))\n            :part-of (c / city\n                  :name (n / name\n                        :op1 \"Aleppo\")\n                  :location (c2 / country\n                        :name (n2 / name\n                              :op1 \"Syria\"))))\n      :ARG1-of (f / follow-01\n            :ARG2 (r2 / resume-01\n                  :ARG1 (e2 / evacuate-01\n                        :ARG1-of (a / agree-01\n                              :part-of (d2 / deal-01\n                                    :ARG2 (c3 / cease-01\n                                          :ARG1 (f2 / fire-01))\n                                    :time (w / week\n                                          :mod (l2 / last))))))))"
    ],
    "tree": [
      "(d2 / deal-01\n    :ARG2 (c3 / cease-01\n              :ARG1 (f2 / fire-01)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000)))",
      "(e2 / evacuate-01\n    :ARG1 (a / agree-01\n             :part (d2 / deal-01\n                       :ARG2 (c3 / cease-01\n                                 :ARG1 (f2 / fire-01)))))",
      "(e2 / evacuate-01\n    :ARG1 (a / agree-01\n             :part (d2 / deal-01\n                       :time (w / week\n                                :mod (l2 / last)))))",
      "(d2 / deal-01\n    :ARG2 (c3 / cease-01\n              :ARG1 (f2 / fire-01))\n    :time (w / week\n             :mod (l2 / last)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :location (e / east)))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :ARG1 (b / besiege-01)))",
      "(r2 / resume-01\n    :ARG1 (e2 / evacuate-01\n              :ARG1 (a / agree-01\n                       :part (d2 / deal-01\n                                 :ARG2 (c3 / cease-01\n                                           :ARG1 (f2 / fire-01))))))",
      "(r2 / resume-01\n    :ARG1 (e2 / evacuate-01\n              :ARG1 (a / agree-01\n                       :part (d2 / deal-01\n                                 :time (w / week\n                                          :mod (l2 / last))))))",
      "(l / leave-11\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 1000))\n   :ARG1 (d / district\n            :part (c / city\n                     :name (n / name\n                              :op1 \"Aleppo\"))))"
    ],
    "smus": [
      "The deal was a cease fire.",
      "Thousands of people are leaving.",
      "There were evacuations as part of a cease fire deal.",
      "The evacuations were part of an agreement reached last week.",
      "A cease fire deal was struck last week.",
      "Thousands are leaving eastern districts.",
      "Thousands of people are leaving besieged districts.",
      "The evacuations resumed as part of a ceasefire deal.",
      "The evacuations that were agreed to as part of last week's deal resumed.",
      "Thousands are leaving the districts of Aleppo.",
      "Thousands are leaving districts held by the rebels.",
      "Thousands are leaving districts of a Syrian city.",
      "Thousands were leaving following the resume of evacuations agreed as part of a cease fire deal.",
      "Thousands are leaving following the resume of evacuations agreed as part of last week's deal."
    ]
  },
  {
    "instance_id": "pyrxsum-34",
    "summary": "Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.",
    "summary_trees": [
      "# ::snt Thousands of people have marched in opposition to plans to downgrade Stafford Hospital's services.\n(m / march-01\n      :ARG0 (p / person\n            :quant (m2 / multiple\n                  :op1 1000))\n      :purpose (o / oppose-01\n            :ARG0 p\n            :ARG1 (p2 / plan-01\n                  :ARG1 (d / downgrade-02\n                        :ARG1 (s / service\n                              :poss (h / hospital\n                                    :name (n / name\n                                          :op1 \"Stafford\"\n                                          :op2 \"Hospital\")))))))"
    ],
    "tree": [
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000)))",
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG0 p))",
      "(p2 / plan-01\n    :ARG1 (d / downgrade-02\n             :ARG1 (s / service\n                      :poss (h / hospital\n                               :name (n / name\n                                        :op1 \"Stafford\"\n                                        :op2 \"Hospital\")))))",
      "(m / march-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 1000))\n   :purpose (o / oppose-01\n               :ARG1 (p2 / plan-01\n                         :ARG1 (d / downgrade-02\n                                  :ARG1 (s / service\n                                           :poss (h / hospital\n                                                    :name (n / name\n                                                             :op1 \"Stafford\"\n                                                             :op2 \"Hospital\")))))))"
    ],
    "smus": [
      "Thousands marched.",
      "Thousands marched in opposition.",
      "Plans to downgrade Stafford Hospital's services.",
      "Thousands marched in opposition to plans to downgrade Stafford Hospital's services."
    ]
  },
  {
    "instance_id": "pyrxsum-35",
    "summary": "Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.",
    "summary_trees": [
      "# ::snt Filled with goodwill, unfathomable optimism and a slightly heavy heart, you embark on a health kick.\n(e / embark-01\n      :ARG0 (y / you\n            :ARG1-of (f / fill-01\n                  :ARG2 (a / and\n                        :op1 (g / goodwill)\n                        :op2 (o / optimism\n                              :ARG1-of (c / conceive-01\n                                    :polarity -))\n                        :op3 (h / heart\n                              :mod (h2 / heavy\n                                    :degree (s / slight))))))\n      :ARG1 (k / kick-01\n            :ARG0 y\n            :ARG1 (h3 / health)))"
    ],
    "tree": [
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill)))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (g / goodwill)))\n   :ARG1 (k / kick-01\n            :ARG1 (h3 / health)))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (h / heart\n                              :mod (h2 / heavy\n                                       :degree (s / slight)))))\n   :ARG1 (k / kick-01\n            :ARG0 y))",
      "(e / embark-01\n   :ARG0 (y / you\n            :ARG1 (f / fill-01\n                     :ARG2 (h / heart\n                              :mod (h2 / heavy\n                                       :degree (s / slight)))))\n   :ARG1 (k / kick-01\n            :ARG1 (h3 / health)))"
    ],
    "smus": [
      "You embark on a kick, full of goodwill.",
      "You embark on a health kick, full of goodwill.",
      "You embark on a kick, slightly heavy hearted.",
      "You embark on a health kick, filled with a slightly heavy heart."
    ]
  },
  {
    "instance_id": "pyrxsum-36",
    "summary": "Russia and Qatar may have had to pay bribes to secure their World Cups, Sepp Blatter's former special advisor has suggested.",
    "summary_trees": [
      "# ::snt Russia and Qatar may have had to pay bribes to secure their World Cups, Sepp Blatter's former special advisor has suggested.\n(s / suggest-01\n      :ARG0 (p / person\n            :ARG0-of (a / advise-01\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Sepp\"\n                              :op2 \"Blatter\"))\n                  :time (f / former)\n                  :ARG1-of (s2 / special-02)))\n      :ARG1 (p3 / possible-01\n            :ARG1 (o / obligate-01\n                  :ARG1 (a2 / and\n                        :op1 (c / country\n                              :name (n2 / name\n                                    :op1 \"Russia\"))\n                        :op2 (c2 / country\n                              :name (n3 / name\n                                    :op1 \"Qatar\")))\n                  :ARG2 (p4 / pay-01\n                        :ARG0 a2\n                        :ARG1 (b / bribe-01)\n                        :purpose (s3 / secure-02\n                              :ARG0 a2\n                              :ARG1 (g / game\n                                    :name (n4 / name\n                                          :op1 \"World\"\n                                          :op2 \"Cup\")\n                                    :poss a2))))))"
    ],
    "tree": [
      "(s3 / secure-02\n    :ARG1 (g / game\n             :poss (a2 / and)))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :ARG0 (a2 / and))))",
      "(p4 / pay-01\n    :ARG1 (b / bribe-01)\n    :purpose (s3 / secure-02\n                 :ARG0 (a2 / and)))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :ARG1 (b / bribe-01))))",
      "(s3 / secure-02\n    :ARG1 (g / game\n             :name (n4 / name\n                       :op1 \"World\"\n                       :op2 \"Cup\")))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"Russia\"))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG1 (c2 / country\n                       :name (n3 / name\n                                 :op1 \"Qatar\"))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-02\n                                    :ARG0 (a2 / and)))))",
      "(o / obligate-01\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG1 (g / game\n                                   :poss (a2 / and)))))",
      "(p4 / pay-01\n    :ARG1 (b / bribe-01)\n    :purpose (s3 / secure-02\n                 :ARG1 (g / game\n                          :poss (a2 / and))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-02\n                                    :ARG1 (g / game\n                                             :poss (a2 / and))))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG0 (a2 / and))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG0 (a2 / and))))",
      "(p3 / possible-01\n    :ARG1 (o / obligate-01\n             :ARG2 (p4 / pay-01\n                       :purpose (s3 / secure-02\n                                    :ARG1 (g / game\n                                             :name (n4 / name\n                                                       :op1 \"World\"\n                                                       :op2 \"Cup\"))))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG1 (g / game\n                                   :poss (a2 / and)))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG1 (g / game\n                                   :poss (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG0 (a2 / and))))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"Russia\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG1 (g / game\n                                   :name (n4 / name\n                                             :op1 \"World\"\n                                             :op2 \"Cup\")))))",
      "(o / obligate-01\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"Qatar\"))\n   :ARG2 (p4 / pay-01\n             :purpose (s3 / secure-02\n                          :ARG1 (g / game\n                                   :name (n4 / name\n                                             :op1 \"World\"\n                                             :op2 \"Cup\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG0 (a2 / and)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG1 (g / game\n                                                      :poss (a2 / and)))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG1 (g / game\n                                                      :poss (a2 / and)))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :ARG1 (b / bribe-01)))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c / country\n                               :name (n2 / name\n                                         :op1 \"Russia\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG1 (c2 / country\n                                :name (n3 / name\n                                          :op1 \"Qatar\")))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG0 (a2 / and))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :time (f / former)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (s2 / special-02)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG1 (g / game\n                                                      :poss (a2 / and)))))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (a / advise-01\n                     :ARG1 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sepp\"\n                                        :op2 \"Blatter\"))))\n   :ARG1 (p3 / possible-01\n             :ARG1 (o / obligate-01\n                      :ARG2 (p4 / pay-01\n                                :purpose (s3 / secure-02\n                                             :ARG1 (g / game\n                                                      :name (n4 / name\n                                                                :op1 \"World\"\n                                                                :op2 \"Cup\")))))))"
    ],
    "smus": [
      "Secure their games.",
      "Maybe they have to pay.",
      "Bribes are paid to secure.",
      "Maybe bribes have to be paid.",
      "Secure the World Cup.",
      "Russia may have to.",
      "Qatar may have to.",
      "Maybe to secure, the payer has to pay.",
      "To secure their game, they must pay.",
      "Bribes are paid to secure their game.",
      "Maybe to secure the game and pay...",
      "Russia must pay to secure.",
      "Qatar must pay to secure.",
      "Maybe to secure the World Cup, it has to pay.",
      "Russia must pay to secure their game.",
      "Qatar must pay to secure their game.",
      "Former advisers have suggested that they may have to pay.",
      "Special advisers have suggested that they may have to pay.",
      "Former advisers have suggested that bribes may have to be paid.",
      "Special advisers have suggested that bribes may have to be paid.",
      "A former adviser has suggested that Russia may have to.",
      "A former adviser has suggested Qatar may have to.",
      "Former advisers have suggested that in order to secure the payments may have to be made.",
      "Special advisers have suggested that Russia may have to.",
      "Special advisers have suggested Qatar may have to.",
      "Special advisers have suggested that to secure the money the parties may have to pay.",
      "Russia must pay to secure the World Cup.",
      "Qatar must pay to secure the World Cup.",
      "Advice from Sepp Blatter has suggested that the parties may have to pay.",
      "Former adviser has suggested that it may have to pay to secure and secure the game.",
      "Special advisers have suggested that it may have to pay to secure the game between the two.",
      "Advice from Sepp Blatter has suggested that bribes may have to be paid.",
      "Advice from Sepp Blatter has suggested that Russia may have to.",
      "Advice from Sepp Blatter has suggested that Qatar may have to.",
      "Advice from Sepp Blatter has suggested that in order to secure the payment, the parties must pay.",
      "Former adviser has suggested that it may have to pay to secure the World Cup.",
      "Special advisers have suggested that it might have to pay to secure the World Cup.",
      "Advice from Sepp Blatter has suggested that it may have to pay to secure the game and.",
      "Advice from Sepp Blatter has suggested that it might be necessary to pay to secure the World Cup."
    ]
  },
  {
    "instance_id": "pyrxsum-37",
    "summary": "The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.",
    "summary_trees": [
      "# ::snt The High Court has begun hearing the legal challenge of a terminally ill UK man who wants the right to die.\n(b / begin-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"High\"\n                  :op2 \"Court\"))\n      :ARG1 (h / hear-01\n            :ARG0 g\n            :ARG1 (c / challenge-01\n                  :ARG0 (m / man\n                        :ARG1-of (ii / ill-01\n                              :mod (t / terminal))\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"UK\"))\n                        :ARG0-of (w / want-01\n                              :ARG1 (r / right-05\n                                    :ARG1 m\n                                    :ARG2 (d / die-01\n                                          :ARG1 m))))\n                  :ARG1-of (l / legal-02))))"
    ],
    "tree": [
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"High\" :op2 \"Court\"))))",
      "(r / right-05\n   :ARG2 (d / die-01\n            :ARG1 (m / man)))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG1 (l / legal-02))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\"))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal)))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG1 (ii / ill-01\n                      :mod (t / terminal)))\n   :ARG1 (l / legal-02))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG0 g))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\")))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m)))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m)))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"UK\")))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG1 m)))\n   :ARG1 (l / legal-02))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG1 (ii / ill-01\n                                        :mod (t / terminal))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :mod (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"UK\"))))))",
      "(b / begin-01\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG0 (m / man\n                              :ARG0 (w / want-01\n                                       :ARG1 (r / right-05\n                                                :ARG1 m))))))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m))))\n   :ARG1 (l / legal-02))",
      "(c / challenge-01\n   :ARG0 (m / man\n            :ARG0 (w / want-01\n                     :ARG1 (r / right-05\n                              :ARG2 (d / die-01\n                                       :ARG1 m))))\n   :ARG1 (l / legal-02))",
      "(b / begin-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"High\"\n                     :op2 \"Court\"))\n   :ARG1 (h / hear-01\n            :ARG1 (c / challenge-01\n                     :ARG1 (l / legal-02))))"
    ],
    "smus": [
      "The High Court has begun hearing.",
      "The right to die is for a man.",
      "Hearings of legal challenge have begun.",
      "The challenge is the terminally ill man.",
      "The challenge is the man from the UK.",
      "The man who wants his right is a challenge.",
      "The terminally ill man is a legal challenge.",
      "A UK man is facing legal challenge.",
      "A man who wants his right is a legal challenge.",
      "The man who wants the right to die is a challenge.",
      "Hearing the challenge of a terminally ill man, began.",
      "Hearing the challenge of a British man has begun.",
      "Hearing the challenge of a man who wants his right...",
      "A man who wants the right to die is a legal challenge.",
      "The High Court has begun hearing a legal challenge.",
      "Hearing the challenge of a man who wants the right to die, began.",
      "The High Court has begun hearing the challenge from a terminally ill man.",
      "The High Court has begun hearing the challenge from a British man.",
      "The High Court has begun hearing the challenge from a man who wants his right.",
      "The High Court has begun hearing the challenge from a man who wants the right to die."
    ]
  },
  {
    "instance_id": "pyrxsum-38",
    "summary": "An online appeal set up to help the family of a five-year-old girl who died when her head became stuck in a lift in Dorset has raised more than \u00a312,000.",
    "summary_trees": [
      "# ::snt An online appeal set up to help the family of a five-year-old girl who died when her head became stuck in a lift in Dorset has raised more than \u00a312,000.\n(r / raise-02\n      :ARG0 (a / appeal-02\n            :mod (o / online)\n            :ARG1-of (s / set-up-03\n                  :purpose (h / help-01\n                        :ARG0 a\n                        :ARG1 (f / family\n                              :poss (g / girl\n                                    :age (t / temporal-quantity\n                                          :quant 5\n                                          :unit (y / year))\n                                    :ARG1-of (d / die-01\n                                          :ARG1-of (c / cause-01\n                                                :ARG0 (b / become-01\n                                                      :ARG1 (h2 / head)\n                                                      :ARG2 (s2 / stick-01\n                                                            :ARG1 h2\n                                                            :ARG2 (l / lift)\n                                                            :location (c2 / county\n                                                                  :name (n / name\n                                                                        :op1 \"Dorset\"))))))\n                                    :part h2)))))\n      :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                  :quant 12000\n                  :unit (p / pound))))"
    ],
    "tree": [
      "(r / raise-02\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(b / become-01\n   :ARG1 (h2 / head)\n   :ARG2 (s2 / stick-01\n             :ARG1 h2))",
      "(r / raise-02\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(b / become-01\n   :ARG1 (h2 / head)\n   :ARG2 (s2 / stick-01\n             :ARG2 (l / lift)))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (b / become-01\n                     :ARG2 (s2 / stick-01\n                               :ARG2 (l / lift)))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(b / become-01\n   :ARG1 (h2 / head)\n   :ARG2 (s2 / stick-01\n             :location (c2 / county\n                           :name (n / name\n                                    :op1 \"Dorset\"))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :mod (o / online))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a)))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG0 a)))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :part (h2 / head))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :part (h2 / head))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :quant 5))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :unit (y / year)))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :age (t / temporal-quantity\n                                                           :unit (y / year)))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG1 (h2 / head)))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG1 (h2 / head)))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG1 (h2 / head))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG2 (l / lift))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :ARG2 (l / lift))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :unit (p / pound))))",
      "(r / raise-02\n   :ARG0 (a / appeal-02\n            :ARG1 (s / set-up-03\n                     :purpose (h / help-01\n                                 :ARG1 (f / family\n                                          :poss (g / girl\n                                                   :ARG1 (d / die-01\n                                                            :ARG1 (c / cause-01\n                                                                     :ARG0 (b / become-01\n                                                                              :ARG2 (s2 / stick-01\n                                                                                        :location (c2 / county\n                                                                                                      :name (n / name\n                                                                                                               :op1 \"Dorset\")))))))))))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 12000)))"
    ],
    "smus": [
      "More than 2,000 have been raised.",
      "The head became stuck.",
      "More than PS100 was raised.",
      "The head became stuck in the lift.",
      "Death came when the lift became stuck.",
      "An online appeal has raised more than 2,000 dollars.",
      "The head became stuck in Dorset.",
      "An online appeal has raised more than PS1,000.",
      "The appeal to set up to help has raised more than 2,000 dollars.",
      "The appeal to set up to help has raised more than PS1,000.",
      "The appeal to set up to help the head girl's family has raised more than 2,000 dollars.",
      "An appeal to set up to help the family of the 5-year-old girl has raised more than 2,000 dollars.",
      "The appeal to set up to help the head girl's family has raised more than PS1,000.",
      "An appeal to set up to help the family of the 5-year-old girl has raised more than PS1,000.",
      "An appeal to set up to help the family of the year girl has raised more than 2,000 dollars.",
      "An appeal to set up to help the family of the year girl has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when her head became a head has raised more than 2,000.",
      "An appeal to set up to help the family of the girl who died when her head became head has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when her head became stuck has raised more than 10,000.",
      "An appeal to set up to help the family of the girl who died when her head became stuck has raised more than PS1,000.",
      "An appeal to set up to help the family of the girl who died when the lift became stuck has raised more than 10,000.",
      "An appeal to set up to help the family of the girl who died when the lift became stuck has raised more than PS1,000.",
      "An appeal to help the family of a girl who died because she became stuck in Dorset has raised more than 2,000."
    ]
  },
  {
    "instance_id": "pyrxsum-39",
    "summary": "Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.",
    "summary_trees": [
      "# ::snt Game of Thrones star \"The Mountain\" has been beaten to Europe's Strongest Man title by a man from Swindon.\n(b / beat-03\n      :ARG0 (m / man\n            :source (c / city\n                  :name (n / name\n                        :op1 \"Swindon\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"The\"\n                  :op2 \"Mountain\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b2 / broadcast-program\n                        :name (n3 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))))\n      :ARG2 (t / title-01\n            :ARG1 p\n            :ARG2 (s / strong-02\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 m\n                        :ARG3 (m2 / most)\n                        :ARG5 (c2 / continent\n                              :name (n4 / name\n                                    :op1 \"Europe\"))))))"
    ],
    "tree": [
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\")))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\")))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 m))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG1 p))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Mountain\"))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG1 m))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG3 (m2 / most)))))",
      "(b / beat-03\n   :ARG0 (m / man\n            :source (c / city\n                       :name (n / name\n                                :op1 \"Swindon\")))\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (b2 / broadcast-program\n                               :name (n3 / name\n                                         :op1 \"Game\"\n                                         :op2 \"of\"\n                                         :op3 \"Thrones\"))))\n   :ARG2 (t / title-01\n            :ARG2 (s / strong-02\n                     :ARG2 (h2 / have-degree-91\n                               :ARG5 (c2 / continent\n                                         :name (n4 / name\n                                                   :op1 \"Europe\"))))))"
    ],
    "smus": [
      "The Mountain was beaten by a man from Swindon.",
      "The Mountain was beaten to the title by a Swindon man.",
      "A Swindon man has beat the Game of Thrones host.",
      "The Mountain was beaten by a Swindon man for the title of \"The Strong Man\".",
      "The Mountain was beaten by a Swindon man for the title of strongest.",
      "A Swindon man has beaten the title of Game of Thrones.",
      "The Mountain was beaten by a Swindon man for the title of \"European Strong\".",
      "The man from Swindon has beaten Game of Thrones's title of Strongest.",
      "The man from Swindon has beaten Game of Thrones's title of strongest.",
      "A Swindon man has beaten the Game of Thrones host to the title of Strongest European."
    ]
  },
  {
    "instance_id": "pyrxsum-40",
    "summary": "Labour leadership contender Andy Burnham has told supporters he has an \"outside but realistic chance\" of winning the contest.",
    "summary_trees": [
      "# ::snt Labour leadership contender Andy Burnham has told supporters he has an \"outside but realistic chance\" of winning the contest.\n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Andy\"\n                  :op2 \"Burnham\")\n            :ARG0-of (c / contend-02\n                  :ARG1 (l / lead-02\n                        :ARG1 (p2 / political-party\n                              :name (n2 / name\n                                    :op1 \"Labour\")))))\n      :ARG1 (h / have-03\n            :ARG0 p\n            :ARG1 (c2 / chance-02\n                  :ARG0 p\n                  :ARG1 (w / win-01\n                        :ARG0 p\n                        :ARG2 (c3 / contest-02))\n                  :ARG2 (o / outside)\n                  :ARG1-of (c4 / contrast-01\n                        :ARG2 (r / realistic-03\n                              :ARG1 c2))))\n      :ARG2 (p3 / person\n            :ARG0-of (s / support-01)))"
    ],
    "tree": [
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG0 (p / person :name (n / name :op1 \"Andy\" :op2 \"Burnham\")))))",
      "(c4 / contrast-01\n    :ARG2 (r / realistic-03\n             :ARG1 (c2 / chance-02)))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02)))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02)))",
      "(c2 / chance-02\n    :ARG1 (c4 / contrast-01\n              :ARG2 (r / realistic-03\n                       :ARG1 c2)))",
      "(c2 / chance-02\n    :ARG1 (w / win-01\n             :ARG2 (c3 / contest-02))\n    :ARG2 (o / outside))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (h / have-03\n            :ARG0 p))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (h / have-03\n            :ARG0 p))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG1 (c4 / contrast-01\n                                :ARG2 (r / realistic-03\n                                         :ARG1 c2)))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG0 p))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG2 (o / outside)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG2 (o / outside))))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG1 (w / win-01\n                               :ARG0 p)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (h / have-03\n            :ARG0 p)\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Burnham\"))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG1 (c4 / contrast-01\n                                :ARG2 (r / realistic-03\n                                         :ARG1 c2))))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG0 p))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))",
      "(t / tell-01\n   :ARG0 (p / person\n            :ARG0 (c / contend-02\n                     :ARG1 (l / lead-02\n                              :ARG1 (p2 / political-party\n                                        :name (n2 / name\n                                                  :op1 \"Labour\")))))\n   :ARG1 (h / have-03\n            :ARG1 (c2 / chance-02\n                      :ARG2 (o / outside)))\n   :ARG2 (p3 / person\n             :ARG0 (s / support-01)))"
    ],
    "smus": [
      "There's a chance of Andy Burnham winning.",
      "But the chance is real.",
      "There is a chance of winning the contest.",
      "There is a chance but it is realistic.",
      "Andy Burnham has an outside chance of winning.",
      "The chance of winning the contest is outside.",
      "Andy Burnham has told me he has a chance.",
      "Andy Burnham has told the 'outside chance'.",
      "Andy Burnham has told supporters he has a chance.",
      "Labour's leadership contendors have told them they have a chance.",
      "Andy Burnham has told supporters that the outside chance is there.",
      "Andy Burnham has told supporters that he has a chance of winning.",
      "Labour's leadership contendors have told them that Labour has a chance of winning.",
      "Andy Burnham has told supporters that the contest has a chance of winning.",
      "Andy Burnham has told supporters that it has a chance but it is realistic.",
      "Labour supporters have been told they have a chance by the contending Labour leader.",
      "Labour supporters have been told by a contending Labour leader that he has a chance of winning.",
      "Labour's leadership contendors have told supporters that there is a chance of winning the contest."
    ]
  },
  {
    "instance_id": "pyrxsum-41",
    "summary": "Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.",
    "summary_trees": [
      "# ::snt Belfast Giants have closed the gap on Elite League leaders Cardiff Devils to six points with this comfortable win over the Capitals at the SSE Arena.\n(c / close-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Belfast\"\n                  :op2 \"Giants\"))\n      :ARG1 (g / gap)\n      :ARG4 (t2 / team\n            :name (n2 / name\n                  :op1 \"Cardiff\"\n                  :op2 \"Devils\")\n            :ARG0-of (l / lead-01\n                  :ARG1 (l2 / league\n                        :name (n3 / name\n                              :op1 \"Elite\"\n                              :op2 \"League\"))))\n      :extent (p / point\n            :quant 6)\n      :manner (w / win-01\n            :ARG0 t\n            :ARG4 (t3 / team\n                  :name (n4 / name\n                        :op1 \"Capitals\"))\n            :ARG0-of (c2 / comfortable-02)\n            :location (s / sports-facility\n                  :name (n5 / name\n                        :op1 \"SSE\"\n                        :op2 \"Arena\"))\n            :mod (t4 / this)))"
    ],
    "tree": [
      "(c / close-01\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :ARG4 (t3 / team\n                        :name (n4 / name\n                                  :op1 \"Capitals\"))))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :extent (p / point\n              :quant 6))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :ARG0 t))",
      "(c / close-01\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :ARG0 (c2 / comfortable-02)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :mod (t4 / this)))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :ARG4 (t3 / team\n                        :name (n4 / name\n                                  :op1 \"Capitals\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :manner (w / win-01\n              :location (s / sports-facility\n                           :name (n5 / name\n                                     :op1 \"SSE\"\n                                     :op2 \"Arena\"))))",
      "(c / close-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Belfast\"\n                     :op2 \"Giants\"))\n   :ARG1 (g / gap)\n   :ARG4 (t2 / team\n             :ARG0 (l / lead-01\n                      :ARG1 (l2 / league\n                                :name (n3 / name\n                                          :op1 \"Elite\"\n                                          :op2 \"League\")))))"
    ],
    "smus": [
      "The gap has closed by six points.",
      "The gap was closed with a comfortable win.",
      "The gap was closed with this victory.",
      "The Belfast Giants have closed the gap.",
      "The gap was closed with a victory over the Capitals.",
      "The gap was closed with a victory in the SSE Arena.",
      "The Belfast Giants have closed the gap by six points.",
      "The Belfast Giants have closed the gap with a win.",
      "The gap has closed for the Elite League leaders.",
      "The Belfast Giants have closed the gap with a comfortable win.",
      "The Belfast Giants have closed the gap with this win.",
      "The Belfast Giants have closed the gap with a win over the Capitals.",
      "The Belfast Giants have closed the gap with a win at the SSE Arena.",
      "The Belfast Giants have closed the gap on the league leaders of the Elite League."
    ]
  },
  {
    "instance_id": "pyrxsum-42",
    "summary": "Hayley Turner, Britain's most successful female jockey, believes her career has helped inspire other women to progress in the sport.",
    "summary_trees": [
      "# ::snt Hayley Turner, Britain's most successful female jockey, believes her career has helped inspire other women to progress in the sport.\n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Hayley\"\n                  :op2 \"Turner\")\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (s / succeed-01\n                        :ARG0 p\n                        :ARG1 (j / jockey\n                              :mod (f / female)))\n                  :ARG3 (m / most)\n                  :ARG5 (c / country\n                        :name (n2 / name\n                              :op1 \"Britain\"))))\n      :ARG1 (h2 / help-01\n            :ARG0 (c2 / career\n                  :poss p)\n            :ARG1 (ii / inspire-01\n                  :ARG0 c2\n                  :ARG1 (w / woman\n                        :mod (o / other))\n                  :ARG2 (p2 / progress-01\n                        :ARG1 w\n                        :ARG4 (s2 / sport)))))"
    ],
    "tree": [
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\")))))",
      "(s / succeed-01\n   :ARG1 (j / jockey\n            :mod (f / female)))",
      "(b / believe-01\n   :ARG1 (h2 / help-01\n             :ARG0 (c2 / career\n                       :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))))",
      "(b / believe-01\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG0 c2))",
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG0 c2))",
      "(b / believe-01\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG1 (w / woman))))",
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG1 (w / woman))))",
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG1 (w / woman\n                       :mod (o / other))))",
      "(h2 / help-01\n    :ARG0 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Hayley\" :op2 \"Turner\"))))\n    :ARG1 (ii / inspire-01\n              :ARG2 (p2 / progress-01\n                        :ARG4 (s2 / sport))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (h2 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG2 (s / succeed-01\n                              :ARG0 p)))\n   :ARG1 (h2 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG2 (s / succeed-01\n                              :ARG0 p)))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hayley\"\n                     :op2 \"Turner\"))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG2 (s / succeed-01\n                              :ARG0 p)))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG4 (s2 / sport)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c / country\n                              :name (n2 / name\n                                        :op1 \"Britain\"))))\n   :ARG1 (h2 / help-01\n             :ARG0 (c2 / career\n                       :poss p)))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c / country\n                              :name (n2 / name\n                                        :op1 \"Britain\"))))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG2 (s / succeed-01\n                              :ARG1 (j / jockey\n                                       :mod (f / female)))))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG0 (c2 / career))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c / country\n                              :name (n2 / name\n                                        :op1 \"Britain\"))))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG2 (p2 / progress-01\n                                 :ARG1 (w / woman)))))",
      "(b / believe-01\n   :ARG0 (p / person\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c / country\n                              :name (n2 / name\n                                        :op1 \"Britain\"))))\n   :ARG1 (h2 / help-01\n             :ARG1 (ii / inspire-01\n                       :ARG1 (w / woman\n                                :mod (o / other)))))"
    ],
    "smus": [
      "Hayley Turner's career has helped.",
      "The female jockey was successful.",
      "Hayley Turner's career believes to have helped.",
      "believes that career inspiration has helped.",
      "Hayley Turner's career has helped inspire.",
      "believes that it has helped inspire women to progress.",
      "believes that it has helped inspire other women.",
      "believes that it has helped inspire sport to progress.",
      "Hayley Turner's career has helped inspire women to progress.",
      "Hayley Turner's career has helped inspire other women.",
      "Hayley Turner's career has helped inspire sport to progress.",
      "Hayley Turner believes her career has helped.",
      "Hayley Turner believes that career inspiration has helped.",
      "People who believe their career has helped inspire them.",
      "Hayley Turner believes that it has helped inspire women to progress.",
      "Hayley Turner believes that helping other women to inspire is what has helped her.",
      "Hayley Turner believes that it has helped inspire sport to progress.",
      "People who believe they are successful believe that it has helped inspire women to progress.",
      "Brit believes that a career is helped to inspire.",
      "People who have been successful believe that it has helped inspire other women.",
      "People who have been successful believe that it has helped inspire sport to progress.",
      "A female jockey who believes her career has helped.",
      "A female jockey who believes her career has helped inspire her",
      "People who believe a female jockey is successful believe that it has helped inspire women to progress.",
      "People who believe a female jockey is successful believe that it has helped inspire other women.",
      "The female jockey, who believes she is successful, believes that her success has helped inspire sport to progress."
    ]
  },
  {
    "instance_id": "pyrxsum-43",
    "summary": "An elderly woman has died in a house fire in Enniskillen.",
    "summary_trees": [
      "# ::snt An elderly woman has died in a house fire in Enniskillen.\n(d / die-01\n      :ARG1 (w / woman\n            :mod (e / elderly))\n      :ARG1-of (c / cause-01\n            :ARG0 (f / fire\n                  :location (h / house)\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Enniskillen\")))))"
    ],
    "tree": [
      "(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly)))",
      "(d / die-01\n   :ARG1 (w / woman\n            :mod (e / elderly)))",
      "(d / die-01\n   :ARG1 (c / cause-01\n            :ARG0 (f / fire\n                     :location (h / house))))"
    ],
    "smus": [
      "An elderly woman has died.",
      "A house fire has killed.",
      "A fire in Enniskillen has killed."
    ]
  },
  {
    "instance_id": "pyrxsum-44",
    "summary": "Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.",
    "summary_trees": [
      "# ::snt Championship side Fulham have signed striker Gohi Cyriac on loan until the end of the season from Belgian Pro League side KV Oostende.\n(s / sign-02\n      :ARG0 (s2 / side\n            :name (n / name\n                  :op1 \"Fulham\")\n            :mod (c / championship))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Gohi\"\n                  :op2 \"Cyriac\")\n            :ARG0-of (s3 / strike-02))\n      :ARG3 (s4 / side\n            :name (n3 / name\n                  :op1 \"KV\"\n                  :op2 \"Oostende\")\n            :mod (l / league\n                  :name (n4 / name\n                        :op1 \"Pro\"\n                        :op2 \"League\")\n                  :mod (c2 / country\n                        :name (n5 / name\n                              :op1 \"Belgium\"))))\n      :manner (l2 / loan)\n      :time (u / until\n            :op1 (e / end-01\n                  :ARG1 (s5 / season))))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02)))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :manner (l2 / loan))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :name (n3 / name\n                       :op1 \"KV\"\n                       :op2 \"Oostende\")))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :time (u / until\n            :op1 (e / end-01\n                    :ARG1 (s5 / season))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :ARG0 (s3 / strike-02))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :mod (c / championship))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :name (n4 / name\n                               :op1 \"Pro\"\n                               :op2 \"League\"))))",
      "(s / sign-02\n   :ARG0 (s2 / side\n             :name (n / name\n                      :op1 \"Fulham\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Gohi\"\n                      :op2 \"Cyriac\"))\n   :ARG3 (s4 / side\n             :mod (l / league\n                     :mod (c2 / country\n                              :name (n5 / name\n                                        :op1 \"Belgium\")))))"
    ],
    "smus": [
      "The championship side has signed a striker.",
      "Fulham have signed a striker.",
      "Gohi Cyriac has been signed by the championship side.",
      "The championship side has signed the striker on loan.",
      "Fulham have signed Gohi Cyriac.",
      "Fulham have signed a striker on loan.",
      "Gohi Cyriac was signed on loan by the championship side.",
      "Fulham have signed Gohi Cyriac on loan.",
      "The championship side have signed a striker from KV Oostende.",
      "The championship side has signed a striker until the end of the season.",
      "Fulham have signed a striker from KV Oostende.",
      "Fulham have signed a striker until the end of the season.",
      "The championship side have signed a striker from the Pro League side.",
      "Gohi Cyriac was signed by the championship side until the end of the season.",
      "Fulham have signed a striker from a Pro League side.",
      "The championship side has signed a striker for the Belgian league side.",
      "Fulham have signed Gohi Cyriac until the end of the season.",
      "Fulham have signed a striker from a Belgian league side.",
      "Gohi Cyriac has been signed by the championship side for the Pro League side.",
      "Fulham have signed Gohi Cyriac from a Pro League side.",
      "Fulham have signed Gohi Cyriac from a Belgian league side."
    ]
  },
  {
    "instance_id": "pyrxsum-45",
    "summary": "Wales started their 2018 World Cup qualifying campaign in confident fashion as they convincingly beat Moldova.",
    "summary_trees": [
      "# ::snt Wales started their 2018 World Cup qualifying campaign in confident fashion as they convincingly beat Moldova.\n(s / start-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Wales\"))\n      :ARG1 (c / campaign-01\n            :ARG0 t\n            :ARG1 (q / qualify-02\n                  :ARG1 t\n                  :ARG2 (g / game\n                        :name (n2 / name\n                              :op1 \"World\"\n                              :op2 \"Cup\")\n                        :time (d / date-entity\n                              :year 2018))))\n      :manner (c2 / confident-01\n            :ARG1 t)\n      :time (b / beat-03\n            :ARG0 t\n            :ARG1 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Moldova\"))\n            :ARG0-of (c3 / convince-01)))"
    ],
    "tree": [
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(c / campaign-01\n   :ARG1 (q / qualify-02\n            :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 (t / team :name (n / name :op1 \"Wales\")))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\")))",
      "(q / qualify-02\n   :ARG2 (g / game\n            :time (d / date-entity\n                     :year 2018)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(q / qualify-02\n   :ARG2 (g / game\n            :name (n2 / name\n                      :op1 \"World\"\n                      :op2 \"Cup\")))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(c / campaign-01\n   :ARG1 (q / qualify-02\n            :ARG2 (g / game\n                     :time (d / date-entity\n                              :year 2018))))",
      "(b / beat-03\n   :ARG0 (c3 / convince-01)\n   :ARG1 (t2 / team\n             :name (n3 / name\n                       :op1 \"Moldova\")))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 (t / team :name (n / name :op1 \"Wales\"))))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(c / campaign-01\n   :ARG1 (q / qualify-02\n            :ARG2 (g / game\n                     :name (n2 / name\n                               :op1 \"World\"\n                               :op2 \"Cup\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018)))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 (t / team :name (n / name :op1 \"Wales\"))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 t)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG0 (t / team :name (n / name :op1 \"Wales\")))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 t)))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG0 t)\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 (t / team :name (n / name :op1 \"Wales\"))))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 t))\n   :time (b / beat-03\n            :ARG0 t))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 t))\n   :manner (c2 / confident-01\n               :ARG1 t))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG0 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :manner (c2 / confident-01\n               :ARG1 (t / team :name (n / name :op1 \"Wales\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018)))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\"))))\n   :time (b / beat-03\n            :ARG0 (c3 / convince-01)))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :name (n2 / name\n                                        :op1 \"World\"\n                                        :op2 \"Cup\")))))",
      "(s / start-01\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG1 t))\n   :time (b / beat-03\n            :ARG1 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Moldova\"))))",
      "(s / start-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Wales\"))\n   :ARG1 (c / campaign-01\n            :ARG1 (q / qualify-02\n                     :ARG2 (g / game\n                              :time (d / date-entity\n                                       :year 2018))))\n   :time (b / beat-03\n            :ARG0 t))"
    ],
    "smus": [
      "Wales' campaign started.",
      "Wales qualification campaign",
      "The Welsh qualification campaign started.",
      "Wales started.",
      "Qualification for the 2018 game",
      "Wales started their campaign when they beat.",
      "Wales started the campaign confidently.",
      "Qualifying for the World Cup",
      "Wales' campaign started when they beat a convincing goal.",
      "The campaign is for qualification for the 2018 game.",
      "Moldova beaten convincingly",
      "Wales started the campaign.",
      "The Welsh qualification campaign started confidently.",
      "Wales started when they beat.",
      "Wales started confidently.",
      "The campaign is for qualification for the World Cup.",
      "The campaign started with qualification for the 2018 game.",
      "The Welsh qualification campaign started when Wales beat them convincingly.",
      "Wales started when they beat convincingly.",
      "Wales started a qualifying campaign.",
      "The campaign started with qualification for the World Cup.",
      "Wales started their campaign when they beat Moldova.",
      "Wales started their campaign when they beat convincingly.",
      "The Welsh qualification campaign started when Wales beat Moldova.",
      "Wales started the campaign confidently for qualification for the 2018-2019 game.",
      "Wales started when they beat Moldova.",
      "Wales started their qualification campaign when they beat.",
      "Wales started the qualification campaign confidently.",
      "The campaign for qualification for the 2018 game started when it was defeated convincingly.",
      "Wales started the campaign confidently for qualification for the World Cup.",
      "Wales started the campaign for qualification for the 2018 game.",
      "Wales started their qualification campaign when they beat convincingly.",
      "The campaign for qualification for the World Cup started when the World Cup was beaten convincingly.",
      "Wales started the campaign for qualification for the World Cup.",
      "Wales started the campaign when they beat Moldova.",
      "Wales started their qualification campaign when they beat Moldova.",
      "Wales started the campaign for qualification for the 2018-19 game when they beat convincingly.",
      "Wales started the campaign for qualification for the World Cup when they beat a convincingly.",
      "Wales started the campaign for qualification for the 2018-19 game when they beat Moldova.",
      "Wales started the campaign for qualification for the World Cup when they beat Moldova."
    ]
  },
  {
    "instance_id": "pyrxsum-46",
    "summary": "The BBC's director general has accused the Iranian authorities of intimidating those working for its Persian service.",
    "summary_trees": [
      "# ::snt The BBC's director general has accused the Iranian authorities of intimidating those working for its Persian service.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / publication\n                        :name (n / name\n                              :op1 \"BBC\"))\n                  :ARG2 (d / director\n                        :mod (g / general))))\n      :ARG1 (a2 / authority\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Iran\")))\n      :ARG2 (ii / intimidate-01\n            :ARG0 a2\n            :ARG1 (p3 / person\n                  :ARG0-of (w / work-01\n                        :ARG2 (s / service\n                              :mod (l / language\n                                    :name (n3 / name\n                                          :op1 \"Persian\"))\n                              :poss p2)))))"
    ],
    "tree": [
      "(ii / intimidate-01\n    :ARG1 (p3 / person\n              :ARG0 (w / work-01\n                       :ARG2 (s / service\n                                :poss (p2 / publication :name (n / name :op1 \"BBC\"))))))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(ii / intimidate-01\n    :ARG1 (p3 / person\n              :ARG0 (w / work-01\n                       :ARG2 (s / service\n                                :mod (l / language\n                                        :name (n3 / name\n                                                  :op1 \"Persian\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\"))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG0 a2))",
      "(a / accuse-01\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (l / language\n                                                 :name (n3 / name\n                                                           :op1 \"Persian\")))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :poss p2)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (d / director\n                              :mod (g / general))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (l / language\n                                                 :name (n3 / name\n                                                           :op1 \"Persian\")))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / publication\n                               :name (n / name\n                                        :op1 \"BBC\"))))\n   :ARG1 (a2 / authority\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Iran\")))\n   :ARG2 (ii / intimidate-01\n             :ARG1 (p3 / person\n                       :ARG0 (w / work-01\n                                :ARG2 (s / service\n                                         :mod (l / language\n                                                 :name (n3 / name\n                                                           :op1 \"Persian\")))))))"
    ],
    "smus": [
      "People working in the BBC service are intimidated.",
      "Iranian authorities have been accused of intimidating.",
      "People working in the persian service are intimidated.",
      "The director general has accused Iranian authorities.",
      "The BBC has accused Iranian authorities.",
      "The director general has accused Iranian authorities of intimidating.",
      "Iranian authorities have been accused of intimidating people working in a Persian service.",
      "The BBC has accused Iranian authorities of intimidating people working in their service.",
      "The director general has accused Iranian authorities of intimidating people working in the Persian service.",
      "The BBC has accused Iranian authorities of intimidating people working in the Persian service."
    ]
  },
  {
    "instance_id": "pyrxsum-47",
    "summary": "A mother of six with an IQ of 70 should be sterilised for her own safety, the Court of Protection has ruled.",
    "summary_trees": [
      "# ::snt A mother of six with an IQ of 70 should be sterilised for her own safety, the Court of Protection has ruled.\n(r / rule-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Court\"\n                  :op2 \"of\"\n                  :op3 \"Protection\"))\n      :ARG3 (r2 / recommend-01\n            :ARG1 (s / sterilize-01\n                  :ARG1 (p / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / child\n                                    :quant 6)\n                              :ARG2 (m / mother))\n                        :ARG0-of (h2 / have-03\n                              :ARG1 (q / quotient\n                                    :quant 70\n                                    :degree-of (ii / intelligent-01))))\n                  :purpose (s2 / safe-01\n                        :ARG1 p))))"
    ],
    "tree": [
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :purpose (s2 / safe-01\n                          :ARG1 (p / person))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\")))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG2 (m / mother)))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :degree (ii / intelligent-01)))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(r2 / recommend-01\n    :ARG1 (s / sterilize-01\n             :ARG1 (p / person\n                      :ARG0 (h2 / have-03\n                                :ARG1 (q / quotient\n                                         :degree (ii / intelligent-01))))))",
      "(s / sterilize-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (q / quotient\n                               :degree (ii / intelligent-01))))\n   :purpose (s2 / safe-01\n                :ARG1 p))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :purpose (s2 / safe-01\n                                   :ARG1 (p / person)))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :quant 70))))))",
      "(r / rule-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Court\"\n                     :op2 \"of\"\n                     :op3 \"Protection\"))\n   :ARG3 (r2 / recommend-01\n             :ARG1 (s / sterilize-01\n                      :ARG1 (p / person\n                               :ARG0 (h2 / have-03\n                                         :ARG1 (q / quotient\n                                                  :degree (ii / intelligent-01)))))))"
    ],
    "smus": [
      "People should be sterilized for safety reasons.",
      "The Court of Protection has ruled that --",
      "The mother should be sterilized.",
      "People with an \"intellectual quotient\" are sterilized.",
      "The mother is sterilized for safety.",
      "People with an \"intellectual quotient\" should be sterilized.",
      "People with an intelligence quotient are sterilized for safety.",
      "The Court of Protection has ruled that sterilization should be done for the safety of people.",
      "The Court of Protection has ruled that the mother should be sterilized.",
      "The Court of Protection has ruled that people with 70 should be sterilized.",
      "The Court of Protection has ruled that people with an \"intellectual quotient\" should be sterilized."
    ]
  },
  {
    "instance_id": "pyrxsum-48",
    "summary": "China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).",
    "summary_trees": [
      "# ::snt China's biggest privately-held conglomerate Fosun has joined a bidding war for the Portuguese hospital operator Espirito Santo Saude (ESS).\n(j / join-01\n      :ARG0 (c / conglomerate\n            :name (n / name\n                  :op1 \"Fosun\")\n            :ARG1-of (o / own-01\n                  :ARG1-of (p / private-03))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (b / big)\n                  :ARG3 (m / most)\n                  :ARG5 (c2 / country\n                        :name (n2 / name\n                              :op1 \"China\"))))\n      :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                  :ARG3 (c3 / company\n                        :name (n3 / name\n                              :op1 \"Espirito\"\n                              :op2 \"Santo\"\n                              :op3 \"Saude\")\n                        :ARG0-of (o2 / operate-01\n                              :ARG1 (h2 / hospital))\n                        :mod (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Portugal\"))))))"
    ],
    "tree": [
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :name (n / name\n                     :op1 \"Fosun\"))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (o / own-01\n                     :ARG1 (p / private-03)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG2 (b / big)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG3 (m / most)))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"China\"))))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :ARG0 (o2 / operate-01\n                                          :ARG1 (h2 / hospital))))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"China\"))))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :name (n3 / name\n                                          :op1 \"Espirito\"\n                                          :op2 \"Santo\"\n                                          :op3 \"Saude\")))))",
      "(j / join-01\n   :ARG0 (c / conglomerate\n            :ARG1 (h / have-degree-91\n                     :ARG5 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"China\"))))\n   :ARG1 (w / war-01\n            :ARG2 (b2 / bid-01\n                      :ARG3 (c3 / company\n                                :mod (c4 / country\n                                         :name (n4 / name\n                                                   :op1 \"Portugal\"))))))"
    ],
    "smus": [
      "The Sun conglomerate has joined a war over a bid for a hospital operating company.",
      "The conglomerate Fosun has joined a war over a bid to Espirito Santo Saude.",
      "The fossil conglomerate has joined a war over a bid from a Portuguese company.",
      "The private-owned conglomerate has joined the war over the hospital operating company's bid.",
      "The big conglomerate has joined the war over the hospital operating company's bid.",
      "The largest conglomerate has joined a war over a bid for the hospital operating company.",
      "The private-equity conglomerate has joined the war on the bid for Espirito Santo Saude.",
      "The private-owned conglomerate has joined the war on the bids of Portuguese companies.",
      "The big conglomerate has joined the war over the bid for Espirito Santo Saude.",
      "The big conglomerate has joined the war on the bids of Portuguese companies.",
      "The most conglomerate has joined the war over the bid for Espirito Santo Saude.",
      "The most conglomerate has joined a war over a bid from a Portuguese company.",
      "The conglomerate of China has joined a war over a bid for the hospital operating company.",
      "The conglomerate of China has joined the war over the bid for Espirito Santo Saude.",
      "The conglomerate of Chinese has joined the war on the bids of Portuguese companies."
    ]
  },
  {
    "instance_id": "pyrxsum-49",
    "summary": "Bosses have been urged not to indulge in invasive surveillance by reading their employees' private messages.",
    "summary_trees": [
      "# ::snt Bosses have been urged not to indulge in invasive surveillance by reading their employees' private messages.\n(u / urge-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (b / boss)))\n      :ARG2 (ii / indulge-01\n            :polarity -\n            :ARG0 p\n            :ARG1 (s / surveil-01\n                  :ARG0 p\n                  :ARG0-of (ii2 / invade-01)\n                  :manner (r / read-01\n                        :ARG0 p\n                        :ARG1 (m / message-01\n                              :ARG0 (p2 / person\n                                    :ARG1-of (e / employ-01\n                                          :ARG0 p))\n                              :ARG1-of (p3 / private-02))))))"
    ],
    "tree": [
      "(r / read-01\n   :ARG1 (m / message-01\n            :ARG1 (p3 / private-02)))"
    ],
    "smus": [
      "Private message read."
    ]
  },
  {
    "instance_id": "pyrxsum-50",
    "summary": "Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.",
    "summary_trees": [
      "# ::snt Supermarket chain Morrisons has increased the cost of a jar of Marmite by 12.5%, say retail industry experts.\n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01\n                  :ARG2 (ii / industry\n                        :mod (r / retail-01))))\n      :ARG1 (ii2 / increase-01\n            :ARG0 (c / chain\n                  :name (n / name\n                        :op1 \"Morrisons\")\n                  :mod (s2 / supermarket))\n            :ARG1 (c2 / cost-01\n                  :ARG1 (j / jar\n                        :consist-of (p2 / product\n                              :name (n2 / name\n                                    :op1 \"Mariane\"))))\n            :ARG2 (p3 / percentage-entity\n                  :value 12.5)))"
    ],
    "tree": [
      "(c2 / cost-01\n    :ARG1 (j / jar\n             :consist-of (p2 / product\n                             :name (n2 / name\n                                       :op1 \"Mariane\"))))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(ii2 / increase-01\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG2 (p3 / percentage-entity\n                        :value 12.5)))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :mod (s2 / supermarket))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\"))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG0 (c / chain\n                       :name (n / name\n                                :op1 \"Morrisons\"))))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :mod (s2 / supermarket))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(ii2 / increase-01\n     :ARG0 (c / chain\n              :name (n / name\n                       :op1 \"Morrisons\"))\n     :ARG1 (c2 / cost-01\n               :ARG1 (j / jar\n                        :consist-of (p2 / product\n                                        :name (n2 / name\n                                                  :op1 \"Mariane\"))))\n     :ARG2 (p3 / percentage-entity\n               :value 12.5))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01\n                     :ARG2 (ii / industry\n                               :mod (r / retail-01))))\n   :ARG1 (ii2 / increase-01\n              :ARG1 (c2 / cost-01\n                        :ARG1 (j / jar\n                                 :consist-of (p2 / product\n                                                 :name (n2 / name\n                                                           :op1 \"Mariane\"))))))"
    ],
    "smus": [
      "Cost per jar of Mariane",
      "The cost of a jar of Mariane has increased.",
      "The cost of a jar of Mariane has increased by 12.5%.",
      "Retail industry experts say the increase has increased by 12.5%.",
      "The supermarket chain has increased the cost of a jar of Mariane.",
      "Retail industry experts say supermarket chain has increased.",
      "The Morrisons chain has increased the cost per jar of Mariane.",
      "Retail industry experts say the Morrisons chain has increased.",
      "The supermarket chain has increased the cost of a jar of Mariane by 12.5%.",
      "Morrisons has increased the cost of a jar of Mariane by 12.5%.",
      "Retail industry experts say the cost of a jar of Mariane has increased."
    ]
  },
  {
    "instance_id": "pyrxsum-51",
    "summary": "More should be done to help deaf people into work in Wales, a charity has said.",
    "summary_trees": [
      "# ::snt More should be done to help deaf people into work in Wales, a charity has said.\n(s / say-01\n      :ARG0 (c / charity)\n      :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                  :ARG1 (m / more)\n                  :ARG2 (h / help-01\n                        :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                    :ARG0-of (d2 / deaf-02))\n                              :location (c2 / country\n                                    :name (n / name\n                                          :op1 \"Wales\")))\n                        :ARG2 p))))"
    ],
    "tree": [
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG1 (m / more)))",
      "(w / work-01\n   :ARG0 (p / person\n            :ARG0 (d2 / deaf-02)))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG1 (m / more))))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG2 (p / person\n                              :ARG0 (d2 / deaf-02)))))",
      "(w / work-01\n   :ARG0 (p / person\n            :ARG0 (d2 / deaf-02))\n   :location (c2 / country\n                 :name (n / name\n                          :op1 \"Wales\")))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG1 (w / work-01\n                              :ARG0 (p / person\n                                       :ARG0 (d2 / deaf-02))))))",
      "(r / recommend-01\n   :ARG1 (d / do-02\n            :ARG2 (h / help-01\n                     :ARG1 (w / work-01\n                              :location (c2 / country\n                                            :name (n / name\n                                                     :op1 \"Wales\"))))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG2 (p / person\n                                       :ARG0 (d2 / deaf-02))))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :ARG0 (p / person\n                                                :ARG0 (d2 / deaf-02)))))))",
      "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (r / recommend-01\n            :ARG1 (d / do-02\n                     :ARG2 (h / help-01\n                              :ARG1 (w / work-01\n                                       :location (c2 / country\n                                                     :name (n / name\n                                                              :op1 \"Wales\")))))))"
    ],
    "smus": [
      "More should be done.",
      "Deaf work.",
      "Charity has said more should be done.",
      "It should be done to help the deaf.",
      "Deaf people work in Wales.",
      "It should be done to help deaf people do their work.",
      "It should be done to help work in Wales.",
      "The charity has said that something should be done to help the deaf.",
      "The charity has said that something should be done to help deaf people do their work.",
      "The charity has said that work should be done to help in Wales."
    ]
  },
  {
    "instance_id": "pyrxsum-52",
    "summary": "Five teenagers have been sentenced after admitting their part in a \"riot\" which saw part of Newport city centre \"under siege\".",
    "summary_trees": [
      "# ::snt Five teenagers have been sentenced after admitting their part in a \"riot\" which saw part of Newport city centre \"under siege\".\n(s / sentence-01\n      :ARG1 (t / teenager\n            :quant 5)\n      :time (a / after\n            :op1 (a2 / admit-01\n                  :ARG0 t\n                  :ARG1 (p / part\n                        :part-of (r / riot-01\n                              :ARG0-of (s2 / see-01\n                                    :ARG1 (s3 / siege-01\n                                          :ARG1 (c / center\n                                                :part-of (c2 / city\n                                                      :name (n / name\n                                                            :op1 \"Newport\"))))))\n                        :poss t))))"
    ],
    "tree": [
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5))",
      "(s3 / siege-01\n    :ARG1 (c / center\n             :part (c2 / city\n                       :name (n / name\n                                :op1 \"Newport\"))))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG0 t)))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG1 (p / part\n                              :poss t))))",
      "(r / riot-01\n   :ARG0 (s2 / see-01\n             :ARG1 (s3 / siege-01\n                       :ARG1 (c / center\n                                :part (c2 / city\n                                          :name (n / name\n                                                   :op1 \"Newport\"))))))",
      "(s / sentence-01\n   :ARG1 (t / teenager\n            :quant 5)\n   :time (a / after\n            :op1 (a2 / admit-01\n                     :ARG1 (p / part\n                              :part (r / riot-01\n                                       :ARG0 (s2 / see-01\n                                                 :ARG1 (s3 / siege-01\n                                                           :ARG1 (c / center\n                                                                    :part (c2 / city\n                                                                              :name (n / name\n                                                                                       :op1 \"Newport\"))))))))))"
    ],
    "smus": [
      "Five teenagers were sentenced.",
      "The city center of Newport was under siege.",
      "Five teenagers were sentenced after admitting.",
      "Five teenagers were sentenced after admitting their part.",
      "The riots saw the siege of the center of Newport city.",
      "Five teenagers were sentenced after admitting part of a riot that saw the siege of the city center in Newport."
    ]
  },
  {
    "instance_id": "pyrxsum-53",
    "summary": "Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.",
    "summary_trees": [
      "# ::snt Fetch, sit and roll over - all the kinds of normal things that you would say to your dog.\n(a / and\n      :op1 (f / fetch-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG2 (d / dog\n                  :poss y))\n      :op2 (s / sit-01\n            :mode imperative\n            :ARG1 y\n            :ARG2 d)\n      :op3 (r / roll-01\n            :mode imperative\n            :ARG0 y\n            :ARG2 (o / over))\n      :domain (t / thing\n            :ARG1-of (n / normal-02)\n            :mod (k / kind\n                  :mod (a2 / all))\n            :ARG1-of (s2 / say-01\n                  :ARG0 y\n                  :ARG2 d)))"
    ],
    "tree": [
      "(f / fetch-01\n   :ARG0 (y / you)\n   :ARG2 (d / dog\n            :poss y))"
    ],
    "smus": [
      "fetch your dog."
    ]
  },
  {
    "instance_id": "pyrxsum-54",
    "summary": "A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.",
    "summary_trees": [
      "# ::snt A grand jury has decided not to indict anyone in the case of Sandra Bland, who died in a Texas jail earlier this year.\n(d / decide-01\n      :ARG0 (j / jury\n            :mod (g / grand))\n      :ARG1 (ii / indict-01\n            :polarity -\n            :ARG0 j\n            :ARG1 (a / anyone)\n            :topic (c / case-04\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Sandra\"\n                              :op2 \"Bland\")\n                        :ARG1-of (d2 / die-01\n                              :location (j2 / jail\n                                    :location (s / state\n                                          :name (n2 / name\n                                                :op1 \"Texas\")))\n                              :time (b / before)\n                              :time (y / year\n                                    :mod (t / this)))))))"
    ],
    "tree": [
      "(d / decide-01\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand)))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(d / decide-01\n   :ARG0 (j / jury\n            :mod (g / grand))\n   :ARG1 (ii / indict-01\n             :polarity -))",
      "(c / case-04\n   :ARG1 (p / person\n            :ARG1 (d2 / die-01\n                      :time (y / year\n                               :mod (t / this)))))",
      "(d / decide-01\n   :ARG1 (ii / indict-01\n             :topic (c / case-04\n                       :ARG1 (p / person\n                                :ARG1 (d2 / die-01\n                                          :time (b / before))))))"
    ],
    "smus": [
      "It was decided not to indict.",
      "The grand jury decided.",
      "The grand jury has decided not to indict.",
      "The grand jury has decided not to indict anyone.",
      "In the case of the person who died in jail in Texas.",
      "The case against Sandra Land was decided by a grand jury."
    ]
  },
  {
    "instance_id": "pyrxsum-55",
    "summary": "A man was limp \"like a teddy bear\" after he was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.",
    "summary_trees": [
      "# ::snt A man was limp \"like a teddy bear\" after he was restrained by bouncers on the ground outside an Aberdeen bar, a murder trial has heard.\n(h / hear-01\n      :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n      :ARG1 (l / limp-01\n            :ARG1 (m2 / man)\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b / bear\n                        :mod (t2 / teddy)))\n            :time (a / after\n                  :op1 (r2 / restrain-01\n                        :ARG0 (p / person\n                              :ARG0-of (h2 / have-org-role-91\n                                    :ARG2 (b2 / bouncer)))\n                        :ARG1 m2\n                        :location (g / ground\n                              :location (o / outside\n                                    :op1 (b3 / bar\n                                          :location (c / city\n                                                :name (n / name\n                                                      :op1 \"Aberdeen\")))))))))"
    ],
    "tree": [
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (m2 / man)))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG1 (m2 / man)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :ARG1 (r / resemble-01\n                     :ARG2 (b / bear\n                              :mod (t2 / teddy)))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :ARG0 (p / person\n                                       :ARG0 (h2 / have-org-role-91\n                                                 :ARG2 (b2 / bouncer)))))))",
      "(h / hear-01\n   :ARG0 (t / try-02\n            :ARG1 (m / murder-01))\n   :ARG1 (l / limp-01\n            :time (a / after\n                     :op1 (r2 / restrain-01\n                              :location (g / ground\n                                           :location (o / outside\n                                                        :op1 (b3 / bar\n                                                                 :location (c / city\n                                                                              :name (n / name\n                                                                                       :op1 \"Aberdeen\")))))))))"
    ],
    "smus": [
      "The murder trial has heard the man limp.",
      "The murder trial has heard that after the man was restrained he was limping.",
      "The murder trial has heard limping teddy bears.",
      "The murder trial has heard limped after being restrained by bouncers.",
      "The murder trial has heard a limp after being restrained on the ground outside an Aberdeen bar."
    ]
  },
  {
    "instance_id": "pyrxsum-56",
    "summary": "A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking he was collecting for a Hillsborough charity.",
    "summary_trees": [
      "# ::snt A bagpipe-playing busker has been convicted of duping people in Liverpool into thinking he was collecting for a Hillsborough charity.\n(c / convict-01\n      :ARG1 (b / busker\n            :ARG0-of (p / play-11\n                  :ARG2 (b2 / bagpipe)))\n      :ARG2 (d / dupe-01\n            :ARG0 b\n            :ARG1 (p2 / person\n                  :location (c2 / city\n                        :name (n / name\n                              :op1 \"Liverpool\")))\n            :ARG2 (t / think-01\n                  :ARG0 p2\n                  :ARG1 (c3 / collect-01\n                        :ARG0 p2\n                        :ARG3 (c4 / charity\n                              :mod (e / event\n                                    :name (n2 / name\n                                          :op1 \"Hillsborough\")))))))"
    ],
    "tree": [
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\"))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG0 b))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG0 b))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG0 p2))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG0 (p2 / person))))",
      "(d / dupe-01\n   :ARG1 (p2 / person\n             :location (c2 / city\n                           :name (n / name\n                                    :op1 \"Liverpool\")))\n   :ARG2 (t / think-01\n            :ARG1 (c3 / collect-01\n                      :ARG0 p2)))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG0 (p2 / person)))))",
      "(c / convict-01\n   :ARG1 (b / busker\n            :ARG0 (p / play-11\n                     :ARG2 (b2 / bagpipe)))\n   :ARG2 (d / dupe-01\n            :ARG2 (t / think-01\n                     :ARG1 (c3 / collect-01\n                               :ARG0 (p2 / person)))))"
    ],
    "smus": [
      "A busker playing the bagpipe was convicted.",
      "Duping Liverpool people.",
      "A busker playing the bagpipe was convicted of duping.",
      "Duping Liverpool people into thinking.",
      "A busker playing the bagpipe was convicted of duping people into thinking.",
      "Duping Liverpool people into thinking they are collecting.",
      "A busker playing the bagpipe was convicted of duping the idea of collecting by the people.",
      "A bagpipe playing busker was convicted of duping a Liverpool person.",
      "Duping Liverpool people into thinking of collecting for a Hillsborough charity.",
      "A busker playing bagpipes was convicted of duping thinking of collecting for a Hillsborough charity."
    ]
  },
  {
    "instance_id": "pyrxsum-57",
    "summary": "New Morocco coach Herve Renard begins his quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.",
    "summary_trees": [
      "# ::snt New Morocco coach Herve Renard begins his quest for a record-equalling third Africa Cup of Nations as qualifying for the 2017 tournament resumes this week.\n(b / begin-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Herve\"\n                  :op2 \"Renard\")\n            :ARG0-of (c / coach-01\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Morocco\")))\n            :ARG1-of (n3 / new-02))\n      :ARG1 (q / quest-01\n            :ARG0 p\n            :ARG1 (q2 / qualify-02\n                  :ARG1 p\n                  :ARG2 (t2 / tournament\n                        :name (n4 / name\n                              :op1 \"Africa\"\n                              :op2 \"Cup\"\n                              :op3 \"of\"\n                              :op4 \"Nations\")\n                        :ord (o / ordinal-entity\n                              :value 3)\n                        :ARG0-of (e / equal-01\n                              :ARG1 (r / record)))))\n      :time (r2 / resume-01\n            :ARG1 q2\n            :time (w / week\n                  :mod (t3 / this))))"
    ],
    "tree": [
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG1 p)))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p)))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG0 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\"))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p)))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG1 p)))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p)))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG1 p)))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG1 p)))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))\n                      :ARG1 (p / person :name (n / name :op1 \"Herve\" :op2 \"Renard\")))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (t2 / tournament\n                                 :name (n4 / name\n                                           :op1 \"Africa\"\n                                           :op2 \"Cup\"\n                                           :op3 \"of\"\n                                           :op4 \"Nations\")\n                                 :ord (o / ordinal-entity\n                                         :value 3)\n                                 :ARG0 (e / equal-01)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG1 p\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (t2 / tournament\n                                 :name (n4 / name\n                                           :op1 \"Africa\"\n                                           :op2 \"Cup\"\n                                           :op3 \"of\"\n                                           :op4 \"Nations\")\n                                 :ord (o / ordinal-entity\n                                         :value 3)\n                                 :ARG0 (e / equal-01)))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))\n                      :ARG1 p))\n   :time (r2 / resume-01\n             :ARG1 q2))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG1 (n3 / new-02))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herve\"\n                     :op2 \"Renard\"))\n   :ARG1 (q / quest-01\n            :ARG1 (q2 / qualify-02\n                      :ARG2 (t2 / tournament\n                                :name (n4 / name\n                                          :op1 \"Africa\"\n                                          :op2 \"Cup\"\n                                          :op3 \"of\"\n                                          :op4 \"Nations\")\n                                :ord (o / ordinal-entity\n                                        :value 3)\n                                :ARG0 (e / equal-01))))\n   :time (r2 / resume-01\n             :time (w / week\n                      :mod (t3 / this))))",
      "(b / begin-01\n   :ARG0 (p / person\n            :ARG0 (c / coach-01\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Morocco\"))))\n   :ARG1 (q / quest-01\n            :ARG0 p)\n   :time (r2 / resume-01\n             :ARG1 (q2 / qualify-02\n                       :ARG2 (t2 / tournament\n                                 :name (n4 / name\n                                           :op1 \"Africa\"\n                                           :op2 \"Cup\"\n                                           :op3 \"of\"\n                                           :op4 \"Nations\")\n                                 :ord (o / ordinal-entity\n                                         :value 3)\n                                 :ARG0 (e / equal-01)))))"
    ],
    "smus": [
      "Herve Renard's quest begins.",
      "The quest for EQUALIZING Herve Renard begins.",
      "The new person begins his quest.",
      "When he resumes qualifying, his quest begins.",
      "When the quest for qualifying Herve Renard resumes, it begins.",
      "Herve Renard begins his quest.",
      "New person begins quest for qualification.",
      "Herve Renard's quest begins when this week's resume resumes.",
      "Herve Renard begins the quest for qualifying.",
      "The quest for qualitating Herve Renard begins this week, when it resumes.",
      "Morocco coach begins quest.",
      "When a new person resumes qualifying, he begins his quest.",
      "When the quest for qualifying resumes, the new person begins.",
      "The new person begins his quest as the week resumes.",
      "Morocco coach begins quest for qualification.",
      "When he resumes qualifying, Herve Renard begins his quest.",
      "When he resumes his quest for qualification, Herve Renard begins his quest for qualification.",
      "Herve Renard begins his quest as the week this resumes.",
      "The Moroccan coach begins his quest as he resumes qualifying.",
      "The Moroccan coach begins his quest for qualification when it resumes.",
      "Morocco coach begins quest as week resumes.",
      "The new person begins the quest for qualifying for the Africa Cup of Nations, the third tournament of equaling.",
      "Morocco coach begins quest for qualification as week resumes.",
      "When the quest for qualifying Herve Renard for the Africa Cup of Nations third round of equalizing begins.",
      "The quest for qualifying for the Africa Cup of Nations third equaling tournament for Herve Renard begins as it resumes.",
      "The quest for qualifying for the third African Cup of Nations equalizing begins this week as it resumes.",
      "The new person begins his quest as preparing for the third African Cup of Nations equalizing tournament resumes.",
      "The new person begins the quest for qualifying for the Africa Cup of Nations, the third tournament of equaling, when it resumes.",
      "Morocco coach begins quest for qualification for the Africa Cup of Nations third round equalizing.",
      "When the quest for qualifying for the third African Cup of Nations equalizing begins, Herve Renard begins.",
      "When the quest for qualifying for the Africa Cup of Nations third round of equalizing begins, Herve Renard begins.",
      "The quest for qualifying for the Africa Cup of Nations' third equalizing tournament begins for new people when this week's resumes.",
      "Morocco coach begins quest as qualification for third African Cup of Nations equalizing resumes.",
      "Morocco's coach begins quest for qualifying for the Africa Cup of Nations, the third tournament of equaling, when quest resumes.",
      "Morocco coach begins quest for qualification for the Africa Cup of Nations third round equalizing when quest resumes.",
      "Morocco coach begins quest for qualifying for the Africa Cup of Nations third round of equalizing this week."
    ]
  },
  {
    "instance_id": "pyrxsum-58",
    "summary": "Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.",
    "summary_trees": [
      "# ::snt Soul singer Ray BLK has topped the BBC's Sound Of 2017 list, which aims to predict the most exciting new music for the year ahead.\n(t / top-01\n      :ARG1 (l / list\n            :name (n / name\n                  :op1 \"Sound\"\n                  :op2 \"Of\"\n                  :op3 \"2017\")\n            :poss (p / publication\n                  :name (n2 / name\n                        :op1 \"BBC\"))\n            :ARG0-of (a / aim-01\n                  :ARG1 (p2 / predict-01\n                        :ARG1 (m / music\n                              :ARG1-of (n3 / new-01)\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (e / excite-01\n                                          :ARG0 m)\n                                    :ARG3 (m2 / most))\n                              :time (y / year\n                                    :mod (a2 / ahead))))))\n      :ARG2 (p3 / person\n            :name (n4 / name\n                  :op1 \"Ray\"\n                  :op2 \"BlK\")\n            :ARG0-of (s / sing-01\n                  :ARG1 (s2 / soul))))"
    ],
    "tree": [
      "(p2 / predict-01\n    :ARG1 (m / music\n             :ARG1 (n3 / new-01)))",
      "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :ARG1 (n3 / new-01))))",
      "(p2 / predict-01\n    :ARG1 (m / music\n             :time (y / year\n                      :mod (a2 / ahead))))",
      "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :time (y / year\n                               :mod (a2 / ahead)))))",
      "(a / aim-01\n   :ARG1 (p2 / predict-01\n             :ARG1 (m / music\n                      :ARG1 (h / have-degree-91\n                               :ARG2 (e / excite-01\n                                        :ARG0 m)))))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :name (n / name\n                     :op1 \"Sound\"\n                     :op2 \"Of\"\n                     :op3 \"2017\"))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :poss (p / publication\n                     :name (n2 / name\n                               :op1 \"BBC\")))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (n3 / new-01)))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :time (y / year\n                                                 :mod (a2 / ahead))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :time (y / year\n                                                 :mod (a2 / ahead))))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m2 / most))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG3 (m2 / most))))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (e / excite-01\n                                                          :ARG0 m))))))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Ray\"\n                       :op2 \"BlK\")))",
      "(t / top-01\n   :ARG1 (l / list\n            :ARG0 (a / aim-01\n                     :ARG1 (p2 / predict-01\n                               :ARG1 (m / music\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (e / excite-01\n                                                          :ARG0 m))))))\n   :ARG2 (p3 / person\n             :ARG0 (s / sing-01\n                      :ARG1 (s2 / soul))))"
    ],
    "smus": [
      "predict new music",
      "aims to predict the new music",
      "Predict the music for the year ahead.",
      "aims to predict the music for the year ahead.",
      "The aim is to predict what music will be exciting.",
      "Ray Blak tops the Sound of 2017 list.",
      "The soul singer was top of the list for 2017.",
      "Ray Blak tops the BBC list.",
      "The BBC's list topped soul-singers.",
      "Ray Blak tops list of aims to predict new music",
      "The list aimed at predicting new music has topped the soul-singing list.",
      "Ray Blak tops list that aims to predict music for the year ahead",
      "The list aimed at predicting the music of the year ahead has topped soul singers.",
      "Ray Blak tops list that aims to predict music that has the most to say.",
      "The list aimed at predicting the most music has topped the soul singers.",
      "Ray Blak tops list that aims to predict what music is exciting.",
      "The list aimed at predicting what music has been exciting has topped the soul-singing list."
    ]
  },
  {
    "instance_id": "pyrxsum-59",
    "summary": "Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.",
    "summary_trees": [
      "# ::snt Hundreds of protesters in Kabul have accused Iran of stopping fuel tankers from crossing the border into Afghanistan.\n(a / accuse-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / protest-01)\n            :quant (m / multiple\n                  :op1 100)\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Kabul\")))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 \"Iran\"))\n      :ARG2 (s / stop-03\n            :ARG0 c2\n            :ARG1 (t / tanker\n                  :mod (f / fuel))\n            :ARG2 (c3 / cross-02\n                  :ARG0 t\n                  :ARG1 (b / border-01\n                        :ARG2 (c4 / country\n                              :name (n3 / name\n                                    :op1 \"Afghanistan\"))))))"
    ],
    "tree": [
      "(c3 / cross-02\n    :ARG1 (b / border-01\n             :ARG2 (c4 / country\n                       :name (n3 / name\n                                 :op1 \"Afghanistan\"))))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\")))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(s / stop-03\n   :ARG1 (t / tanker\n            :mod (f / fuel))\n   :ARG2 (c3 / cross-02\n             :ARG1 (b / border-01\n                      :ARG2 (c4 / country\n                                :name (n3 / name\n                                          :op1 \"Afghanistan\")))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG0 c2))",
      "(a / accuse-01\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG0 (t / tanker))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG1 (t / tanker\n                     :mod (f / fuel))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :ARG0 (p2 / protest-01))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Kabul\")))\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"Iran\"))\n   :ARG2 (s / stop-03\n            :ARG2 (c3 / cross-02\n                      :ARG1 (b / border-01\n                               :ARG2 (c4 / country\n                                         :name (n3 / name\n                                                   :op1 \"Afghanistan\"))))))"
    ],
    "smus": [
      "Crossing the border with Afghanistan.",
      "Iran is accused of stopping.",
      "The protesters have accused Iran.",
      "Iran is accused of stopping tanks from crossing the border.",
      "Hundreds have accused Iran.",
      "Iran is accused of stopping fuel tankers.",
      "Kabul people have accused Iran.",
      "The protesters have accused Iran of stopping.",
      "Hundreds of people have accused Iran of stopping.",
      "Fuel tankers are stopping crossing the border with Afghanistan.",
      "Protesters have accused Iran of stopping tanks from crossing.",
      "Protestors have accused Iran of stopping fuel tanks.",
      "Hundreds of people have accused Iran of stopping tanks from crossing.",
      "Kabul people have accused Iran of stopping them.",
      "Iran is accused of stopping the crossing of the border with Afghanistan.",
      "Hundreds of people have accused Iran of stopping fuel tankers.",
      "Kabul people have accused Iran of stopping tanks from crossing.",
      "Kabul people have accused Iran of stopping fuel tankers.",
      "Protesters have accused Iran of stopping the crossing of the border with Afghanistan.",
      "Hundreds of people have accused Iran of stopping crossing the border with Afghanistan.",
      "Kabul people have accused Iran of stopping the crossing of the border with Afghanistan."
    ]
  },
  {
    "instance_id": "pyrxsum-60",
    "summary": "Some police forces are putting the public at risk by rationing their response as they struggle with cutbacks, the police standards watchdog has warned.",
    "summary_trees": [
      "# ::snt Some police forces are putting the public at risk by rationing their response as they struggle with cutbacks, the police standards watchdog has warned.\n(w / warn-01\n      :ARG0 (w2 / watchdog\n            :mod (p / police)\n            :mod (s / standard))\n      :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                  :mod (p2 / police)\n                  :quant (s2 / some))\n            :ARG1 (p3 / public)\n            :manner (r / ration-01\n                  :ARG0 f\n                  :ARG1 (r2 / respond-01\n                        :ARG0 f)\n                  :time (s3 / struggle-02\n                        :ARG0 f\n                        :ARG1 (c / cut-back-05\n                              :ARG0 f)))))"
    ],
    "tree": [
      "(r / ration-01\n   :time (s3 / struggle-02\n             :ARG0 (f / force)))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(e / endanger-01\n   :ARG1 (p3 / public)\n   :manner (r / ration-01\n              :ARG0 (f / force)))",
      "(r / ration-01\n   :time (s3 / struggle-02\n             :ARG1 (c / cut-back-05\n                      :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :mod (p2 / police))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :ARG1 (p3 / public))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG1 (r2 / respond-01\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))",
      "(e / endanger-01\n   :ARG1 (p3 / public)\n   :manner (r / ration-01\n              :ARG1 (r2 / respond-01\n                        :ARG0 (f / force))))",
      "(e / endanger-01\n   :ARG1 (p3 / public)\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :ARG1 (p3 / public)))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard))\n   :ARG1 (e / endanger-01\n            :ARG1 (p3 / public)))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG0 (f / force))))",
      "(w / warn-01\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG1 (c / cut-back-05\n                                          :ARG0 (f / force))))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG0 f)))",
      "(e / endanger-01\n   :ARG1 (p3 / public)\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG1 (c / cut-back-05\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :mod (p2 / police))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard))\n   :ARG1 (e / endanger-01\n            :ARG0 (f / force\n                     :quant (s2 / some))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG1 (r2 / respond-01\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :ARG1 (r2 / respond-01\n                                 :ARG0 (f / force)))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG0 (f / force)))))",
      "(e / endanger-01\n   :ARG0 (f / force\n            :quant (s2 / some))\n   :manner (r / ration-01\n              :time (s3 / struggle-02\n                        :ARG1 (c / cut-back-05\n                                 :ARG0 f))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (p / police))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG1 (c / cut-back-05\n                                          :ARG0 (f / force))))))",
      "(w / warn-01\n   :ARG0 (w2 / watchdog\n             :mod (s / standard))\n   :ARG1 (e / endanger-01\n            :manner (r / ration-01\n                       :time (s3 / struggle-02\n                                 :ARG1 (c / cut-back-05\n                                          :ARG0 (f / force))))))"
    ],
    "smus": [
      "Rationing occurs as forces struggle.",
      "Warning of dangers from forces rationing",
      "Rationing by forces puts the public in danger.",
      "Rationing occurs as forces struggle to cut back.",
      "Police forces are warned of danger.",
      "Some forces have been warned to be in danger.",
      "Some forces are putting the public in danger.",
      "Warnings of danger by rationing the response of forces.",
      "Rationing as forces struggle is warned of danger.",
      "Rationing the response of forces is dangerous to the public.",
      "Rationing while forces struggle is a danger to the public.",
      "A police watchdog has warned of dangers to the public.",
      "The standards watchdog has warned of the dangers to the public.",
      "Police watchdog warns of dangers of rationing forces",
      "Standard watchdog warned of dangers of forces rationing.",
      "Rationing as forces struggle to cut back is a danger warned.",
      "Some forces are in danger by rationing while they struggle.",
      "Rationing as forces struggle to cut back is a dangerous thing for the public.",
      "Police watchdog warns of dangers to police forces.",
      "Police watchdog warns of dangers of some forces.",
      "Standard watchdog has warned that some forces are dangerous.",
      "A police watchdog has warned of dangers from rationing the response of forces.",
      "A police watchdog has warned of dangers of rationing as forces struggle.",
      "Standard watchdog warned of dangers of rationing the response of forces.",
      "Standard watchdog warns of dangers of rationing as forces struggle.",
      "Some forces are in danger by rationing as they struggle to cut back.",
      "A police watchdog has warned of dangers of rationing as forces struggle to cut back.",
      "Standard watchdogs have warned of dangers of rationing as forces struggle to cut back."
    ]
  },
  {
    "instance_id": "pyrxsum-61",
    "summary": "Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.",
    "summary_trees": [
      "# ::snt Pace bowler Jake Ball has made a \"lively\" return following a winter playing for England Lions, says Nottinghamshire captain Chris Read.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chris\"\n                  :op2 \"Read\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Nottinghamshire\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jake\"\n                        :op2 \"Ball\")\n                  :ARG0-of (b / bowl-01\n                        :manner (p3 / pace-01)))\n            :ARG1-of (l / lively-00)\n            :ARG1-of (f / follow-01\n                  :ARG2 (p4 / play-01\n                        :ARG0 p2\n                        :ARG3 (t2 / team\n                              :name (n4 / name\n                                    :op1 \"England\"\n                                    :op2 \"Lions\"))\n                        :time (d / date-entity\n                              :season (w / winter))))))"
    ],
    "tree": [
      "(r / return-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jake\"\n                       :op2 \"Ball\")))",
      "(r / return-01\n   :ARG1 (p2 / person\n             :ARG0 (b / bowl-01\n                      :manner (p3 / pace-01))))",
      "(r / return-01\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jake\"\n                       :op2 \"Ball\")))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (l / lively-00)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG0 (p2 / person :name (n3 / name :op1 \"Jake\" :op2 \"Ball\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :time (d / date-entity\n                                        :season (w / winter))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Nottinghamshire\"))))\n   :ARG1 (r / return-01\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jake\"\n                                :op2 \"Ball\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Read\"))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG3 (t2 / team\n                                         :name (n4 / name\n                                                   :op1 \"England\"\n                                                   :op2 \"Lions\"))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (r / return-01\n            :ARG1 (f / follow-01\n                     :ARG2 (p4 / play-01\n                               :ARG3 (t2 / team\n                                         :name (n4 / name\n                                                   :op1 \"England\"\n                                                   :op2 \"Lions\"))))))"
    ],
    "smus": [
      "Jake Ball's return:",
      "The pace bowler in return.",
      "\"A lively return,\" says Chris Read.",
      "Chris Read says the return is following the play of Jake Ball.",
      "Nottinghamshire says it is a lively return.",
      "Chris Read says Jake Ball is in return.",
      "Chris Read says the pace bowling is in return.",
      "Chris Read says the return will be following winter play.",
      "The captain says the return will be following winter play.",
      "Nottinghamshire says pace bowling is in return.",
      "Chris Read says the return will be following the England Lions' play.",
      "Nottinghamshire says the return will be following winter play.",
      "Nottinghamshire says the return will be following the England Lions' play."
    ]
  },
  {
    "instance_id": "pyrxsum-62",
    "summary": "A serial robber who threatened an 18-year-old shop worker with a knife was caught after his streak of grey hair was recognised in CCTV footage.",
    "summary_trees": [
      "# ::snt A serial robber who threatened an 18-year-old shop worker with a knife was caught after his streak of grey hair was recognised in CCTV footage.\n(c / catch-01\n      :ARG1 (p / person\n            :ARG0-of (r / rob-01\n                  :mod (s / serial))\n            :ARG0-of (t / threaten-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (w / work-01\n                              :ARG2 (s2 / shop))\n                        :age (t2 / temporal-quantity\n                              :quant 18\n                              :unit (y / year)))\n                  :ARG2 (k / knife))\n            :part (s3 / streak\n                  :consist-of (h / hair\n                        :ARG1-of (g / gray-02))))\n      :time (a / after\n            :op1 (r2 / recognize-02\n                  :ARG1 p\n                  :location (f / footage\n                        :mod (t3 / television\n                              :mod (c2 / circuit\n                                    :ARG1-of (c3 / close-01)))))))"
    ],
    "tree": [
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :quant 18))\n   :ARG2 (k / knife))",
      "(c / catch-01\n   :ARG1 (p / person\n            :part (s3 / streak\n                      :consist-of (h / hair\n                                     :ARG1 (g / gray-02)))))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / shop)))\n   :ARG2 (k / knife))",
      "(t / threaten-01\n   :ARG1 (p2 / person\n             :age (t2 / temporal-quantity\n                      :unit (y / year)))\n   :ARG2 (k / knife))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18)))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :unit (y / year))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (r / rob-01\n                     :mod (s / serial)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG2 (k / knife)))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :part (s3 / streak\n                      :consist-of (h / hair\n                                     :ARG1 (g / gray-02))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :unit (y / year)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :ARG1 p)))",
      "(c / catch-01\n   :ARG1 (p / person\n            :part (s3 / streak\n                      :consist-of (h / hair\n                                     :ARG1 (g / gray-02))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :age (t2 / temporal-quantity\n                                        :quant 18))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))",
      "(c / catch-01\n   :ARG1 (p / person\n            :ARG0 (t / threaten-01\n                     :ARG1 (p2 / person\n                               :ARG0 (w / work-01\n                                        :ARG2 (s2 / shop)))))\n   :time (a / after\n            :op1 (r2 / recognize-02\n                     :location (f / footage\n                                  :mod (t3 / television\n                                           :mod (c2 / circuit\n                                                    :ARG1 (c3 / close-01)))))))"
    ],
    "smus": [
      "The 18-year-old was threatened.",
      "Serial robbers are caught.",
      "The person who was caught was threatened with a knife.",
      "The shop worker threatened.",
      "The year old was threatened.",
      "The 18-year-old threatened with a knife.",
      "People with a streak of gray hair are caught.",
      "The shop worker threatened with a knife.",
      "The year old threatened with a knife.",
      "The people who were caught when the threat was made against the 18-year-old.",
      "The person who threatened the shop worker was caught.",
      "The person who threatened a year old was caught.",
      "Serial robbers are caught after they are recognized.",
      "The person who was threatened with a knife was caught after being recognized.",
      "People with a streak of gray hair were caught after they were recognized.",
      "The people who threatened the 18 were caught after they were recognized.",
      "The person who threatened the shop worker was caught after being recognized.",
      "The person who threatened a year old was caught after he was recognized.",
      "People with a streak of gray hair were caught after being recognized on CCTV footage.",
      "The people who threatened the 18-year-old were caught after the CCTV footage was recognized.",
      "The person who threatened the shop worker was caught after the CCTV footage was recognized."
    ]
  },
  {
    "instance_id": "pyrxsum-63",
    "summary": "A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.",
    "summary_trees": [
      "# ::snt A British man has survived a fall from the 15th floor of a building in New Zealand, local media report.\n(r / report-01\n      :ARG0 (m / media\n            :ARG1-of (l / local-02))\n      :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"Britain\")))\n            :ARG1 (f / fall-01\n                  :ARG1 m2\n                  :ARG3 (f2 / floor\n                        :ord (o / ordinal-entity\n                              :value 15)\n                        :part-of (b / building\n                              :location (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"New\"\n                                          :op2 \"Zealand\")))))))"
    ],
    "tree": [
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\"))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG1 (m2 / man))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG1 m2))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG1 m2))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG0 (m2 / man\n                      :mod (c / country\n                              :name (n / name\n                                       :op1 \"Britain\")))))",
      "(r / report-01\n   :ARG0 (m / media\n            :ARG1 (l / local-02))\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :ord (o / ordinal-entity\n                                       :value 15)))))",
      "(r / report-01\n   :ARG1 (s / survive-01\n            :ARG1 (f / fall-01\n                     :ARG3 (f2 / floor\n                               :part (b / building\n                                        :location (c2 / country\n                                                      :name (n2 / name\n                                                                :op1 \"New\"\n                                                                :op2 \"Zealand\")))))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :ord (o / ordinal-entity\n                              :value 15))))",
      "(s / survive-01\n   :ARG0 (m2 / man\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Britain\")))\n   :ARG1 (f / fall-01\n            :ARG3 (f2 / floor\n                      :ord (o / ordinal-entity\n                              :value 15))))"
    ],
    "smus": [
      "Reports of a man having survived the fall.",
      "The British man survived.",
      "Reports of a British man having survived",
      "Reports of a survival after the fall from the 15th floor.",
      "Local media report that the man survived the fall.",
      "The British man survived the fall.",
      "Local media reports that a British man has survived.",
      "Local media reports that the fall from the 15th floor has survived.",
      "A report said the fall from the floor of a building in New Zealand had survived.",
      "A British man has survived the fall from the 15th floor.",
      "Local media reports that the fall from the floor of a building in New Zealand has survived.",
      "A British man has survived the fall from the floor of a New Zealand building."
    ]
  },
  {
    "instance_id": "pyrxsum-64",
    "summary": "The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.",
    "summary_trees": [
      "# ::snt The Royal Navy has released an image of planned improvements to a jetty at Portsmouth Naval Base.\n(r / release-01\n      :ARG0 (m / military\n            :name (n / name\n                  :op1 \"Royal\"\n                  :op2 \"Navy\"))\n      :ARG1 (ii / image\n            :topic (ii2 / improve-01\n                  :ARG1 (j / jetty\n                        :location (f / facility\n                              :name (n2 / name\n                                    :op1 \"Portsmouth\"\n                                    :op2 \"Naval\"\n                                    :op3 \"Base\")))\n                  :ARG1-of (p / plan-01))))"
    ],
    "tree": [
      "(r / release-01\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))",
      "(ii2 / improve-01\n     :ARG1 (j / jetty\n              :location (f / facility\n                           :name (n2 / name\n                                     :op1 \"Portsmouth\"\n                                     :op2 \"Naval\"\n                                     :op3 \"Base\"))))",
      "(ii2 / improve-01\n     :ARG1 (j / jetty\n              :location (f / facility\n                           :name (n2 / name\n                                     :op1 \"Portsmouth\"\n                                     :op2 \"Naval\"\n                                     :op3 \"Base\"))))",
      "(r / release-01\n   :ARG0 (m / military\n            :name (n / name\n                     :op1 \"Royal\"\n                     :op2 \"Navy\"))\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (p / plan-01))))",
      "(r / release-01\n   :ARG1 (ii / image\n             :topic (ii2 / improve-01\n                         :ARG1 (j / jetty\n                                  :location (f / facility\n                                               :name (n2 / name\n                                                         :op1 \"Portsmouth\"\n                                                         :op2 \"Naval\"\n                                                         :op3 \"Base\"))))))"
    ],
    "smus": [
      "The image was released of planned improvements.",
      "Improvements to the jetty at Portsmouth Naval Base",
      "The Royal Navy has released an image of planned improvements.",
      "Image released of improvements to the jetty at Portsmouth Naval Base.",
      "The Royal Navy has released an image of improvements to the jetty at Portsmouth Naval Base."
    ]
  },
  {
    "instance_id": "pyrxsum-65",
    "summary": "China has said Japan is endangering peace in the region after it passed controversial laws expanding the role of its military abroad.",
    "summary_trees": [
      "# ::snt China has said Japan is endangering peace in the region after it passed controversial laws expanding the role of its military abroad.\n(s / say-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 \"China\"))\n      :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"Japan\"))\n            :ARG1 (p / peace\n                  :location (r / region)))\n      :time (a / after\n            :op1 (p2 / pass-01\n                  :ARG0 c2\n                  :ARG2 (l / law\n                        :mod (c3 / controversy)\n                        :ARG0-of (e2 / expand-01\n                              :ARG1 (r2 / role\n                                    :poss (m / military\n                                          :poss c2\n                                          :location (a2 / abroad))))))))"
    ],
    "tree": [
      "(e / endanger-01\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\")))",
      "(e2 / expand-01\n    :ARG1 (r2 / role\n              :poss (m / military\n                       :poss (c2 / country :name (n2 / name :op1 \"Japan\")))))",
      "(e2 / expand-01\n    :ARG1 (r2 / role\n              :poss (m / military\n                       :location (a2 / abroad))))",
      "(e / endanger-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"Japan\"))\n   :ARG1 (p / peace\n            :location (r / region)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\"))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 (c2 / country :name (n2 / name :op1 \"Japan\")))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG0 c2)))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :mod (c3 / controversy)))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss (c2 / country :name (n2 / name :op1 \"Japan\")))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :poss c2)))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG1 (p / peace\n                     :location (r / region)))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))",
      "(s / say-01\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"China\"))\n   :ARG1 (e / endanger-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"Japan\")))\n   :time (a / after\n            :op1 (p2 / pass-01\n                     :ARG2 (l / law\n                              :ARG0 (e2 / expand-01\n                                        :ARG1 (r2 / role\n                                                  :poss (m / military\n                                                           :location (a2 / abroad))))))))"
    ],
    "smus": [
      "Endangering peace in the region.",
      "Japan is threatening.",
      "Expanding the role of Japan's military",
      "Expanding the role of the military abroad",
      "Japan is endangering peace in the region.",
      "China has said that the peace in the region is in danger.",
      "China has said Japan is dangerous.",
      "After Japan passed, China has said that the peace in the region is in danger.",
      "After Japan passed, China has said Japan is dangerous.",
      "China has said that Japan is dangerous after controversial laws passed.",
      "China has said that extending the role of Japan's military is dangerous in the region after laws extending the role of Japan's military were passed.",
      "China has said that Japan is dangerous after laws expanding the role of Japan's military were passed.",
      "China has said that extending the role of the military abroad is dangerous to peace in the region after laws on expanding the military abroad passed.",
      "China has said that Japan is dangerous after laws expanding the role of the military abroad were passed."
    ]
  },
  {
    "instance_id": "pyrxsum-66",
    "summary": "Celtic restored their 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.",
    "summary_trees": [
      "# ::snt Celtic restored their 10-point lead at the top of the table after overcoming Inverness Caledonian Thistle.\n(r / restore-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Celtic\"))\n      :ARG1 (l / lead-01\n            :ARG0 t\n            :ARG2 (p / point\n                  :quant 10)\n            :location (t2 / top\n                  :part-of (t3 / table)))\n      :time (a / after\n            :op1 (o / overcome-01\n                  :ARG0 t\n                  :ARG1 (t4 / team\n                        :name (n2 / name\n                              :op1 \"Inverness\"\n                              :op2 \"Cedonian\"\n                              :op3 \"Thistle\")))))"
    ],
    "tree": [
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\"))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\")))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 (t / team :name (n / name :op1 \"Celtic\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t)\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG0 (t / team :name (n / name :op1 \"Celtic\")))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG0 t)))",
      "(r / restore-01\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG0 t)\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :ARG2 (p / point\n                     :quant 10))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))",
      "(r / restore-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Celtic\"))\n   :ARG1 (l / lead-01\n            :location (t2 / top\n                          :part (t3 / table)))\n   :time (a / after\n            :op1 (o / overcome-01\n                    :ARG1 (t4 / team\n                              :name (n2 / name\n                                        :op1 \"Inverness\"\n                                        :op2 \"Cedonian\"\n                                        :op3 \"Thistle\")))))"
    ],
    "smus": [
      "Celtic's leadership was restored.",
      "The lead was restored to 10 points.",
      "Restored leadership at the table top.",
      "After overcoming, Celtic restored leadership.",
      "Celtic restored leadership.",
      "Celtic restored a 10 point lead.",
      "After overcoming Celtic, the table top leader was restored.",
      "Celtic restored leadership at the top of the table.",
      "After overcoming, Celtic restored their leadership.",
      "After defeating Inverness Celtic Thistle Celtic's leadership was restored.",
      "After overcoming, Celtic restored the 10 point lead.",
      "After defeating Inverness Celtic thistle, the lead was restored to 10 points.",
      "After overcoming, Celtic restored the lead at the top of the table.",
      "After defeating Inverness Celtic Thistle, the table toppers restored their lead.",
      "After defeating Inverness Celtic Thistle, Celtic restored their leadership.",
      "After defeating Inverness Celtic Thistle, Celtic restored a 10 point lead.",
      "After defeating Inverness Celtic Thistle Celtic restored the top-table lead."
    ]
  },
  {
    "instance_id": "pyrxsum-67",
    "summary": "England captain Sean O'Loughlin says he would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.",
    "summary_trees": [
      "# ::snt England captain Sean O'Loughlin says he would have preferred an Englishman in charge of the national team, but is looking forward to working with Australian Wayne Bennett.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sean\"\n                  :op2 \"O'Loughlin\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"England\"))\n                  :ARG2 (c / captain)))\n      :ARG1 (c2 / contrast-01\n            :ARG1 (p2 / prefer-01\n                  :ARG0 p\n                  :ARG1 (c3 / charge-08\n                        :ARG1 (m / man\n                              :mod (c4 / country)\n                              :ARG2 (t2 / team\n                                    :mod (n3 / nation))))\n                  :ARG2 (l / look-forward-03\n                        :ARG0 p\n                        :ARG1 (w / work-01\n                              :ARG3 (p3 / person\n                                    :name (n4 / name\n                                          :op1 \"Wayne\"\n                                          :op2 \"Bennett\")\n                                    :mod c4\n                                    :name (n5 / name\n                                          :op1 \"Australia\")))))))"
    ],
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG0 p)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / captain)))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :mod (c4 / country))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sean\"\n                     :op2 \"O'Loughlin\"))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG2 (l / look-forward-03\n                                :ARG1 (w / work-01\n                                         :ARG3 (p3 / person\n                                                   :name (n4 / name\n                                                             :op1 \"Wayne\"\n                                                             :op2 \"Bennett\")))))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"England\"))))\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p2 / prefer-01\n                       :ARG1 (c3 / charge-08\n                                 :ARG1 (m / man\n                                          :ARG2 (t2 / team\n                                                    :mod (n3 / nation)))))))"
    ],
    "smus": [
      "But he's preferred,\" says Sean O'Loughlin.",
      "The captain says he would have preferred, but...",
      "But it would be preferred that the countrymen take charge, says Sean O'Loughlin.",
      "The captain says the countrymen would be preferred in charge.",
      "Sean O'Loughlin says the national team's man in charge would be preferred.",
      "The captain says it would be preferable to have a national team man in charge.",
      "But it would be preferred for the countrymen to take charge, says an Englishman.",
      "Sean O'Loughlin says he would rather be looking forward to working with Wayne Bennett.",
      "But it would be preferable to have a national team man in charge, says an Englishman."
    ]
  },
  {
    "instance_id": "pyrxsum-68",
    "summary": "Promotion-chasing Stevenage were held to a by Cambridge in League Two.",
    "summary_trees": [
      "# ::snt Promotion-chasing Stevenage were held to a by Cambridge in League Two.\n(h / hold-04\n      :ARG0 (u / university\n            :name (n / name\n                  :op1 \"Cambridge\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Stevenage\")\n            :ARG0-of (c / chase-01\n                  :ARG1 (p / promote-01\n                        :ARG1 t)))\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"League\"\n                  :op2 \"Two\")))"
    ],
    "tree": [
      "(h / hold-04\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\")))",
      "(h / hold-04\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t))))",
      "(h / hold-04\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Stevenage\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))",
      "(h / hold-04\n   :ARG0 (u / university\n            :name (n / name\n                     :op1 \"Cambridge\"))\n   :ARG1 (t / team\n            :ARG0 (c / chase-01\n                     :ARG1 (p / promote-01\n                              :ARG1 t)))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"League\"\n                          :op2 \"Two\")))"
    ],
    "smus": [
      "Stevenage are held.",
      "The team chasing their promotion is held.",
      "Cambridge has held Stevenage.",
      "Stevenage are held in the League Two.",
      "Cambridge has held a team chasing promotion.",
      "The team chasing promotion is held in the League Two.",
      "Cambridge has held Stevenage in the League Two.",
      "Cambridge has held the promotion chasing team in the League Two."
    ]
  },
  {
    "instance_id": "pyrxsum-69",
    "summary": "Yet again, we are looking at shocking pictures of a plane crash.",
    "summary_trees": [
      "# ::snt Yet again, we are looking at shocking pictures of a plane crash.\n(l / look-01\n      :ARG0 (w / we)\n      :ARG1 (p / picture\n            :topic (c / crash-01\n                  :ARG1 (p2 / plane))\n            :ARG0-of (s / shock-01))\n      :mod (a / again\n            :mod (y / yet)))"
    ],
    "tree": [
      "(l / look-01\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01))\n   :mod (a / again\n           :mod (y / yet)))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :topic (c / crash-01\n                      :ARG1 (p2 / plane))))",
      "(l / look-01\n   :ARG0 (w / we)\n   :ARG1 (p / picture\n            :ARG0 (s / shock-01))\n   :mod (a / again\n           :mod (y / yet)))"
    ],
    "smus": [
      "Looking at the shocking pictures.",
      "We're looking at shocking pictures.",
      "Looking at the pictures of the plane crash.",
      "We are looking yet again.",
      "We are looking at the pictures of the plane crash.",
      "Looking at the shocking pictures yet again.",
      "Yet again, we are looking at shocking pictures.",
      "Looking at the pictures of the plane crash yet again.",
      "Yet again, we are looking at the pictures of the plane crash."
    ]
  },
  {
    "instance_id": "pyrxsum-70",
    "summary": "Prime Minister David Cameron will later attempt to halt the civil war in his party caused by Iain Duncan Smith's resignation from the cabinet.",
    "summary_trees": [
      "# ::snt Prime Minister David Cameron will later attempt to halt the civil war in his party caused by Iain Duncan Smith's resignation from the cabinet.\n(a / attempt-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Cameron\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (p2 / prime))))\n      :ARG1 (h2 / halt-01\n            :ARG0 p\n            :ARG1 (w / war-01\n                  :mod (c / civil)\n                  :location (p3 / party\n                        :poss p)\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (r / resign-01\n                              :ARG0 (p4 / person\n                                    :name (n2 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\"))\n                              :ARG1 (c3 / cabinet)))))\n      :time (a2 / after))"
    ],
    "tree": [
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :mod (c / civil)))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\"))))\n   :time (a2 / after))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :location (p3 / party\n                           :poss (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\"))))))",
      "(w / war-01\n   :mod (c / civil)\n   :location (p3 / party\n                 :poss (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\")))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG1 (c3 / cabinet))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :location (p3 / party\n                                    :poss (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\")))))))",
      "(r / resign-01\n   :ARG0 (p4 / person\n             :name (n2 / name\n                       :op1 \"Iain\"\n                       :op2 \"Duncan\"\n                       :op3 \"Smith\")))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG1 (c3 / cabinet)))))",
      "(w / war-01\n   :mod (c / civil)\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG1 (c3 / cabinet))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :location (p3 / party\n                                    :poss (p / person :name (n / name :op1 \"David\" :op2 \"Cameron\"))))))\n   :time (a2 / after))",
      "(r / resign-01\n   :ARG0 (p4 / person\n             :name (n2 / name\n                       :op1 \"Iain\"\n                       :op2 \"Duncan\"\n                       :op3 \"Smith\"))\n   :ARG1 (c3 / cabinet))",
      "(r / resign-01\n   :ARG0 (p4 / person\n             :name (n2 / name\n                       :op1 \"Iain\"\n                       :op2 \"Duncan\"\n                       :op3 \"Smith\"))\n   :ARG1 (c3 / cabinet))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG0 p))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG0 p)\n   :time (a2 / after))",
      "(w / war-01\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n2 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :location (p3 / party\n                                    :poss p))))",
      "(h2 / halt-01\n    :ARG1 (w / war-01\n             :ARG1 (c2 / cause-01\n                       :ARG0 (r / resign-01\n                                :ARG0 (p4 / person\n                                          :name (n2 / name\n                                                    :op1 \"Iain\"\n                                                    :op2 \"Duncan\"\n                                                    :op3 \"Smith\"))))))",
      "(w / war-01\n   :mod (c / civil)\n   :ARG1 (c2 / cause-01\n             :ARG0 (r / resign-01\n                      :ARG0 (p4 / person\n                                :name (n2 / name\n                                          :op1 \"Iain\"\n                                          :op2 \"Duncan\"\n                                          :op3 \"Smith\")))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :location (p3 / party\n                                    :poss p))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :location (p3 / party\n                                    :poss p)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :mod (c / civil)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :location (p3 / party\n                                    :poss p)))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\"))))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG1 (c3 / cabinet)))))\n   :time (a2 / after))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (p2 / prime))))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\")))))))",
      "(a / attempt-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Cameron\"))\n   :ARG1 (h2 / halt-01\n             :ARG1 (w / war-01\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (r / resign-01\n                                         :ARG0 (p4 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Iain\"\n                                                             :op2 \"Duncan\"\n                                                             :op3 \"Smith\"))))))\n   :time (a2 / after))"
    ],
    "smus": [
      "halt the civil war",
      "Later, David Cameron will attempt to halt.",
      "halt the war in David Cameron's party.",
      "Civil war in David Cameron's party.",
      "attempt to halt civil war",
      "The war was caused by the resignation of the cabinet.",
      "attempt to halt the war in David Cameron's party.",
      "Ian Duncan Smith's resignation",
      "Later, attempt to halt civil war.",
      "halt the war caused by the resignation of the cabinet.",
      "Caused by cabinet resignation, civil war.",
      "David Cameron will attempt to halt.",
      "Later, attempt to halt the war in David Cameron's party.",
      "Ian Duncan Smith's resignation from the cabinet.",
      "attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will attempt to halt.",
      "David Cameron will later attempt to halt.",
      "The war was caused by the resignation of Iain Duncan Smith.",
      "David Cameron will attempt to halt the civil war.",
      "Later, attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will attempt to halt the war in his party.",
      "The Prime Minister will later attempt to halt.",
      "Caused by the resignation of Iain Duncan Smith, it was a civil war.",
      "The Prime Minister will attempt to halt the civil war.",
      "David Cameron would later attempt to halt the civil war.",
      "The Prime Minister will attempt to halt the war in his party.",
      "David Cameron will later attempt to halt the war in his party.",
      "To attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "David Cameron will attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will later attempt to halt the civil war.",
      "The Prime Minister will later attempt to halt the war in his party.",
      "Later, attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "The Prime Minister will attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will later attempt to halt the war caused by the resignation of the cabinet.",
      "The Prime Minister will later attempt to halt the war caused by the resignation of the cabinet.",
      "David Cameron will attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "The Prime Minister will attempt to halt the war caused by Iain Duncan Smith's resignation.",
      "David Cameron would later attempt to halt the war caused by the resignation of Iain Duncan Smith.",
      "The Prime Minister will later attempt to halt the war caused by Iain Duncan Smith's resignation."
    ]
  },
  {
    "instance_id": "pyrxsum-71",
    "summary": "The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.",
    "summary_trees": [
      "# ::snt The percentage of Americans living in poverty is statistically unchanged from 2010's record high, even as household income fell, a US Census report says.\n(s / say-01\n      :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                  :name (n / name\n                        :op1 \"US\"\n                        :op2 \"Census\")))\n      :ARG1 (c / change-01\n            :polarity -\n            :ARG1 (p / percentage\n                  :quant-of (p2 / person\n                        :mod (c2 / country\n                              :name (n2 / name\n                                    :op1 \"America\"))\n                        :ARG0-of (l / live-01\n                              :manner (p3 / poor))))\n            :ARG2 (h / high-02\n                  :ARG1 p\n                  :mod (r2 / record)\n                  :time (d / date-entity\n                        :year 2010))\n            :mod (s2 / statistical)\n            :concession (e / even-as\n                  :op1 (f / fall-01\n                        :ARG1 (ii / income\n                              :mod (h2 / household))))))"
    ],
    "tree": [
      "(f / fall-01\n   :ARG1 (ii / income\n             :mod (h2 / household)))",
      "(s / say-01\n   :ARG0 (r / report-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"US\"\n                              :op2 \"Census\")))\n   :ARG1 (c / change-01\n            :polarity -))"
    ],
    "smus": [
      "household income fell.",
      "The US Census report says nothing has changed."
    ]
  },
  {
    "instance_id": "pyrxsum-72",
    "summary": "A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.",
    "summary_trees": [
      "# ::snt A 34-year-old woman who was injured in an attack by a knifeman on a Swiss train has died in hospital, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (d / die-01\n            :ARG1 (w / woman\n                  :ARG1-of (ii / injure-01\n                        :ARG0 (a / attack-01\n                              :ARG0 (k / knifeman)\n                              :ARG1 w\n                              :location (t / train\n                                    :mod (c / country\n                                          :name (n / name\n                                                :op1 \"Switzerland\")))))\n                  :age (t2 / temporal-quantity\n                        :quant 34\n                        :unit (y / year)))\n            :location (h / hospital)))"
    ],
    "tree": [
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :quant 34)))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :quant 34))\n   :location (h / hospital))",
      "(d / die-01\n   :ARG1 (w / woman\n            :age (t2 / temporal-quantity\n                     :unit (y / year)))\n   :location (h / hospital))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (d / die-01\n            :ARG1 (w / woman\n                     :age (t2 / temporal-quantity\n                              :quant 34))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG1 w)))\n   :location (h / hospital))",
      "(a / attack-01\n   :ARG0 (k / knifeman)\n   :location (t / train\n                :mod (c / country\n                        :name (n / name\n                                 :op1 \"Switzerland\"))))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :ARG0 (k / knifeman))))\n   :location (h / hospital))",
      "(d / die-01\n   :ARG1 (w / woman\n            :ARG1 (ii / injure-01\n                      :ARG0 (a / attack-01\n                               :location (t / train\n                                            :mod (c / country\n                                                    :name (n / name\n                                                             :op1 \"Switzerland\"))))))\n   :location (h / hospital))"
    ],
    "smus": [
      "The 34-year-old woman died.",
      "The 34-year-old woman died in hospital.",
      "The year old woman died in hospital.",
      "Police say the 34-year-old woman died.",
      "The woman who was injured in the attack died in hospital.",
      "A knifeman attacked a Swiss train.",
      "A woman who was injured in the knifeman attack died in hospital.",
      "A woman who was injured in the attack on a Swiss train died in hospital."
    ]
  },
  {
    "instance_id": "pyrxsum-73",
    "summary": "Boeing has shown off its \"space bins\" that can hold 50% more luggage than existing designs.",
    "summary_trees": [
      "# ::snt Boeing has shown off its \"space bins\" that can hold 50% more luggage than existing designs.\n(s / show-off-04\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Boeing\"))\n      :ARG1 (b / bin\n            :mod (s2 / space)\n            :poss c\n            :ARG0-of (h / hold-01\n                  :ARG1 (l / luggage\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (m / more\n                                    :quant (p / percentage-entity\n                                          :value 50))\n                              :ARG4 (l2 / luggage\n                                    :ARG1-of (d / design-01\n                                          :ARG1-of (e / exist-01)))))\n                  :ARG1-of (p2 / possible-01))))"
    ],
    "tree": [
      "(s / show-off-04\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :poss c))",
      "(s / show-off-04\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Boeing\"))\n   :ARG1 (b / bin\n            :mod (s2 / space)))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG3 (m / more\n                               :quant (p / percentage-entity\n                                         :value 50)))))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG4 (l2 / luggage\n                                :ARG1 (d / design-01\n                                         :ARG1 (e / exist-01))))))",
      "(h / hold-01\n   :ARG1 (l / luggage\n            :ARG1 (h2 / have-quant-91\n                      :ARG4 (l2 / luggage\n                                :ARG1 (d / design-01\n                                         :ARG1 (e / exist-01))))))"
    ],
    "smus": [
      "Boeing has shown off its bins.",
      "Boeing has shown off space bins.",
      "Hold 50 percent more luggage.",
      "Boeing has shown off bins to hold the possibility.",
      "Boeing has shown off bins to hold 50 percent more luggage."
    ]
  },
  {
    "instance_id": "pyrxsum-74",
    "summary": "Australia is a step closer to exporting live cattle to China, opening a new market for its farmers.",
    "summary_trees": [
      "# ::snt Australia is a step closer to exporting live cattle to China, opening a new market for its farmers.\n(c / close-06\n      :ARG1 (c2 / country\n            :name (n / name\n                  :op1 \"Australia\"))\n      :ARG2 (e / export-01\n            :ARG0 c2\n            :ARG1 (c3 / cattle\n                  :mod (l / live))\n            :ARG2 (c4 / country\n                  :name (n2 / name\n                        :op1 \"China\")))\n      :ARG2-of (h / have-degree-91\n            :ARG1 c2\n            :ARG3 (m / more))\n      :ARG0-of (o / open-01\n            :ARG1 (m2 / market\n                  :ARG1-of (n3 / new-01))\n            :ARG3 (p / person\n                  :ARG0-of (f / farm-01)\n                  :poss c2)))"
    ],
    "tree": [
      "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live)))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01)))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\")))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01))\n   :ARG3 (p / person\n            :poss (c2 / country :name (n / name :op1 \"Australia\"))))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG2 (e / export-01\n            :ARG0 c2))",
      "(o / open-01\n   :ARG1 (m2 / market\n             :ARG1 (n3 / new-01))\n   :ARG3 (p / person\n            :ARG0 (f / farm-01)))",
      "(e / export-01\n   :ARG1 (c3 / cattle\n             :mod (l / live))\n   :ARG2 (c4 / country\n             :name (n2 / name\n                       :op1 \"China\")))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG0 (o / open-01\n            :ARG3 (p / person\n                     :poss c2)))",
      "(c / close-06\n   :ARG1 (c2 / country\n             :name (n / name\n                      :op1 \"Australia\"))\n   :ARG0 (o / open-01\n            :ARG3 (p / person\n                     :ARG0 (f / farm-01))))"
    ],
    "smus": [
      "Exporting live cattle.",
      "Opening the new market.",
      "Australia is close.",
      "Opening a new market for Australians.",
      "Australia is close to exporting.",
      "Opening a new market for farmers.",
      "Live cattle exporting to China",
      "Australia is close to exporting live cattle.",
      "Australia is close to exporting to China."
    ]
  },
  {
    "instance_id": "pyrxsum-75",
    "summary": "Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.",
    "summary_trees": [
      "# ::snt Anthony Joshua's world title bout with Wladimir Klitschko comes at the \"perfect time\", says former undisputed heavyweight champion Lennox Lewis.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lennox\"\n                  :op2 \"Lewis\"))\n      :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Anthony\"\n                              :op2 \"Joshua\"))\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Wladimir\"\n                              :op2 \"Klitschko\"))\n                  :ARG3 (t / title\n                        :mod (w / world)))\n            :ARG3 (t2 / time\n                  :ARG1-of (p4 / perfect-02)))\n      :ARG2 (c2 / champion\n            :mod (h / heavyweight)\n            :ARG1-of (d / dispute-01\n                  :polarity -)\n            :domain p2\n            :time (f / former)))"
    ],
    "tree": [
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG3 (t / title\n                     :mod (w / world))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\"))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Wladimir\"\n                                :op2 \"Klitschko\"))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG3 (t / title\n                     :mod (w / world)))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02))))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Anthony\"\n                                :op2 \"Joshua\")))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(c / come-04\n   :ARG1 (b / bout-03\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Wladimir\"\n                                :op2 \"Klitschko\")))\n   :ARG3 (t2 / time\n             :ARG1 (p4 / perfect-02)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\")))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :domain p2))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG3 (t2 / time\n                      :ARG1 (p4 / perfect-02)))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :mod (h / heavyweight)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :time (f / former)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Anthony\"\n                                         :op2 \"Joshua\"))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :ARG1 (d / dispute-01\n                      :polarity -)))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG3 (t / title\n                              :mod (w / world))))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lennox\"\n                     :op2 \"Lewis\"))\n   :ARG1 (c / come-04\n            :ARG1 (b / bout-03\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Wladimir\"\n                                         :op2 \"Klitschko\"))))\n   :ARG2 (c2 / champion\n             :domain (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Anthony\"\n                                   :op2 \"Joshua\"))))"
    ],
    "smus": [
      "It's a bout of world title.",
      "It comes to an Anthony Joshua bout.",
      "It comes to a bout with Vladimir Klitschko.",
      "The bout for the world title comes at the perfect time.",
      "\"It's time for a perfect time,\" says Lenox Lewis.",
      "Anthony Joshua's bout comes at the perfect time.",
      "The bout with Vladimir Klitschko comes at the perfect time.",
      "\"It comes to a bout of world title,\" says Lenox Lewis.",
      "\"It comes to the bout of Anthony Joshua,\" says Lewis Lewis.",
      "\"It comes to a bout with Vladimir Klitschko,\" says Lewis Lewis.",
      "\"It's time for a perfect time,\" says Lenox Lewis, the heavyweight champion.",
      "\"It's time for perfection,\" says Lenox Lewis, a former champion.",
      "\"It's time for perfection,\" says Lenox Lewis, the champion of non-disputing.",
      "\"Anthony Joshua's bout comes as champion,\" says Lenox Lewis.",
      "\"The bout for the world title comes as the undisputed champion,\" says Lenox Lewis.",
      "\"The bout with Anthony Joshua comes as the heavyweight champion,\" says Lewis Lewis.",
      "\"The bout with Anthony Joshua comes from a former champion,\" says Lenox Lewis.",
      "\"It's time for perfection,\" says Lenox Lewis, \"Anthony Joshua is a champion.",
      "Lenox Lewis says the bout with Vladimir klitschko comes as the heavyweight champion.",
      "Former champion Lenox Lewis says the bout with Vladimir Klitschko comes from a former champion.",
      "\"The Anthony Joshua bout comes as the champion of non-disputing,\" says Lenox Lewis.",
      "\"The bout with Vladimir Klitschko comes as the champion of non-disputing,\" says Lewis Lewis.",
      "\"The bout for the world title comes with the champion, Anthony Joshua,\" says Lewis Lewis.",
      "\"The bout with Vladimir Klitschko comes as the champion, Anthony Joshua,\" says Lewis Lewis."
    ]
  },
  {
    "instance_id": "pyrxsum-76",
    "summary": "People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease their suffering on London transport.",
    "summary_trees": [
      "# ::snt People with hidden health conditions are being offered \"Please offer me a seat\" badges in a bid to help ease their suffering on London transport.\n(o / offer-01\n      :ARG1 (b / badge\n            :ARG0-of (s / say-01\n                  :ARG1 (o2 / offer-01\n                        :mode imperative\n                        :polite +\n                        :ARG0 (y / you)\n                        :ARG1 (s2 / seat)\n                        :ARG3 (p / person)))\n            :ARG3 p\n            :ARG0-of (h / have-03\n                  :ARG1 (c / condition\n                        :mod (h2 / health)\n                        :ARG1-of (h3 / hide-01))))\n      :purpose (b2 / bid-01\n            :ARG0 p\n            :ARG1 (h4 / help-01\n                  :ARG0 p\n                  :ARG1 (e / ease-02\n                        :ARG0 p\n                        :ARG1 (s3 / suffer-01\n                              :ARG0 p\n                              :location (t / transport\n                                    :location (c2 / city\n                                          :name (n / name\n                                                :op1 \"London\"))))))))"
    ],
    "tree": [
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG3 (p / person)))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG1 (s2 / seat))",
      "(o2 / offer-01\n    :ARG1 (s2 / seat)\n    :ARG3 (p / person))",
      "(o2 / offer-01\n    :ARG0 (y / you)\n    :ARG1 (s2 / seat)\n    :ARG3 (p / person))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :mode imperative))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :polite +))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG3 (p / person))\n   :purpose (b2 / bid-01\n                :ARG0 p))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :mod (h2 / health)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG0 (y / you)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG1 (s2 / seat)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG3 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :ARG1 (h3 / hide-01)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG3 (p / person))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :mode imperative)))\n   :purpose (b2 / bid-01\n                :ARG0 (p / person)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG3 (p / person))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 p))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :polite +)))\n   :purpose (b2 / bid-01\n                :ARG0 (p / person)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG3 (p / person))))\n   :purpose (b2 / bid-01\n                :ARG0 p))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG0 (y / you))))\n   :purpose (b2 / bid-01\n                :ARG0 (p / person)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG1 (s2 / seat))))\n   :purpose (b2 / bid-01\n                :ARG0 (p / person)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :ARG1 (h3 / hide-01))))\n   :purpose (b2 / bid-01\n                :ARG0 (p / person)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :mode imperative)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG3 (p / person))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 p)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :polite +)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG3 (p / person))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 p)))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :mod (h2 / health))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG0 (y / you))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG1 (s2 / seat))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :ARG1 (h3 / hide-01))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG0 (p / person))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :mode imperative)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :polite +)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG3 (p / person))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 p))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :mode imperative)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 (p / person))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :mod (h2 / health))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :polite +)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 (p / person))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG0 (y / you))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG1 (s2 / seat))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :ARG1 (h3 / hide-01))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG0 (p / person)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :mod (h2 / health))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 (p / person))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG0 (y / you))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 (p / person))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG1 (s2 / seat))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 (p / person))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG3 (p / person))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 p)))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :ARG1 (h3 / hide-01))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :ARG0 (p / person))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG3 (p / person))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :mode imperative)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :polite +)))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (h / have-03\n                     :ARG1 (c / condition\n                              :mod (h2 / health))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG0 (y / you))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG1 (s2 / seat))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))",
      "(o / offer-01\n   :ARG1 (b / badge\n            :ARG0 (s / say-01\n                     :ARG1 (o2 / offer-01\n                               :ARG3 (p / person))))\n   :purpose (b2 / bid-01\n                :ARG1 (h4 / help-01\n                          :ARG1 (e / ease-02\n                                   :ARG1 (s3 / suffer-01\n                                             :location (t / transport\n                                                          :location (c2 / city\n                                                                        :name (n / name\n                                                                                 :op1 \"London\"))))))))"
    ],
    "smus": [
      "Offer badges to people.",
      "Offer a seat.",
      "Offer a seat to people.",
      "Offer badges:",
      "Offer badges that say \"please offer\"",
      "Offer people badges for bid.",
      "Offer badges for people with health conditions.",
      "Offer badges saying \"Offer\".",
      "Offer badges saying offer a seat.",
      "Offer badges saying \"offer to people\".",
      "Offer badges for having \"hide conditions\".",
      "Offer people badges in a bid to help.",
      "Offer badges for bidders to say \"offer\".",
      "Offer badges to people in a bid to help ease the burden.",
      "Offer badges for bidders to say \"please\".",
      "Offer badges for bidders to say \"offer to person\".",
      "Offer badges for people with health conditions for bid.",
      "Offer badges for bidders to say they will offer a seat.",
      "Offer badges for people with hiding conditions for bid.",
      "Offer badges in bid to help.",
      "Offer badges to people in a bid to help ease their suffering.",
      "Offer badges to people to help with \"please offer\"",
      "Offer badges to people saying they will offer in bid to help",
      "Offer badges for people with health conditions in a bid to help.",
      "Offer badges to bid to help.",
      "Offer badges to people to help by saying they will offer a seat.",
      "Offer badges for people with hiding conditions in bid to help.",
      "Offer badges in a bid to help people ease.",
      "Offer badges with the words \"please\" in a bid to help people ease.",
      "Offer badges to say \"offer to people\" in bid to help ease the burden.",
      "Offer badges in a bid to help ease people's suffering.",
      "Offer badges for people with health conditions in a bid to help ease people.",
      "Offer badges with the words \"please\" in a bid to help ease people's suffering.",
      "Offer badges to say \"offer\" in bid to help people ease.",
      "Offer badges to say \"offer seat\" in bid to help people ease.",
      "Offer badges for people with hiding conditions in a bid to help ease the people.",
      "Offer badges for people with health conditions in a bid to help ease suffering.",
      "Offer badges saying \"offer\" in a bid to help ease people's suffering.",
      "Offer badges to say \"offer seat\" in bid to help ease people's suffering.",
      "Offer badges to say \"offer to people\" in bid to help ease suffering.",
      "Offer badges for people with hiding conditions in a bid to help ease people's suffering.",
      "Offer people badges in bid to help ease the suffering on London transport.",
      "Offer offer badges in bid to help ease the suffering on London transport",
      "Offer badges with the words \"please\" to help ease the suffering on London transport.",
      "Health conditions badges to offer in bid to help ease suffering on London transport",
      "Offer badges saying \"offer\" in bid to help ease the suffering on London transport.",
      "Offer badges to say offer seat in bid to help ease the suffering on London transport.",
      "Offer badges to say \"offer to people\" in bid to help ease the suffering of London transport.",
      "Offer badges for people with hidden conditions in bid to help ease the suffering on London transport."
    ]
  },
  {
    "instance_id": "pyrxsum-77",
    "summary": "Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.",
    "summary_trees": [
      "# ::snt Leicester Tigers have signed new England loose-head prop Ellis Genge from newly-promoted Bristol.\n(s / sign-02\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Leicester\"\n                  :op2 \"Tigers\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Ellis\"\n                  :op2 \"Genge\")\n            :ARG0-of (p2 / prop-01)\n            :mod (l / loose-head)\n            :mod (t2 / team\n                  :name (n3 / name\n                        :op1 \"England\"))\n            :ARG1-of (n4 / new-02))\n      :ARG3 (t3 / team\n            :name (n5 / name\n                  :op1 \"Bristol\")\n            :ARG1-of (p3 / promote-01\n                  :ARG1-of (n6 / new-02))))"
    ],
    "tree": [
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02)))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\"))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG0 (p2 / prop-01))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (l / loose-head))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :ARG1 (n4 / new-02))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Ellis\"\n                      :op2 \"Genge\"))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\")))\n   :ARG3 (t3 / team\n             :name (n5 / name\n                       :op1 \"Bristol\")))",
      "(s / sign-02\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Leicester\"\n                     :op2 \"Tigers\"))\n   :ARG1 (p / person\n            :mod (t2 / team\n                     :name (n3 / name\n                               :op1 \"England\")))\n   :ARG3 (t3 / team\n             :ARG1 (p3 / promote-01\n                       :ARG1 (n6 / new-02))))"
    ],
    "smus": [
      "Leicester Tigers have signed a prop.",
      "Leicester Tigers have signed a loose-headed.",
      "Leicester Tigers have signed a new player.",
      "Leicester Tigers have signed Ellis Genge.",
      "Leicester Tigers have signed an Englishman.",
      "Leicester Tigers have signed a prop from Bristol.",
      "Leicester Tigers have signed a loose-head for Bristol.",
      "Leicester Tigers have signed a new signing from Bristol.",
      "Leicester Tigers have signed a prop for a new promoted team.",
      "Leicester Tigers have signed loose-headed players for a new promoted team.",
      "Leicester Tigers have signed a new player to the newly-promoted team.",
      "Leicester Tigers have signed Ellis Genge from Bristol.",
      "Leicester Tigers have signed Ellis Genge for a new promoted team.",
      "Leicester Tigers have signed Englishmen from Bristol.",
      "Leicester Tigers have signed Englishmen for a new promoted team."
    ]
  },
  {
    "instance_id": "pyrxsum-78",
    "summary": "Keith Farmer followed up his double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.",
    "summary_trees": [
      "# ::snt Keith Farmer followed up his double at Knockhill by winning the Supersport sprint race at Snetterton on Saturday.\n(f / follow-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Keith\"\n                  :op2 \"Farmer\"))\n      :ARG1 (d / double-01\n            :ARG0 p\n            :location (l / location\n                  :name (n2 / name\n                        :op1 \"Knockhill\")))\n      :ARG2 (w / win-01\n            :ARG0 p\n            :ARG2 (r / race-02\n                  :mod (s / sprint)\n                  :mod (e / event\n                        :name (n3 / name\n                              :op1 \"Supersport\"))\n                  :location (l2 / local-region\n                        :name (n4 / name\n                              :op1 \"Snetterton\")))\n            :time (d2 / date-entity\n                  :weekday (s2 / saturday))))"
    ],
    "tree": [
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(r / race-02\n   :mod (e / event\n           :name (n3 / name\n                     :op1 \"Supersport\")))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :ARG0 p))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :ARG0 p))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :location (l / location\n                         :name (n2 / name\n                                   :op1 \"Knockhill\"))))",
      "(r / race-02\n   :mod (s / sprint)\n   :location (l2 / local-region\n                 :name (n4 / name\n                           :op1 \"Snetterton\")))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :time (d2 / date-entity\n                      :weekday (s2 / saturday))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (s / sprint))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :time (d2 / date-entity\n                      :weekday (s2 / saturday))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :location (l / location\n                         :name (n2 / name\n                                   :op1 \"Knockhill\")))\n   :ARG2 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :location (l / location\n                         :name (n2 / name\n                                   :op1 \"Knockhill\")))\n   :ARG2 (w / win-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\"))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :ARG2 (r / race-02\n                     :mod (e / event\n                             :name (n3 / name\n                                       :op1 \"Supersport\")))))",
      "(f / follow-01\n   :ARG1 (d / double-01\n            :ARG0 (p / person :name (n / name :op1 \"Keith\" :op2 \"Farmer\")))\n   :ARG2 (w / win-01\n            :ARG2 (r / race-02\n                     :location (l2 / local-region\n                                   :name (n4 / name\n                                             :op1 \"Snetterton\")))))"
    ],
    "smus": [
      "Following Keith Farmer's double.",
      "Supersport race",
      "Keith Farmer doubled to winning.",
      "Following the double at Knockhill.",
      "Snetterton sprint race",
      "Keith Farmer doubled to win the sprint race.",
      "Keith Farmer doubled to win Saturday.",
      "The double at Knockhill followed the victory by Keith Farmers.",
      "Keith Farmer doubled to win the Supersport race.",
      "Keith Farmer doubled to win the Snetterton race.",
      "The double at Knockhill followed a sprint race victory.",
      "The double at Knockhill followed a victory on Saturday.",
      "The double at Knockhill followed a victory in the Supersport race.",
      "The double at Knockhill followed a victory in the Snetterton race."
    ]
  },
  {
    "instance_id": "pyrxsum-79",
    "summary": "Northern Ireland striker Conor Washington counts himself a lucky man as he prepares to head to Euro 2016.",
    "summary_trees": [
      "# ::snt Northern Ireland striker Conor Washington counts himself a lucky man as he prepares to head to Euro 2016.\n(c / count-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Conor\"\n                  :op2 \"Washington\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Northern\"\n                              :op2 \"Ireland\"))\n                  :ARG3 (s / striker)))\n      :ARG1 (l / lucky\n            :domain p)\n      :time (p2 / prepare-02\n            :ARG1 p\n            :ARG2 (h2 / head-02\n                  :ARG0 p\n                  :ARG1 (g / game\n                        :name (n3 / name\n                              :op1 \"Euro\"\n                              :op2 \"2016\")))))"
    ],
    "tree": [
      "(c / count-02\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Conor\" :op2 \"Washington\")))))",
      "(c / count-02\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Conor\" :op2 \"Washington\"))))\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(c / count-02\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Conor\" :op2 \"Washington\"))))\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG0 p)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 (l / lucky\n            :domain p))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 (l / lucky\n            :domain p))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG1 p))",
      "(c / count-02\n   :ARG1 (l / lucky\n            :domain (p / person :name (n / name :op1 \"Conor\" :op2 \"Washington\"))))\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"Euro\"\n                                          :op2 \"2016\")))))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG0 p)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG0 p)))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (t / team\n                              :name (n2 / name\n                                        :op1 \"Northern\"\n                                        :op2 \"Ireland\"))))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG0 p)))",
      "(c / count-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Conor\"\n                     :op2 \"Washington\"))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"Euro\"\n                                          :op2 \"2016\")))))",
      "(c / count-02\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (s / striker)))\n   :ARG1 (l / lucky\n            :domain p)\n   :time (p2 / prepare-02\n             :ARG2 (h2 / head-02\n                       :ARG1 (g / game\n                                :name (n3 / name\n                                          :op1 \"Euro\"\n                                          :op2 \"2016\")))))"
    ],
    "smus": [
      "Conor Washington counts as lucky.",
      "Conor Washington counts as lucky as he prepares.",
      "As he prepares to head, it counts Conor Washington as lucky.",
      "Conor Washington counts himself lucky.",
      "The striker counts himself lucky.",
      "Conor Washington counts himself lucky as he prepares.",
      "The striker counts himself lucky as he prepares.",
      "As the Euro 2016 head prepares it counts Conor Washington as lucky.",
      "As he prepares to head, Cory Washington counts on being lucky.",
      "As the striker prepares to head, he counts himself lucky.",
      "Northern Ireland counts on being lucky as it prepares to head.",
      "As the world prepares to head to Euro 2016, Cory Washington counts on being lucky.",
      "As the striker prepares to head to Euro 2016, he counts himself lucky."
    ]
  },
  {
    "instance_id": "pyrxsum-80",
    "summary": "The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.",
    "summary_trees": [
      "# ::snt The Reality Check team answers more of your questions about the implications of the UK's vote to leave the European Union.\n(a / answer-01\n      :ARG0 (t / team\n            :ARG0-of (c / check-01\n                  :ARG1 (r / reality)))\n      :ARG1 (q / question-01\n            :ARG0 (y / you)\n            :ARG1 (ii / implicate-01\n                  :ARG2 (v / vote-01\n                        :ARG0 (c2 / country\n                              :name (n / name\n                                    :op1 \"UK\"))\n                        :ARG1 (l / leave-15\n                              :ARG0 c2\n                              :ARG1 (o / organization\n                                    :name (n2 / name\n                                          :op1 \"European\"\n                                          :op2 \"Union\")))))\n            :quant (m / more)))"
    ],
    "tree": [
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(q / question-01\n   :ARG0 (y / you)\n   :quant (m / more))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\")))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG0 c2))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG0 c2))",
      "(v / vote-01\n   :ARG1 (l / leave-15\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"European\"\n                               :op2 \"Union\"))))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG1 (l / leave-15\n                                        :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\"))))))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :ARG0 (y / you)))",
      "(a / answer-01\n   :ARG0 (t / team\n            :ARG0 (c / check-01\n                     :ARG1 (r / reality)))\n   :ARG1 (q / question-01\n            :quant (m / more)))",
      "(a / answer-01\n   :ARG1 (q / question-01\n            :ARG1 (ii / implicate-01\n                      :ARG2 (v / vote-01\n                               :ARG0 (c2 / country\n                                         :name (n / name\n                                                  :op1 \"UK\"))))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\"))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG0 (c2 / country :name (n / name :op1 \"UK\")))))\n   :quant (m / more))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\")))))",
      "(q / question-01\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG1 (l / leave-15\n                               :ARG1 (o / organization\n                                        :name (n2 / name\n                                                  :op1 \"European\"\n                                                  :op2 \"Union\"))))))",
      "(q / question-01\n   :ARG0 (y / you)\n   :ARG1 (ii / implicate-01\n             :ARG2 (v / vote-01\n                      :ARG0 (c2 / country\n                                :name (n / name\n                                         :op1 \"UK\"))))\n   :quant (m / more))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"European\"\n                               :op2 \"Union\"))))",
      "(v / vote-01\n   :ARG0 (c2 / country\n             :name (n / name\n                      :op1 \"UK\"))\n   :ARG1 (l / leave-15\n            :ARG1 (o / organization\n                     :name (n2 / name\n                               :op1 \"European\"\n                               :op2 \"Union\"))))"
    ],
    "smus": [
      "Answers your questions.",
      "answers more questions.",
      "More questions.",
      "The UK's vote.",
      "The reality check team answers.",
      "Questions about the implications of the UK's vote to leave.",
      "The UK voted to leave.",
      "Leave the European Union vote is a",
      "Answers questions about the implications of the vote to leave the UK.",
      "Questions about the implications of the UK vote.",
      "There are more questions about the implications of the vote to leave the UK.",
      "Your questions are about the implications of the vote to leave the UK.",
      "Reality check team answers your questions.",
      "Reality check team answers more questions.",
      "Answers questions about the implications of the UK vote.",
      "More questions about the implications of the UK vote.",
      "Your questions are about the implications of the UK vote.",
      "More questions about the implications of the vote to leave the UK.",
      "Questions about the implications of the vote to leave the European Union.",
      "The UK voted to leave the European Union.",
      "Answers questions about the implications of the vote to leave the European Union.",
      "There are more questions about the implications of the vote to leave the European Union.",
      "Your questions are about the implications of the vote to leave the European Union.",
      "Reality check team answers questions about the implications of the vote to leave the UK.",
      "More questions about the implications of the vote to leave the European Union.",
      "Reality check team answers questions about the implications of the UK vote.",
      "Reality check team answers questions about the implications of the vote to leave the European Union."
    ]
  },
  {
    "instance_id": "pyrxsum-81",
    "summary": "Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.",
    "summary_trees": [
      "# ::snt Principality Stadium chief executive Martyn Phillips would relish the chance to host an Anthony Joshua bout at the 74,500 capacity Cardiff venue.\n(r / relish-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Martyn\"\n                  :op2 \"Phillips\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (s / stadium\n                        :name (n2 / name\n                              :op1 \"Principality\"\n                              :op2 \"Stadium\"))\n                  :ARG2 (e / executive\n                        :mod (c / chief))))\n      :ARG1 (c2 / chance-02\n            :ARG0 p\n            :ARG1 (h2 / host-01\n                  :ARG0 p\n                  :ARG1 (b / bout\n                        :mod (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Anthony\"\n                                    :op2 \"Joshua\")))\n                  :location (v / venue\n                        :ARG0-of (h3 / have-03\n                              :ARG1 (c3 / capacity\n                                    :quant 74500))\n                        :location (c4 / city\n                              :name (n4 / name\n                                    :op1 \"Cardiff\"))))))"
    ],
    "tree": [
      "(c2 / chance-02\n    :ARG1 (h2 / host-01\n              :ARG0 (p / person :name (n / name :op1 \"Martyn\" :op2 \"Phillips\")))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\")))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief)))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(c2 / chance-02\n    :ARG1 (h2 / host-01\n              :location (v / venue\n                           :ARG0 (h3 / have-03\n                                     :ARG1 (c3 / capacity\n                                               :quant 74500)))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\")))))",
      "(c2 / chance-02\n    :ARG1 (h2 / host-01\n              :ARG1 (b / bout\n                       :mod (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Anthony\"\n                                          :op2 \"Joshua\")))))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG0 p))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (e / executive\n                              :mod (c / chief))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (s / stadium\n                              :name (n2 / name\n                                        :op1 \"Principality\"\n                                        :op2 \"Stadium\"))))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :ARG0 p)))",
      "(r / relish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martyn\"\n                     :op2 \"Phillips\"))\n   :ARG1 (c2 / chance-02\n             :ARG1 (h2 / host-01\n                       :location (v / venue\n                                    :ARG0 (h3 / have-03\n                                              :ARG1 (c3 / capacity\n                                                        :quant 74500))))))"
    ],
    "smus": [
      "A chance for Martyn Phillips to host.",
      "Martyn Phillips will relish.",
      "The chief executive would relish.",
      "Martyn Phillips will relish the chance.",
      "A chance to host at a venue with a capacity of 74500.",
      "A chance to host at a venue in Cardiff.",
      "There's a chance to host an Anthony Joshua bout.",
      "Martyn Phillips would relish the chance to host.",
      "The chief executive would relish the chance.",
      "The chief executive would relish the chance to host.",
      "The Prince Stadium people will relish the chance to host.",
      "Martyn Phillips would relish the chance to host at a venue with a capacity of 74500.",
      "Martyn Phillips would relish the chance to host at a venue in Cardiff.",
      "Martyn Phillips will relish the chance to host an Anthony Joshua bout.",
      "The chief executive would relish the chance to host at a venue with a capacity of 74500.",
      "The chief executive would relish the chance to host at a venue in Cardiff.",
      "The chief executive would relish the chance to host an Anthony Joshua bout.",
      "The Prince Stadium people will relish the chance to host an Anthony Joshua bout."
    ]
  },
  {
    "instance_id": "pyrxsum-82",
    "summary": "Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.",
    "summary_trees": [
      "# ::snt Google's net income rose 17% to $3.93bn in the three months to June from the quarter last year, boosted by an 11% rise in revenues to $17.7bn.\n(r / rise-01\n      :ARG1 (ii / income\n            :mod (n / net)\n            :poss (c / company\n                  :name (n2 / name\n                        :op1 \"Google\")))\n      :ARG2 (p / percentage-entity\n            :value 17)\n      :ARG4 (m / monetary-quantity\n            :quant 3393000000000\n            :unit (d / dollar))\n      :time (d2 / date-entity\n            :month 6)\n      :time (q / quarter\n            :mod (l / last))\n      :ARG1-of (b / boost-01\n            :ARG0 (r2 / rise-01\n                  :ARG1 (r3 / revenue\n                        :poss c)\n                  :ARG2 (p2 / percentage-entity\n                        :value 11)\n                  :ARG4 (m2 / monetary-quantity\n                        :quant 170000000000\n                        :unit (d3 / dollar)))))"
    ],
    "tree": [
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\"))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net)))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG2 (p2 / percentage-entity\n              :value 11))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG4 (m2 / monetary-quantity\n              :quant 170000000000))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG4 (m2 / monetary-quantity\n              :quant 170000000000))",
      "(r2 / rise-01\n    :ARG1 (r3 / revenue\n              :poss (c / company :name (n2 / name :op1 \"Google\")))\n    :ARG2 (p2 / percentage-entity\n              :value 11))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\"))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\"))))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG2 (p2 / percentage-entity\n                                :value 11))))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG4 (m / monetary-quantity\n            :unit (d / dollar)))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :time (d2 / date-entity\n             :month 6))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG4 (m2 / monetary-quantity\n                                :quant 170000000000)))\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\")))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (b / boost-01\n            :ARG0 (r2 / rise-01\n                      :ARG4 (m2 / monetary-quantity\n                                :quant 170000000000)))\n   :ARG2 (p / percentage-entity\n            :value 17))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :ARG4 (m / monetary-quantity\n            :quant 3393000000000))",
      "(r / rise-01\n   :ARG1 (ii / income\n             :mod (n / net))\n   :ARG2 (p / percentage-entity\n            :value 17)\n   :time (d2 / date-entity\n             :month 6))"
    ],
    "smus": [
      "Google's revenues have seen a rise.",
      "Net income rose.",
      "Google's revenues rose 11%.",
      "Google's revenues rose by 17 billion dollars.",
      "Google's income is on the rise.",
      "The rise was boosted by the rise in Google's revenues.",
      "The rise was boosted by a rise of 11%.",
      "The rise was boosted by a rise of 17 billion dollars monetary.",
      "Net income rose 17%.",
      "Net income rose in June.",
      "Net income rose by $$.",
      "Google's income rose 17%.",
      "Google's income rose in June.",
      "The boost from the rise in Google's revenues has been 17%.",
      "The rise of 11% has boosted the rise to 17%.",
      "The rise in the rise in the monetization of 17 billion has boosted the rise to 17 percent.",
      "Net income rose 17% in June.",
      "Google's revenues rose 11% to $.",
      "Google's income is going up by $$.",
      "The boost in Google's revenues has seen a rise in monetary dollars.",
      "The 11% rise has boosted the monetization.",
      "In June, net income rose by $.",
      "Net income rose 17% to $.",
      "Google's income rose 17% in June.",
      "Google's income rose by $$ in June.",
      "Google's income rose 17% to $."
    ]
  },
  {
    "instance_id": "pyrxsum-83",
    "summary": "Pregnant women should visit countries with a risk of malaria only if their trip is essential, experts are warning.",
    "summary_trees": [
      "# ::snt Pregnant women should visit countries with a risk of malaria only if their trip is essential, experts are warning.\n(w / warn-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01))\n      :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                  :ARG0 (w2 / woman\n                        :ARG1-of (ii / impregnate-01))\n                  :ARG1 (c / country\n                        :ARG1-of (r2 / risk-01\n                              :ARG2 (m / malaria)))\n                  :condition (e2 / essential\n                        :mod (o / only))\n                  :domain-of e2)))"
    ],
    "tree": [
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :condition (e2 / essential\n                           :domain v)))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :ARG0 (w2 / woman\n                      :ARG1 (ii / impregnate-01))))",
      "(r / recommend-01\n   :ARG1 (v / visit-01\n            :condition (e2 / essential\n                           :mod (o / only))))",
      "(w / warn-01\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :condition (e2 / essential\n                                    :domain v))))",
      "(w / warn-01\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :condition (e2 / essential\n                                    :mod (o / only)))))",
      "(v / visit-01\n   :ARG0 (w2 / woman\n             :ARG1 (ii / impregnate-01))\n   :condition (e2 / essential\n                  :mod (o / only)))",
      "(v / visit-01\n   :ARG0 (w2 / woman\n             :ARG1 (ii / impregnate-01))\n   :ARG1 (c / country\n            :ARG1 (r2 / risk-01\n                      :ARG2 (m / malaria))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :condition (e2 / essential\n                                    :domain v))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :ARG0 (w2 / woman\n                               :ARG1 (ii / impregnate-01)))))",
      "(w / warn-01\n   :ARG0 (p / person\n            :ARG1 (e / expert-01))\n   :ARG1 (r / recommend-01\n            :ARG1 (v / visit-01\n                     :ARG1 (c / country\n                              :ARG1 (r2 / risk-01\n                                        :ARG2 (m / malaria))))))"
    ],
    "smus": [
      "If it is essential, it should visit.",
      "Women who are pregnant should visit.",
      "Only if essential should visit.",
      "Warning: Should you visit if it is essential.",
      "Warning: Only if essential should visit.",
      "Women who are pregnant only visit if essential.",
      "Experts are warning that if it is essential, it should visit.",
      "Experts are warning pregnant women should visit.",
      "Experts are warning that only if essential should visit.",
      "Only if essential will pregnant women visit countries at risk of malaria."
    ]
  },
  {
    "instance_id": "pyrxsum-84",
    "summary": "In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.",
    "summary_trees": [
      "# ::snt In Africa's schools, old-fashioned, dusty textbooks are gradually being replaced by tablets, computers and mobile phones.\n(r / replace-01\n      :ARG1 (t / textbook\n            :mod (d / dusty)\n            :mod (f / fashion\n                  :mod (o / old)))\n      :ARG2 (a / and\n            :op1 (t2 / tablet)\n            :op2 (c / computer)\n            :op3 (p / phone\n                  :ARG1-of (m / mobile-02)))\n      :manner (g / gradual)\n      :location (s / school\n            :location (c2 / continent\n                  :name (n / name\n                        :op1 \"Africa\"))))"
    ],
    "tree": [
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02)))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer)\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :manner (g / gradual))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (t2 / tablet)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (c / computer)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (d / dusty))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (t2 / tablet)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (c / computer)\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))",
      "(r / replace-01\n   :ARG1 (t / textbook\n            :mod (f / fashion\n                    :mod (o / old)))\n   :ARG2 (p / phone\n            :ARG1 (m / mobile-02))\n   :location (s / school\n                :location (c2 / continent\n                              :name (n / name\n                                       :op1 \"Africa\"))))"
    ],
    "smus": [
      "Dusty textbooks replaced by tablets.",
      "Dusty textbooks replaced by computers.",
      "Dusty textbooks replaced by mobile phones.",
      "Old-fashion textbooks are replaced with tablets.",
      "Old-fashioned textbooks were replaced by computers.",
      "Dusty textbooks are gradually replaced by tablets.",
      "Dusty textbooks are gradually replaced by computers.",
      "Old-fashioned textbooks are replaced by mobile phones.",
      "Dusty textbooks are gradually replaced by mobile phones.",
      "Old-fashioned textbooks are gradually being replaced by tablets.",
      "Old-fashioned textbooks are gradually being replaced by computers.",
      "Old-fashioned textbooks are gradually being replaced by mobile phones.",
      "Dusty textbooks are replaced with tablets in African schools.",
      "Dusty textbooks were replaced with computers in African schools.",
      "Dusty textbooks are replaced with mobile phones in African schools.",
      "In African schools, old-fashioned textbooks were replaced with tablets.",
      "In African schools, old-fashioned textbooks were replaced with computers.",
      "In African schools, old-fashioned textbooks were replaced with mobile phones."
    ]
  },
  {
    "instance_id": "pyrxsum-85",
    "summary": "More than half of Scots have run out of money before pay day, according to a new report.",
    "summary_trees": [
      "# ::snt More than half of Scots have run out of money before pay day, according to a new report.\n(s / say-01\n      :ARG0 (r / report\n            :ARG1-of (n / new-01))\n      :ARG1 (r2 / run-out-05\n            :ARG1 (m / money)\n            :ARG2 (p / person\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"Scotland\"))\n                  :quant (m2 / more-than\n                        :op1 \"1/2\"))\n            :time (b / before\n                  :op1 (d / day\n                        :time-of (p2 / pay-01)))))"
    ],
    "tree": [
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :quant (m2 / more-than\n                        :op1 \"1/2\")))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG1 (m / money)))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :time (b / before\n             :op1 (d / day\n                     :time (p2 / pay-01))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(r2 / run-out-05\n    :ARG1 (m / money)\n    :ARG2 (p / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Scotland\"))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :quant (m2 / more-than\n                                 :op1 \"1/2\"))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :time (b / before\n                      :op1 (d / day\n                              :time (p2 / pay-01)))))",
      "(s / say-01\n   :ARG0 (r / report\n            :ARG1 (n / new-01))\n   :ARG1 (r2 / run-out-05\n             :ARG2 (p / person\n                      :mod (c / country\n                              :name (n2 / name\n                                        :op1 \"Scotland\")))))"
    ],
    "smus": [
      "More than half ran out of money.",
      "The new report said the money had run out.",
      "ran out of money before the pay day.",
      "The Scots are running out of money.",
      "More than half have run out, according to the new report.",
      "The new report said the run-out was before the day of pay.",
      "The new report said the Scots had run out.",
      "More than half ran out of money before the day of the pay.",
      "The scottish people ran out of money before the day of pay."
    ]
  },
  {
    "instance_id": "pyrxsum-86",
    "summary": "The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give it control of an important supply line with the provincial capital Lashkar Gah",
    "summary_trees": [
      "# ::snt The Taliban's capture of the strategically-located Sangin, once considered the deadliest battlefield for US and British troops in Afghanistan, will increase the group's mobility in the north of the province and give it control of an important supply line with the provincial capital Lashkar Gah\n(a / and\n      :op1 (ii / increase-01\n            :ARG0 (c / capture-01\n                  :ARG0 (c2 / criminal-organization\n                        :name (n / name\n                              :op1 \"Taliban\"))\n                  :ARG1 (c3 / city\n                        :name (n2 / name\n                              :op1 \"Sangin\")\n                        :ARG1-of (l / locate-01\n                              :manner (s / strategic))\n                        :ARG1-of (c4 / consider-02\n                              :ARG2 (b / battlefield\n                                    :location (c5 / country\n                                          :name (n3 / name\n                                                :op1 \"Afghanistan\")\n                                          :part (n4 / north))\n                                    :beneficiary (a2 / and\n                                          :op1 (t / troop\n                                                :mod (c6 / country\n                                                      :name (n5 / name\n                                                            :op1 \"United\"\n                                                            :op2 \"States\")))\n                                          :op2 (t2 / troop\n                                                :mod (c7 / country\n                                                      :name (n6 / name\n                                                            :op1 \"Britain\"))))\n                                    :ARG1-of (h / have-degree-91\n                                          :ARG2 (k / kill-01\n                                                :ARG0 b)\n                                          :ARG3 (m / most)))\n                              :time (o / once))))\n            :ARG1 (m2 / mobility\n                  :poss c2\n                  :location n4))\n      :op2 (g / give-01\n            :ARG0 c\n            :ARG1 (c8 / control-01\n                  :ARG0 c2\n                  :ARG1 (l2 / line\n                        :ARG1-of (ii2 / important-01)\n                        :ARG3-of (s2 / supply-01\n                              :ARG2 (c9 / city\n                                    :name (n7 / name\n                                          :op1 \"Lashkar\"\n                                          :op2 \"Gah\")\n                                    :ARG0-of (h2 / have-org-role-91\n                                          :ARG1 (p / province\n                                                :ARG2 (c10 / capital)))))\n                        :ARG2 c2))))"
    ],
    "tree": [
      "(ii / increase-01\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c8 / control-01\n    :ARG1 (l2 / line\n              :ARG1 (ii2 / important-01)))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :name (n2 / name\n                       :op1 \"Sangin\")))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (l / locate-01\n                      :manner (s / strategic))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :time (o / once))))",
      "(ii / increase-01\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :name (n2 / name\n                       :op1 \"Sangin\")))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :part (n4 / north))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(c8 / control-01\n    :ARG1 (l2 / line\n              :ARG3 (s2 / supply-01\n                        :ARG2 (c9 / city\n                                  :name (n7 / name\n                                            :op1 \"Lashkar\"\n                                            :op2 \"Gah\")))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (l / locate-01\n                      :manner (s / strategic))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :name (n3 / name\n                                                        :op1 \"Afghanistan\"))))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG2 (k / kill-01\n                                                  :ARG0 b))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c8 / control-01\n    :ARG1 (l2 / line\n              :ARG3 (s2 / supply-01\n                        :ARG2 (c9 / city\n                                  :ARG0 (h2 / have-org-role-91\n                                            :ARG1 (p / province\n                                                     :ARG2 (c10 / capital)))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :name (n2 / name\n                                 :op1 \"Sangin\")))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(c / capture-01\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t / troop\n                                                :mod (c6 / country\n                                                         :name (n5 / name\n                                                                   :op1 \"United\"\n                                                                   :op2 \"States\")))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (l / locate-01\n                                :manner (s / strategic))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north))))))\n    :ARG1 (m2 / mobility\n              :location n4))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :part (n4 / north))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG3 (m / most))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG3 (m / most))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :location (c5 / country\n                                              :name (n3 / name\n                                                        :op1 \"Afghanistan\"))))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :ARG1 (h / have-degree-91\n                                         :ARG2 (k / kill-01\n                                                  :ARG0 b))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :name (n3 / name\n                                                                  :op1 \"Afghanistan\"))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG2 (k / kill-01\n                                                            :ARG0 b))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t2 / troop\n                                                 :mod (c7 / country\n                                                          :name (n6 / name\n                                                                    :op1 \"Britain\")))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :part (n4 / north))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t2 / troop\n                                                           :mod (c7 / country\n                                                                    :name (n6 / name\n                                                                              :op1 \"Britain\")))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG3 (m / most))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(c / capture-01\n   :ARG0 (c2 / criminal-organization\n             :name (n / name\n                      :op1 \"Taliban\"))\n   :ARG1 (c3 / city\n             :ARG1 (c4 / consider-02\n                       :ARG2 (b / battlefield\n                                :beneficiary (t / troop\n                                                :mod (c6 / country\n                                                         :name (n5 / name\n                                                                   :op1 \"United\"\n                                                                   :op2 \"States\")))))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :location (c5 / country\n                                                        :name (n3 / name\n                                                                  :op1 \"Afghanistan\"))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t / troop\n                                                          :mod (c6 / country\n                                                                   :name (n5 / name\n                                                                             :op1 \"United\"\n                                                                             :op2 \"States\")))))))\n    :ARG1 (m2 / mobility\n              :location (n4 / north)))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :ARG1 (h / have-degree-91\n                                                   :ARG2 (k / kill-01\n                                                            :ARG0 b))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t2 / troop\n                                                           :mod (c7 / country\n                                                                    :name (n6 / name\n                                                                              :op1 \"Britain\")))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))",
      "(ii / increase-01\n    :ARG0 (c / capture-01\n             :ARG1 (c3 / city\n                       :ARG1 (c4 / consider-02\n                                 :ARG2 (b / battlefield\n                                          :beneficiary (t / troop\n                                                          :mod (c6 / country\n                                                                   :name (n5 / name\n                                                                             :op1 \"United\"\n                                                                             :op2 \"States\")))))))\n    :ARG1 (m2 / mobility\n              :poss (c2 / criminal-organization\n                        :name (n / name\n                                 :op1 \"Taliban\"))))"
    ],
    "smus": [
      "Increase mobility in the north.",
      "The important line is under control.",
      "Sangin was captured.",
      "Capture a strategically located city.",
      "Capture a city once considered.",
      "Increase the mobility of the Taliban.",
      "Sangin was captured by the Taliban.",
      "The capture of a city considered a battlefield in northern country.",
      "The capture of the city considered the most battlefield.",
      "The supply line to Lashkar Gah is under control.",
      "Sangin capture would increase mobility in the north.",
      "The Taliban captured a strategically located city.",
      "Capture of a city considered a battlefield in Afghanistan.",
      "The capture of a city considered a deadly battlefield.",
      "Capture of strategically located cities will increase mobility in the north.",
      "Control of the supply line to the provincial capital.",
      "Sangin's capture would increase the Taliban's mobility.",
      "The capture of a city considered a battlefield for American troops.",
      "Capture of strategically located cities would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield in the north will increase mobility in the north.",
      "The Taliban captured a city considered a battlefield in northern country.",
      "The Taliban captured the city considered the most battlefield.",
      "Capture of cities considered the most battlefield would increase mobility in the north.",
      "The Taliban captured a city considered a battlefield in Afghanistan.",
      "The Taliban captured a city considered a deadly battlefield.",
      "Capture of cities considered a battlefield in Afghanistan will increase mobility in the north.",
      "Capture of cities considered a deadly battlefield would increase mobility in the north.",
      "The Taliban captured a city considered a battlefield for British troops.",
      "Capture of cities considered a battlefield in the northern country would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for British troops would increase mobility in the north.",
      "Capture of cities considered the most battlefield would increase the Taliban's mobility.",
      "The Taliban captured a city considered a battlefield for American troops.",
      "Capture of cities considered a battlefield in Afghanistan would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for American troops would increase mobility in the north.",
      "Capture of cities considered a deadly battlefield would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for British troops would increase the Taliban's mobility.",
      "Capture of cities considered a battlefield for American troops would increase the Taliban's mobility."
    ]
  },
  {
    "instance_id": "pyrxsum-87",
    "summary": "Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.",
    "summary_trees": [
      "# ::snt Western Sahara is a sparsely-populated area of mostly desert situated on the northwest coast of Africa.\n(a / area\n      :ARG1-of (p / populate-01\n            :manner (s / sparse))\n      :consist-of (d / desert\n            :quant (m / most))\n      :domain (c / country-region\n            :name (n / name\n                  :op1 \"Western\"\n                  :op2 \"Sahara\"))\n      :ARG1-of (s2 / situate-01\n            :ARG2 (c2 / coast\n                  :mod (n2 / northwest)\n                  :part-of (c3 / continent\n                        :name (n3 / name\n                              :op1 \"Africa\")))))"
    ],
    "tree": [
      "(a / area\n   :ARG1 (p / populate-01\n            :manner (s / sparse))\n   :consist-of (d / desert\n                  :quant (m / most))\n   :domain (c / country-region\n              :name (n / name\n                       :op1 \"Western\"\n                       :op2 \"Sahara\"))\n   :ARG1 (s2 / situate-01\n             :ARG2 (c2 / coast\n                       :mod (n2 / northwest)\n                       :part (c3 / continent\n                                 :name (n3 / name\n                                           :op1 \"Africa\")))))"
    ],
    "smus": [
      "Western Sahara is a sparsely populated, mostly desert area situated on Africa's northwest coast."
    ]
  },
  {
    "instance_id": "pyrxsum-88",
    "summary": "Deputy First Minister John Swinney will give MSPs his response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.",
    "summary_trees": [
      "# ::snt Deputy First Minister John Swinney will give MSPs his response to a report into the death of Aberdeen schoolboy Bailey Gwynne next week.\n(g / give-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Swinney\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :mod (d / deputy)\n                        :ord (o / ordinal-entity\n                              :value 1))))\n      :ARG1 (r / respond-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                  :ARG1 (d2 / die-01\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Bailey\"\n                                    :op2 \"Gwynne\")\n                              :mod (s / schoolboy)\n                              :location (c / city\n                                    :name (n3 / name\n                                          :op1 \"Aberdeen\"))))))\n      :ARG2 (p3 / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m2 / member)))\n      :time (w / week\n            :mod (n4 / next)))"
    ],
    "tree": [
      "(d2 / die-01\n    :ARG1 (p2 / person\n              :mod (s / schoolboy)))",
      "(d2 / die-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Bailey\"\n                        :op2 \"Gwynne\")))",
      "(d2 / die-01\n    :ARG1 (p2 / person\n              :location (c / city\n                           :name (n3 / name\n                                     :op1 \"Aberdeen\"))))",
      "(r / respond-01\n   :ARG1 (r2 / report-01\n             :ARG1 (d2 / die-01\n                       :ARG1 (p2 / person\n                                 :mod (s / schoolboy)))))",
      "(r2 / report-01\n    :ARG1 (d2 / die-01\n              :ARG1 (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Bailey\"\n                                  :op2 \"Gwynne\"))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(r2 / report-01\n    :ARG1 (d2 / die-01\n              :ARG1 (p2 / person\n                        :location (c / city\n                                     :name (n3 / name\n                                               :op1 \"Aberdeen\")))))",
      "(r / respond-01\n   :ARG1 (r2 / report-01\n             :ARG1 (d2 / die-01\n                       :ARG1 (p2 / person\n                                 :name (n2 / name\n                                           :op1 \"Bailey\"\n                                           :op2 \"Gwynne\")))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p))",
      "(r / respond-01\n   :ARG1 (r2 / report-01\n             :ARG1 (d2 / die-01\n                       :ARG1 (p2 / person\n                                 :location (c / city\n                                              :name (n3 / name\n                                                        :op1 \"Aberdeen\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG0 (p / person :name (n / name :op1 \"John\" :op2 \"Swinney\"))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member)))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy))))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy)))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG0 p)\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy))))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\")))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\"))))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\"))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy)))))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy)))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member)))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\")))))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy)))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\")))))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy)))))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\")))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member)))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\"))))))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\"))))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member)))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\")))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :mod (s / schoolboy)))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\")))))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Swinney\"))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\"))))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\"))))))\n   :time (w / week\n            :mod (n4 / next)))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Bailey\"\n                                                    :op2 \"Gwynne\")))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))",
      "(g / give-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / minister\n                              :mod (d / deputy))))\n   :ARG1 (r / respond-01\n            :ARG1 (r2 / report-01\n                      :ARG1 (d2 / die-01\n                                :ARG1 (p2 / person\n                                          :location (c / city\n                                                       :name (n3 / name\n                                                                 :op1 \"Aberdeen\"))))))\n   :ARG2 (p3 / person\n             :ARG0 (h2 / have-org-role-91\n                       :ARG2 (m2 / member))))"
    ],
    "smus": [
      "The schoolboy died.",
      "Bailey Gwynne died.",
      "Death in Aberdeen",
      "In response to the report of the death of a schoolboy.",
      "Report of Bailey Gwynne's death",
      "John Swinney will give his response.",
      "John Swinney's response will give members.",
      "Report of death in Aberdeen",
      "In response to the report of Bailey Gwynne's death.",
      "The Deputy Minister will give his response.",
      "In response to the report of the death of an Aberdeen person.",
      "John Swinney will give his response next week.",
      "John Swinney will give a response to the members next week.",
      "John Swinney will give a response to the members.",
      "The Deputy Minister will give his response next week.",
      "John Swinney will give a response to the report of the death of a schoolboy.",
      "Give a response to the report of the death of a schoolboy.",
      "The Deputy Minister will give a response to the members.",
      "John Swinney will give a response to the report of Bailey Gwynne's death.",
      "The Deputy Minister will give a response to the report of the death of a schoolboy.",
      "Give a response to the report of Bailey Gwynne's death to members.",
      "John Swinney will give a response to the report of the death of an Aberdeen person.",
      "Give members a response to the report of the death of the Aberdeen resident.",
      "The Deputy Minister will give a response to the report of Bailey Gwynne's death.",
      "John Swinney will give a response next week to the report of the death of a schoolboy.",
      "The schoolboy's death report will give members a response next week.",
      "The Deputy Minister will give a response to the report of the death of an Aberdeen person.",
      "John Swinney will give a response to the report of the death of a schoolboy to members.",
      "John Swinney will give a response next week to the report of Bailey Gwynne's death.",
      "The Deputy Minister will give a response next week to the report of the death of a schoolboy.",
      "The response to the report of Bailey Gwynne's death will give members next week.",
      "John Swinney will give a response next week to the report of the death of an Aberdeen person.",
      "The response to the report of the death of an Aberdeen person will give members next week.",
      "John Swinney will give a response to the report of Bailey Gwynne's death to members.",
      "The Deputy Minister will give the members a response to the report of the death of a schoolboy.",
      "The Deputy Minister will give a response next week to the report of Bailey Gwynne's death.",
      "John Swinney will give the members a response to the report of the death of an Aberdeen man.",
      "The Deputy Minister will give a response next week to the report of the death of an Aberdeen person.",
      "The Deputy Minister will give the members a response to the report of Bailey Gwynne's death.",
      "The Deputy Minister will give the members a response to the report of the death of the Aberdeen person."
    ]
  },
  {
    "instance_id": "pyrxsum-89",
    "summary": "Police at the Download Festival have kept their promise and have been posing for fan photos despite extra security.",
    "summary_trees": [
      "# ::snt Police at the Download Festival have kept their promise and have been posing for fan photos despite extra security.\n(a / and\n      :op1 (k / keep-01\n            :ARG0 (p / police\n                  :location (f / festival\n                        :name (n / name\n                              :op1 \"Download\"\n                              :op2 \"Festival\")))\n            :ARG1 (p2 / promise-01\n                  :ARG0 p))\n      :op2 (p3 / pose-01\n            :ARG0 p\n            :ARG2 (p4 / photo\n                  :mod (f2 / fan))\n            :concession (s / security\n                  :mod (e / extra))))"
    ],
    "tree": [
      "(k / keep-01\n   :ARG1 (p2 / promise-01\n             :ARG0 (p / police)))",
      "(k / keep-01\n   :ARG0 (p / police\n            :location (f / festival\n                         :name (n / name\n                                  :op1 \"Download\"\n                                  :op2 \"Festival\")))\n   :ARG1 (p2 / promise-01\n             :ARG0 p))"
    ],
    "smus": [
      "The police have kept their promise.",
      "Police at the Download Festival have kept their promise."
    ]
  },
  {
    "instance_id": "pyrxsum-90",
    "summary": "Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.",
    "summary_trees": [
      "# ::snt Competition for nesting sites could explain why some birds and bumblebees are declining faster than others.\n(p / possible-01\n      :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                  :ARG2 (s / site\n                        :location-of (n / nest-01)))\n            :ARG1 (t / thing\n                  :ARG0-of (c2 / cause-01\n                        :ARG1 (d / decline-01\n                              :ARG1 (a / and\n                                    :op1 (b / bird\n                                          :mod (s2 / some))\n                                    :op2 (b2 / bee\n                                          :mod s2))\n                              :ARG1-of (h / have-degree-91\n                                    :ARG2 (f / fast-02)\n                                    :ARG3 (m / more)\n                                    :ARG4 (o / other)))))))"
    ],
    "tree": [
      "(d / decline-01\n   :ARG1 (b / bird\n            :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (b2 / bee\n             :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (b / bird\n            :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (b2 / bee\n             :mod (s2 / some)))",
      "(d / decline-01\n   :ARG1 (h / have-degree-91\n            :ARG2 (f / fast-02)))",
      "(d / decline-01\n   :ARG1 (h / have-degree-91\n            :ARG3 (m / more)))",
      "(d / decline-01\n   :ARG1 (h / have-degree-91\n            :ARG4 (o / other)))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG0 (c / compete-01\n                     :ARG2 (s / site\n                              :location (n / nest-01)))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b / bird\n                                        :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG2 (f / fast-02))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG3 (m / more))))))",
      "(e / explain-01\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG4 (o / other))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (b / bird\n                                                 :mod (s2 / some)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG2 (f / fast-02)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (b2 / bee\n                                                  :mod (s2 / some)))))))",
      "(p / possible-01\n   :ARG1 (e / explain-01\n            :ARG1 (t / thing\n                     :ARG0 (c2 / cause-01\n                               :ARG1 (d / decline-01\n                                        :ARG1 (h / have-degree-91\n                                                 :ARG4 (o / other)))))))",
      "(e / explain-01\n   :ARG0 (c / compete-01\n            :ARG2 (s / site\n                     :location (n / nest-01)))\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (b / bird\n                                        :mod (s2 / some))))))",
      "(e / explain-01\n   :ARG0 (c / compete-01\n            :ARG2 (s / site\n                     :location (n / nest-01)))\n   :ARG1 (t / thing\n            :ARG0 (c2 / cause-01\n                      :ARG1 (d / decline-01\n                               :ARG1 (h / have-degree-91\n                                        :ARG2 (f / fast-02))))))"
    ],
    "smus": [
      "Some birds are declining.",
      "Some bees are declining.",
      "Declining fast.",
      "Declining more.",
      "Others are declining.",
      "Competition for nest sites can explain this.",
      "Explain why some birds are declining.",
      "Explain why fast declines are occurring.",
      "Explain why some bees are declining.",
      "Explain why it is declining more.",
      "It's possible to explain why some birds are declining.",
      "It's possible to explain why fast declines are occurring.",
      "It's possible to explain why some bees are declining.",
      "Could explain why the decline is more.",
      "It is possible to explain why others are declining.",
      "Competition for nest sites will explain why fast declining sites are occurring.",
      "Competition for nest sites will explain why some bees are declining.",
      "Competition for nest sites will explain why it is declining more."
    ]
  },
  {
    "instance_id": "pyrxsum-91",
    "summary": "The UK should not have to pay \"large\" sums to the EU to trade with it after Brexit, Boris Johnson has said.",
    "summary_trees": [
      "# ::snt The UK should not have to pay \"large\" sums to the EU to trade with it after Brexit, Boris Johnson has said.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Boris\"\n                  :op2 \"Johnson\"))\n      :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                  :polarity -\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 \"UK\"))\n                  :ARG2 (p2 / pay-01\n                        :ARG0 c\n                        :ARG1 (s2 / sum\n                              :mod (l / large))\n                        :ARG2 (o2 / organization\n                              :name (n3 / name\n                                    :op1 \"EU\"))\n                        :purpose (t / trade-01\n                              :ARG0 c\n                              :ARG2 o2\n                              :time (a / after\n                                    :op1 (l2 / leave-15\n                                          :ARG0 c\n                                          :ARG1 o2)))))))"
    ],
    "tree": [
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large)))",
      "(p2 / pay-01\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\")))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :ARG0 (c / country :name (n2 / name :op1 \"UK\"))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :ARG2 (o2 / organization :name (n3 / name :op1 \"EU\"))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :ARG0 c))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :purpose (t / trade-01\n                         :ARG0 c)))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :purpose (t / trade-01\n                :time (a / after\n                         :op1 (l2 / leave-15\n                                  :ARG1 (o2 / organization :name (n3 / name :op1 \"EU\"))))))",
      "(o / obligate-01\n   :ARG1 (c / country\n            :name (n2 / name\n                      :op1 \"UK\"))\n   :ARG2 (p2 / pay-01\n             :ARG2 (o2 / organization\n                       :name (n3 / name\n                                 :op1 \"EU\"))))",
      "(p2 / pay-01\n    :ARG1 (s2 / sum\n              :mod (l / large))\n    :ARG2 (o2 / organization\n              :name (n3 / name\n                        :op1 \"EU\"))\n    :purpose (t / trade-01\n                :ARG2 o2))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Boris\"\n                     :op2 \"Johnson\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (o / obligate-01\n                     :ARG2 (p2 / pay-01\n                               :ARG1 (s2 / sum\n                                         :mod (l / large))))))"
    ],
    "smus": [
      "Paying large sums.",
      "Paying for by the EU.",
      "Paying large sums for the UK trade.",
      "Paying large sums for trade with the EU.",
      "The EU pays for the UK's trade.",
      "Boris Johnson has said that it should not.",
      "Large sums are paid to the EU for the UK's trade.",
      "Large sums are paid to the EU for trade purposes.",
      "Payment to the EU for trade after the EU leaves.",
      "Large sums are paid to the EU for trade after the EU leaves."
    ]
  },
  {
    "instance_id": "pyrxsum-92",
    "summary": "A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.",
    "summary_trees": [
      "# ::snt A grizzly bear has attacked and killed a cyclist just outside the Glacier National Park in the northern US state of Montana, police say.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / and\n            :op1 (a2 / attack-01\n                  :ARG0 (b / bear\n                        :mod (g / grizzly))\n                  :ARG1 (p2 / person\n                        :ARG0-of (c / cycle-01)))\n            :op2 (k / kill-01\n                  :ARG0 b\n                  :ARG1 p2)\n            :location (o / outside\n                  :op1 (p3 / park\n                        :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\")\n                        :location (n2 / north\n                              :part-of (s2 / state\n                                    :name (n3 / name\n                                          :op1 \"Montana\")\n                                    :location (c2 / country\n                                          :name (n4 / name\n                                                :op1 \"US\")))))\n                  :mod (j / just))))"
    ],
    "tree": [
      "(a2 / attack-01\n    :ARG1 (p2 / person\n              :ARG0 (c / cycle-01)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :mod (j / just)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a2 / attack-01\n             :ARG0 (b / bear\n                      :mod (g / grizzly))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a2 / attack-01\n             :ARG1 (p2 / person\n                       :ARG0 (c / cycle-01))))",
      "(a2 / attack-01\n    :ARG0 (b / bear\n             :mod (g / grizzly))\n    :ARG1 (p2 / person\n              :ARG0 (c / cycle-01)))",
      "(a2 / attack-01\n    :ARG0 (b / bear\n             :mod (g / grizzly))\n    :ARG1 (p2 / person\n              :ARG0 (c / cycle-01)))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :name (n / name\n                              :op1 \"Glacier\"\n                              :op2 \"National\"\n                              :op3 \"Park\"))))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (o / outside\n            :op1 (p3 / park\n                     :location (n2 / north\n                                   :part (s2 / state\n                                             :name (n3 / name\n                                                       :op1 \"Montana\"))))))"
    ],
    "smus": [
      "The cyclists were attacked.",
      "Police say it was just outside.",
      "Police say a grizzly bear attacked.",
      "Police say a cyclist was attacked.",
      "A grizzly bear attacked a cyclist.",
      "Police say outside Glacier National Park.",
      "Police say they were outside a park in northern Montana.",
      "Police say outside a park in the northern US state."
    ]
  },
  {
    "instance_id": "pyrxsum-93",
    "summary": "A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.",
    "summary_trees": [
      "# ::snt A man has been arrested over the \"violent assault\" and rape of a woman in a railway station car park, police have said.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (m / man)\n            :ARG2 (a2 / and\n                  :op1 (a3 / assault-01\n                        :ARG0 m\n                        :ARG1 (w / woman)\n                        :mod (v / violent))\n                  :op2 (r / rape-01\n                        :ARG0 m\n                        :ARG1 w)\n                  :location (p2 / park\n                        :mod (c / car)\n                        :mod (s2 / station\n                              :mod (r2 / railway))))))"
    ],
    "tree": [
      "(a3 / assault-01\n    :ARG1 (w / woman)\n    :mod (v / violent))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG0 m))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (r / rape-01\n            :ARG0 m))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG0 m))",
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (m / man)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (p2 / park\n             :mod (c / car)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :ARG1 (w / woman)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :mod (v / violent)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (r / rape-01\n            :ARG1 (w / woman)))",
      "(a / arrest-01\n   :ARG1 (m / man)\n   :ARG2 (a3 / assault-01\n             :mod (v / violent)))"
    ],
    "smus": [
      "A violent assault on a woman.",
      "The man was arrested for assault.",
      "The man was arrested for rape.",
      "Police said the man was arrested.",
      "The man was arrested for assaulting a woman.",
      "The man was arrested for violent assault.",
      "The man was arrested for rape of a woman.",
      "Police said the man was arrested for assault.",
      "Police said the man was arrested for rape.",
      "Police say the arrest was for violent assault."
    ]
  },
  {
    "instance_id": "pyrxsum-94",
    "summary": "A diabetic MP who asked Coca-Cola not to take its Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.",
    "summary_trees": [
      "# ::snt A diabetic MP who asked Coca-Cola not to take its Christmas truck to Leicester has been accused of hypocrisy for opening a sweet shop in the city.\n(a / accuse-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (p2 / parliament)\n                  :ARG2 (m / member\n                        :mod (d / diabetes)))\n            :ARG0-of (a2 / ask-02\n                  :ARG1 (t / take-01\n                        :polarity -\n                        :ARG0 (c / company\n                              :name (n / name\n                                    :op1 \"Coke-Cola\"))\n                        :ARG1 (t2 / truck\n                              :mod (f / festival\n                                    :name (n2 / name\n                                          :op1 \"Christmas\"))\n                              :poss c)\n                        :ARG3 (c2 / city\n                              :name (n3 / name\n                                    :op1 \"Leicester\")))\n                  :ARG2 c))\n      :ARG2 (h2 / hypocrisy)\n      :ARG1-of (c3 / cause-01\n            :ARG0 (o / open-01\n                  :ARG0 p\n                  :ARG1 (s / shop\n                        :mod (s2 / sweet))\n                  :location c2)))"
    ],
    "tree": [
      "(t / take-01\n   :ARG1 (t2 / truck\n             :poss (c / company :name (n / name :op1 \"Coke-Cola\"))))",
      "(o / open-01\n   :ARG1 (s / shop\n            :mod (s2 / sweet)))",
      "(t / take-01\n   :ARG1 (t2 / truck\n             :mod (f / festival\n                     :name (n2 / name\n                               :op1 \"Christmas\"))))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (p2 / parliament)))\n   :ARG2 (h2 / hypocrisy))",
      "(t / take-01\n   :ARG1 (t2 / truck\n             :poss (c / company :name (n / name :op1 \"Coke-Cola\")))\n   :ARG3 (c2 / city\n             :name (n3 / name\n                       :op1 \"Leicester\")))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -)))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :polarity -)))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member\n                              :mod (d / diabetes))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (m / member\n                              :mod (d / diabetes))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (c3 / cause-01\n             :ARG0 (o / open-01\n                      :ARG1 (s / shop\n                               :mod (s2 / sweet))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG1 (t / take-01\n                               :ARG1 (t2 / truck\n                                         :poss (c / company :name (n / name :op1 \"Coke-Cola\"))))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (p / person\n            :ARG0 (a2 / ask-02\n                      :ARG2 (c / company\n                               :name (n / name\n                                        :op1 \"Coke-Cola\"))))\n   :ARG2 (h2 / hypocrisy))",
      "(a / accuse-01\n   :ARG1 (c3 / cause-01\n             :ARG0 (o / open-01\n                      :location (c2 / city\n                                    :name (n3 / name\n                                              :op1 \"Leicester\"))))\n   :ARG2 (h2 / hypocrisy))",
      "(t / take-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Coke-Cola\"))\n   :ARG1 (t2 / truck\n             :mod (f / festival\n                     :name (n2 / name\n                               :op1 \"Christmas\"))))"
    ],
    "smus": [
      "Take a Coke-Cola truck.",
      "Sweet shop open.",
      "Take a Christmas truck.",
      "Parliamentarians are accused of hypocrisy.",
      "The people who asked not to take were accused of hypocrisy.",
      "The diabetics are accused of hypocrisy.",
      "The opening of a sweet shop is accused of hypocrisy.",
      "The people who asked Coke-Cola were accused of hypocrisy.",
      "People who asked to take a Coke-Cola truck were accused of hypocrisy.",
      "The opening in Leicester is accused of hypocrisy.",
      "Take a Christmas truck to Leicester.",
      "People who asked Coke-Cola to take were accused of hypocrisy.",
      "People who asked to take Leicester were accused of hypocrisy.",
      "People who asked to take a Christmas truck were accused of hypocrisy."
    ]
  },
  {
    "instance_id": "pyrxsum-95",
    "summary": "An Orlando mother who was found not guilty of murdering her two-year old daughter Caylee has broken her silence six years later.",
    "summary_trees": [
      "# ::snt An Orlando mother who was found not guilty of murdering her two-year old daughter Caylee has broken her silence six years later.\n(b / break-18\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother))\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Orlando\"))\n            :ARG0-of (f / find-01\n                  :ARG1 (g / guilty-01\n                        :polarity -\n                        :ARG1 p\n                        :ARG2 (m2 / murder-01\n                              :ARG0 p\n                              :ARG1 (p2 / person\n                                    :name (n2 / name\n                                          :op1 \"Caylee\")\n                                    :ARG0-of (h2 / have-rel-role-91\n                                          :ARG1 p\n                                          :ARG2 (d / daughter))\n                                    :age (t / temporal-quantity\n                                          :quant 2\n                                          :unit (y / year)))))))\n      :ARG1 (s / silence\n            :poss p)\n      :time (a / after\n            :quant (t2 / temporal-quantity\n                  :quant 6\n                  :unit (y2 / year))))"
    ],
    "tree": [
      "(b / break-18\n   :ARG1 (s / silence\n            :poss (p / person)))",
      "(f / find-01\n   :ARG1 (g / guilty-01\n            :polarity -))",
      "(m2 / murder-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Caylee\")))",
      "(b / break-18\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss p))",
      "(b / break-18\n   :ARG1 (s / silence\n            :poss (p / person))\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(f / find-01\n   :ARG1 (g / guilty-01\n            :ARG2 (m2 / murder-01\n                      :ARG1 (p2 / person\n                                :age (t / temporal-quantity\n                                        :quant 2)))))",
      "(b / break-18\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss p))",
      "(b / break-18\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother)))\n   :ARG1 (s / silence\n            :poss p)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-18\n   :ARG0 (p / person\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Orlando\")))\n   :ARG1 (s / silence\n            :poss p)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))",
      "(b / break-18\n   :ARG0 (p / person\n            :ARG0 (f / find-01\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG0 p))))\n   :ARG1 (s / silence\n            :poss p)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-18\n   :ARG0 (p / person\n            :ARG0 (f / find-01\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Caylee\"))))))\n   :ARG1 (s / silence\n            :poss p)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :quant 6)))",
      "(b / break-18\n   :ARG0 (p / person\n            :ARG0 (f / find-01\n                     :ARG1 (g / guilty-01\n                              :ARG2 (m2 / murder-01\n                                        :ARG1 (p2 / person\n                                                  :ARG0 (h2 / have-rel-role-91\n                                                            :ARG1 p))))))\n   :ARG1 (s / silence\n            :poss p)\n   :time (a / after\n            :quant (t2 / temporal-quantity\n                       :unit (y2 / year))))"
    ],
    "smus": [
      "The silence of the people has been broken.",
      "Not guilty was found.",
      "Caylee was murdered.",
      "The mother has broken her silence.",
      "Years later, people's silence was broken.",
      "People in Orlando have broken their silence.",
      "Those found not guilty have broken their silence.",
      "Years later, the mother has broken her silence.",
      "Years later, those found not guilty have broken their silence.",
      "Years later, people who have been found guilty of murder have broken their silence.",
      "Six years later, people who have been found guilty of murdering their own person have broken their silence.",
      "After years, people who have been found guilty of murdering a two - - age have broken their silence."
    ]
  },
  {
    "instance_id": "pyrxsum-96",
    "summary": "The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.",
    "summary_trees": [
      "# ::snt The devolution settlement for Wales is less fair than those offered to Scotland and Northern Ireland, the Archbishop of Wales has said.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Wales\"))\n                  :ARG2 (a / archbishop)))\n      :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                  :mod (d / devolve-01)\n                  :beneficiary c)\n            :ARG2-of (h2 / have-degree-91\n                  :ARG1 s2\n                  :ARG3 (l / less)\n                  :ARG4 (s3 / settlement\n                        :ARG1-of (o / offer-01\n                              :ARG3 (a2 / and\n                                    :op1 (c2 / country\n                                          :name (n2 / name\n                                                :op1 \"Scotland\"))\n                                    :op2 (c3 / country\n                                          :name (n3 / name\n                                                :op1 \"Northern\"\n                                                :op2 \"Ireland\"))))))))"
    ],
    "tree": [
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01))\n   :ARG2 (h2 / have-degree-91\n             :ARG1 s2))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :beneficiary (c / country :name (n / name :op1 \"Wales\")))\n   :ARG2 (h2 / have-degree-91\n             :ARG3 (l / less)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / archbishop)))\n   :ARG1 (f / fair-01\n            :ARG1 (s2 / settlement\n                      :mod (d / devolve-01))))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :beneficiary (c / country :name (n / name :op1 \"Wales\")))\n   :ARG2 (h2 / have-degree-91\n             :ARG4 (s3 / settlement\n                       :ARG1 (o / offer-01\n                                :ARG3 (c3 / country\n                                          :name (n3 / name\n                                                    :op1 \"Northern\"\n                                                    :op2 \"Ireland\"))))))",
      "(f / fair-01\n   :ARG1 (s2 / settlement\n             :mod (d / devolve-01))\n   :ARG2 (h2 / have-degree-91\n             :ARG4 (s3 / settlement\n                       :ARG1 (o / offer-01\n                                :ARG3 (c3 / country\n                                          :name (n3 / name\n                                                    :op1 \"Northern\"\n                                                    :op2 \"Ireland\"))))))"
    ],
    "smus": [
      "A settlement for Wales would be less fair.",
      "Devolvement settlements are less fair.",
      "The Archbishop has said it is less fair.",
      "The Archbishop has said that the settlement offered to Scotland is fair.",
      "The Archbishop has said that the settlement offered to Northern Ireland is fair."
    ]
  },
  {
    "instance_id": "pyrxsum-97",
    "summary": "Labour will keep its election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.",
    "summary_trees": [
      "# ::snt Labour will keep its election promises despite uncertainty over Brexit, but cuts to some services are inevitable, the first minister has warned.\n(w / warn-01\n      :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                  :polarity -\n                  :ARG1 (a / avoid-01\n                        :ARG1 (c / cut-02\n                              :ARG1 (s / service\n                                    :mod (s2 / some)))))\n            :ARG2 (k / keep-01\n                  :ARG0 (p2 / political-party\n                        :name (n / name\n                              :op1 \"Labour\"))\n                  :ARG1 (p3 / promise-01\n                        :ARG0 p2\n                        :mod (e / elect-01))\n                  :concession (c2 / certain\n                        :polarity -\n                        :domain (l / leave-15\n                              :ARG1 (c3 / country\n                                    :name (n2 / name\n                                          :op1 \"Great\"\n                                          :op2 \"Britain\")))))))"
    ],
    "tree": [
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))",
      "(c / cut-02\n   :ARG1 (s / service\n            :mod (s2 / some)))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01)))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :ARG0 (p2 / political-party :name (n / name :op1 \"Labour\"))))))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :concession (c2 / certain\n                                     :polarity -))))",
      "(k / keep-01\n   :ARG1 (p3 / promise-01\n             :mod (e / elect-01))\n   :concession (c2 / certain\n                   :polarity -))",
      "(w / warn-01\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :ARG1 (p3 / promise-01\n                               :mod (e / elect-01)))))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :polarity -)\n   :ARG2 (k / keep-01\n            :concession (c2 / certain\n                            :polarity -)))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :ARG1 (p3 / promise-01\n             :ARG0 p2))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG1 (p / possible-01\n                     :polarity -)))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :polarity -)\n   :ARG2 (k / keep-01\n            :ARG0 (p2 / political-party\n                      :name (n / name\n                               :op1 \"Labour\"))))",
      "(h / have-concession-91\n   :ARG1 (p / possible-01\n            :polarity -)\n   :ARG2 (k / keep-01\n            :ARG0 (p2 / political-party\n                      :name (n / name\n                               :op1 \"Labour\"))))",
      "(k / keep-01\n   :ARG0 (p2 / political-party\n             :name (n / name\n                      :op1 \"Labour\"))\n   :ARG1 (p3 / promise-01\n             :ARG0 p2)\n   :concession (c2 / certain\n                   :polarity -))",
      "(w / warn-01\n   :ARG0 (m / minister\n            :ord (o / ordinal-entity\n                    :value 1))\n   :ARG1 (h / have-concession-91\n            :ARG2 (k / keep-01\n                     :concession (c2 / certain\n                                     :polarity -))))"
    ],
    "smus": [
      "Labour will keep its promises.",
      "Some services are cut.",
      "Keep the election promises.",
      "Labour has been warned to keep its promises, but",
      "warned, but keep despite uncertainty.",
      "Keep election promises, if not for certain.",
      "warned, but does keep election promises.",
      "warned, Labour will keep.",
      "Labour will keep its election promises.",
      "The first minister has warned that Labour will keep its promises.",
      "The first minister has warned that despite uncertainty, \"keep.\"",
      "Labour will keep its election promises, but with no certainty.",
      "The first minister has warned that despite keeping election promises,",
      "The first minister has warned that Labour will keep."
    ]
  },
  {
    "instance_id": "pyrxsum-98",
    "summary": "A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.",
    "summary_trees": [
      "# ::snt A convicted fraudster used an \"ingenious\" escape plot to trick prison wardens into letting him go free, a court has heard.\n(h / hear-01\n      :ARG0 (c / court)\n      :ARG1 (u / use-01\n            :ARG0 (p / person\n                  :ARG0-of (d / defraud-01)\n                  :ARG1-of (c2 / convict-01))\n            :ARG1 (p2 / plot-01\n                  :ARG0 p\n                  :ARG1 (e / escape-01\n                        :ARG0 p)\n                  :mod (ii / ingenious))\n            :ARG2 (t / trick-01\n                  :ARG0 p\n                  :ARG1 (w / warden\n                        :mod (p3 / prison))\n                  :ARG2 (l / let-01\n                        :ARG0 w\n                        :ARG1 (f / free-04\n                              :ARG1 p)))))"
    ],
    "tree": [
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person)))",
      "(p2 / plot-01\n    :ARG1 (e / escape-01\n             :ARG0 (p / person)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person))))",
      "(p2 / plot-01\n    :ARG1 (e / escape-01\n             :ARG0 (p / person))\n    :mod (ii / ingenious))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG0 (p / person))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG0 (p / person))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 (p / person)))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison))\n   :ARG2 (l / let-01\n            :ARG0 w))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG0 (d / defraud-01))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG0 (p / person\n                     :ARG1 (c2 / convict-01))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :mod (ii / ingenious))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG1 (p2 / plot-01\n                      :ARG1 (e / escape-01\n                               :ARG0 (p / person)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p)))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(t / trick-01\n   :ARG1 (w / warden\n            :mod (p3 / prison))\n   :ARG2 (l / let-01\n            :ARG1 (f / free-04\n                     :ARG1 (p / person))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG0 (p / person))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(h / hear-01\n   :ARG0 (c / court)\n   :ARG1 (u / use-01\n            :ARG2 (t / trick-01\n                     :ARG2 (l / let-01\n                              :ARG1 (f / free-04\n                                       :ARG1 (p / person))))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 (p / person)))))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 (p / person)))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 p))\n   :ARG2 (t / trick-01\n            :ARG0 p))",
      "(u / use-01\n   :ARG1 (p2 / plot-01\n             :ARG1 (e / escape-01\n                      :ARG0 (p / person)))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG1 (f / free-04\n                              :ARG1 p))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG0 (d / defraud-01))\n   :ARG1 (p2 / plot-01\n             :ARG0 p)\n   :ARG2 (t / trick-01\n            :ARG1 (w / warden\n                     :mod (p3 / prison))))",
      "(u / use-01\n   :ARG0 (p / person\n            :ARG1 (c2 / convict-01))\n   :ARG1 (p2 / plot-01\n             :mod (ii / ingenious))\n   :ARG2 (t / trick-01\n            :ARG2 (l / let-01\n                     :ARG0 (w / warden))))"
    ],
    "smus": [
      "People used a plot.",
      "The plot was to escape.",
      "used an ingenious plot.",
      "The plot used was to escape.",
      "Ingenious plot to escape.",
      "The court heard that the plot was used by the people.",
      "The court heard that the trick was used by the people.",
      "The fraudster used a plot.",
      "The convicted used a plot.",
      "Ingenious plot used to trick people.",
      "Trick the prison wardens into letting them.",
      "The court heard that the fraudsters used.",
      "The court heard that the convicted used the sentence.",
      "The court heard that the ingenious plot used.",
      "The fraudsters used an ingenious plot.",
      "The convicted used an ingenious plot.",
      "People used the plot to trick the wardens into letting them in.",
      "The plot to 'escape' used to trick people.",
      "The court heard that the plot was used to escape.",
      "Fraudsters used a plot to escape.",
      "The convicted used an escape plot.",
      "People used the plot to trick prison wardens.",
      "The court heard that the prison wardens were used to trick.",
      "The plot to escape people used to trick the wardens into letting them in.",
      "The ingenious plot used to trick prison wardens.",
      "The plot to escape people used to trick prison wardens.",
      "The ingenious plot used to trick people into letting them free.",
      "Fraudsters used a plot to trick the wardens into letting them in.",
      "The convicted used the plot to trick the wardens into letting them in.",
      "The plot to escape people used to trick the people into letting them free.",
      "Fraudsters used the plot to trick prison wardens.",
      "Fraudsters used an ingenious plot to trick the wardens into letting them in.",
      "The convicted used the plot to trick the prison wardens.",
      "The convicted used an ingenious plot to trick the wardens into letting them in.",
      "Fraudsters used the escape plot to trick the wardens into letting them in.",
      "Fraudsters used an ingenious plot to trick prison wardens.",
      "The convicted used the plot to trick the letting them free.",
      "The convicted used the plot to escape to trick the wardens into letting them in.",
      "The convicted used an ingenious plot to trick the prison wardens.",
      "Fraudsters used an escape plot to trick prison wardens.",
      "The convicted used the plot to escape to trick the prison wardens.",
      "The convicted used the plot to escape to trick the letting them free."
    ]
  },
  {
    "instance_id": "pyrxsum-99",
    "summary": "The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.",
    "summary_trees": [
      "# ::snt The M6 motorway between Wolverhampton and Walsall has reopened after a fatal crash.\n(r / reopen-01\n      :ARG1 (r2 / road\n            :name (n / name\n                  :op1 \"M6\")\n            :location (b / between\n                  :op1 (c / city\n                        :name (n2 / name\n                              :op1 \"Wolverhampton\"))\n                  :op2 (c2 / city\n                        :name (n3 / name\n                              :op1 \"Walsall\")))\n            :mod (m / motorway))\n      :time (a / after\n            :op1 (c3 / crash-01\n                  :mod (f / fatal))))"
    ],
    "tree": [
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway)))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\")))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :mod (m / motorway))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :name (n / name\n                      :op1 \"M6\"))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))",
      "(r / reopen-01\n   :ARG1 (r2 / road\n             :location (b / between\n                          :op1 (c / city\n                                  :name (n2 / name\n                                            :op1 \"Wolverhampton\"))))\n   :time (a / after\n            :op1 (c3 / crash-01\n                     :mod (f / fatal))))"
    ],
    "smus": [
      "Motorway roads reopened",
      "The M6 has been reopened.",
      "Motorway roads reopened after a fatal crash.",
      "The M6 was reopened after a fatal crash.",
      "The road between Wolverhampton was reopened after a fatal crash."
    ]
  }
]