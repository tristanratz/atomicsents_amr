[{"instance_id": "realsumm-0", "summary": "Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks . Pushpa Basnet and 45 children Pushpa Basnet cares for were forced to evacuate Pushpa Basnet and 45 children she cares for residence . Seven other CNN Heroes and Seven other CNN Heroes organizations now assisting in relief efforts .", "summary_trees": ["# ::snt Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks .\n(c / cause-01\n      :ARG0 (a / aftershock)\n      :ARG1 (s / sleep-01\n            :ARG0 (a2 / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n                  :op2 (w / woman)\n                  :op3 (g / girl)\n                  :quant 425\n                  :mod (y / young))\n            :location (o / outdoors)))", "# ::snt Pushpa Basnet and 45 children Pushpa Basnet cares for were forced to evacuate Pushpa Basnet and 45 children she cares for residence .\n(f / force-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Pushpa\"\n                        :op2 \"Basnet\"))\n            :op2 (c / child\n                  :quant 45\n                  :ARG1-of (c2 / care-03\n                        :ARG0 p)))\n      :ARG2 (e / evacuate-01\n            :ARG2 (a2 / and\n                  :op1 p\n                  :op2 (c3 / child\n                        :quant 45\n                        :ARG1-of (r / reside-01\n                              :ARG0 p)))))", "# ::snt Seven other CNN Heroes and Seven other CNN Heroes organizations now assisting in relief efforts .\n(a / assist-01\n      :ARG0 (a2 / and\n            :op1 (o / organization\n                  :name (n / name\n                        :op1 \"CNN\"\n                        :op2 \"Heroes\")\n                  :quant 7\n                  :mod (o2 / other))\n            :op2 (o3 / organization\n                  :name (n2 / name\n                        :op1 \"CNN\"\n                        :op2 \"Heroes\")\n                  :quant 7\n                  :mod (o4 / other)))\n      :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n      :time (n3 / now))"], "tree": ["(s / sleep-01\n   :ARG0 (w / woman)\n   :location (o / outdoors))", "(s / sleep-01\n   :ARG0 (g / girl\n            :quant 425\n            :mod (y / young)))", "(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\")))", "(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\"))\n   :location (o / outdoors))", "(s / sleep-01\n   :ARG0 (g / girl\n            :quant 425\n            :mod (y / young))\n   :location (o / outdoors)\n   :location o)", "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (w / woman)\n            :location (o / outdoors)))", "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n            :location (o / outdoors)))", "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (g / girl\n                     :quant 425\n                     :mod (y / young))\n            :location (o / outdoors)\n            :location o))", "(s / sleep-01\n   :ARG0 (a2 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n             :op2 (w / woman)\n             :op3 (g / girl)\n             :quant 425\n             :mod (y / young)))", "(s / sleep-01\n   :ARG0 (a2 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n             :op2 (w / woman)\n             :op3 (g / girl)\n             :quant 425\n             :mod (y / young))\n   :location (o / outdoors))", "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (a2 / and\n                      :op1 (p / person\n                              :name (n / name\n                                       :op1 \"Anuradha\"\n                                       :op2 \"Koirala\"))\n                      :op2 (w / woman)\n                      :op3 (g / girl)\n                      :quant 425\n                      :mod (y / young))\n            :location (o / outdoors)))", "(e / evacuate-01\n   :ARG2 (c3 / child\n             :quant 45\n             :ARG1 (r / reside-01\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\")))", "(f / force-01\n   :ARG1 (c / child\n            :quant 45\n            :ARG1 (c2 / care-03\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))", "(e / evacuate-01\n   :ARG2 (a2 / and\n             :op1 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))\n             :op2 (c3 / child\n                      :quant 45\n                      :ARG1 (r / reside-01\n                               :ARG0 p))))", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG2 p))", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG2 p))", "(f / force-01\n   :ARG1 (c / child\n            :quant 45\n            :ARG1 (c2 / care-03\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))\n   :ARG2 (e / evacuate-01\n            :ARG2 p)\n   :ARG2 e)", "(f / force-01\n   :ARG1 (c / child\n            :quant 45\n            :ARG1 (c2 / care-03\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))\n   :ARG2 (e / evacuate-01\n            :ARG2 p)\n   :ARG2 e)", "(f / force-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Pushpa\"\n                             :op2 \"Basnet\"))\n            :op2 (c / child\n                    :quant 45\n                    :ARG1 (c2 / care-03\n                              :ARG0 p))))", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG2 (c3 / child\n                      :quant 45\n                      :ARG1 (r / reside-01\n                               :ARG0 p))))", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG2 (c3 / child\n                      :quant 45\n                      :ARG1 (r / reside-01\n                               :ARG0 p))))", "(f / force-01\n   :ARG1 (c / child\n            :quant 45\n            :ARG1 (c2 / care-03\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))\n   :ARG2 (e / evacuate-01\n            :ARG2 (c3 / child\n                      :quant 45\n                      :ARG1 (r / reside-01\n                               :ARG0 p)))\n   :ARG2 e)", "(f / force-01\n   :ARG1 (c / child\n            :quant 45\n            :ARG1 (c2 / care-03\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))\n   :ARG2 (e / evacuate-01\n            :ARG2 (c3 / child\n                      :quant 45\n                      :ARG1 (r / reside-01\n                               :ARG0 p)))\n   :ARG2 e)", "(f / force-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Pushpa\"\n                             :op2 \"Basnet\"))\n            :op2 (c / child\n                    :quant 45\n                    :ARG1 (c2 / care-03\n                              :ARG0 p)))\n   :ARG2 (e / evacuate-01\n            :ARG2 (a2 / and\n                      :op1 p\n                      :op2 (c3 / child\n                               :quant 45\n                               :ARG1 (r / reside-01\n                                        :ARG0 p)))))", "(f / force-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Pushpa\"\n                             :op2 \"Basnet\"))\n            :op2 (c / child\n                    :quant 45\n                    :ARG1 (c2 / care-03\n                              :ARG0 p)))\n   :ARG2 (e / evacuate-01\n            :ARG2 (a2 / and\n                      :op1 p\n                      :op2 (c3 / child\n                               :quant 45\n                               :ARG1 (r / reside-01\n                                        :ARG0 p)))))", "(a / assist-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"CNN\"\n                     :op2 \"Heroes\")\n            :quant 7\n            :mod (o2 / other)))", "(a / assist-01\n   :ARG0 (o3 / organization\n             :name (n2 / name\n                       :op1 \"CNN\"\n                       :op2 \"Heroes\")\n             :quant 7\n             :mod (o4 / other)))", "(a / assist-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"CNN\"\n                     :op2 \"Heroes\")\n            :quant 7\n            :mod (o2 / other))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))", "(a / assist-01\n   :ARG0 (o3 / organization\n             :name (n2 / name\n                       :op1 \"CNN\"\n                       :op2 \"Heroes\")\n             :quant 7\n             :mod (o4 / other))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :ARG2 e)", "(a / assist-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"CNN\"\n                     :op2 \"Heroes\")\n            :quant 7\n            :mod (o2 / other))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :time (n3 / now))", "(a / assist-01\n   :ARG0 (o3 / organization\n             :name (n2 / name\n                       :op1 \"CNN\"\n                       :op2 \"Heroes\")\n             :quant 7\n             :mod (o4 / other))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :ARG2 e\n   :time (n3 / now))", "(a / assist-01\n   :ARG0 (a2 / and\n             :op1 (o / organization\n                     :name (n / name\n                              :op1 \"CNN\"\n                              :op2 \"Heroes\")\n                     :quant 7\n                     :mod (o2 / other))\n             :op2 (o3 / organization\n                      :name (n2 / name\n                                :op1 \"CNN\"\n                                :op2 \"Heroes\")\n                      :quant 7\n                      :mod (o4 / other))))", "(a / assist-01\n   :ARG0 (a2 / and\n             :op1 (o / organization\n                     :name (n / name\n                              :op1 \"CNN\"\n                              :op2 \"Heroes\")\n                     :quant 7\n                     :mod (o2 / other))\n             :op2 (o3 / organization\n                      :name (n2 / name\n                                :op1 \"CNN\"\n                                :op2 \"Heroes\")\n                      :quant 7\n                      :mod (o4 / other)))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))", "(a / assist-01\n   :ARG0 (a2 / and\n             :op1 (o / organization\n                     :name (n / name\n                              :op1 \"CNN\"\n                              :op2 \"Heroes\")\n                     :quant 7\n                     :mod (o2 / other))\n             :op2 (o3 / organization\n                      :name (n2 / name\n                                :op1 \"CNN\"\n                                :op2 \"Heroes\")\n                      :quant 7\n                      :mod (o4 / other)))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :time (n3 / now))"], "smus": ["Women sleeping outdoors.", "425 young girls are sleeping.", "Anuradha Koirala is sleeping.", "Anuradha koirala is sleeping outdoors.", "425 young girls are sleeping outdoors in the backyard.", "The aftershocks caused the women to be sleeping outdoors.", "Anuradha koirala was sleeping outdoors because of the aftershocks.", "Aftershocks caused 425 young girls to be sleeping outdoors.", "Anuradha Koirala, 425 young women and girls are sleeping.", "Anuradha Koirala, 425 young women and girls are sleeping outdoors.", "Anuradha Koirala, 425 young women and girls are sleeping outdoors because of the aftershocks.", "45 children from Pushpa Basnet's residence were evacuated.", "Pushpa Basnet was forced.", "45 children are forced to take care of Pushpa Basnet.", "Pushpa Basnet and 45 children from his residence were evacuated.", "Pushpa Basnet was forced to evacuate.", "Pushpa Basnet was forced to evacuate.", "45 children who care for Pushpa Basnet are forced to evacuate.", "45 children who care for Pushpa Basnet are forced to evacuate.", "Pushpa Basnet and 45 children who she cares for are forced.", "Pushpa Basnet was forced to evacuate 45 children from his residence.", "Pushpa Basnet was forced to evacuate 45 children from his residence.", "45 children whose care is being forced to evacuate their residence by Pushpa Basnet were among them.", "45 children whose care is being forced to evacuate their residence by Pushpa Basnet were among them.", "Pushpa Basnet and 45 children she cares for were forced to evacuate and 45 children from her residence.", "Pushpa Basnet and 45 children she cares for were forced to evacuate and 45 children from her residence.", "7 other CNN heroes are assisting.", "7 other CNN heroes are assisting.", "7 other CNN heroes are assisting in relief efforts.", "7 other CNN heroes are assisting in relief efforts.", "Seven other CNN heroes are now assisting in relief efforts.", "Seven other CNN heroes are now assisting in relief efforts.", "7 other CNN Heroes and 7 other CNN Heroes are assisting.", "7 other CNN heroes and 7 other CNN heroes are assisting in relief efforts.", "Seven other CNN heroes and seven other CNN heroes are now assisting in relief efforts."]}, {"instance_id": "realsumm-1", "summary": "Students from the University of Surrey discovered thousands of colonies . Students from the University of Surrey submerged coins and notes in agar to accelerate growth pf bacteria . Most were harmless on coins , but one caused boils and spots . Previous studies have revealed MRSA bacteria on notes and coins .", "summary_trees": ["# ::snt Students from the University of Surrey discovered thousands of colonies .\n(d / discover-01\n      :ARG0 (p / person\n            :ARG0-of (s / study-01)\n            :source (u / university\n                  :name (n / name\n                        :op1 \"University\"\n                        :op2 \"of\"\n                        :op3 \"Surrey\")))\n      :ARG1 (c / colony\n            :quant (m / multiple\n                  :op1 1000)))", "# ::snt Students from the University of Surrey submerged coins and notes in agar to accelerate growth pf bacteria .\n(s / submerge-01\n      :ARG0 (p / person\n            :ARG0-of (s2 / study-01)\n            :source (u / university\n                  :name (n / name\n                        :op1 \"University\"\n                        :op2 \"of\"\n                        :op3 \"Surrey\")))\n      :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n2 / note))\n      :ARG2 (a2 / agar)\n      :purpose (a3 / accelerate-01\n            :ARG0 p\n            :ARG1 (g / grow-03\n                  :ARG1 (b / bacterium\n                        :name (n3 / name\n                              :op1 \"Pf\")))))", "# ::snt Most were harmless on coins , but one caused boils and spots .\n(c / contrast-01\n      :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most\n                  :location (c2 / coin)))\n      :ARG2 (c3 / cause-01\n            :ARG0 (o / one)\n            :ARG1 (a / and\n                  :op1 (b / boil-01)\n                  :op2 (s / spot))))", "# ::snt Previous studies have revealed MRSA bacteria on notes and coins .\n(r / reveal-01\n      :ARG0 (s / study-01\n            :time (p / previous))\n      :ARG1 (b / bacterium\n            :mod (d / disease\n                  :name (n / name\n                        :op1 \"MRSA\"))\n            :location (a / and\n                  :op1 (n2 / note)\n                  :op2 (c / coin))))"], "tree": ["(d / discover-01\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))", "(d / discover-01\n   :ARG0 (p / person\n            :ARG0 (s / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))", "(d / discover-01\n   :ARG0 (p / person\n            :ARG0 (s / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))", "(g / grow-03\n   :ARG1 (b / bacterium\n            :name (n3 / name\n                      :op1 \"Pf\")))", "(g / grow-03\n   :ARG1 (b / bacterium\n            :name (n3 / name\n                      :op1 \"Pf\")))", "(a3 / accelerate-01\n    :ARG0 (p / person)\n    :ARG1 (g / grow-03\n             :ARG1 (b / bacterium\n                      :name (n3 / name\n                                :op1 \"Pf\"))))", "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (c / coin)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 p\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n3 / name\n                                            :op1 \"Pf\")))))", "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (n2 / note)\n   :ARG2 (a2 / agar)\n   :ARG2 a2\n   :purpose (a3 / accelerate-01\n                :ARG0 p\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n3 / name\n                                            :op1 \"Pf\")))))", "(s / submerge-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n2 / note))\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 p\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n3 / name\n                                            :op1 \"Pf\")))))", "(c3 / cause-01\n    :ARG0 (o / one)\n    :ARG1 (b / boil-01))", "(c3 / cause-01\n    :ARG0 (o / one)\n    :ARG1 (s / spot))", "(h / harmful-02\n   :polarity -\n   :ARG0 (m / most\n            :location (c2 / coin)))", "(c3 / cause-01\n    :ARG0 (o / one)\n    :ARG1 (a / and\n             :op1 (b / boil-01)\n             :op2 (s / spot)))", "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most\n                     :location (c2 / coin)))\n   :ARG2 (c3 / cause-01\n             :ARG0 (o / one)\n             :ARG1 (b / boil-01)))", "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most\n                     :location (c2 / coin)))\n   :ARG2 (c3 / cause-01\n             :ARG0 (o / one)\n             :ARG1 (s / spot)))", "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most\n                     :location (c2 / coin)))\n   :ARG2 (c3 / cause-01\n             :ARG0 (o / one)\n             :ARG1 (a / and\n                      :op1 (b / boil-01)\n                      :op2 (s / spot))))", "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (n2 / note)))", "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (c / coin)))", "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (a / and\n                         :op1 (n2 / note)\n                         :op2 (c / coin))))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (n2 / note)))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (c / coin)))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (n2 / note)))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (c / coin)))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (a / and\n                         :op1 (n2 / note)\n                         :op2 (c / coin))))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (a / and\n                         :op1 (n2 / note)\n                         :op2 (c / coin))))"], "smus": ["Thousands of colonies were discovered.", "Students from the University of Surrey discovered thousands of colonies.", "Students from the University of Surrey discovered thousands of colonies.", "Pf growth", "Pf growth", "People will accelerate the growth of Pf bacteria.", "Students from the University of Surrey submerged coins in the agar to accelerate the growth of Pf bacteria.", "Students from the University of Surrey submerged notes in the agar to accelerate the growth of Pf bacteria.", "Students from the University of Surrey submerged coins and notes in the agar to accelerate the growth of Pf bacteria.", "One caused boils.", "One caused the spots.", "Most on the coins aren't harmful.", "One caused boils and spots.", "Most on the coins aren't harmful, but one caused boils.", "Most on the coins aren't harmful, but one caused the spots.", "Most on the coins aren't harmful, but one caused boils and spots.", "The MRSA bacteria were revealed on the notes.", "The MRSA bacteria in the coins has been revealed.", "MRSA bacteria have been revealed on notes and coins.", "Previous studies have revealed MRSA bacteria on the notes.", "Previous studies have revealed MRSA bacteria in coins.", "Previous studies have revealed MRSA bacteria on the notes.", "Previous studies have revealed MRSA bacteria in coins.", "Previous studies have revealed MRSA bacteria on notes and coins.", "Previous studies have revealed MRSA bacteria on notes and coins."]}, {"instance_id": "realsumm-2", "summary": "Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million . join will take total raised from player sales to \u00a3 440 m since 2004 . James Rodriguez , Pepe and Radamel Falcao among those sold by Porto . CLICK HERE for all the latest Real Madrid news .", "summary_trees": ["# ::snt Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million .\n(a / agree-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Danilo\"))\n      :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                  :name (n2 / name\n                        :op1 \"Real\"\n                        :op2 \"Madrid\"))\n            :time (d / date-entity\n                  :season (s / summer))\n            :prep-for (m / monetary-quantity\n                  :quant 23000000\n                  :unit (p2 / pound)))\n      :time (w / week\n            :mod (t2 / this)))", "# ::snt join will take total raised from player sales to \u00a3 440 m since 2004 .\n(t / take-01\n      :ARG0 (j / join-01)\n      :ARG1 (m / monetary-quantity\n            :ARG1-of (r / raise-01\n                  :ARG3 (s / sell-01\n                        :ARG0 (p / person\n                              :ARG0-of (p2 / play-01))))\n            :ARG2-of (t2 / total-01))\n      :ARG3 (m2 / monetary-quantity\n            :quant 440000000\n            :unit (p3 / pound))\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :year 2004)))", "# ::snt James Rodriguez , Pepe and Radamel Falcao among those sold by Porto .\n(ii / include-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"Rodriguez\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Pepe\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\")))\n      :ARG2 (t / that\n            :ARG1-of (s / sell-01\n                  :ARG0 (t2 / team\n                        :name (n4 / name\n                              :op1 \"Porto\")))))", "# ::snt CLICK HERE for all the latest Real Madrid news .\n(c / click-01\n      :location (h / here)\n      :purpose (n / news\n            :mod (a / all)\n            :topic (t / team\n                  :name (n2 / name\n                        :op1 \"Real\"\n                        :op2 \"Madrid\"))\n            :mod (l / last)))"], "tree": ["(a / agree-01\n   :time (w / week\n            :mod (t2 / this)))", "(j / join-04\n   :time (d / date-entity\n            :season (s / summer)))", "(a / agree-01\n   :time (w / week\n            :mod (t2 / this)))", "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\")))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\")))", "(j / join-04\n   :time (d / date-entity\n            :season (s / summer))\n   :prep-for (m / monetary-quantity\n                :quant 23000000\n                :unit (p2 / pound)))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :time (d / date-entity\n            :season (s / summer)))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :time (d / date-entity\n            :season (s / summer))\n   :prep-for (m / monetary-quantity\n                :quant 23000000\n                :unit (p2 / pound)))", "(a / agree-01\n   :ARG1 (j / join-04\n            :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))\n            :time (d / date-entity\n                     :season (s / summer))\n            :prep-for (m / monetary-quantity\n                         :quant 23000000\n                         :unit (p2 / pound))))", "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))\n            :time (d / date-entity\n                     :season (s / summer))\n            :prep-for (m / monetary-quantity\n                         :quant 23000000\n                         :unit (p2 / pound))))", "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))\n            :time (d / date-entity\n                     :season (s / summer))\n            :prep-for (m / monetary-quantity\n                         :quant 23000000\n                         :unit (p2 / pound)))\n   :time (w / week\n            :mod (t2 / this)))", "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))\n            :time (d / date-entity\n                     :season (s / summer))\n            :prep-for (m / monetary-quantity\n                         :quant 23000000\n                         :unit (p2 / pound)))\n   :time (w / week\n            :mod (t2 / this)))", "(s / sell-01\n   :ARG0 (p / person\n            :ARG0 (p2 / play-01)))", "(s / sell-01\n   :ARG0 (p / person\n            :ARG0 (p2 / play-01)))", "(t / take-01\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))", "(t / take-01\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))", "(r / raise-01\n   :ARG3 (s / sell-01\n            :ARG0 (p / person\n                     :ARG0 (p2 / play-01))))", "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG0 (p / person\n                                       :ARG0 (p2 / play-01))))\n            :ARG2 (t2 / total-01)))", "(t / take-01\n   :ARG0 (j / join-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG0 (p / person\n                                       :ARG0 (p2 / play-01))))\n            :ARG2 (t2 / total-01)))", "(t / take-01\n   :ARG0 (j / join-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG0 (p / person\n                                       :ARG0 (p2 / play-01))))\n            :ARG2 (t2 / total-01))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))", "(t / take-01\n   :ARG0 (j / join-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG0 (p / person\n                                       :ARG0 (p2 / play-01))))\n            :ARG2 (t2 / total-01))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000\n             :unit (p3 / pound))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))", "(s / sell-01\n   :ARG0 (t2 / team\n             :name (n4 / name\n                       :op1 \"Porto\")))", "(s / sell-01\n   :ARG0 (t2 / team\n             :name (n4 / name\n                       :op1 \"Porto\")))", "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Pepe\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Pepe\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"James\"\n                      :op2 \"Rodriguez\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"James\"\n                      :op2 \"Rodriguez\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\"))))\n    :ARG2 t)", "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\"))))\n    :ARG2 t)", "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"James\"\n                              :op2 \"Rodriguez\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Pepe\"))\n             :op3 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Radamel\"\n                                :op2 \"Falcao\")))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"James\"\n                              :op2 \"Rodriguez\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Pepe\"))\n             :op3 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Radamel\"\n                                :op2 \"Falcao\")))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (a / all)\n               :topic (t / team\n                         :name (n2 / name\n                                   :op1 \"Real\"\n                                   :op2 \"Madrid\"))\n               :mod (l / last)))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (a / all)\n               :topic (t / team\n                         :name (n2 / name\n                                   :op1 \"Real\"\n                                   :op2 \"Madrid\"))\n               :mod (l / last)))"], "smus": ["This week agreed.", "Join in summer.", "This week agreed.", "Danilo agreed.", "Danilo will join Real Madrid.", "Join in summer for PS23million.", "Danilo will join Real Madrid in the summer.", "Danilo will join Real Madrid in the summer for PS23million.", "Danilo agreed to join Real Madrid for PS23million in the summer.", "Danilo agreed to join Real Madrid for PS23million this summer.", "Danilo agreed this week to join Real Madrid for PS23million this summer.", "Danilo agreed this week to join Real Madrid for PS23million this summer.", "The player sold.", "The player sold.", "Take since 2004.", "Take since 2004.", "The sale was raised by the player.", "Take the total raised from the player's sales.", "Join will take the total raised from the player's sales.", "Join will take the total raised from the player's sales since 2004.", "Join will take the total raised from the player's sales to PS44million since 2004.", "Porto have sold.", "Porto have sold.", "Pepe was one of those Porto have sold.", "Pepe was one of those Porto have sold.", "James Rodriguez was one of those sold by Porto.", "James Rodriguez was one of those sold by Porto.", "Radamel Falcao was one of those sold by Porto.", "Radamel Falcao was one of those sold by Porto.", "That Porto has sold is James Rodriguez, Pepe and Radamel Falcao.", "That Porto has sold is James Rodriguez, Pepe and Radamel Falcao.", "Here's the latest Real Madrid news: click here", "Here's the latest Real Madrid news: click here"]}, {"instance_id": "realsumm-3", "summary": "Dominatrix claims Dominatrix shared a ' hot , deep kiss ' with Prince Harry in Vegas . Dominatrix said Dominatrix felt overdressed after seeing Prince Harry ' cute naked a * * ' Dominatrix made claims in an excerpt from Dominatrix upcoming book . Kensington Palace has previously denied Dominatrix was invited to the hotel suite .", "summary_trees": ["# ::snt Dominatrix claims Dominatrix shared a ' hot , deep kiss ' with Prince Harry in Vegas .\n(c / claim-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dominatrix\"))\n      :ARG1 (s / share-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Prince\"\n                              :op2 \"Harry\"))\n                  :ARG1-of (h / hot-05)\n                  :ARG1-of (d / deep-03))\n            :ARG2 p2\n            :location (c2 / city\n                  :name (n3 / name\n                        :op1 \"Vegas\"))))", "# ::snt Dominatrix said Dominatrix felt overdressed after seeing Prince Harry ' cute naked a * * ' Dominatrix made claims in an excerpt from Dominatrix upcoming book .\n(m / multi-sentence\n      :snt1 (s / say-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Dominatrix\"))\n            :ARG1 (f / feel-01\n                  :ARG0 p\n                  :ARG1 (o / overdress-01\n                        :ARG1 p)\n                  :time (a / after\n                        :op1 (s2 / see-01\n                              :ARG0 p\n                              :ARG1 (n2 / naked\n                                    :domain (p2 / person\n                                          :name (n3 / name\n                                                :op1 \"Prince\"\n                                                :op2 \"Harry\"))\n                                    :mod (c / cute))))))\n      :snt2 (c2 / claim-01\n            :ARG0 p\n            :medium (e / excerpt-01\n                  :ARG2 (b / book\n                        :ARG1-of (c3 / come-up-11)\n                        :poss p))))", "# ::snt Kensington Palace has previously denied Dominatrix was invited to the hotel suite .\n(d / deny-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Kensington\"\n                  :op2 \"Palace\"))\n      :ARG1 (ii / invite-01\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 \"Dominatrix\"))\n            :ARG2 (s / suite\n                  :location (h / hotel)))\n      :time (p2 / previous))"], "tree": ["(k / kiss-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Prince\"\n                       :op2 \"Harry\"))\n   :ARG1 (h / hot-05)\n   :ARG1 (d / deep-03))", "(s / share-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\"))\n            :ARG1 (h / hot-05)\n            :ARG1 (d / deep-03))\n   :ARG2 p2\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))", "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                     :ARG0 p\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Prince\"\n                                         :op2 \"Harry\"))\n                     :ARG1 (h / hot-05)\n                     :ARG1 (d / deep-03))\n            :ARG2 p2\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Vegas\"))))", "(f / feel-01\n   :time (a / after\n            :op1 (s2 / see-01)))", "(e / excerpt-01\n   :ARG2 (b / book\n            :ARG1 (c3 / come-up-11)\n            :poss (p / person :name (n / name :op1 \"Dominatrix\"))))", "(c2 / claim-01\n    :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n    :medium (e / excerpt-01\n               :ARG2 (b / book\n                        :ARG1 (c3 / come-up-11)\n                        :poss p)))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n    :ARG1 (n2 / naked\n              :domain (p2 / person\n                          :name (n3 / name\n                                    :op1 \"Prince\"\n                                    :op2 \"Harry\"))\n              :mod (c / cute)))", "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (o / overdress-01\n            :ARG1 p)\n   :time (a / after\n            :op1 (s2 / see-01\n                     :ARG0 p\n                     :ARG1 (n2 / naked\n                               :domain (p2 / person\n                                           :name (n3 / name\n                                                     :op1 \"Prince\"\n                                                     :op2 \"Harry\"))\n                               :mod (c / cute)))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (f / feel-01\n            :ARG0 p\n            :ARG1 (o / overdress-01\n                     :ARG1 p)\n            :time (a / after\n                     :op1 (s2 / see-01\n                              :ARG0 p\n                              :ARG1 (n2 / naked\n                                        :domain (p2 / person\n                                                    :name (n3 / name\n                                                              :op1 \"Prince\"\n                                                              :op2 \"Harry\"))\n                                        :mod (c / cute))))))", "(ii / invite-01\n    :ARG1 (p / person\n             :name (n2 / name\n                       :op1 \"Dominatrix\")))", "(ii / invite-01\n    :ARG1 (p / person\n             :name (n2 / name\n                       :op1 \"Dominatrix\"))\n    :ARG2 (s / suite\n             :location (h / hotel)))", "(ii / invite-01\n    :ARG1 (p / person\n             :name (n2 / name\n                       :op1 \"Dominatrix\"))\n    :ARG2 (s / suite\n             :location (h / hotel)))", "(d / deny-01\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Dominatrix\"))\n             :ARG2 (s / suite\n                      :location (h / hotel))))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Dominatrix\"))\n             :ARG2 (s / suite\n                      :location (h / hotel))))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Dominatrix\"))\n             :ARG2 (s / suite\n                      :location (h / hotel)))\n   :time (p2 / previous))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Dominatrix\"))\n             :ARG2 (s / suite\n                      :location (h / hotel)))\n   :time (p2 / previous))"], "smus": ["Dominatrix gave Prince Harry a hot, deep kiss.", "Dominatrix shared a hot deep kiss with Prince Harry in Vegas.", "Dominatrix claims she shared a hot, deep kiss with Prince Harry in Vegas.", "Feeling after seeing.", "Excerpt from dominatrix's book \"Come Up\":", "In an excerpt from his book \"Come Up,\" dominatrix claims:", "Dominatrix is seeing Prince Harry as cute and naked.", "After seeing Prince Harry as cute and naked, dominatrix felt overdressed.", "Dominatrix said she felt overdressed after seeing how cute Prince Harry was.", "a href=\"http://www.dominatrix.com/news/2011/03/dominatrix-invite-us\">Dominatrix - Invited/a>", "Dominatrix was invited to a hotel suite.", "Dominatrix was invited to a hotel suite.", "The invitation to dominatrix to a hotel suite was denied.", "The Kensington Palace has denied that dominatrix was invited to a hotel suite.", "The Kensington Palace had previously denied that dominatrix had been invited to a hotel suite.", "The Kensington Palace had previously denied that dominatrix had been invited to a hotel suite."]}, {"instance_id": "realsumm-4", "summary": "Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment . Referred to Eva Chapin , 34 , from West Linn , Oregon , neighbors as ' n * * * * * ' but insists Eva Chapin , 34 , from West Linn , Oregon , is not racist . One note said : ' There were no [ expletive ] in West Linn , Oregon until Eva Chapin , 34 , from West Linn , Oregon , came ' . Eva Chapin , 34 , from West Linn , Oregon , has said Eva Chapin , 34 , from West Linn , Oregon , family may be forced to move as her family do n't feel safe .", "summary_trees": ["# ::snt Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment .\n(a / accuse-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Eva\"\n                  :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                  :quant 34\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Oregon\"))))\n      :ARG2 (h / harass-01\n            :ARG0 p))", "# ::snt Referred to Eva Chapin , 34 , from West Linn , Oregon , neighbors as ' n *\n(r / refer-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Eva\"\n                  :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                  :quant 34\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Oregon\")))\n            :ARG1-of (n4 / neighbor-01)))", "# ::snt * * * * '\n(a / amr-empty)", "# ::snt but insists Eva Chapin , 34 , from West Linn , Oregon , is not racist .\n(c / contrast-01\n      :ARG2 (ii / insist-01\n            :ARG1 (r / racist\n                  :polarity -\n                  :domain (p / person\n                        :name (n / name\n                              :op1 \"Eva\"\n                              :op2 \"Chapin\")\n                        :age (t / temporal-quantity\n                              :quant 34\n                              :unit (y / year))\n                        :source (c2 / city\n                              :name (n2 / name\n                                    :op1 \"West\"\n                                    :op2 \"Linn\")\n                              :location (s / state\n                                    :name (n3 / name\n                                          :op1 \"Oregon\")))))))", "# ::snt One note said : ' There were no [ expletive ] in West Linn , Oregon until Eva Chapin , 34 , from West Linn , Oregon , came ' .\n(s / say-01\n      :ARG0 (n / note\n            :quant 1)\n      :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                  :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n                  :location (s2 / state\n                        :name (n3 / name\n                              :op1 \"Oregon\")))\n            :time (u / until\n                  :op1 (c2 / come-01\n                        :ARG1 (p / person\n                              :name (n4 / name\n                                    :op1 \"Eva\"\n                                    :op2 \"Chapin\")\n                              :age (t / temporal-quantity\n                                    :quant 34\n                                    :unit (y / year))\n                              :source c)))))", "# ::snt Eva Chapin , 34 , from West Linn , Oregon , has said Eva Chapin , 34 , from West Linn , Oregon , family may be forced to move as her family do n't feel safe .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Eva\"\n                  :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                  :quant 34\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n                  :location (s2 / state\n                        :name (n3 / name\n                              :op1 \"Oregon\"))))\n      :ARG1 (p2 / possible-01\n            :ARG1 (f / force-01\n                  :ARG1 (f2 / family)\n                  :ARG2 (m / move-01\n                        :ARG1 f2)\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (f3 / feel-01\n                              :polarity -\n                              :ARG0 (f4 / family\n                                    :ARG1-of (h / have-org-role-91\n                                          :ARG0 p\n                                          :ARG2 (m2 / member)))\n                              :ARG1 (s3 / safe-01\n                                    :ARG1 f4))))))"], "tree": ["(a / accuse-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s / state\n                                    :name (n3 / name\n                                              :op1 \"Oregon\"))))\n   :ARG2 (h / harass-01\n            :ARG0 p))", "(a / accuse-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s / state\n                                    :name (n3 / name\n                                              :op1 \"Oregon\"))))\n   :ARG2 (h / harass-01\n            :ARG0 p))", "(r / refer-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s / state\n                                    :name (n3 / name\n                                              :op1 \"Oregon\")))\n            :ARG1 (n4 / neighbor-01)))", "(a / amr-empty)", "(ii / insist-01\n    :ARG1 (r / racist\n             :polarity -\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Eva\"\n                                 :op2 \"Chapin\")\n                        :age (t / temporal-quantity\n                                :quant 34\n                                :unit (y / year))\n                        :source (c2 / city\n                                    :name (n2 / name\n                                              :op1 \"West\"\n                                              :op2 \"Linn\")\n                                    :location (s / state\n                                                 :name (n3 / name\n                                                           :op1 \"Oregon\"))))))", "(c / contrast-01\n   :ARG2 (ii / insist-01\n             :ARG1 (r / racist\n                      :polarity -\n                      :domain (p / person\n                                 :name (n / name\n                                          :op1 \"Eva\"\n                                          :op2 \"Chapin\")\n                                 :age (t / temporal-quantity\n                                         :quant 34\n                                         :unit (y / year))\n                                 :source (c2 / city\n                                             :name (n2 / name\n                                                       :op1 \"West\"\n                                                       :op2 \"Linn\")\n                                             :location (s / state\n                                                          :name (n3 / name\n                                                                    :op1 \"Oregon\")))))))", "(b / be-located-at-91\n   :polarity -\n   :time (u / until\n            :op1 (c2 / come-01)))", "(c2 / come-01\n    :ARG1 (p / person\n             :name (n4 / name\n                       :op1 \"Eva\"\n                       :op2 \"Chapin\")\n             :age (t / temporal-quantity\n                     :quant 34\n                     :unit (y / year))\n             :source (c / city :name (n2 / name :op1 \"West\" :op2 \"Linn\")))))", "(c2 / come-01\n    :ARG1 (p / person\n             :name (n4 / name\n                       :op1 \"Eva\"\n                       :op2 \"Chapin\")\n             :age (t / temporal-quantity\n                     :quant 34\n                     :unit (y / year))\n             :source (c / city :name (n2 / name :op1 \"West\" :op2 \"Linn\")))))", "(b / be-located-at-91\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"West\"\n                      :op2 \"Linn\")\n            :location (s2 / state\n                          :name (n3 / name\n                                    :op1 \"Oregon\"))))", "(b / be-located-at-91\n   :polarity -\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"West\"\n                      :op2 \"Linn\")\n            :location (s2 / state\n                          :name (n3 / name\n                                    :op1 \"Oregon\")))\n   :time (u / until\n            :op1 (c2 / come-01\n                     :ARG1 (p / person\n                              :name (n4 / name\n                                        :op1 \"Eva\"\n                                        :op2 \"Chapin\")\n                              :age (t / temporal-quantity\n                                      :quant 34\n                                      :unit (y / year))\n                              :source c))))", "(s / say-01\n   :ARG0 (n / note\n            :quant 1)\n   :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                     :name (n2 / name\n                               :op1 \"West\"\n                               :op2 \"Linn\")\n                     :location (s2 / state\n                                   :name (n3 / name\n                                             :op1 \"Oregon\")))\n            :time (u / until\n                     :op1 (c2 / come-01\n                              :ARG1 (p / person\n                                       :name (n4 / name\n                                                 :op1 \"Eva\"\n                                                 :op2 \"Chapin\")\n                                       :age (t / temporal-quantity\n                                               :quant 34\n                                               :unit (y / year))\n                                       :source c)))))", "(s / say-01\n   :ARG0 (n / note\n            :quant 1)\n   :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                     :name (n2 / name\n                               :op1 \"West\"\n                               :op2 \"Linn\")\n                     :location (s2 / state\n                                   :name (n3 / name\n                                             :op1 \"Oregon\")))\n            :time (u / until\n                     :op1 (c2 / come-01\n                              :ARG1 (p / person\n                                       :name (n4 / name\n                                                 :op1 \"Eva\"\n                                                 :op2 \"Chapin\")\n                                       :age (t / temporal-quantity\n                                               :quant 34\n                                               :unit (y / year))\n                                       :source c)))))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n   :ARG2 (m2 / member))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n   :ARG2 (m2 / member))", "(f / force-01\n   :ARG1 (f2 / family)\n   :ARG2 (m / move-01\n            :ARG1 f2))", "(f3 / feel-01\n    :ARG0 (f4 / family\n              :ARG1 (h / have-org-role-91\n                       :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                       :ARG2 (m2 / member)))\n    :ARG1 (s3 / safe-01\n              :ARG1 f4))", "(f3 / feel-01\n    :polarity -\n    :ARG0 (f4 / family\n              :ARG1 (h / have-org-role-91\n                       :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                       :ARG2 (m2 / member)))\n    :ARG1 (s3 / safe-01\n              :ARG1 f4))", "(f3 / feel-01\n    :polarity -\n    :ARG0 (f4 / family\n              :ARG1 (h / have-org-role-91\n                       :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                       :ARG2 (m2 / member)))\n    :ARG1 (s3 / safe-01\n              :ARG1 f4))", "(c2 / cause-01\n    :ARG0 (f3 / feel-01\n              :polarity -\n              :ARG0 (f4 / family\n                        :ARG1 (h / have-org-role-91\n                                 :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                                 :ARG2 (m2 / member)))\n              :ARG1 (s3 / safe-01\n                        :ARG1 f4)))", "(f / force-01\n   :ARG1 (f2 / family)\n   :ARG2 (m / move-01\n            :ARG1 f2)\n   :ARG1 (c2 / cause-01\n             :ARG0 (f3 / feel-01\n                       :polarity -\n                       :ARG0 (f4 / family\n                                 :ARG1 (h / have-org-role-91\n                                          :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                                          :ARG2 (m2 / member)))\n                       :ARG1 (s3 / safe-01\n                                 :ARG1 f4))))", "(p2 / possible-01\n    :ARG1 (f / force-01\n             :ARG1 (f2 / family)\n             :ARG2 (m / move-01\n                      :ARG1 f2)\n             :ARG1 (c2 / cause-01\n                       :ARG0 (f3 / feel-01\n                                 :polarity -\n                                 :ARG0 (f4 / family\n                                           :ARG1 (h / have-org-role-91\n                                                    :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                                                    :ARG2 (m2 / member)))\n                                 :ARG1 (s3 / safe-01\n                                           :ARG1 f4)))))", "(p2 / possible-01\n    :ARG1 (f / force-01\n             :ARG1 (f2 / family)\n             :ARG2 (m / move-01\n                      :ARG1 f2)\n             :ARG1 (c2 / cause-01\n                       :ARG0 (f3 / feel-01\n                                 :polarity -\n                                 :ARG0 (f4 / family\n                                           :ARG1 (h / have-org-role-91\n                                                    :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\")))\n                                                    :ARG2 (m2 / member)))\n                                 :ARG1 (s3 / safe-01\n                                           :ARG1 f4)))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s2 / state\n                                     :name (n3 / name\n                                               :op1 \"Oregon\"))))\n   :ARG1 (p2 / possible-01\n             :ARG1 (f / force-01\n                      :ARG1 (f2 / family)\n                      :ARG2 (m / move-01\n                               :ARG1 f2)\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (f3 / feel-01\n                                          :polarity -\n                                          :ARG0 (f4 / family\n                                                    :ARG1 (h / have-org-role-91\n                                                             :ARG0 p\n                                                             :ARG2 (m2 / member)))\n                                          :ARG1 (s3 / safe-01\n                                                    :ARG1 f4))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s2 / state\n                                     :name (n3 / name\n                                               :op1 \"Oregon\"))))\n   :ARG1 (p2 / possible-01\n             :ARG1 (f / force-01\n                      :ARG1 (f2 / family)\n                      :ARG2 (m / move-01\n                               :ARG1 f2)\n                      :ARG1 (c2 / cause-01\n                                :ARG0 (f3 / feel-01\n                                          :polarity -\n                                          :ARG0 (f4 / family\n                                                    :ARG1 (h / have-org-role-91\n                                                             :ARG0 p\n                                                             :ARG2 (m2 / member)))\n                                          :ARG1 (s3 / safe-01\n                                                    :ARG1 f4))))))"], "smus": ["Eva Chapin, 34, of West Linn, Oregon, was accused of harassment.", "Eva Chapin, 34, of West Linn, Oregon, was accused of harassment.", "Eva Chapin, 34, of West Linn, Oregon, was referred to as \"neighbors.\"", "SetC-WP-01", "Eva Chapin, 34, of West Linn, Oregon insists she is not racist.", "But Eva Chapin, 34, of West Linn, Oregon, insists that she is not racist.", "There will be no until come.", "Eva Chapin, 34, of West Linn, came.", "Eva Chapin, 34, of West Linn, came.", "The expletive is in West Linn, Oregon.", "There was no expletive in West Linn, Oregon until 34-year-old Eva Chapin came from there.", "\"There was no expletive in West Linn, Oregon, until Eva Chapin, 34, came from there,\" the one note said.", "\"There was no expletive in West Linn, Oregon, until Eva Chapin, 34, came from there,\" the one note said.", "Eva Chapin is a member.", "Eva Chapin is a member.", "Family forced to move.", "Eva Chapin's family does feel safe.", "Eva Chapin's family doesn't feel safe.", "Eva Chapin's family doesn't feel safe.", "Because the family of Eva Chapin doesn't feel safe.", "The family was forced to move because the family of Eva Chapin doesn't feel safe.", "The family may be forced to move because the family of Eva Chapin doesn't feel safe.", "The family may be forced to move because the family of Eva Chapin doesn't feel safe.", "Eva Chapin, 34, of West Linn, Oregon, said the family may be forced to move because the family doesn't feel safe.", "Eva Chapin, 34, of West Linn, Oregon, said the family may be forced to move because the family doesn't feel safe."]}, {"instance_id": "realsumm-5", "summary": "Justin Rose finished joint runner - up at the Masters 2015 on 14 - under - par . Justin Rose final total has only been bettered six times at the Masters 2015 . Justin Rose hopes to build on Justin Rose display and take some big titles across the year . CLICK HERE for all the latest news and reaction following the Masters 2015 .", "summary_trees": ["# ::snt Justin Rose finished joint runner - up at the Masters 2015 on 14 - under - par .\n(f / finish-07\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Justin\"\n                  :op2 \"Rose\"))\n      :ARG2 (r / runner-up\n            :mod (j / joint))\n      :ARG3 (e / event\n            :name (n2 / name\n                  :op1 \"Masters\")\n            :time (d / date-entity\n                  :year 2015))\n      :manner (s / score-entity\n            :op1 14\n            :op2 (u / under\n                  :op1 (p2 / par))))", "# ::snt Justin Rose final total has only been bettered six times at the Masters 2015 .\n(b / best-01\n      :frequency 6\n      :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Justin\"\n                        :op2 \"Rose\")))\n      :mod (o / only)\n      :time (g / game\n            :name (n2 / name\n                  :op1 \"Masters\")\n            :time (d / date-entity\n                  :year 2015)))", "# ::snt Justin Rose hopes to build on Justin Rose display and take some big titles across the year .\n(h / hope-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Justin\"\n                  :op2 \"Rose\"))\n      :ARG1 (a / and\n            :op1 (b / build-01\n                  :ARG0 p\n                  :ARG2 (d / display-01\n                        :ARG0 p))\n            :op2 (t / take-01\n                  :ARG0 p\n                  :ARG1 (t2 / title\n                        :mod (b2 / big)\n                        :quant (s / some))\n                  :time (a2 / across\n                        :op1 (y / year)))))", "# ::snt CLICK HERE for all the latest news and reaction following the Masters 2015 .\n(c / click-01\n      :location (h / here)\n      :purpose (a / and\n            :op1 (n / news\n                  :mod (l / last))\n            :op2 (r / react-01)\n            :mod (a2 / all)\n            :ARG1-of (f / follow-01\n                  :ARG2 (e / event\n                        :name (n2 / name\n                              :op1 \"Masters\"\n                              :op2 \"Open\")\n                        :time (d / date-entity\n                              :year 2015)))))"], "tree": ["(f / finish-07\n   :manner (s / score-entity\n              :op1 14\n              :op2 (u / under\n                      :op1 (p2 / par))))", "(f / finish-07\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint)))", "(f / finish-07\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")\n            :time (d / date-entity\n                     :year 2015))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (u / under\n                      :op1 (p2 / par))))", "(b / best-01\n   :frequency 6\n   :mod (o / only)\n   :time (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")\n            :time (d / date-entity\n                     :year 2015)))", "(b / best-01\n   :frequency 6\n   :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Justin\"\n                              :op2 \"Rose\")))\n   :mod (o / only)\n   :time (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")\n            :time (d / date-entity\n                     :year 2015)))", "(b / build-01\n   :ARG0 (p / person :name (n / name :op1 \"Justin\" :op2 \"Rose\"))\n   :ARG2 (d / display-01\n            :ARG0 p))", "(t / take-01\n   :time (a2 / across\n             :op1 (y / year)))", "(t / take-01\n   :time (a2 / across\n             :op1 (y / year)))", "(t / take-01\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some)))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Justin\" :op2 \"Rose\"))\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some)))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Justin\" :op2 \"Rose\"))\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some))\n   :time (a2 / across\n             :op1 (y / year)))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Justin\" :op2 \"Rose\"))\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some))\n   :time (a2 / across\n             :op1 (y / year)))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG1 (b / build-01\n            :ARG0 p\n            :ARG2 (d / display-01\n                     :ARG0 p)))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG1 (b / build-01\n            :ARG0 p\n            :ARG2 (d / display-01\n                     :ARG0 p)))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (t2 / title\n                      :mod (b2 / big)\n                      :quant (s / some))\n            :time (a2 / across\n                      :op1 (y / year))))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (t2 / title\n                      :mod (b2 / big)\n                      :quant (s / some))\n            :time (a2 / across\n                      :op1 (y / year))))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG1 (a / and\n            :op1 (b / build-01\n                    :ARG0 p\n                    :ARG2 (d / display-01\n                             :ARG0 p))\n            :op2 (t / take-01\n                    :ARG0 p\n                    :ARG1 (t2 / title\n                              :mod (b2 / big)\n                              :quant (s / some))\n                    :time (a2 / across\n                              :op1 (y / year)))))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG1 (a / and\n            :op1 (b / build-01\n                    :ARG0 p\n                    :ARG2 (d / display-01\n                             :ARG0 p))\n            :op2 (t / take-01\n                    :ARG0 p\n                    :ARG1 (t2 / title\n                              :mod (b2 / big)\n                              :quant (s / some))\n                    :time (a2 / across\n                              :op1 (y / year)))))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)))", "(c / click-01\n   :location (h / here)\n   :purpose (r / react-01\n               :mod (a2 / all)))", "(f / follow-01\n   :ARG2 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\"\n                      :op2 \"Open\")\n            :time (d / date-entity\n                     :year 2015)))", "(c / click-01\n   :location (h / here)\n   :purpose (a / and\n               :op1 (n / news\n                       :mod (l / last))\n               :op2 (r / react-01)\n               :mod (a2 / all)))", "(c / click-01\n   :location (h / here)\n   :purpose (r / react-01\n               :mod (a2 / all)\n               :ARG1 (f / follow-01\n                        :ARG2 (e / event\n                                 :name (n2 / name\n                                           :op1 \"Masters\"\n                                           :op2 \"Open\")\n                                 :time (d / date-entity\n                                          :year 2015)))))", "(c / click-01\n   :location (h / here)\n   :purpose (a / and\n               :op1 (n / news\n                       :mod (l / last))\n               :op2 (r / react-01)\n               :mod (a2 / all)\n               :ARG1 (f / follow-01\n                        :ARG2 (e / event\n                                 :name (n2 / name\n                                           :op1 \"Masters\"\n                                           :op2 \"Open\")\n                                 :time (d / date-entity\n                                          :year 2015)))))"], "smus": ["finished 14 under par.", "Justin Rose finished joint runner up.", "Justin Rose finished joint runner up at the Masters in 2015 with a score of 14 under par.", "Only six best at the Masters in 2015.", "Justin Rose's final total was only 6 best at the Masters in 2015.", "Justin Rose will build a display.", "It'll take across the year.", "It'll take across the year.", "Take some big titles.", "Justin Rose will take some big titles.", "Justin Rose will take some big titles across the year.", "Justin Rose will take some big titles across the year.", "Justin Rose hopes to build a display.", "Justin Rose hopes to build a display.", "Justin Rose hopes to take some big titles across the year.", "Justin Rose hopes to take some big titles across the year.", "Justin Rose hopes to build a display and take some big titles across the year.", "Justin Rose hopes to build a display and take some big titles across the year.", "Click here for the latest news.", "Click here for the latest news.", "Clicks here for all the reaction.", "Following the Masters Open in 2015.", "Clicks here for all the latest news and reaction.", "Here are the clicks for all the reaction following the 2015 Masters Open.", "Here are the clicks for all the latest news and reaction following the 2015 Masters Open."]}, {"instance_id": "realsumm-6", "summary": "Girl was playing with friend when Zbigniew Huminski forced Chloe 's into car . Chloe 's naked body was found in nearby woods an hour - and - a - half later . Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing .", "summary_trees": ["# ::snt Girl was playing with friend when Zbigniew Huminski forced Chloe 's into car .\n(p / play-01\n      :ARG0 (g / girl)\n      :ARG3 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 g\n                  :ARG2 (f / friend)))\n      :time (f2 / force-01\n            :ARG0 (p3 / person\n                  :name (n / name\n                        :op1 \"Zbigniew\"\n                        :op2 \"Huminski\"))\n            :ARG1 (t / thing\n                  :poss (p4 / person\n                        :name (n2 / name\n                              :op1 \"Chloe\")))\n            :ARG2 (c / car)))", "# ::snt Chloe 's naked body was found in nearby woods an hour - and - a - half later .\n(f / find-01\n      :ARG1 (b / body\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Chloe\"))\n            :ARG1-of (n2 / naked-02))\n      :location (w / woods\n            :location (n3 / nearby))\n      :time (a / after\n            :quant (t / temporal-quantity\n                  :quant 1.5\n                  :unit (h / hour))))", "# ::snt Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing .\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / prosecute-01))\n      :ARG1 (e / evidence-01\n            :ARG1 (a / and\n                  :op1 (s2 / strangulate-01)\n                  :op2 (v / violence\n                        :mod (s3 / sex)))\n            :ARG1-of (c / cause-01\n                  :ARG0 (a2 / admit-01\n                        :ARG0 (p3 / person\n                              :ARG0-of (ii / immigrate-01\n                                    :ARG2 (c2 / country\n                                          :name (n / name\n                                                :op1 \"Poland\")))\n                              :ARG0-of (h / head-02\n                                    :ARG1 (c3 / country\n                                          :name (n2 / name\n                                                :op1 \"England\"))))\n                        :ARG1 (k / kill-01\n                              :ARG0 p3)))))"], "tree": ["(h / have-rel-role-91\n   :ARG1 (g / girl)\n   :ARG2 (f / friend))", "(f2 / force-01\n    :ARG1 (t / thing\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Chloe\"))))", "(f2 / force-01\n    :ARG1 (t / thing\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Chloe\")))\n    :ARG2 (c / car))", "(f2 / force-01\n    :ARG0 (p3 / person\n              :name (n / name\n                       :op1 \"Zbigniew\"\n                       :op2 \"Huminski\"))\n    :ARG1 (t / thing\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Chloe\")))\n    :ARG2 (c / car))", "(f2 / force-01\n    :ARG0 (p3 / person\n              :name (n / name\n                       :op1 \"Zbigniew\"\n                       :op2 \"Huminski\"))\n    :ARG1 (t / thing\n             :poss (p4 / person\n                       :name (n2 / name\n                                 :op1 \"Chloe\")))\n    :ARG2 (c / car))", "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 g\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))\n             :ARG1 (t / thing\n                      :poss (p4 / person\n                                :name (n2 / name\n                                          :op1 \"Chloe\")))\n             :ARG2 (c / car)))", "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby)))", "(f / find-01\n   :ARG1 (b / body\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Chloe\"))\n            :ARG1 (n2 / naked-02)))", "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5\n                      :unit (h / hour))))", "(f / find-01\n   :ARG1 (b / body\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Chloe\"))\n            :ARG1 (n2 / naked-02))\n   :location (w / woods\n                :location (n3 / nearby)))", "(f / find-01\n   :ARG1 (b / body\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Chloe\"))\n            :ARG1 (n2 / naked-02))\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5\n                      :unit (h / hour))))", "(h / head-02\n   :ARG1 (c3 / country\n             :name (n2 / name\n                       :op1 \"England\")))", "(ii / immigrate-01\n    :ARG2 (c2 / country\n              :name (n / name\n                       :op1 \"Poland\")))", "(a2 / admit-01\n    :ARG0 (p3 / person\n              :ARG0 (ii / immigrate-01\n                        :ARG2 (c2 / country\n                                  :name (n / name\n                                           :op1 \"Poland\")))\n              :ARG0 (h / head-02\n                       :ARG1 (c3 / country\n                                 :name (n2 / name\n                                           :op1 \"England\"))))\n    :ARG1 (k / kill-01\n             :ARG0 p3))", "(a2 / admit-01\n    :ARG0 (p3 / person\n              :ARG0 (ii / immigrate-01\n                        :ARG2 (c2 / country\n                                  :name (n / name\n                                           :op1 \"Poland\")))\n              :ARG0 (h / head-02\n                       :ARG1 (c3 / country\n                                 :name (n2 / name\n                                           :op1 \"England\"))))\n    :ARG1 (k / kill-01\n             :ARG0 p3))", "(c / cause-01\n   :ARG0 (a2 / admit-01\n             :ARG0 (p3 / person\n                       :ARG0 (ii / immigrate-01\n                                 :ARG2 (c2 / country\n                                           :name (n / name\n                                                    :op1 \"Poland\")))\n                       :ARG0 (h / head-02\n                                :ARG1 (c3 / country\n                                          :name (n2 / name\n                                                    :op1 \"England\"))))\n             :ARG1 (k / kill-01\n                      :ARG0 p3)))", "(e / evidence-01\n   :ARG1 (s2 / strangulate-01)\n   :ARG1 (c / cause-01\n            :ARG0 (a2 / admit-01\n                      :ARG0 (p3 / person\n                                :ARG0 (ii / immigrate-01\n                                          :ARG2 (c2 / country\n                                                    :name (n / name\n                                                             :op1 \"Poland\")))\n                                :ARG0 (h / head-02\n                                         :ARG1 (c3 / country\n                                                   :name (n2 / name\n                                                             :op1 \"England\"))))\n                      :ARG1 (k / kill-01\n                               :ARG0 p3))))", "(e / evidence-01\n   :ARG1 (v / violence\n            :mod (s3 / sex))\n   :ARG1 (c / cause-01\n            :ARG0 (a2 / admit-01\n                      :ARG0 (p3 / person\n                                :ARG0 (ii / immigrate-01\n                                          :ARG2 (c2 / country\n                                                    :name (n / name\n                                                             :op1 \"Poland\")))\n                                :ARG0 (h / head-02\n                                         :ARG1 (c3 / country\n                                                   :name (n2 / name\n                                                             :op1 \"England\"))))\n                      :ARG1 (k / kill-01\n                               :ARG0 p3)))\n   :ARG1 c)", "(e / evidence-01\n   :ARG1 (a / and\n            :op1 (s2 / strangulate-01)\n            :op2 (v / violence\n                    :mod (s3 / sex)))\n   :ARG1 (c / cause-01\n            :ARG0 (a2 / admit-01\n                      :ARG0 (p3 / person\n                                :ARG0 (ii / immigrate-01\n                                          :ARG2 (c2 / country\n                                                    :name (n / name\n                                                             :op1 \"Poland\")))\n                                :ARG0 (h / head-02\n                                         :ARG1 (c3 / country\n                                                   :name (n2 / name\n                                                             :op1 \"England\"))))\n                      :ARG1 (k / kill-01\n                               :ARG0 p3))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (s2 / strangulate-01)\n            :ARG1 (c / cause-01\n                     :ARG0 (a2 / admit-01\n                               :ARG0 (p3 / person\n                                         :ARG0 (ii / immigrate-01\n                                                   :ARG2 (c2 / country\n                                                             :name (n / name\n                                                                      :op1 \"Poland\")))\n                                         :ARG0 (h / head-02\n                                                  :ARG1 (c3 / country\n                                                            :name (n2 / name\n                                                                      :op1 \"England\"))))\n                               :ARG1 (k / kill-01\n                                        :ARG0 p3)))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (v / violence\n                     :mod (s3 / sex))\n            :ARG1 (c / cause-01\n                     :ARG0 (a2 / admit-01\n                               :ARG0 (p3 / person\n                                         :ARG0 (ii / immigrate-01\n                                                   :ARG2 (c2 / country\n                                                             :name (n / name\n                                                                      :op1 \"Poland\")))\n                                         :ARG0 (h / head-02\n                                                  :ARG1 (c3 / country\n                                                            :name (n2 / name\n                                                                      :op1 \"England\"))))\n                               :ARG1 (k / kill-01\n                                        :ARG0 p3)))\n            :ARG1 c))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (a / and\n                     :op1 (s2 / strangulate-01)\n                     :op2 (v / violence\n                             :mod (s3 / sex)))\n            :ARG1 (c / cause-01\n                     :ARG0 (a2 / admit-01\n                               :ARG0 (p3 / person\n                                         :ARG0 (ii / immigrate-01\n                                                   :ARG2 (c2 / country\n                                                             :name (n / name\n                                                                      :op1 \"Poland\")))\n                                         :ARG0 (h / head-02\n                                                  :ARG1 (c3 / country\n                                                            :name (n2 / name\n                                                                      :op1 \"England\"))))\n                               :ARG1 (k / kill-01\n                                        :ARG0 p3)))))"], "smus": ["The girl is a friend.", "Shirley's forced.", "Holly's was forced into a car.", "Zbigniew Huminski forced Holly into a car.", "Zbigniew Huminski forced Holly into a car.", "The girl was playing with her friend when Zbigniew Huminski forced Chloe into a car.", "Found in nearby woods.", "Holly's body was found naked.", "Found in nearby woods an hour and a half later.", "Holly's naked body was found in nearby woods.", "In the nearby woods, Holly's naked body was found an hour and a half later.", "Heading for England.", "Immigration to Poland", "Immigration from Poland and heading to England have admitted to killing themselves.", "Immigration from Poland and heading to England have admitted to killing themselves.", "Because Poles immigration head to England has admitted to killing.", "There is evidence of strangulation that the Poles' immigration head admitted killing.", "There is evidence of sexual violence that is because Poles immigration heads to England have admitted killing themselves.", "There is evidence of strangulation and sexual violence, as the head of immigration from Poland admitted killing himself.", "Prosecutors say there is evidence of strangulation that the Poles heading to England have admitted killing themselves.", "Prosecutors say there is evidence of sexual violence that is why Poles immigration headed to England have admitted killing themselves.", "Prosecutors say there is evidence of strangulation and sexual violence that the head of immigration to England from Poland has admitted killing himself."]}, {"instance_id": "realsumm-7", "summary": "Pair were left homeless after storms and met in Connecticut trailer park . Won lottery last year but only cashed prize in after Easter to mark new start . ' Because of Sandy thrilled lottery winner met the love of thrilled lottery winner life ' , said thrilled lottery winner .", "summary_trees": ["# ::snt Pair were left homeless after storms and met in Connecticut trailer park .\n(a / and\n      :op1 (l / leave-13\n            :ARG1 (p / person\n                  :quant (p2 / pair))\n            :ARG2 (h / homeless\n                  :domain p)\n            :time (a2 / after\n                  :op1 (s / storm)))\n      :op2 (m / meet-03\n            :ARG0 p\n            :location (p3 / park\n                  :mod (t / trailer)\n                  :location (s2 / state\n                        :name (n / name\n                              :op1 \"Connecticut\")))))", "# ::snt Won lottery last year but only cashed prize in after Easter to mark new start . '\n(c / contrast-01\n      :ARG1 (w / win-01\n            :ARG2 (l / lottery)\n            :time (y / year\n                  :mod (l2 / last)))\n      :ARG2 (c2 / cash-in-03\n            :ARG1 (p / prize)\n            :time (a / after\n                  :op1 (f / festival\n                        :name (n / name\n                              :op1 \"Easter\")))\n            :purpose (m / mark-01\n                  :ARG1 (s / start-01\n                        :ARG1-of (n2 / new-01)))\n            :mod (o / only)))", "# ::snt Because of Sandy thrilled lottery winner met the love of thrilled lottery winner life ' , said thrilled lottery winner .\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (w / win-01\n                  :ARG1 (l / lottery))\n            :ARG1-of (t / thrill-01))\n      :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Sandy\"))\n            :ARG1 (m / meet-02\n                  :ARG0 (p3 / person\n                        :ARG0-of w\n                        :ARG1-of (t2 / thrill-01))\n                  :ARG1 (l2 / love\n                        :poss (l3 / life\n                              :poss p3)))))"], "tree": ["(l / leave-13\n   :time (a2 / after\n             :op1 (s / storm)))", "(m / meet-03\n   :location (p3 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / meet-03\n   :location (p3 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / meet-03\n   :location (p3 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / meet-03\n   :location (p3 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / meet-03\n   :ARG0 (p / person)\n   :location (p3 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / meet-03\n   :ARG0 (p / person)\n   :location (p3 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(l / leave-13\n   :ARG1 (p / person\n            :quant (p2 / pair))\n   :ARG2 (h / homeless\n            :domain p)\n   :time (a2 / after\n             :op1 (s / storm)))", "(m / mark-01\n   :ARG1 (s / start-01\n            :ARG1 (n2 / new-01)))", "(m / mark-01\n   :ARG1 (s / start-01\n            :ARG1 (n2 / new-01)))", "(w / win-01\n   :time (y / year\n            :mod (l2 / last)))", "(w / win-01\n   :ARG2 (l / lottery)\n   :time (y / year\n            :mod (l2 / last)))", "(c2 / cash-in-03\n    :time (a / after\n             :op1 (f / festival\n                     :name (n / name\n                              :op1 \"Easter\")))\n    :purpose (m / mark-01)\n    :mod (o / only))", "(c2 / cash-in-03\n    :ARG1 (p / prize)\n    :time (a / after\n             :op1 (f / festival\n                     :name (n / name\n                              :op1 \"Easter\")))\n    :purpose (m / mark-01\n                :ARG1 (s / start-01\n                         :ARG1 (n2 / new-01)))\n    :mod (o / only))", "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery)\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :ARG1 (p / prize)\n             :time (a / after\n                      :op1 (f / festival\n                              :name (n / name\n                                       :op1 \"Easter\")))\n             :purpose (m / mark-01\n                         :ARG1 (s / start-01\n                                  :ARG1 (n2 / new-01)))\n             :mod (o / only)))", "(m / meet-02\n   :ARG0 (p3 / person\n             :ARG0 (w / win-01)\n             :ARG1 (t2 / thrill-01))\n   :ARG1 (l2 / love\n             :poss (l3 / life\n                       :poss p3)))", "(c / cause-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Sandy\"))\n   :ARG1 (m / meet-02\n            :ARG0 (p3 / person\n                      :ARG0 (w / win-01)\n                      :ARG1 (t2 / thrill-01))\n            :ARG1 (l2 / love\n                      :poss (l3 / life\n                                :poss p3))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery))\n            :ARG1 (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"))\n            :ARG1 (m / meet-02\n                     :ARG0 (p3 / person\n                               :ARG0-of w\n                               :ARG1 (t2 / thrill-01))\n                     :ARG1 (l2 / love\n                               :poss (l3 / life\n                                         :poss p3)))))"], "smus": ["Leaved after storms", "The meeting took place at a trailer park in Connecticut.", "The meeting took place at a trailer park in Connecticut.", "The meeting took place at a trailer park in Connecticut.", "The meeting took place at a trailer park in Connecticut.", "People met at a trailer park in Connecticut.", "People met at a trailer park in Connecticut.", "The pair were left homeless after the storms.", "mark the start of a new", "mark the start of a new", "The win last year.", "Lottery win last year", "Only after Easter is cash in to mark.", "The prize will only be cashed in after Easter to mark the start of a new year.", "The lottery won last year, but the prize was only cashed in after Easter to mark the start of a new year.", "The thrill-seeking winner met the love of his life.", "The thrill-seeking winner met the love of his life because Sandy.", "\"The thrill of the lottery is that Sandy met the love of his life,\" said the thrill-seeker."]}, {"instance_id": "realsumm-8", "summary": "Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam . Cesc Fabregas picked up the injury during Chelsea 's home win . Stoke City ace Charlie Adam scored wonder goal during Chelsea 's home win but wonder goal was n't enough . Cesc Fabregas took to Instagram to show Cesc Fabregas was all smiles despite the bruises . CLICK HERE for all the latest Chelsea 's news .", "summary_trees": ["# ::snt Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam .\n(c / catch-03\n      :ARG0 (a / arm\n            :ARG0-of (t / trail-01)\n            :part-of (p / person\n                  :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Adam\")\n                  :mod (t2 / team\n                        :name (n2 / name\n                              :op1 \"Stoke\"\n                              :op2 \"City\"))\n                  :mod (a2 / ace)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Cesc\"\n                  :op2 \"Fabregas\")))", "# ::snt Cesc Fabregas picked up the injury during Chelsea 's home win .\n(p / pick-up-04\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Cesc\"\n                  :op2 \"Fabregas\"))\n      :ARG1 (ii / injury)\n      :time (w / win-01\n            :ARG0 (t / team\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))\n            :location (h / home)))", "# ::snt Stoke City ace Charlie Adam scored wonder goal during Chelsea 's home win but wonder goal was n't enough .\n(h / have-concession-91\n      :ARG1 (h2 / have-quant-91\n            :polarity -\n            :ARG1 (g / goal\n                  :ARG1-of (w / wonder-02)\n                  :ARG1-of (s / score-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Charlie\"\n                                    :op2 \"Adam\")\n                              :mod (a / ace)\n                              :poss (t / team\n                                    :name (n2 / name\n                                          :op1 \"Stoke\"\n                                          :op2 \"City\")))\n                        :time (w2 / win-01\n                              :ARG0 (t2 / team\n                                    :name (n3 / name\n                                          :op1 \"Chelsea\"))\n                              :location (h3 / home))))\n            :ARG3 (e / enough))\n      :ARG2 g)", "# ::snt Cesc Fabregas took to Instagram to show Cesc Fabregas was all smiles despite the bruises .\n(t / take-35\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Cesc\"\n                  :op2 \"Fabregas\"))\n      :ARG2 (p2 / publication\n            :name (n2 / name\n                  :op1 \"Instagram\"))\n      :purpose (s / show-01\n            :ARG0 p\n            :ARG1 (s2 / smile-01\n                  :ARG0 p\n                  :concession (b / bruise-01\n                        :ARG1 p)\n                  :mod (a / all))))", "# ::snt CLICK HERE for all the latest Chelsea 's news .\n(c / click-01\n      :location (h / here)\n      :purpose (n / news\n            :mod (l / last)\n            :mod (a / all)\n            :poss (p / person\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))))"], "tree": ["(c / catch-03\n   :ARG0 (a / arm\n            :ARG0 (t / trail-01)\n            :part (p / person\n                     :name (n / name\n                              :op1 \"Charlie\"\n                              :op2 \"Adam\")\n                     :mod (t2 / team\n                              :name (n2 / name\n                                        :op1 \"Stoke\"\n                                        :op2 \"City\"))\n                     :mod (a2 / ace)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))", "(p / pick-up-04\n   :time (w / win-01\n            :location (h / home)))", "(p / pick-up-04\n   :time (w / win-01\n            :location (h / home)))", "(w / win-01\n   :ARG0 (t / team\n            :name (n2 / name\n                      :op1 \"Chelsea\")))", "(w / win-01\n   :ARG0 (t / team\n            :name (n2 / name\n                      :op1 \"Chelsea\"))\n   :location (h / home))", "(p / pick-up-04\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Cesc\"\n                      :op2 \"Fabregas\"))\n   :ARG1 (ii / injury))", "(p / pick-up-04\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Cesc\"\n                      :op2 \"Fabregas\"))\n   :ARG1 (ii / injury)\n   :time (w / win-01\n            :ARG0 (t / team\n                     :name (n2 / name\n                               :op1 \"Chelsea\"))\n            :location (h / home)))", "(p / pick-up-04\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Cesc\"\n                      :op2 \"Fabregas\"))\n   :ARG1 (ii / injury)\n   :time (w / win-01\n            :ARG0 (t / team\n                     :name (n2 / name\n                               :op1 \"Chelsea\"))\n            :location (h / home)))", "(s / score-01\n   :time (w2 / win-01\n             :location (h3 / home)))", "(w2 / win-01\n    :ARG0 (t2 / team\n              :name (n3 / name\n                        :op1 \"Chelsea\")))", "(w2 / win-01\n    :ARG0 (t2 / team\n              :name (n3 / name\n                        :op1 \"Chelsea\"))\n    :location (h3 / home))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Adam\")\n            :mod (a / ace)\n            :poss (t / team\n                     :name (n2 / name\n                               :op1 \"Stoke\"\n                               :op2 \"City\")))\n   :time (w2 / win-01\n             :ARG0 (t2 / team\n                       :name (n3 / name\n                                 :op1 \"Chelsea\"))\n             :location (h3 / home)))", "(h2 / have-quant-91\n    :polarity -\n    :ARG1 (g / goal\n             :ARG1 (w / wonder-02)\n             :ARG1 (s / score-01\n                      :ARG0 (p / person\n                               :name (n / name\n                                        :op1 \"Charlie\"\n                                        :op2 \"Adam\")\n                               :mod (a / ace)\n                               :poss (t / team\n                                        :name (n2 / name\n                                                  :op1 \"Stoke\"\n                                                  :op2 \"City\")))\n                      :time (w2 / win-01\n                                :ARG0 (t2 / team\n                                          :name (n3 / name\n                                                    :op1 \"Chelsea\"))\n                                :location (h3 / home))))\n    :ARG3 (e / enough))", "(h / have-concession-91\n   :ARG1 (h2 / have-quant-91\n             :polarity -\n             :ARG1 (g / goal\n                      :ARG1 (w / wonder-02)\n                      :ARG1 (s / score-01\n                               :ARG0 (p / person\n                                        :name (n / name\n                                                 :op1 \"Charlie\"\n                                                 :op2 \"Adam\")\n                                        :mod (a / ace)\n                                        :poss (t / team\n                                                 :name (n2 / name\n                                                           :op1 \"Stoke\"\n                                                           :op2 \"City\")))\n                               :time (w2 / win-01\n                                         :ARG0 (t2 / team\n                                                   :name (n3 / name\n                                                             :op1 \"Chelsea\"))\n                                         :location (h3 / home))))\n             :ARG3 (e / enough))\n   :ARG2 g)", "(s2 / smile-01\n    :concession (b / bruise-01)\n    :mod (a / all))", "(s2 / smile-01\n    :ARG0 (p / person :name (n / name :op1 \"Cesc\" :op2 \"Fabregas\"))\n    :concession (b / bruise-01\n                   :ARG1 p)\n    :mod (a / all))", "(s / show-01\n   :ARG0 (p / person :name (n / name :op1 \"Cesc\" :op2 \"Fabregas\"))\n   :ARG1 (s2 / smile-01\n             :ARG0 p\n             :concession (b / bruise-01\n                            :ARG1 p)\n             :mod (a / all)))", "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cesc\"\n                     :op2 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG0 p\n               :ARG1 (s2 / smile-01\n                         :ARG0 p\n                         :concession (b / bruise-01\n                                        :ARG1 p)\n                         :mod (a / all))))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :poss (p / person\n                        :name (n2 / name\n                                  :op1 \"Chelsea\"))))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :poss (p / person\n                        :name (n2 / name\n                                  :op1 \"Chelsea\"))))"], "smus": ["The trailing arm of Stoke City ace Charlie Adam caught Cesc Fabregas.", "Picked up with a win at home.", "Picked up with a win at home.", "Chelsea won 2-0.", "Chelsea won the home game 1-0.", "Escuela Fabregas picked up the injury.", "During Chelsea's home win, Cesc Fabregas picked up an injury.", "During Chelsea's home win, Cesc Fabregas picked up an injury.", "Scored in the home win.", "Chelsea won 2-0.", "Chelsea won the home game 1-0.", "- Stoke City ace Charlie Adam scored in Chelsea's home win.", "The wonder goal in Chelsea's home win over Stoke City, Charlie Adam, was not enough.", "Wonder goal in Chelsea's home win over Stoke City, Charlie Adam, was not enough, though.", "Smiles all the way despite bruises", "Despite his bruises, Cesc Fabregas all smiles.", "a href=\"http://www.youtube.com/watch?v=ccsfgg\">Cesc Fabregas: a href=\"http://www.youtube.com/watch?v=ccsfgg\">CescFabregas: a href=\"http://www.youtube.com/watch", "Escuela Fabregas took to Instagram to show all her smiles despite her bruises.", "Here are the clicks for Chelsea's latest news.", "Here are the clicks for Chelsea's latest news."]}, {"instance_id": "realsumm-9", "summary": "The life of 16 - year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . ' Darby Hudd , a 17 - year - old friend of the slain teen do n't think there 's anything sad about celebrated . celebrated 's such a celebration , ' said Darby Hudd , a 17 - year - old friend of 16 - year - old Maren Sanchez stabbed to death a year ago on the day of prom . A classmate , Christopher Plaskon , has been charged with 16 - year - old Maren Sanchez stabbed to death a year ago on the day of prom murder .", "summary_trees": ["# ::snt The life of 16 - year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . '\n(c / celebrate-02\n      :ARG0 (p / person\n            :quant (m / multiple\n                  :op1 100))\n      :ARG1 (l / life\n            :poss (p2 / person\n                  :name (n / name\n                        :op1 \"Maren\"\n                        :op2 \"Sanchez\")\n                  :age (t / temporal-quantity\n                        :quant 16\n                        :unit (y / year))\n                  :ARG1-of (s / stab-01\n                        :ARG4 (d / die-01\n                              :ARG1 p2)\n                        :time (b / before\n                              :op1 (n2 / now)\n                              :quant (t2 / temporal-quantity\n                                    :quant 1\n                                    :unit (y2 / year)))\n                        :time (d2 / day\n                              :time-of (p3 / prom)))))\n      :time (d3 / date-entity\n            :weekday (s2 / saturday)))", "# ::snt Darby Hudd , a 17 - year - old friend of the slain teen do n't think there 's anything sad about celebrated .\n(t / think-01\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Darby\"\n                  :op2 \"Hudd\")\n            :age (t2 / temporal-quantity\n                  :quant 17\n                  :unit (y / year))\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (t3 / teen\n                        :ARG1-of (s / slay-01))\n                  :ARG2 (f / friend)))\n      :ARG1 (s2 / sad-02\n            :ARG0 (a / anything)\n            :topic (c / celebrate-02)))", "# ::snt celebrated 's such a celebration , ' said Darby Hudd , a 17 - year - old friend of 16 - year - old Maren Sanchez stabbed to death a year ago on the day of prom .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Darby\"\n                  :op2 \"Hudd\")\n            :age (t / temporal-quantity\n                  :quant 17\n                  :unit (y / year))\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Maren\"\n                              :op2 \"Sanchez\")\n                        :age (t2 / temporal-quantity\n                              :quant 16\n                              :unit (y2 / year))\n                        :ARG1-of (s2 / stab-01\n                              :ARG0-of (c / cause-01\n                                    :ARG1 (d / die-01\n                                          :ARG1 p2))\n                              :time (b / before\n                                    :op1 (n3 / now)\n                                    :quant (t3 / temporal-quantity\n                                          :quant 1\n                                          :unit (y3 / year)))\n                              :time (d2 / day\n                                    :time-of (p3 / prom))))\n                  :ARG2 (f / friend)))\n      :ARG1 (c2 / celebrate-01\n            :mod (s3 / such)))", "# ::snt A classmate , Christopher Plaskon , has been charged with 16 - year - old Maren Sanchez stabbed to death a year ago on the day of prom murder .\n(c / charge-05\n      :ARG1 (c2 / classmate\n            :name (n / name\n                  :op1 \"Christopher\"\n                  :op2 \"Plaskon\"))\n      :ARG2 (s / stab-01\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 \"Maren\"\n                        :op2 \"Sanchez\")\n                  :age (t / temporal-quantity\n                        :quant 16\n                        :unit (y / year)))\n            :ARG0-of (c3 / cause-01\n                  :ARG1 (d / die-01\n                        :ARG1 p))\n            :time (b / before\n                  :op1 (n3 / now)\n                  :quant (t2 / temporal-quantity\n                        :quant 1\n                        :unit (y2 / year)))\n            :time (d2 / day\n                  :time-of (m / murder-01\n                        :mod (p2 / prom)))))"], "tree": ["(c / celebrate-02\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-02\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-02\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-02\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100)))", "(s / stab-01\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 1\n                       :unit (y2 / year)))\n   :time (d2 / day\n             :time (p3 / prom)))", "(s / stab-01\n   :ARG4 (d / die-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 1\n                       :unit (y2 / year)))\n   :time (d2 / day\n             :time (p3 / prom)))", "(c / celebrate-02\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom))))))", "(c / celebrate-02\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-02\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom))))))", "(c / celebrate-02\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-02\n   :ARG0 (p / person\n            :quant (m / multiple\n                      :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(s2 / sad-02\n    :ARG0 (a / anything)\n    :topic (c / celebrate-02))", "(h / have-rel-role-91\n   :ARG1 (t3 / teen\n             :ARG1 (s / slay-01))\n   :ARG2 (f / friend))", "(t / think-01\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Darby\"\n                     :op2 \"Hudd\")\n            :age (t2 / temporal-quantity\n                     :quant 17\n                     :unit (y / year))\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (t3 / teen\n                               :ARG1 (s / slay-01))\n                     :ARG2 (f / friend)))\n   :ARG1 (s2 / sad-02\n             :ARG0 (a / anything)\n             :topic (c / celebrate-02)))", "(c / cause-01\n   :ARG1 (d / die-01\n            :ARG1 (p2 / person :name (n2 / name :op1 \"Maren\" :op2 \"Sanchez\")))))", "(h / have-rel-role-91\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Maren\"\n                       :op2 \"Sanchez\")\n             :age (t2 / temporal-quantity\n                      :quant 16\n                      :unit (y2 / year))))", "(s2 / stab-01\n    :time (b / before\n             :op1 (n3 / now)\n             :quant (t3 / temporal-quantity\n                        :quant 1\n                        :unit (y3 / year)))\n    :time (d2 / day\n              :time (p3 / prom)))", "(s2 / stab-01\n    :ARG0 (c / cause-01\n             :ARG1 (d / die-01\n                      :ARG1 (p2 / person :name (n2 / name :op1 \"Maren\" :op2 \"Sanchez\")))))\n    :time (b / before\n             :op1 (n3 / now)\n             :quant (t3 / temporal-quantity\n                        :quant 1\n                        :unit (y3 / year)))\n    :time (d2 / day\n              :time (p3 / prom)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Darby\"\n                     :op2 \"Hudd\")\n            :age (t / temporal-quantity\n                    :quant 17\n                    :unit (y / year))\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Maren\"\n                                         :op2 \"Sanchez\")\n                               :age (t2 / temporal-quantity\n                                        :quant 16\n                                        :unit (y2 / year))))))", "(c3 / cause-01\n    :ARG1 (d / die-01\n             :ARG1 (p / person :name (n2 / name :op1 \"Maren\" :op2 \"Sanchez\")))))", "(c / charge-05\n   :ARG1 (c2 / classmate\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Plaskon\")))", "(s / stab-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Maren\"\n                      :op2 \"Sanchez\")\n            :age (t / temporal-quantity\n                    :quant 16\n                    :unit (y / year))))", "(s / stab-01\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 1\n                       :unit (y2 / year)))\n   :time (d2 / day\n             :time (m / murder-01\n                      :mod (p2 / prom))))", "(s / stab-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Maren\"\n                      :op2 \"Sanchez\")\n            :age (t / temporal-quantity\n                    :quant 16\n                    :unit (y / year)))\n   :ARG0 (c3 / cause-01\n             :ARG1 (d / die-01\n                      :ARG1 p))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 1\n                       :unit (y2 / year)))\n   :time (d2 / day\n             :time (m / murder-01\n                      :mod (p2 / prom))))", "(c / charge-05\n   :ARG1 (c2 / classmate\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Plaskon\"))\n   :ARG2 (s / stab-01\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                     :age (t / temporal-quantity\n                             :quant 16\n                             :unit (y / year)))\n            :ARG0 (c3 / cause-01\n                      :ARG1 (d / die-01\n                               :ARG1 p))\n            :time (b / before\n                     :op1 (n3 / now)\n                     :quant (t2 / temporal-quantity\n                                :quant 1\n                                :unit (y2 / year)))\n            :time (d2 / day\n                      :time (m / murder-01\n                               :mod (p2 / prom)))))", "(c / charge-05\n   :ARG1 (c2 / classmate\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Plaskon\"))\n   :ARG2 (s / stab-01\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                     :age (t / temporal-quantity\n                             :quant 16\n                             :unit (y / year)))\n            :ARG0 (c3 / cause-01\n                      :ARG1 (d / die-01\n                               :ARG1 p))\n            :time (b / before\n                     :op1 (n3 / now)\n                     :quant (t2 / temporal-quantity\n                                :quant 1\n                                :unit (y2 / year)))\n            :time (d2 / day\n                      :time (m / murder-01\n                               :mod (p2 / prom)))))"], "smus": ["Celebrated on Saturday.", "Celebrated on Saturday.", "Celebrated on Saturday.", "Hundreds of people celebrated.", "Stunned a year ago on a prom day.", "Maren Sanchez's death was stabbed a year ago on a prom day.", "Maren Sanchez, 16, was celebrated for her life on a prom day that year when she was stabbed to death.", "Maren Sanchez, 16, was celebrated Saturday for her life, stabbed to death on prom day a year ago.", "Hundreds have celebrated the life of Maren Sanchez, 16, who was stabbed to death on a prom day a year ago.", "On Saturday, hundreds celebrated the life of Maren Sanchez, 16, who was stabbed to death on a prom day a year ago.", "On Saturday, hundreds celebrated the life of Maren Sanchez, 16, who was stabbed to death on a prom day a year ago.", "Anything sad about celebrating.", "The teen who was killed was a friend.", "Darby Hudd, 17, doesn't think anything is sad about the celebration as a teen slay victim's friend.", "So, Maren Sanchez died.", "Maren Sanchez, 16, is a 16 year old.", "Stunned a year ago on a prom day.", "The year before, on prom day, Maren Sanchez was stabbed to death.", "\"Darby Hudd, 17, said 16-year-old Maren Sanchez.", "So, Maren Sanchez died.", "Christopher Plaskon was charged.", "16-year-old Maren Sanchez was stabbed.", "The day of the prom murder was the day the stabbed.", "On the day of the prom murder, 16-year-old Maren Sanchez was stabbed to death.", "Christopher Plaskon was charged with murdering 16-year-old Maren Sanchez on the day of the prom murder.", "Christopher Plaskon was charged with murdering 16-year-old Maren Sanchez on the day of the prom murder."]}, {"instance_id": "realsumm-10", "summary": "Audrey Alexander wanted Audrey Alexander neighbours to chop down her neighbours huge hedge . Audrey Alexander claims their huge hedge was blocking sunlight from reaching Audrey Alexander home . Feud started in 1980 when their huge hedge blocked light from reaching a vegetable patch . Council finally rules that their huge hedge can stay - but must be cut back to 20 ft .", "summary_trees": ["# ::snt Audrey Alexander wanted Audrey Alexander neighbours to chop down her neighbours huge hedge .\n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Audrey\"\n                  :op2 \"Alexander\"))\n      :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (n2 / neighbor)))\n            :ARG1 (h2 / hedge\n                  :mod (h3 / huge)\n                  :poss p2)))", "# ::snt Audrey Alexander claims their huge hedge was blocking sunlight from reaching Audrey Alexander home .\n(c / claim-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Audrey\"\n                  :op2 \"Alexander\"))\n      :ARG1 (b / block-01\n            :ARG0 (h / hedge\n                  :mod (h2 / huge)\n                  :poss (t / they))\n            :ARG1 (s / sunlight)\n            :ARG2 (r / reach-01\n                  :ARG0 s\n                  :ARG1 (h3 / home\n                        :poss p))))", "# ::snt Feud started in 1980 when their huge hedge blocked light from reaching a vegetable patch .\n(s / start-01\n      :ARG1 (f / feud-01)\n      :time (d / date-entity\n            :year 1980)\n      :time (b / block-01\n            :ARG0 (h / hedge\n                  :mod (h2 / huge)\n                  :poss (t / they))\n            :ARG1 (r / reach-01\n                  :ARG0 (l / light)\n                  :ARG1 (p / patch\n                        :mod (v / vegetable)))))", "# ::snt Council finally rules that their huge hedge can stay - but must be cut back to 20 ft .\n(r / rule-01\n      :ARG0 (c / council)\n      :ARG3 (c2 / contrast-01\n            :ARG1 (p / possible-01\n                  :ARG1 (s / stay-01\n                        :ARG1 (h / hedge\n                              :mod (h2 / huge)\n                              :poss c)))\n            :ARG2 (o / obligate-01\n                  :ARG2 (c3 / cut-back-05\n                        :ARG1 h\n                        :ARG4 (d / distance-quantity\n                              :quant 20\n                              :unit (f / foot)))))\n      :time (f2 / final))"], "tree": ["(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))\n   :ARG2 (n2 / neighbor))", "(c / chop-down-02\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))\n                      :ARG2 (n2 / neighbor)))\n   :ARG1 (h2 / hedge\n             :mod (h3 / huge)\n             :poss p2))", "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p\n                               :ARG2 (n2 / neighbor)))\n            :ARG1 (h2 / hedge\n                      :mod (h3 / huge)\n                      :poss p2)))", "(r / reach-01\n   :ARG0 (s / sunlight)\n   :ARG1 (h3 / home\n             :poss (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))))", "(r / reach-01\n   :ARG0 (s / sunlight)\n   :ARG1 (h3 / home\n             :poss (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))))", "(b / block-01\n   :ARG0 (h / hedge\n            :mod (h2 / huge)\n            :poss (t / they))\n   :ARG1 (s / sunlight))", "(b / block-01\n   :ARG0 (h / hedge\n            :mod (h2 / huge)\n            :poss (t / they))\n   :ARG1 (s / sunlight)\n   :ARG2 (r / reach-01\n            :ARG0 s\n            :ARG1 (h3 / home\n                      :poss (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\")))))", "(c / claim-01\n   :ARG1 (b / block-01\n            :ARG0 (h / hedge\n                     :mod (h2 / huge)\n                     :poss (t / they))\n            :ARG1 (s / sunlight)\n            :ARG2 (r / reach-01\n                     :ARG0 s\n                     :ARG1 (h3 / home\n                               :poss (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))))))", "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (b / block-01\n            :ARG0 (h / hedge\n                     :mod (h2 / huge)\n                     :poss (t / they))\n            :ARG1 (s / sunlight)\n            :ARG2 (r / reach-01\n                     :ARG0 s\n                     :ARG1 (h3 / home\n                               :poss p))))", "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (b / block-01\n            :ARG0 (h / hedge\n                     :mod (h2 / huge)\n                     :poss (t / they))\n            :ARG1 (s / sunlight)\n            :ARG2 (r / reach-01\n                     :ARG0 s\n                     :ARG1 (h3 / home\n                               :poss p))))", "(s / start-01\n   :time (d / date-entity\n            :year 1980)\n   :time (b / block-01))", "(r / reach-01\n   :ARG0 (l / light)\n   :ARG1 (p / patch\n            :mod (v / vegetable)))", "(r / reach-01\n   :ARG0 (l / light)\n   :ARG1 (p / patch\n            :mod (v / vegetable)))", "(b / block-01\n   :ARG1 (r / reach-01\n            :ARG0 (l / light)\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))", "(b / block-01\n   :ARG0 (h / hedge\n            :mod (h2 / huge)\n            :poss (t / they))\n   :ARG1 (r / reach-01\n            :ARG0 (l / light)\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))", "(b / block-01\n   :ARG0 (h / hedge\n            :mod (h2 / huge)\n            :poss (t / they))\n   :ARG1 (r / reach-01\n            :ARG0 (l / light)\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))", "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :year 1980)\n   :time (b / block-01\n            :ARG0 (h / hedge\n                     :mod (h2 / huge)\n                     :poss (t / they))\n            :ARG1 (r / reach-01\n                     :ARG0 (l / light)\n                     :ARG1 (p / patch\n                              :mod (v / vegetable)))))", "(s / stay-01\n   :ARG1 (h / hedge\n            :mod (h2 / huge)\n            :poss (c / council)))", "(c3 / cut-back-05\n    :ARG1 (h / hedge)\n    :ARG4 (d / distance-quantity\n             :quant 20\n             :unit (f / foot)))", "(p / possible-01\n   :ARG1 (s / stay-01\n            :ARG1 (h / hedge\n                     :mod (h2 / huge)\n                     :poss (c / council))))", "(o / obligate-01\n   :ARG2 (c3 / cut-back-05\n             :ARG1 (h / hedge)\n             :ARG4 (d / distance-quantity\n                      :quant 20\n                      :unit (f / foot))))", "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge\n                               :mod (h2 / huge)\n                               :poss (c / council))))\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG1 h\n                       :ARG4 (d / distance-quantity\n                                :quant 20\n                                :unit (f / foot)))))", "(r / rule-01\n   :ARG0 (c / council)\n   :ARG3 (c2 / contrast-01\n             :ARG1 (p / possible-01\n                      :ARG1 (s / stay-01\n                               :ARG1 (h / hedge\n                                        :mod (h2 / huge)\n                                        :poss c)))\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 h\n                                :ARG4 (d / distance-quantity\n                                         :quant 20\n                                         :unit (f / foot)))))\n   :time (f2 / final))"], "smus": ["a href=\"http://www.theworld.net/news/audrey-alander/\">Audrey Alexander/a> - Neighbors/a>", "Douglas Alexander's neighbors are going to chop down his huge hedge.", "Audrey Alexander wanted his neighbors to chop down his huge hedge.", "The sunlight was reaching Audrey Alexander's home.", "The sunlight was reaching Audrey Alexander's home.", "Their huge hedge is blocking sunlight.", "Their huge hedge was blocking sunlight from reaching Audrey Alexander's home.", "Their huge hedge claims to be blocking sunlight from reaching Audrey Alexander's home.", "Audrey Alexander claims their huge hedge is blocking sunlight from reaching his home.", "Audrey Alexander claims their huge hedge is blocking sunlight from reaching his home.", "started in 1980 when the blockage occurred.", "The light is reaching the vegetable patch.", "The light is reaching the vegetable patch.", "The light blocked reaching the vegetable patch.", "Their huge hedge blocked light reaching the vegetable patch.", "Their huge hedge blocked light reaching the vegetable patch.", "Feud started in 1980 when their huge hedge blocked light from reaching a vegetable patch.", "Stay with the council's huge hedge.", "The hedge was cut back to 20ft.", "The Council's huge hedge may stay.", "The hedge had to be cut back to 20ft.", "The Council's huge hedge may stay, but it will have to be cut back to 20ft.", "The Council finally rules that their huge hedge can stay but must be cut back to 20ft."]}, {"instance_id": "realsumm-11", "summary": "Catherine Nevin was allowed out despite being jailed for life in April 2000 . Catherine Nevin was seen on the bus , with a pal and walking around in Dublin . Sat next to unsuspecting commuter on bus and went totally unnoticed . Catherine Nevin murdered husband Tom in 1996 .", "summary_trees": ["# ::snt Catherine Nevin was allowed out despite being jailed for life in April 2000 .\n(a / allow-01\n      :ARG1 (o / out-06\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Catherine\"\n                        :op2 \"Nevin\")))\n      :concession (j / jail-01\n            :ARG1 p\n            :ARG2 (l / life)\n            :time (d / date-entity\n                  :year 2000\n                  :month 4)))", "# ::snt Catherine Nevin was seen on the bus , with a pal and walking around in Dublin .\n(s / see-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Catherine\"\n                  :op2 \"Nevin\")\n            :accompanier (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (p3 / pal)))\n            :ARG0-of (w / walk-01\n                  :ARG2 (a / around\n                        :op1 (c / city\n                              :name (n2 / name\n                                    :op1 \"Dublin\")))))\n      :location (b / bus))", "# ::snt Sat next to unsuspecting commuter on bus and went totally unnoticed .\n(a / and\n      :op1 (s / sit-01\n            :ARG1 (ii / i)\n            :ARG2 (n / next-to\n                  :op1 (p / person\n                        :ARG0-of (c / commute-01)\n                        :ARG0-of (s2 / suspect-01\n                              :polarity -))\n                  :location (b / bus)))\n      :op2 (n2 / notice-01\n            :polarity -\n            :ARG1 ii\n            :degree (t / total)))", "# ::snt Catherine Nevin murdered husband Tom in 1996 .\n(m / murder-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Catherine\"\n                  :op2 \"Nevin\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Tom\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 p\n                  :ARG2 (h2 / husband)))\n      :time (d / date-entity\n            :year 1996))"], "tree": ["(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life))", "(j / jail-01\n   :time (d / date-entity\n            :year 2000\n            :month 4))", "(j / jail-01\n   :time (d / date-entity\n            :year 2000\n            :month 4))", "(o / out-06\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")))", "(o / out-06\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")))", "(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life)\n   :time (d / date-entity\n            :year 2000\n            :month 4))", "(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life)\n   :time (d / date-entity\n            :year 2000\n            :month 4))", "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\"))))", "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :ARG1 p\n                  :ARG2 (l / life)\n                  :time (d / date-entity\n                           :year 2000\n                           :month 4)))", "(w / walk-01\n   :ARG2 (a / around\n            :op1 (c / city\n                    :name (n2 / name\n                              :op1 \"Dublin\"))))", "(h / have-rel-role-91\n   :ARG1 (p :ARG0 (w / walk-01\n                     :ARG2 (a / around\n                              :op1 (c / city\n                                      :name (n2 / name\n                                                :op1 \"Dublin\")))))\n   :ARG2 (p3 / pal))", "(s / see-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG1 p\n                                      :ARG2 (p3 / pal)))\n            :ARG0 (w / walk-01\n                     :ARG2 (a / around\n                              :op1 (c / city\n                                      :name (n2 / name\n                                                :op1 \"Dublin\"))))))", "(s / see-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG1 p\n                                      :ARG2 (p3 / pal)))\n            :ARG0 (w / walk-01\n                     :ARG2 (a / around\n                              :op1 (c / city\n                                      :name (n2 / name\n                                                :op1 \"Dublin\")))))\n   :location (b / bus))", "(s / see-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG1 p\n                                      :ARG2 (p3 / pal)))\n            :ARG0 (w / walk-01\n                     :ARG2 (a / around\n                              :op1 (c / city\n                                      :name (n2 / name\n                                                :op1 \"Dublin\")))))\n   :location (b / bus))", "(n2 / notice-01\n    :polarity -\n    :degree (t / total))", "(n2 / notice-01\n    :polarity -\n    :ARG1 (ii / i)\n    :degree (t / total))", "(s / sit-01\n   :ARG1 (ii / i)\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0 (c / commute-01)\n                    :ARG0 (s2 / suspect-01\n                              :polarity -))\n            :location (b / bus)))", "(s / sit-01\n   :ARG1 (ii / i)\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0 (c / commute-01)\n                    :ARG0 (s2 / suspect-01\n                              :polarity -))\n            :location (b / bus)))", "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (h2 / husband))", "(m / murder-01\n   :time (d / date-entity\n            :year 1996))", "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")))", "(m / murder-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Tom\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n                      :ARG2 (h2 / husband))))", "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Tom\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p\n                      :ARG2 (h2 / husband))))", "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Tom\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p\n                      :ARG2 (h2 / husband)))\n   :time (d / date-entity\n            :year 1996))"], "smus": ["Catherine Nevin was jailed for life.", "Jail Date: April 2000", "Jail Date: April 2000", "Catherine Nevin is out.", "Catherine Nevin is out.", "Catherine Nevin was jailed for life in April 2000.", "Catherine Nevin was jailed for life in April 2000.", "Catherine Nevin was allowed out.", "Catherine Nevin was allowed out despite being jailed for life in April 2000.", "Walking around Dublin.", "Walking around Dublin pal.", "Catherine Nevin was seen with her pal walking around Dublin.", "Catherine Nevin was seen on the bus with her pal walking around Dublin.", "Catherine Nevin was seen on the bus with her pal walking around Dublin.", "totally undesired.", "I wasn't totally noticed.", "I'm sitting next to an unsuspecting commuter on the bus.", "I'm sitting next to an unsuspecting commuter on the bus.", "Catherine Nevin is husband.", "Murdered in 1996.", "Catherine Nevin murdered.", "Tom murdered Catherine Nevin's husband.", "Catherine Nevin murdered Tom, her husband.", "Catherine Nevin murdered Tom's husband in 1996."]}, {"instance_id": "realsumm-12", "summary": "Didier Drogba given the Barclays Spirit of the Game award . Didier Drogba foundation has done impressive work in Africa . Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 . CLICK HERE for all the latest Chelsea 's news .", "summary_trees": ["# ::snt Didier Drogba given the Barclays Spirit of the Game award .\n(g / give-01\n      :ARG1 (a / award\n            :name (n / name\n                  :op1 \"Barclays\"\n                  :op2 \"Spirit\"\n                  :op3 \"of\"\n                  :op4 \"the\"\n                  :op5 \"Game\"))\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 \"Didier\"\n                  :op2 \"Drogba\")))", "# ::snt Didier Drogba foundation has done impressive work in Africa .\n(w / work-01\n      :ARG0 (f / foundation\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Didier\"\n                        :op2 \"Drogba\")))\n      :ARG0-of (ii / impress-01)\n      :location (c / continent\n            :name (n2 / name\n                  :op1 \"Africa\")))", "# ::snt Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 .\n(a / attend-01\n      :ARG0 (s / star\n            :ARG1-of (ii / include-91\n                  :ARG2 (s2 / star\n                        :poss (p / person\n                              :name (n / name\n                                    :op1 \"Chelsea\"))))\n            :quant (s3 / some))\n      :ARG1 (b / ball\n            :purpose (c / charity)\n            :ARG0-of (r / raise-02\n                  :ARG1 (m / monetary-quantity\n                        :quant 400000\n                        :unit (p2 / pound)))))", "# ::snt CLICK HERE for all the latest Chelsea 's news .\n(c / click-01\n      :location (h / here)\n      :purpose (n / news\n            :mod (l / last)\n            :mod (a / all)\n            :poss (p / person\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))))"], "tree": ["(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\")))", "(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\"))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Didier\"\n                      :op2 \"Drogba\")))", "(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\"))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Didier\"\n                      :op2 \"Drogba\")))", "(w / work-01\n   :location (c / continent\n                :name (n2 / name\n                          :op1 \"Africa\")))", "(w / work-01\n   :location (c / continent\n                :name (n2 / name\n                          :op1 \"Africa\")))", "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Didier\"\n                              :op2 \"Drogba\"))))", "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Didier\"\n                              :op2 \"Drogba\")))\n   :location (c / continent\n                :name (n2 / name\n                          :op1 \"Africa\")))", "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Didier\"\n                              :op2 \"Drogba\")))\n   :ARG0 (ii / impress-01)\n   :location (c / continent\n                :name (n2 / name\n                          :op1 \"Africa\")))", "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 400000\n            :unit (p2 / pound)))", "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 400000\n            :unit (p2 / pound)))", "(ii / include-91\n    :ARG2 (s2 / star\n              :poss (p / person\n                       :name (n / name\n                                :op1 \"Chelsea\"))))", "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\"))))\n            :quant (s3 / some)))", "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\"))))\n            :quant (s3 / some))\n   :ARG1 (b / ball\n            :purpose (c / charity)\n            :ARG0 (r / raise-02\n                     :ARG1 (m / monetary-quantity\n                              :quant 400000\n                              :unit (p2 / pound)))))", "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\"))))\n            :quant (s3 / some))\n   :ARG1 (b / ball\n            :purpose (c / charity)\n            :ARG0 (r / raise-02\n                     :ARG1 (m / monetary-quantity\n                              :quant 400000\n                              :unit (p2 / pound)))))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :poss (p / person\n                        :name (n2 / name\n                                  :op1 \"Chelsea\"))))", "(c / click-01\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :poss (p / person\n                        :name (n2 / name\n                                  :op1 \"Chelsea\"))))"], "smus": ["The Barclays Spirit of the Game award was given", "The Barclays Spirit of the Game award was given to Didier Drogba.", "The Barclays Spirit of the Game award was given to Didier Drogba.", "Work in Africa.", "Work in Africa.", "The work of Didier Drogba's foundation.", "The work of Didier Drogba's foundation is in Africa.", "The foundation of Didier Drogba has been impressive work in Africa.", "raised PS400,000.", "raised PS400,000.", "Chelsea's stars include:", "Some of Chelsea's stars attended.", "Some of Chelsea's stars attended a charity ball that raised PS400,000.", "Some of Chelsea's stars attended a charity ball that raised PS400,000.", "Here are the clicks for Chelsea's latest news.", "Here are the clicks for Chelsea's latest news."]}, {"instance_id": "realsumm-13", "summary": "Figures from the Catholic Church show more and more becoming nuns . The number of women taking Holy Vows stood at just seven back in 2004 . But The number of women taking Holy Vows had risen to 15 in 2009 and increased further to 45 last year . One father said a ' gap in the market for meaning ' led people toward religion .", "summary_trees": ["# ::snt Figures from the Catholic Church show more and more becoming nuns .\n(s / show-01\n      :ARG0 (f / figure\n            :source (o / organization\n                  :name (n / name\n                        :op1 \"Catholic\"\n                        :op2 \"Church\")))\n      :ARG1 (b / become-01\n            :ARG1 (p / person\n                  :quant (n2 / number\n                        :ARG1-of (ii / increase-01)))\n            :ARG2 (n3 / nun)))", "# ::snt The number of women taking Holy Vows stood at just seven back in 2004 .\n(s / stand-04\n      :ARG1 (n / number\n            :quant-of (w / woman\n                  :ARG0-of (t / take-01\n                        :ARG1 (t2 / thing\n                              :name (n2 / name\n                                    :op1 \"Holy\"\n                                    :op2 \"Vow\")))))\n      :ARG2 (n3 / numerical-quantity\n            :quant 7\n            :mod (j / just))\n      :time (d / date-entity\n            :year 2004))", "# ::snt But The number of women taking Holy Vows had risen to 15 in 2009 and increased further to 45 last year .\n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (r / rise-01\n                  :ARG1 (n / number\n                        :quant-of (w / woman\n                              :ARG0-of (t / take-01\n                                    :ARG1 (v / vow-01\n                                          :mod (h / holy)))))\n                  :ARG4 15\n                  :time (d / date-entity\n                        :year 2009))\n            :op2 (ii / increase-01\n                  :ARG1 n\n                  :ARG4 45\n                  :degree (f / further)\n                  :time (y / year\n                        :mod (l / last)))))", "# ::snt One father said a ' gap in the market for meaning ' led people toward religion .\n(s / say-01\n      :ARG0 (p / person\n            :quant 1\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (f / father)))\n      :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                  :location (m / market)\n                  :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))"], "tree": ["(b / become-01\n   :ARG1 (p / person\n            :quant (n2 / number\n                       :ARG1 (ii / increase-01)))\n   :ARG2 (n3 / nun))", "(b / become-01\n   :ARG1 (p / person\n            :quant (n2 / number\n                       :ARG1 (ii / increase-01)))\n   :ARG2 (n3 / nun))", "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\")))\n   :ARG1 (b / become-01\n            :ARG1 (p / person\n                     :quant (n2 / number\n                                :ARG1 (ii / increase-01)))\n            :ARG2 (n3 / nun)))", "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\")))\n   :ARG1 (b / become-01\n            :ARG1 (p / person\n                     :quant (n2 / number\n                                :ARG1 (ii / increase-01)))\n            :ARG2 (n3 / nun)))", "(t / take-01\n   :ARG1 (t2 / thing\n             :name (n2 / name\n                       :op1 \"Holy\"\n                       :op2 \"Vow\")))", "(t / take-01\n   :ARG1 (t2 / thing\n             :name (n2 / name\n                       :op1 \"Holy\"\n                       :op2 \"Vow\")))", "(t / take-01\n   :ARG1 (v / vow-01\n            :mod (h / holy)))", "(t / take-01\n   :ARG1 (v / vow-01\n            :mod (h / holy)))", "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (r / rise-01\n                    :ARG1 (n / number))))", "(ii / increase-01\n    :degree (f / further)\n    :time (y / year\n             :mod (l / last)))", "(ii / increase-01\n    :ARG1 (n / number)\n    :ARG4 45\n    :degree (f / further)\n    :time (y / year\n             :mod (l / last)))", "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01)))", "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person))", "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person)\n   :ARG4 (r / religion))", "(s / say-01\n   :ARG0 (p / person\n            :quant 1\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market)\n                     :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))", "(s / say-01\n   :ARG0 (p / person\n            :quant 1\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market)\n                     :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))"], "smus": ["More and more people are becoming nuns.", "More and more people are becoming nuns.", "Catholic Church figures show that more and more people are becoming nuns.", "Catholic Church figures show that more and more people are becoming nuns.", "Taking Holy Voi.", "Taking Holy Voi.", "Taking the Holy Vow.", "Taking the Holy Vow.", "But the number has risen.", "Further increased last year.", "The number increased to 45 further last year.", "The mean-ness gap in the market has led to it.", "The meanness gap in the market has led people.", "The meaning gap in the market has led people to religion.", "One father said the \"meaning gap\" in the market had led people to religion.", "One father said the \"meaning gap\" in the market had led people to religion."]}, {"instance_id": "realsumm-14", "summary": "Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes . Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three . Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored .", "summary_trees": ["# ::snt Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes .\n(p / put-03\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Eduardo\"\n                  :op2 \"Vargas\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"QPR\"))\n      :ARG2 (a / ahead)\n      :manner (s / strike-01\n            :ARG0 p2\n            :ARG2 (d / distance-quantity\n                  :quant 25\n                  :unit (y / yard))\n            :mod (s2 / spectacular))\n      :time (a2 / after\n            :quant (t2 / temporal-quantity\n                  :quant 15\n                  :unit (m / minute))))", "# ::snt Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three .\n(a / and\n      :op1 (d / double-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Austin\"))\n            :ARG1 (l / lead-01)\n            :instrument (h / header)\n            :time (a2 / after\n                  :quant (t / temporal-quantity\n                        :quant 20\n                        :unit (m / minute))))\n      :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n            :ARG1 l\n            :quant 3))", "# ::snt Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored .\n(p / pull-back-09\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Victor\"\n                  :op2 \"Anichebe\"))\n      :ARG1 (o / one)\n      :beneficiary (t / team\n            :name (n2 / name\n                  :op1 \"West\"\n                  :op2 \"Brum\"))\n      :time (b / before\n            :op1 (a / and\n                  :op1 (s / send-off-08\n                        :ARG1 (p3 / person\n                              :name (n3 / name\n                                    :op1 \"Youssouf\"\n                                    :op2 \"Mulumbu\")))\n                  :op2 (s2 / score-01\n                        :ARG0 (p4 / person\n                              :name (n4 / name\n                                    :op1 \"Joey\"\n                                    :op2 \"Barton\"))))))"], "tree": ["(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\")))", "(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))", "(p / put-03\n   :time (a2 / after\n             :quant (t2 / temporal-quantity\n                        :quant 15\n                        :unit (m / minute))))", "(s / strike-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n   :ARG2 (d / distance-quantity\n            :quant 25\n            :unit (y / yard))\n   :mod (s2 / spectacular))", "(p / put-03\n   :manner (s / strike-01)\n   :time (a2 / after\n             :quant (t2 / temporal-quantity\n                        :quant 15\n                        :unit (m / minute))))", "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))", "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :quant (t2 / temporal-quantity\n                        :quant 15\n                        :unit (m / minute))))", "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity\n                       :quant 25\n                       :unit (y / yard))\n              :mod (s2 / spectacular))\n   :time (a2 / after\n             :quant (t2 / temporal-quantity\n                        :quant 15\n                        :unit (m / minute))))", "(m2 / make-01\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n    :ARG1 (l / lead-01))", "(m2 / make-01\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n    :ARG1 (l / lead-01)\n    :quant 3)", "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01))", "(d / double-01\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20\n                       :unit (m / minute))))", "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20\n                       :unit (m / minute))))", "(s2 / score-01\n    :ARG0 (p4 / person\n              :name (n4 / name\n                        :op1 \"Joey\"\n                        :op2 \"Barton\")))", "(s / send-off-08\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Youssouf\"\n                       :op2 \"Mulumbu\")))", "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08)))", "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01)))", "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (a / and\n                    :op1 (s / send-off-08)\n                    :op2 (s2 / score-01))))", "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))", "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01\n                     :ARG0 (p4 / person\n                               :name (n4 / name\n                                         :op1 \"Joey\"\n                                         :op2 \"Barton\")))))", "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (a / and\n                    :op1 (s / send-off-08\n                            :ARG1 (p3 / person\n                                      :name (n3 / name\n                                                :op1 \"Youssouf\"\n                                                :op2 \"Mulumbu\")))\n                    :op2 (s2 / score-01\n                             :ARG0 (p4 / person\n                                       :name (n4 / name\n                                                 :op1 \"Joey\"\n                                                 :op2 \"Barton\"))))))"], "smus": ["Put QPR in.", "QPR put ahead", "Put after 15 minutes.", "Eduardo Vargas made a spectacular 25-yard strike.", "The strike put in after 15 minutes.", "Eduardo Vargas put QPR ahead.", "After 15 minutes Eduardo Vargas put QPR ahead.", "After 15 minutes, Eduardo Vargas put QPR ahead with a spectacular 25 yards strike.", "Bobby Zamora made the leader.", "Bobby Zamora made three leaders.", "Charlie Austin doubled the lead.", "The header doubled after 20 minutes.", "Charlie Austin doubled the lead with a header 20 minutes later.", "Joey Barton scored.", "Youssouf Mulumbu was sent off.", "West Brom pulled back before being sent off.", "Pullback for West Brom before scoring", "West Brom pulled back before being sent off and scored.", "Victor Anchebe pulled back one for West Brum before Youssouf Mulumbu was sent off.", "Victor Anchebe pulled back one for West Brum before Joey Barton scored.", "Victor Anichebe pulled back one for West Brum before Youssouf Mulumbu was sent off and Joey Barton scored."]}, {"instance_id": "realsumm-15", "summary": "Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators . The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye . Detroit Red Wings ' lost 2 - 1 but remained in third place in the Atlantic division .", "summary_trees": ["# ::snt Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators .\n(c / catch-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Drew\"\n                  :op2 \"Miller\")\n            :part-of (t / team\n                  :name (n2 / name\n                        :op1 \"Detroit\"\n                        :op2 \"Red\"\n                        :op3 \"Wings\")))\n      :ARG2 (s / skate)\n      :time (p2 / period\n            :ord (o / ordinal-entity\n                  :value 1)\n            :subevent-of (o2 / oppose-01\n                  :ARG0 t\n                  :ARG1 (t2 / team\n                        :name (n3 / name\n                              :op1 \"Ottawa\"\n                              :op2 \"Senators\")))))", "# ::snt The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye .\n(c / contrast-01\n      :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                  :ARG1 (c3 / cut-01\n                        :mod (m / massive)))\n            :ARG1 (s / stitch\n                  :quant (b / between\n                        :op1 50\n                        :op2 60)))\n      :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                  :part-of (p / person\n                        :name (n / name\n                              :op1 \"Miller\")))))", "# ::snt Detroit Red Wings ' lost 2 - 1 but remained in third place in the Atlantic division .\n(l / lose-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Detroit\"\n                  :op2 \"Red\"\n                  :op3 \"Wings\"))\n      :ARG2 (s / score-entity\n            :op1 2\n            :op2 1)\n      :concession-of (r / remain-01\n            :ARG1 t\n            :ARG3 (p / place\n                  :ord (o / ordinal-entity\n                        :value 3)\n                  :subevent-of (d / division\n                        :mod (o2 / ocean\n                              :name (n2 / name\n                                    :op1 \"Atlantic\"))))))"], "tree": ["(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\")))", "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\")))", "(o2 / oppose-01\n    :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n    :ARG1 (t2 / team\n              :name (n3 / name\n                        :op1 \"Ottawa\"\n                        :op2 \"Senators\")))", "(o2 / oppose-01\n    :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n    :ARG1 (t2 / team\n              :name (n3 / name\n                        :op1 \"Ottawa\"\n                        :op2 \"Senators\")))", "(c2 / close-01\n    :ARG1 (c3 / cut-01\n              :mod (m / massive)))", "(c2 / close-01\n    :ARG1 (c3 / cut-01\n              :mod (m / massive)))", "(r / require-01\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50\n                      :op2 60)))", "(d / damage-01\n   :ARG1 (e / eye\n            :part (p / person\n                     :name (n / name\n                              :op1 \"Miller\"))))", "(d / damage-01\n   :ARG0 (c3 / cut-01)\n   :ARG1 (e / eye\n            :part (p / person\n                     :name (n / name\n                              :op1 \"Miller\"))))", "(d / damage-01\n   :polarity -\n   :ARG0 (c3 / cut-01)\n   :ARG1 (e / eye\n            :part (p / person\n                     :name (n / name\n                              :op1 \"Miller\"))))", "(r / require-01\n   :ARG0 (c2 / close-01\n             :ARG1 (c3 / cut-01\n                       :mod (m / massive)))\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50\n                      :op2 60)))", "(r / require-01\n   :ARG0 (c2 / close-01\n             :ARG1 (c3 / cut-01\n                       :mod (m / massive)))\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50\n                      :op2 60)))", "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                      :ARG1 (c3 / cut-01\n                                :mod (m / massive)))\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op1 50\n                               :op2 60)))\n   :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                     :part (p / person\n                              :name (n / name\n                                       :op1 \"Miller\")))))", "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                      :ARG1 (c3 / cut-01\n                                :mod (m / massive)))\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op1 50\n                               :op2 60)))\n   :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                     :part (p / person\n                              :name (n / name\n                                       :op1 \"Miller\")))))", "(l / lose-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Detroit\"\n                     :op2 \"Red\"\n                     :op3 \"Wings\")))", "(l / lose-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Detroit\"\n                     :op2 \"Red\"\n                     :op3 \"Wings\"))\n   :ARG2 (s / score-entity\n            :op1 2\n            :op2 1))", "(r / remain-01\n   :ARG1 (t / team :name (n / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 3)\n            :subevent (d / division\n                         :mod (o2 / ocean\n                                  :name (n2 / name\n                                            :op1 \"Atlantic\")))))", "(r / remain-01\n   :ARG1 (t / team :name (n / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 3)\n            :subevent (d / division\n                         :mod (o2 / ocean\n                                  :name (n2 / name\n                                            :op1 \"Atlantic\")))))", "(l / lose-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Detroit\"\n                     :op2 \"Red\"\n                     :op3 \"Wings\"))\n   :ARG2 (s / score-entity\n            :op1 2\n            :op2 1)\n   :concession (r / remain-01\n                  :ARG1 t\n                  :ARG3 (p / place\n                           :ord (o / ordinal-entity\n                                   :value 3)\n                           :subevent (d / division\n                                        :mod (o2 / ocean\n                                                 :name (n2 / name\n                                                           :op1 \"Atlantic\"))))))"], "smus": ["Drew Miller was caught.", "Drew Miller was caught.", "Detroit Red Wings vs Ottawa Senators", "Detroit Red Wings vs Ottawa Senators", "Close the massive cut.", "Close the massive cut.", "required 50-60 stitches.", "Miller's eye was damaged.", "The cut did damage Miller's eye.", "The cut did not damage Miller's eye.", "The massive cut required between 50 and 60 stitches to close.", "The massive cut required between 50 and 60 stitches to close.", "The massive cut required 50-60 stitches to close, but did not damage Miller's eye.", "The massive cut required 50-60 stitches to close, but did not damage Miller's eye.", "Detroit Red Wings have lost", "Detroit Red Wings lost 2-0 at 1", "The Detroit Red Wings remained in third place in the Atlantic division.", "The Detroit Red Wings remained in third place in the Atlantic division.", "Detroit Red Wings lost by a score of 2-1, but remained in 3rd place in the Atlantic division."]}, {"instance_id": "realsumm-16", "summary": "Jurgen Klopp will leave Borussia Dortmund at the end of the season . Jurgen Klopp has enjoyed success with Borussia Dortmund during seven - year stint . Jurgen Klopp has been linked with Manchester City , Manchester United and Arsenal . Per Mertesacker says Mertesacker would like to see Jurgen Klopp in the Premier League .", "summary_trees": ["# ::snt Jurgen Klopp will leave Borussia Dortmund at the end of the season .\n(l / leave-15\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Borussia\"\n                  :op2 \"Dortmund\"))\n      :time (e / end-01\n            :ARG1 (s / season)))", "# ::snt Jurgen Klopp has enjoyed success with Borussia Dortmund during seven - year stint .\n(e / enjoy-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\"))\n      :ARG1 (s / succeed-01\n            :ARG0 p)\n      :prep-with (t / team\n            :name (n2 / name\n                  :op1 \"Borussia\"\n                  :op2 \"Dortmund\"))\n      :duration (s2 / stint\n            :duration (t2 / temporal-quantity\n                  :quant 7\n                  :unit (y / year))))", "# ::snt Jurgen Klopp has been linked with Manchester City , Manchester United and Arsenal .\n(l / link-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\"))\n      :ARG2 (a / and\n            :op1 (t / team\n                  :name (n2 / name\n                        :op1 \"Manchester\"\n                        :op2 \"City\"))\n            :op2 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\"))\n            :op3 (t3 / team\n                  :name (n4 / name\n                        :op1 \"Arsenal\"))))", "# ::snt Per Mertesacker says Mertesacker would like to see Jurgen Klopp in the Premier League .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Per\"\n                  :op2 \"Mertesacker\"))\n      :ARG1 (l / like-02\n            :ARG0 p\n            :ARG1 (s2 / see-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Jurgen\"\n                              :op2 \"Klopp\")\n                        :location (l2 / league\n                              :name (n3 / name\n                                    :op1 \"Premier\"\n                                    :op2 \"League\"))))))"], "tree": ["(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\")))", "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\"))\n   :time (e / end-01\n            :ARG1 (s / season)))", "(e / enjoy-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (s / succeed-01\n            :ARG0 p))", "(e / enjoy-01\n   :prep-with (t / team\n                 :name (n2 / name\n                           :op1 \"Borussia\"\n                           :op2 \"Dortmund\"))\n   :duration (s2 / stint\n                 :duration (t2 / temporal-quantity\n                               :quant 7\n                               :unit (y / year))))", "(e / enjoy-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (s / succeed-01\n            :ARG0 p)\n   :prep-with (t / team\n                 :name (n2 / name\n                           :op1 \"Borussia\"\n                           :op2 \"Dortmund\"))\n   :duration (s2 / stint\n                 :duration (t2 / temporal-quantity\n                               :quant 7\n                               :unit (y / year))))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (t3 / team\n             :name (n4 / name\n                       :op1 \"Arsenal\")))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (t3 / team\n             :name (n4 / name\n                       :op1 \"Arsenal\")))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Manchester\"\n                      :op2 \"City\")))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (t2 / team\n             :name (n3 / name\n                       :op1 \"Manchester\"\n                       :op2 \"United\")))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Manchester\"\n                      :op2 \"City\")))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (t2 / team\n             :name (n3 / name\n                       :op1 \"Manchester\"\n                       :op2 \"United\")))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (a / and\n            :op1 (t / team\n                    :name (n2 / name\n                              :op1 \"Manchester\"\n                              :op2 \"City\"))\n            :op2 (t2 / team\n                     :name (n3 / name\n                               :op1 \"Manchester\"\n                               :op2 \"United\"))\n            :op3 (t3 / team\n                     :name (n4 / name\n                               :op1 \"Arsenal\"))))", "(l / link-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG2 (a / and\n            :op1 (t / team\n                    :name (n2 / name\n                              :op1 \"Manchester\"\n                              :op2 \"City\"))\n            :op2 (t2 / team\n                     :name (n3 / name\n                               :op1 \"Manchester\"\n                               :op2 \"United\"))\n            :op3 (t3 / team\n                     :name (n4 / name\n                               :op1 \"Arsenal\"))))", "(s2 / see-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Jurgen\"\n                        :op2 \"Klopp\")\n              :location (l2 / league\n                            :name (n3 / name\n                                      :op1 \"Premier\"\n                                      :op2 \"League\"))))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Jurgen\"\n                        :op2 \"Klopp\")\n              :location (l2 / league\n                            :name (n3 / name\n                                      :op1 \"Premier\"\n                                      :op2 \"League\"))))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Jurgen\"\n                        :op2 \"Klopp\")\n              :location (l2 / league\n                            :name (n3 / name\n                                      :op1 \"Premier\"\n                                      :op2 \"League\"))))", "(l / like-02\n   :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n   :ARG1 (s2 / see-01\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Jurgen\"\n                                 :op2 \"Klopp\")\n                       :location (l2 / league\n                                     :name (n3 / name\n                                               :op1 \"Premier\"\n                                               :op2 \"League\")))))", "(l / like-02\n   :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n   :ARG1 (s2 / see-01\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Jurgen\"\n                                 :op2 \"Klopp\")\n                       :location (l2 / league\n                                     :name (n3 / name\n                                               :op1 \"Premier\"\n                                               :op2 \"League\")))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG0 p\n            :ARG1 (s2 / see-01\n                      :ARG0 p\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Jurgen\"\n                                          :op2 \"Klopp\")\n                                :location (l2 / league\n                                              :name (n3 / name\n                                                        :op1 \"Premier\"\n                                                        :op2 \"League\"))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG0 p\n            :ARG1 (s2 / see-01\n                      :ARG0 p\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Jurgen\"\n                                          :op2 \"Klopp\")\n                                :location (l2 / league\n                                              :name (n3 / name\n                                                        :op1 \"Premier\"\n                                                        :op2 \"League\"))))))"], "smus": ["Kurgen Klopp will leave Borussia Dortmund.", "Jurgen Klopp will leave Borussia Dortmund at the end of the season.", "Jurgen Klopp has enjoyed success.", "enjoyed a 7 year stint with Borussia Dortmund.", "Kurgen Klopp has enjoyed success with Borussia Dortmund for a 7 year stint.", "Kurgen Klopp is linked with Arsenal.", "Kurgen Klopp is linked with Arsenal.", "Jurgen Klopp is linked with Manchester City.", "Jurgen Klopp is linked with Manchester United.", "Jurgen Klopp is linked with Manchester City.", "Jurgen Klopp is linked with Manchester United.", "Jurgen Klopp is linked with Manchester City, Manchester United and Arsenal.", "Jurgen Klopp is linked with Manchester City, Manchester United and Arsenal.", "See Jurgen Klopp in the Premier League.", "Per Mertesacker will see Jurgen Klopp in the Prem League.", "Per Mertesacker will see Jurgen Klopp in the Prem League.", "Per Mertesacker would like to see Jurgen Klopp in the Prem League.", "Per Mertesacker would like to see Jurgen Klopp in the Prem League.", "Per Mertesacker says he would like to see Jurgen Klopp in the Prem League.", "Per Mertesacker says he would like to see Jurgen Klopp in the Prem League."]}, {"instance_id": "realsumm-17", "summary": "AppleInsider spotted nine listings in the past month relating to batteries . nine listings include one for an iOS battery life software engineer and another for iOS software power systems engineer . iOS significantly improved the battery life on iOS iPhone 6 and 6 Plus . But iOS has been criticised for phones and tablets that only do n't last a day .", "summary_trees": ["# ::snt AppleInsider spotted nine listings in the past month relating to batteries .\n(s / spot-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"AppleInsider\"))\n      :ARG1 (l / listing\n            :quant 9\n            :ARG1-of (r / relate-01\n                  :ARG2 (b / battery)))\n      :time (m / month\n            :mod (p2 / past)))", "# ::snt nine listings include one for an iOS battery life software engineer and another for iOS software power systems engineer .\n(ii / include-01\n      :ARG1 (a / and\n            :op1 (l / listing\n                  :quant 1\n                  :beneficiary (p / person\n                        :ARG0-of (e / engineer-01\n                              :ARG1 (s / software\n                                    :purpose (l2 / life\n                                          :mod (b / battery))\n                                    :mod (p2 / product\n                                          :name (n / name\n                                                :op1 \"iOS\"))))))\n            :op2 (l3 / listing\n                  :mod (a2 / another)\n                  :beneficiary (p3 / person\n                        :ARG0-of (e2 / engineer-01\n                              :ARG1 (s2 / system\n                                    :mod (p4 / power)\n                                    :mod (s3 / software))))))\n      :ARG2 (l4 / listing\n            :quant 9))", "# ::snt iOS significantly improved the battery life on iOS iPhone 6 and 6 Plus .\n(ii / improve-01\n      :ARG0 (p / product\n            :name (n / name\n                  :op1 \"iOS\"))\n      :ARG1 (l / life\n            :duration-of (b / battery)\n            :poss (a / and\n                  :op1 (p2 / product\n                        :name (n2 / name\n                              :op1 \"iPhone\"\n                              :op2 6\n                              :op3 \"Plus\"))\n                  :op2 (p3 / product\n                        :name (n3 / name\n                              :op1 \"iOS\"))))\n      :ARG1-of (s / significant-02))", "# ::snt But iOS has been criticised for phones and tablets that only do n't last a day .\n(c / contrast-01\n      :ARG2 (c2 / criticize-01\n            :ARG1 (p / product\n                  :name (n / name\n                        :op1 \"iOS\"))\n            :ARG2 (a / and\n                  :op1 (p2 / phone)\n                  :op2 (t / tablet)\n                  :ARG1-of (l / last-04\n                        :polarity -\n                        :ARG2 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (d / day))\n                        :mod (o / only)))))"], "tree": ["(s / spot-01\n   :time (m / month\n            :mod (p2 / past)))", "(s / spot-01\n   :time (m / month\n            :mod (p2 / past)))", "(s / spot-01\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery))))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))", "(e2 / engineer-01\n    :ARG1 (s2 / system\n              :mod (p4 / power)\n              :mod (s3 / software)))", "(e2 / engineer-01\n    :ARG1 (s2 / system\n              :mod (p4 / power)\n              :mod (s3 / software)))", "(e / engineer-01\n   :ARG1 (s / software\n            :purpose (l2 / life\n                         :mod (b / battery))\n            :mod (p2 / product\n                     :name (n / name\n                              :op1 \"iOS\"))))", "(e / engineer-01\n   :ARG1 (s / software\n            :purpose (l2 / life\n                         :mod (b / battery))\n            :mod (p2 / product\n                     :name (n / name\n                              :op1 \"iOS\"))))", "(ii / include-01\n    :ARG1 (l3 / listing\n              :mod (a2 / another)\n              :beneficiary (p3 / person\n                               :ARG0 (e2 / engineer-01\n                                         :ARG1 (s2 / system\n                                                   :mod (p4 / power)\n                                                   :mod (s3 / software)))))\n    :ARG2 (l4 / listing\n              :quant 9)\n    :ARG2 l4)", "(ii / include-01\n    :ARG1 (l3 / listing\n              :mod (a2 / another)\n              :beneficiary (p3 / person\n                               :ARG0 (e2 / engineer-01\n                                         :ARG1 (s2 / system\n                                                   :mod (p4 / power)\n                                                   :mod (s3 / software)))))\n    :ARG2 (l4 / listing\n              :quant 9)\n    :ARG2 l4)", "(ii / include-01\n    :ARG1 (l / listing\n             :quant 1\n             :beneficiary (p / person\n                             :ARG0 (e / engineer-01\n                                      :ARG1 (s / software\n                                               :purpose (l2 / life\n                                                            :mod (b / battery))\n                                               :mod (p2 / product\n                                                        :name (n / name\n                                                                 :op1 \"iOS\"))))))\n    :ARG2 (l4 / listing\n              :quant 9))", "(ii / include-01\n    :ARG1 (l / listing\n             :quant 1\n             :beneficiary (p / person\n                             :ARG0 (e / engineer-01\n                                      :ARG1 (s / software\n                                               :purpose (l2 / life\n                                                            :mod (b / battery))\n                                               :mod (p2 / product\n                                                        :name (n / name\n                                                                 :op1 \"iOS\"))))))\n    :ARG2 (l4 / listing\n              :quant 9))", "(ii / include-01\n    :ARG1 (a / and\n             :op1 (l / listing\n                     :quant 1\n                     :beneficiary (p / person\n                                     :ARG0 (e / engineer-01\n                                              :ARG1 (s / software\n                                                       :purpose (l2 / life\n                                                                    :mod (b / battery))\n                                                       :mod (p2 / product\n                                                                :name (n / name\n                                                                         :op1 \"iOS\"))))))\n             :op2 (l3 / listing\n                      :mod (a2 / another)\n                      :beneficiary (p3 / person\n                                       :ARG0 (e2 / engineer-01\n                                                 :ARG1 (s2 / system\n                                                           :mod (p4 / power)\n                                                           :mod (s3 / software))))))\n    :ARG2 (l4 / listing\n              :quant 9))", "(ii / include-01\n    :ARG1 (a / and\n             :op1 (l / listing\n                     :quant 1\n                     :beneficiary (p / person\n                                     :ARG0 (e / engineer-01\n                                              :ARG1 (s / software\n                                                       :purpose (l2 / life\n                                                                    :mod (b / battery))\n                                                       :mod (p2 / product\n                                                                :name (n / name\n                                                                         :op1 \"iOS\"))))))\n             :op2 (l3 / listing\n                      :mod (a2 / another)\n                      :beneficiary (p3 / person\n                                       :ARG0 (e2 / engineer-01\n                                                 :ARG1 (s2 / system\n                                                           :mod (p4 / power)\n                                                           :mod (s3 / software))))))\n    :ARG2 (l4 / listing\n              :quant 9))", "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p3 / product\n                       :name (n3 / name\n                                 :op1 \"iOS\"))))", "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p2 / product\n                       :name (n2 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\"))))", "(ii / improve-01\n    :ARG0 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p3 / product\n                       :name (n3 / name\n                                 :op1 \"iOS\"))))", "(ii / improve-01\n    :ARG0 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p2 / product\n                       :name (n2 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\"))))", "(ii / improve-01\n    :ARG0 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p3 / product\n                       :name (n3 / name\n                                 :op1 \"iOS\")))\n    :ARG1 (s / significant-02))", "(ii / improve-01\n    :ARG0 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p2 / product\n                       :name (n2 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\"))))", "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (a / and\n                      :op1 (p2 / product\n                               :name (n2 / name\n                                         :op1 \"iPhone\"\n                                         :op2 6\n                                         :op3 \"Plus\"))\n                      :op2 (p3 / product\n                               :name (n3 / name\n                                         :op1 \"iOS\")))))", "(ii / improve-01\n    :ARG0 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (a / and\n                      :op1 (p2 / product\n                               :name (n2 / name\n                                         :op1 \"iPhone\"\n                                         :op2 6\n                                         :op3 \"Plus\"))\n                      :op2 (p3 / product\n                               :name (n3 / name\n                                         :op1 \"iOS\")))))", "(ii / improve-01\n    :ARG0 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (a / and\n                      :op1 (p2 / product\n                               :name (n2 / name\n                                         :op1 \"iPhone\"\n                                         :op2 6\n                                         :op3 \"Plus\"))\n                      :op2 (p3 / product\n                               :name (n3 / name\n                                         :op1 \"iOS\"))))\n    :ARG1 (s / significant-02))", "(l / last-04\n   :polarity -\n   :mod (o / only))", "(c2 / criticize-01\n    :ARG1 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG2 (p2 / phone))", "(l / last-04\n   :polarity -\n   :ARG2 (t2 / temporal-quantity\n             :quant 1\n             :unit (d / day))\n   :mod (o / only))", "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (p / product\n                      :name (n / name\n                               :op1 \"iOS\"))\n             :ARG2 (p2 / phone)))", "(c2 / criticize-01\n    :ARG1 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG2 (t / tablet\n             :ARG1 (l / last-04\n                      :polarity -\n                      :ARG2 (t2 / temporal-quantity\n                                :quant 1\n                                :unit (d / day))\n                      :mod (o / only))))", "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (p / product\n                      :name (n / name\n                               :op1 \"iOS\"))\n             :ARG2 (t / tablet\n                      :ARG1 (l / last-04\n                               :polarity -\n                               :ARG2 (t2 / temporal-quantity\n                                         :quant 1\n                                         :unit (d / day))\n                               :mod (o / only)))))", "(c2 / criticize-01\n    :ARG1 (p / product\n             :name (n / name\n                      :op1 \"iOS\"))\n    :ARG2 (a / and\n             :op1 (p2 / phone)\n             :op2 (t / tablet)\n             :ARG1 (l / last-04\n                      :polarity -\n                      :ARG2 (t2 / temporal-quantity\n                                :quant 1\n                                :unit (d / day))\n                      :mod (o / only))))", "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (p / product\n                      :name (n / name\n                               :op1 \"iOS\"))\n             :ARG2 (a / and\n                      :op1 (p2 / phone)\n                      :op2 (t / tablet)\n                      :ARG1 (l / last-04\n                               :polarity -\n                               :ARG2 (t2 / temporal-quantity\n                                         :quant 1\n                                         :unit (d / day))\n                               :mod (o / only)))))"], "smus": ["Spotted in the past month.", "Spotted in the past month.", "In the past month, 9 listings related to batteries were spotted.", "AppleInsider spotted 9 listings related to batteries.", "AppleInsider spotted 9 listings related to batteries in the past month.", "Power and software systems engineering", "Power and software systems engineering", "iOS battery life software engineering", "iOS battery life software engineering", "Another listing for software power systems engineer include 9 listings.", "Another listing for software power systems engineer include 9 listings.", "One of the listings includes an IOS battery life engineer.", "One of the listings includes an IOS battery life engineer.", "There are 9 listings, one for an IOS battery life engineer and another for a software power system engineer.", "There are 9 listings, one for an IOS battery life engineer and another for a software power system engineer.", "The battery life of the OS improved.", "Battery life of the iPhone 6 Plus improved.", "IOS improved the battery life of the OS.", "IOS improved the battery life of the iPhone 6 Plus.", "IOS significantly improved the battery life of the OS.", "IOS improved the battery life of the iPhone 6 Plus.", "Battery life of iPhone 6 Plus and iPhone OS improved.", "IOS improved battery life of iPhone 6 Plus and OS.", "IOS significantly improved the battery life of the iPhone 6 Plus and OS.", "Not only does it not last.", "The iPhone has been criticized for the phones.", "It doesn't only last a day.", "But the iPhone has been criticized for the phones.", "The iOS has been criticized for the tablets that only last a day.", "But the iPad has been criticized for the tablets that only last a day.", "IOS has been criticized for phones and tablets that don't only last a day.", "But the IOS has been criticized for phones and tablets that don't only last a day."]}, {"instance_id": "realsumm-18", "summary": "Tournament performances have restored Andy Murray to World No 3 . But it 's wedding to Kim Sears that takes Andy Murray No 1 spot this week . Andy Murray is due to wedding to Kim Sears Kim Sears in Dunblane this coming Saturday . There are believed to be well over 100 names on down - to - earth guest list .", "summary_trees": ["# ::snt Tournament performances have restored Andy Murray to World\n(r / restore-01\n      :ARG0 (p / perform-01\n            :mod (t / tournament))\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Andy\"\n                  :op2 \"Murray\"))\n      :ARG2 (w / world))", "# ::snt No 3 .\n(n / no\n      :ord (o / ordinal-entity\n            :value 3))", "# ::snt But it 's wedding to Kim Sears that takes Andy Murray\n(c / contrast-01\n      :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Andy\"\n                              :op2 \"Murray\"))\n                  :ARG2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Kim\"\n                              :op2 \"Sears\")))\n            :ARG1 p))", "# ::snt No 1 spot this week .\n(s / spot\n      :polarity -\n      :ord (o / ordinal-entity\n            :value 1)\n      :time (w / week\n            :mod (t / this)))", "# ::snt Andy Murray is due to wedding to Kim Sears Kim Sears in Dunblane this coming Saturday .\n(d / due-03\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Andy\"\n                  :op2 \"Murray\"))\n      :ARG2 (w / wed-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Kim\"\n                        :op2 \"Sears\"))\n            :location (c / city\n                  :name (n3 / name\n                        :op1 \"Dunblane\")))\n      :time (d2 / date-entity\n            :weekday (s / saturday)\n            :mod (t / this)\n            :ARG1-of (c2 / come-01)))", "# ::snt There are believed to be well over 100 names on down - to - earth guest list .\n(b / believe-01\n      :ARG1 (n / name\n            :quant (o / over\n                  :op1 100\n                  :quant (w / well))\n            :location (l / list-01\n                  :ARG1 (g / guest)\n                  :mod (d / down-to-earth))))"], "tree": ["(r / restore-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\")))", "(r / restore-01\n   :ARG0 (p / perform-01\n            :mod (t / tournament))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\")))", "(r / restore-01\n   :ARG0 (p / perform-01\n            :mod (t / tournament))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\"))\n   :ARG2 (w / world))", "(n / no\n   :ord (o / ordinal-entity\n           :value 3))", "(w / wed-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Murray\")))", "(w / wed-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"\n                       :op2 \"Sears\")))", "(w / wed-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"\n                       :op2 \"Sears\")))", "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Andy\"\n                              :op2 \"Murray\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 p)", "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Andy\"\n                              :op2 \"Murray\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 p)", "(c / contrast-01\n   :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Andy\"\n                                       :op2 \"Murray\"))\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Kim\"\n                                         :op2 \"Sears\")))\n            :ARG1 p))", "(s / spot\n   :polarity -\n   :ord (o / ordinal-entity\n           :value 1)\n   :time (w / week\n            :mod (t / this)))", "(w / wed-01\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Dunblane\")))", "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Murray\")))", "(d / due-03\n   :time (d2 / date-entity\n             :weekday (s / saturday)\n             :mod (t / this)))", "(w / wed-01\n   :ARG1 (p / person :name (n / name :op1 \"Andy\" :op2 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"\n                       :op2 \"Sears\")))", "(w / wed-01\n   :ARG1 (p / person :name (n / name :op1 \"Andy\" :op2 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"\n                       :op2 \"Sears\"))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Dunblane\")))", "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Murray\"))\n   :ARG2 (w / wed-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\"))\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\"))))", "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andy\"\n                     :op2 \"Murray\"))\n   :ARG2 (w / wed-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\"))\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\")))\n   :time (d2 / date-entity\n             :weekday (s / saturday)\n             :mod (t / this)\n             :ARG1 (c2 / come-01)))", "(l / list-01\n   :ARG1 (g / guest)\n   :mod (d / down-to-earth))", "(b / believe-01\n   :ARG1 (n / name\n            :quant (o / over\n                      :op1 100\n                      :quant (w / well))\n            :location (l / list-01\n                         :ARG1 (g / guest)\n                         :mod (d / down-to-earth))))", "(b / believe-01\n   :ARG1 (n / name\n            :quant (o / over\n                      :op1 100\n                      :quant (w / well))\n            :location (l / list-01\n                         :ARG1 (g / guest)\n                         :mod (d / down-to-earth))))"], "smus": ["Andy Murray was restored.", "Andy Murray was restored by tournament performances.", "The tournament performances have restored Andy Murray to the World.", "No, no, no, no, no.", "Andy Murray got married.", "Andy Murray wed Kim Sears.", "Andy Murray wed Kim Sears.", "Andy Murray's wedding to Kim Sears takes her.", "Andy Murray's wedding to Kim Sears takes her.", "But the wedding of Andy Murray and Kim Sears takes her.", "No spot for the first time this week.", "Wed in Dunblane", "Andy Murray is due.", "Due this Saturday.", "Andy Murray wed Kim Sears.", "Andy Murray and Kim Sears wed in Dunblane.", "Andy Murray is due to wed Kim Sears in Dunblane.", "Andy Murray is due to wed Kim Sears in Dunblane this Saturday.", "Down to earth guest list.", "Well over 100 names on the down-to-earth guest list are believed to be.", "Well over 100 names on the down-to-earth guest list are believed to be."]}, {"instance_id": "realsumm-19", "summary": "Paula Dunican paid \u00a3 25 for the baby blue coat at Paula Dunican local branch of Asda . When Paula Dunican took the baby blue coat home Paula Dunican noticed a ' seeping ' stain on the back of coat . Paula Dunican then discovered the reptile 's crushed body on the baby blue coat lining . Asda has apologised and offered Paula Dunican a \u00a3 40 voucher and refund .", "summary_trees": ["# ::snt Paula Dunican paid \u00a3 25 for the baby blue coat at Paula Dunican local branch of Asda .\n(p / pay-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Paula\"\n                  :op2 \"Dunican\"))\n      :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n      :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby))\n      :location (b3 / branch\n            :poss (c2 / company\n                  :name (n2 / name\n                        :op1 \"Asda\"))\n            :ARG1-of (l / local-02\n                  :ARG2 p2)))", "# ::snt When Paula Dunican took the baby blue coat home Paula Dunican noticed a ' seeping ' stain on the back of coat .\n(n / notice-01\n      :ARG0 (p / person\n            :name (n2 / name\n                  :op1 \"Paula\"\n                  :op2 \"Dunican\"))\n      :ARG1 (s / stain-01\n            :ARG1 (b / back\n                  :part-of (c / coat\n                        :mod (b2 / blue)\n                        :mod (b3 / baby)))\n            :ARG1-of (s2 / seep-01))\n      :time (t / take-01\n            :ARG0 p\n            :ARG1 c\n            :ARG3 (h / home)))", "# ::snt Paula Dunican then discovered the reptile 's crushed body on the baby blue coat lining .\n(d / discover-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Paula\"\n                  :op2 \"Dunican\"))\n      :ARG1 (b / body\n            :part-of (r / reptile)\n            :ARG1-of (c / crush-01))\n      :location (l / lining\n            :part-of (c2 / coat\n                  :mod (b2 / blue)\n                  :mod (b3 / baby)))\n      :time (t / then))", "# ::snt Asda has apologised and offered Paula Dunican a \u00a3 40 voucher and refund .\n(a / and\n      :op1 (a2 / apologize-01\n            :ARG0 (c / company\n                  :name (n / name\n                        :op1 \"Asda\")))\n      :op2 (o / offer-01\n            :ARG0 c\n            :ARG1 (a3 / and\n                  :op1 (v / voucher\n                        :mod (m / monetary-quantity\n                              :quant 40\n                              :unit (p / pound)))\n                  :op2 (r / refund-01\n                        :ARG0 c\n                        :ARG2 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Paula\"\n                                    :op2 \"Dunican\"))))\n            :ARG3 p2))"], "tree": ["(p / pay-01\n   :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound)))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\")))", "(p / pay-01\n   :location (b3 / branch\n                 :poss (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound)))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby)))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby)))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :poss (c2 / company\n                           :name (n2 / name\n                                     :op1 \"Asda\"))\n                 :ARG1 (l / local-02\n                          :ARG2 p2)))", "(t / take-01\n   :ARG0 (p / person :name (n2 / name :op1 \"Paula\" :op2 \"Dunican\"))\n   :ARG1 (c / coat)\n   :ARG3 (h / home))", "(n / notice-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (s / stain-01\n            :ARG1 (b / back)))", "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01)))", "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01))\n   :time (t / then))", "(d / discover-01\n   :location (l / lining\n                :part (c2 / coat\n                          :mod (b2 / blue)\n                          :mod (b3 / baby))))", "(d / discover-01\n   :location (l / lining\n                :part (c2 / coat\n                          :mod (b2 / blue)\n                          :mod (b3 / baby)))\n   :time (t / then))", "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paula\"\n                     :op2 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01)))", "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (c2 / coat\n                          :mod (b2 / blue)\n                          :mod (b3 / baby))))", "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paula\"\n                     :op2 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01))\n   :time (t / then))", "(d / discover-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paula\"\n                     :op2 \"Dunican\"))\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (c2 / coat\n                          :mod (b2 / blue)\n                          :mod (b3 / baby)))\n   :time (t / then))", "(a2 / apologize-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Asda\")))", "(r / refund-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Paula\"\n                       :op2 \"Dunican\")))", "(o / offer-01\n   :ARG1 (v / voucher\n            :mod (m / monetary-quantity\n                    :quant 40\n                    :unit (p / pound))))", "(o / offer-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG1 (v / voucher\n            :mod (m / monetary-quantity\n                    :quant 40\n                    :unit (p / pound))))", "(o / offer-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG1 (v / voucher\n            :mod (m / monetary-quantity\n                    :quant 40\n                    :unit (p / pound))))", "(o / offer-01\n   :ARG1 (r / refund-01\n            :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Paula\"\n                                :op2 \"Dunican\"))))", "(o / offer-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG1 (r / refund-01\n            :ARG0 c\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Paula\"\n                                :op2 \"Dunican\"))))", "(o / offer-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG1 (r / refund-01\n            :ARG0 c\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Paula\"\n                                :op2 \"Dunican\")))\n   :ARG3 p2)", "(o / offer-01\n   :ARG1 (a3 / and\n             :op1 (v / voucher\n                     :mod (m / monetary-quantity\n                             :quant 40\n                             :unit (p / pound)))\n             :op2 (r / refund-01\n                     :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Paula\"\n                                         :op2 \"Dunican\")))))", "(o / offer-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG1 (a3 / and\n             :op1 (v / voucher\n                     :mod (m / monetary-quantity\n                             :quant 40\n                             :unit (p / pound)))\n             :op2 (r / refund-01\n                     :ARG0 c\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Paula\"\n                                         :op2 \"Dunican\")))))", "(o / offer-01\n   :ARG0 (c / company :name (n / name :op1 \"Asda\"))\n   :ARG1 (a3 / and\n             :op1 (v / voucher\n                     :mod (m / monetary-quantity\n                             :quant 40\n                             :unit (p / pound)))\n             :op2 (r / refund-01\n                     :ARG0 c\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Paula\"\n                                         :op2 \"Dunican\"))))\n   :ARG3 p2)"], "smus": ["paid PS25.", "Paula Dunican paid.", "Payments were made at the Asda branch.", "Paula Dunican paid PS25.", "Paula Dunican paid for the blue baby coat.", "Paula Dunican paid PS25 for a baby blue coat.", "Paula Dunican paid PS25 for a blue baby coat at the Asda branch in his locality.", "Paula Dunican took the coat home.", "Paula Dunican noticed a stain on the back.", "The reptile's body was discovered crushed.", "The reptile's body was then discovered to be crushed.", "Discovered in the lining of a baby blue coat.", "Then discovered in the lining of the baby blue coat.", "Paula Dunican discovered the reptile's body was crushed.", "The reptile's crushed body was discovered in the lining of a blue baby coat.", "Then Paula Dunican discovered a crushed reptile body.", "Then Paula Dunican discovered the reptile's crushed body in the lining of a blue baby coat.", "Asda has apologized.", "Asda will refund Paula Dunican.", "The voucher offered was PS40.", "Asda offered a PS40 voucher.", "Asda offered a PS40 voucher.", "Asda offered a refund to Paula Dunican.", "Asda offered a refund to Paula Dunican.", "Asda offered to refund Paula Dunican.", "The vouchers were PS40 and Asda offered a refund to Paula Dunican.", "Asda offered a PS40 voucher and a refund to Paula Dunican.", "Asda offered Paula Dunican a PS40 voucher and a refund."]}, {"instance_id": "realsumm-20", "summary": "Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 . Ronnie Carroll died in London two days ago , aged 80 , following a battle with cancer . Ronnie Carroll was running in the General Election for Hampstead and Kilburn . Ronnie Carroll remains on the paper and Ronnie Carroll will be elected if Ronnie Carroll gets enough votes .", "summary_trees": ["# ::snt Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 .\n(p / place-01\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Ronnie\"\n                  :op2 \"Carroll\"))\n      :ARG2 (f / fourth)\n      :ARG3 (c / contest\n            :name (n2 / name\n                  :op1 \"Eurovision\"))\n      :time (a / and\n            :op1 (d / date-entity\n                  :year 1962)\n            :op2 (d2 / date-entity\n                  :year 1963)))", "# ::snt Ronnie Carroll died in London two days ago , aged 80 , following a battle with cancer .\n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Ronnie\"\n                  :op2 \"Carroll\")\n            :age (t / temporal-quantity\n                  :quant 80\n                  :unit (y / year)))\n      :location (c / city\n            :name (n2 / name\n                  :op1 \"London\"))\n      :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d2 / day)))\n      :ARG1-of (f / follow-01\n            :ARG2 (b2 / battle-01\n                  :ARG0 p\n                  :ARG1 (d3 / disease\n                        :name (n4 / name\n                              :op1 \"cancer\")))))", "# ::snt Ronnie Carroll was running in the General Election for Hampstead and Kilburn .\n(r / run-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Ronnie\"\n                  :op2 \"Carroll\"))\n      :ARG1 (a / and\n            :op1 (c / city-district\n                  :name (n2 / name\n                        :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                  :name (n3 / name\n                        :op1 \"Kilburn\")))\n      :subevent-of (e / elect-01\n            :ARG1-of (g / general-02)))", "# ::snt Ronnie Carroll remains on the paper and Ronnie Carroll will be elected if Ronnie Carroll gets enough votes .\n(a / and\n      :op1 (r / remain-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Ronnie\"\n                        :op2 \"Carroll\"))\n            :location (p2 / paper))\n      :op2 (e / elect-01\n            :ARG1 p\n            :condition (g / get-01\n                  :ARG0 p\n                  :ARG1 (v / vote-01\n                        :ARG1 p\n                        :ARG1-of (h / have-quant-91\n                              :ARG3 (e2 / enough))))))"], "tree": ["(p / place-01\n   :time (d / date-entity\n            :year 1962))", "(p / place-01\n   :time (d2 / date-entity\n             :year 1963))", "(p / place-01\n   :time (d / date-entity\n            :year 1962))", "(p / place-01\n   :time (d2 / date-entity\n             :year 1963))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth))", "(p / place-01\n   :time (a / and\n            :op1 (d / date-entity\n                    :year 1962)\n            :op2 (d2 / date-entity\n                     :year 1963)))", "(p / place-01\n   :time (a / and\n            :op1 (d / date-entity\n                    :year 1962)\n            :op2 (d2 / date-entity\n                     :year 1963)))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :time (d / date-entity\n            :year 1962))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :time (d2 / date-entity\n             :year 1963))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :time (a / and\n            :op1 (d / date-entity\n                    :year 1962)\n            :op2 (d2 / date-entity\n                     :year 1963)))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :ARG3 (c / contest\n            :name (n2 / name\n                      :op1 \"Eurovision\"))\n   :time (d / date-entity\n            :year 1962))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :ARG3 (c / contest\n            :name (n2 / name\n                      :op1 \"Eurovision\"))\n   :time (d2 / date-entity\n             :year 1963))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :ARG3 (c / contest\n            :name (n2 / name\n                      :op1 \"Eurovision\"))\n   :time (a / and\n            :op1 (d / date-entity\n                    :year 1962)\n            :op2 (d2 / date-entity\n                     :year 1963)))", "(b2 / battle-01\n    :ARG1 (d3 / disease\n              :name (n4 / name\n                        :op1 \"cancer\")))", "(b2 / battle-01\n    :ARG0 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\")))\n    :ARG1 (d3 / disease\n              :name (n4 / name\n                        :op1 \"cancer\")))", "(b2 / battle-01\n    :ARG0 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\")))\n    :ARG1 (d3 / disease\n              :name (n4 / name\n                        :op1 \"cancer\")))", "(f / follow-01\n   :ARG2 (b2 / battle-01\n             :ARG0 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\")))\n             :ARG1 (d3 / disease\n                       :name (n4 / name\n                                 :op1 \"cancer\"))))", "(d / die-01\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day))))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\")\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year))))", "(d / die-01\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day))))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\")\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year)))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day))))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\")\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year)))\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"London\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day)))\n   :ARG1 (f / follow-01\n            :ARG2 (b2 / battle-01\n                      :ARG0 p\n                      :ARG1 (d3 / disease\n                                :name (n4 / name\n                                          :op1 \"cancer\")))))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c / city-district\n            :name (n2 / name\n                      :op1 \"Hampstead\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c / city-district\n            :name (n2 / name\n                      :op1 \"Hampstead\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :ARG1 (a / and\n            :op1 (c / city-district\n                    :name (n2 / name\n                              :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                     :name (n3 / name\n                               :op1 \"Kilburn\"))))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :ARG1 (a / and\n            :op1 (c / city-district\n                    :name (n2 / name\n                              :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                     :name (n3 / name\n                               :op1 \"Kilburn\"))))", "(v / vote-01\n   :ARG1 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\"))\n   :ARG1 (h / have-quant-91\n            :ARG3 (e2 / enough)))", "(r / remain-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\")))", "(g / get-01\n   :ARG0 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\"))\n   :ARG1 (v / vote-01\n            :ARG1 p\n            :ARG1 (h / have-quant-91\n                     :ARG3 (e2 / enough))))", "(r / remain-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ronnie\"\n                     :op2 \"Carroll\"))\n   :location (p2 / paper))", "(g / get-01\n   :ARG0 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\"))\n   :ARG1 (v / vote-01\n            :ARG1 p\n            :ARG1 (h / have-quant-91\n                     :ARG3 (e2 / enough))))", "(e / elect-01\n   :ARG1 (p / person :name (n / name :op1 \"Ronnie\" :op2 \"Carroll\"))\n   :condition (g / get-01\n                 :ARG0 p\n                 :ARG1 (v / vote-01\n                          :ARG1 p\n                          :ARG1 (h / have-quant-91\n                                   :ARG3 (e2 / enough)))))"], "smus": ["Placed in 1962.", "Placed 1963.", "Placed in 1962.", "Placed 1963.", "Ronnie Carroll placed fourth.", "Placed in 1962 and 1963.", "Placed in 1962 and 1963.", "In 1962, Ronnie Carroll placed fourth.", "In 1963, Ronnie Carroll placed fourth.", "In 1962 and 1963, Ronnie Carroll placed fourth.", "Ronie Carroll placed fourth in the Eurovision contest in 1962.", "Ronie Carroll placed fourth in the Eurovision contest in 1963.", "Ronie Carroll placed fourth in the Eurovision contest in 1962 and 1963.", "battle with cancer", "Ronnie Carroll is in battle with cancer.", "Ronnie Carroll is in battle with cancer.", "Following Ronnie Carrill's battle with cancer.", "Two days ago, a man died.", "Ronnie Carroll, 80, died.", "Two days ago, a man died in London.", "Ronnie Carroll, 80, died two days ago.", "Ronnie Carroll, 80, died in London two days ago following a battle with cancer.", "Ronnie Carroll is running.", "- Hampstead: Ronnie Carroll is running.", "Kilburn is run by Ronnie Carroll.", "- Hampstead: Ronnie Carroll is running.", "Kilburn is run by Ronnie Carroll.", "- Hampstead and Kilburn: Ronnie Carroll is running.", "- Hampstead and Kilburn: Ronnie Carroll is running.", "Ronie Carroll got enough votes.", "Ronnie Carroll remains.", "Ronnie Carroll gets enough votes.", "Ronnie Carroll remains in the paper.", "Ronnie Carroll gets enough votes.", "If Ronnie Carroll gets enough votes, he will be elected."]}, {"instance_id": "realsumm-21", "summary": "McHenry , 28 , berated single mother Gina Michelle for towing single mother Gina Michelle car . McHenry , 28 , insulted single mother Gina Michelle looks and social status in footage that went viral . ESPN suspended McHenry , 28 , for a week amid investigation . But despite thousands of calls for McHenry , 28 , to be fired , McHenry , 28 , returns this week .", "summary_trees": ["# ::snt McHenry , 28 , berated single mother Gina Michelle for towing single mother Gina Michelle car .\n(b / berate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Gina\"\n                  :op2 \"Michelle\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother\n                        :ARG1-of (s / single-03))))\n      :ARG2 (t2 / tow-01\n            :ARG0 p\n            :ARG1 (c / car\n                  :poss p2)))", "# ::snt McHenry , 28 , insulted single mother Gina Michelle looks and social status in footage that went viral .\n(ii / insult-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG1 (a / and\n            :op1 (l / look-02\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Gina\"\n                              :op2 \"Michelle\")\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG2 (m / mother\n                                    :ARG1-of (s / single-03)))))\n            :op2 (s2 / status\n                  :mod (s3 / social)))\n      :medium (f / footage\n            :ARG1-of (g / go-08\n                  :ARG2 (v / viral))))", "# ::snt ESPN suspended McHenry , 28 , for a week amid investigation .\n(s / suspend-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"ESPN\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :duration (t2 / temporal-quantity\n            :quant 1\n            :unit (w / week))\n      :ARG1-of (c / cause-01\n            :ARG0 (ii / investigate-01)))", "# ::snt But despite thousands of calls for McHenry , 28 , to be fired , McHenry , 28 , returns this week .\n(h / have-concession-91\n      :ARG1 (r / return-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"McHenry\")\n                  :age (t / temporal-quantity\n                        :quant 28\n                        :unit (y / year)))\n            :time (w / week\n                  :mod (t2 / this)))\n      :ARG2 (c / call-03\n            :ARG1 (f / fire-02\n                  :ARG1 p)\n            :quant (m / multiple\n                  :op1 1000)))"], "tree": ["(t2 / tow-01\n    :ARG0 (p / person :name (n / name :op1 \"McHenry\")))\n    :ARG1 (c / car\n             :poss (p2 / person :name (n2 / name :op1 \"Gina\" :op2 \"Michelle\")))))", "(h / have-rel-role-91\n   :ARG2 (m / mother\n            :ARG1 (s / single-03)))", "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG0 p\n             :ARG1 (c / car\n                      :poss p2)))", "(h / have-rel-role-91\n   :ARG2 (m / mother\n            :ARG1 (s / single-03)))", "(l / look-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03)))))", "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"McHenry\")\n             :age (t / temporal-quantity\n                     :quant 28\n                     :unit (y / year)))\n    :ARG1 (s2 / status\n              :mod (s3 / social))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral)))\n    :medium f)", "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"McHenry\")\n             :age (t / temporal-quantity\n                     :quant 28\n                     :unit (y / year)))\n    :ARG1 (l / look-02\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Gina\"\n                                 :op2 \"Michelle\")\n                       :ARG0 (h / have-rel-role-91\n                                :ARG2 (m / mother\n                                         :ARG1 (s / single-03)))))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))", "(ii / insult-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"McHenry\")\n             :age (t / temporal-quantity\n                     :quant 28\n                     :unit (y / year)))\n    :ARG1 (a / and\n             :op1 (l / look-02\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Gina\"\n                                         :op2 \"Michelle\")\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG2 (m / mother\n                                                 :ARG1 (s / single-03)))))\n             :op2 (s2 / status\n                      :mod (s3 / social)))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))", "(s / suspend-01\n   :duration (t2 / temporal-quantity\n                 :quant 1\n                 :unit (w / week)))", "(s / suspend-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"McHenry\")\n             :age (t / temporal-quantity\n                     :quant 28\n                     :unit (y / year))))", "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"McHenry\")\n             :age (t / temporal-quantity\n                     :quant 28\n                     :unit (y / year))))", "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"McHenry\")\n             :age (t / temporal-quantity\n                     :quant 28\n                     :unit (y / year)))\n   :duration (t2 / temporal-quantity\n                 :quant 1\n                 :unit (w / week))\n   :ARG1 (c / cause-01\n            :ARG0 (ii / investigate-01)))", "(c / call-03\n   :ARG1 (f / fire-02\n            :ARG1 (p / person :name (n / name :op1 \"McHenry\")))))", "(c / call-03\n   :quant (m / multiple\n             :op1 1000))", "(r / return-01\n   :time (w / week\n            :mod (t2 / this)))", "(r / return-01\n   :time (w / week\n            :mod (t2 / this)))", "(c / call-03\n   :ARG1 (f / fire-02\n            :ARG1 (p / person :name (n / name :op1 \"McHenry\"))))\n   :quant (m / multiple\n             :op1 1000))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year))))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :time (w / week\n            :mod (t2 / this)))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :time (w / week\n            :mod (t2 / this)))", "(h / have-concession-91\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"McHenry\")\n                     :age (t / temporal-quantity\n                             :quant 28\n                             :unit (y / year)))\n            :time (w / week\n                     :mod (t2 / this))))", "(h / have-concession-91\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"McHenry\")\n                     :age (t / temporal-quantity\n                             :quant 28\n                             :unit (y / year)))\n            :time (w / week\n                     :mod (t2 / this)))\n   :ARG2 (c / call-03\n            :ARG1 (f / fire-02\n                     :ARG1 p)\n            :quant (m / multiple\n                      :op1 1000)))", "(h / have-concession-91\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"McHenry\")\n                     :age (t / temporal-quantity\n                             :quant 28\n                             :unit (y / year)))\n            :time (w / week\n                     :mod (t2 / this)))\n   :ARG2 (c / call-03\n            :ARG1 (f / fire-02\n                     :ARG1 p)\n            :quant (m / multiple\n                      :op1 1000)))"], "smus": ["McHenry was towing Gina Michelle's car.", "Single mother.", "McHenry, 28, berated single mother Gina Michelle for towing her car.", "Single mother.", "Gina Michelle looks like a single mother.", "In the footage that went viral, McHenry, 28, insulted social status.", "In the footage that went viral, McHenry, 28, insulted the look of single mother Gina Michelle.", "In the footage that went viral, McHenry, 28, insulted the single mother Gina Michelle for her looks and social status.", "The suspension was for a week.", "McHenry, 28, was suspended.", "ESPN suspended Mr. McHenry, 28, from work.", "The 28-year-old McHenry was suspended for a week by ESPN for the investigation.", "Calls for McHenry to be fired.", "Thousands of calls.", "Returns this week.", "Returns this week.", "Thousands of calls for McHenry to be fired.", "McHenry returns at age 28.", "McHenry returns this week at age 28.", "McHenry returns this week at age 28.", "But this week, 28-year-old McHenry returns.", "McHenry returns this week at age 28 after thousands of calls to be fired.", "McHenry returns this week at age 28 after thousands of calls to be fired."]}, {"instance_id": "realsumm-22", "summary": "Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast . Came up with idea when pregnant with daughter , Lola , now three months . Says Chloe Owens , 27 , from Swanley and husband David felt like ' rabbits in headlights ' at first . Also struggled to remember which boob to use when breastfeeding .", "summary_trees": ["# ::snt Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast .\n(d / design-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chloe\"\n                  :op2 \"Owens\")\n            :age (t / temporal-quantity\n                  :quant 27\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Swanley\")))\n      :ARG1 (a / app\n            :name (n3 / name\n                  :op1 \"Bump\"\n                  :op2 2\n                  :op3 \"Breast\")\n            :ARG1-of (n4 / new-01)))", "# ::snt Came up with idea when pregnant with daughter , Lola , now three months .\n(c / come-up-11\n      :ARG0 (ii / i)\n      :ARG1 (ii2 / idea)\n      :time (ii3 / impregnate-01\n            :ARG1 ii\n            :ARG2 (p / person\n                  :name (n / name\n                        :op1 \"Lola\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 ii\n                        :ARG2 (d / daughter))\n                  :age (t / temporal-quantity\n                        :quant 3\n                        :unit (m / month)\n                        :time (n2 / now)))))", "# ::snt Says Chloe Owens , 27 , from Swanley and husband David felt like ' rabbits in headlights ' at first .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chloe\"\n                  :op2 \"Ossins\")\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                  :quant 27\n                  :unit (y / year)))\n      :ARG1 (f / feel-01\n            :ARG0 (a / and\n                  :op1 p\n                  :op2 (p2 / person\n                        :name (n3 / name\n                              :op1 \"David\")\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n            :ARG1 (r / resemble-01\n                  :ARG1 a\n                  :ARG2 (b / bunny\n                        :location (h3 / head\n                              :part-of (h4 / headlights))))\n            :time (a2 / at-first)))", "# ::snt Also struggled to remember which boob to use when breastfeeding .\n(s / struggle-02\n      :ARG0 (ii / i)\n      :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                  :ARG1-of (u / use-01\n                        :ARG0 ii\n                        :time (b2 / breastfeed-01\n                              :ARG0 ii))))\n      :mod (a / also))"], "tree": ["(d / design-01\n   :ARG1 (a / app\n            :name (n3 / name\n                      :op1 \"Bump\"\n                      :op2 2\n                      :op3 \"Breast\")\n            :ARG1 (n4 / new-01)))", "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Owens\")\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\")))\n   :ARG1 (a / app\n            :name (n3 / name\n                      :op1 \"Bump\"\n                      :op2 2\n                      :op3 \"Breast\")\n            :ARG1 (n4 / new-01)))", "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Owens\")\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\")))\n   :ARG1 (a / app\n            :name (n3 / name\n                      :op1 \"Bump\"\n                      :op2 2\n                      :op3 \"Breast\")\n            :ARG1 (n4 / new-01)))", "(h / have-rel-role-91\n   :ARG1 (ii / i)\n   :ARG2 (d / daughter))", "(c / come-up-11\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / idea))", "(ii3 / impregnate-01\n     :ARG1 (ii / i)\n     :ARG2 (p / person\n              :name (n / name\n                       :op1 \"Lola\")\n              :ARG0 (h / have-rel-role-91\n                       :ARG1 ii\n                       :ARG2 (d / daughter))\n              :age (t / temporal-quantity\n                      :quant 3\n                      :unit (m / month)\n                      :time (n2 / now))))", "(c / come-up-11\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / idea)\n   :time (ii3 / impregnate-01\n              :ARG1 ii\n              :ARG2 (p / person\n                       :name (n / name\n                                :op1 \"Lola\")\n                       :ARG0 (h / have-rel-role-91\n                                :ARG1 ii\n                                :ARG2 (d / daughter))\n                       :age (t / temporal-quantity\n                               :quant 3\n                               :unit (m / month)\n                               :time (n2 / now)))))", "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n   :ARG2 (h2 / husband))", "(r / resemble-01\n   :ARG1 (a / and)\n   :ARG2 (b / bunny\n            :location (h3 / head\n                          :part (h4 / headlights))))", "(r / resemble-01\n   :ARG1 (a / and)\n   :ARG2 (b / bunny\n            :location (h3 / head\n                          :part (h4 / headlights))))", "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n   :ARG1 (r / resemble-01\n            :ARG1 p\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))", "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n   :ARG1 (r / resemble-01\n            :ARG1 p\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))", "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n   :ARG1 (r / resemble-01\n            :ARG1 p\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))", "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n3 / name\n                       :op1 \"David\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n                      :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG1 p2\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :ARG1 r)", "(f / feel-01\n   :ARG0 (a / and\n            :op1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"David\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n   :ARG1 (r / resemble-01\n            :ARG1 a\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))", "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n3 / name\n                       :op1 \"David\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n                      :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG1 p2\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :ARG1 r\n   :time (a2 / at-first))", "(f / feel-01\n   :ARG0 (p2 / person\n             :name (n3 / name\n                       :op1 \"David\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n                      :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG1 p2\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :ARG1 r\n   :time (a2 / at-first))", "(f / feel-01\n   :ARG0 (a / and\n            :op1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"David\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n   :ARG1 (r / resemble-01\n            :ARG1 a\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))", "(f / feel-01\n   :ARG0 (a / and\n            :op1 (p / person :name (n / name :op1 \"Chloe\" :op2 \"Ossins\")))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"David\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n   :ARG1 (r / resemble-01\n            :ARG1 a\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Ossins\")\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 p\n            :ARG1 (r / resemble-01\n                     :ARG1 p\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :time (a2 / at-first)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Ossins\")\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 p\n            :ARG1 (r / resemble-01\n                     :ARG1 p\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :time (a2 / at-first)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Ossins\")\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 (p2 / person\n                      :name (n3 / name\n                                :op1 \"David\")\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p\n                               :ARG2 (h2 / husband)))\n            :ARG1 (r / resemble-01\n                     :ARG1 p2\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :ARG1 r\n            :time (a2 / at-first)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Ossins\")\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 (p2 / person\n                      :name (n3 / name\n                                :op1 \"David\")\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p\n                               :ARG2 (h2 / husband)))\n            :ARG1 (r / resemble-01\n                     :ARG1 p2\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :ARG1 r\n            :time (a2 / at-first)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Ossins\")\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 (a / and\n                     :op1 p\n                     :op2 (p2 / person\n                              :name (n3 / name\n                                        :op1 \"David\")\n                              :ARG0 (h / have-rel-role-91\n                                       :ARG1 p\n                                       :ARG2 (h2 / husband))))\n            :ARG1 (r / resemble-01\n                     :ARG1 a\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :time (a2 / at-first)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Ossins\")\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\"))\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 (a / and\n                     :op1 p\n                     :op2 (p2 / person\n                              :name (n3 / name\n                                        :op1 \"David\")\n                              :ARG0 (h / have-rel-role-91\n                                       :ARG1 p\n                                       :ARG2 (h2 / husband))))\n            :ARG1 (r / resemble-01\n                     :ARG1 a\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :time (a2 / at-first)))", "(u / use-01\n   :ARG0 (ii / i)\n   :time (b2 / breastfeed-01\n             :ARG0 ii))", "(r / remember-01\n   :ARG0 (ii / i)\n   :ARG1 (b / boob\n            :ARG1 (u / use-01\n                     :ARG0 ii\n                     :time (b2 / breastfeed-01\n                               :ARG0 ii))))", "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :ARG0 ii\n                              :time (b2 / breastfeed-01\n                                        :ARG0 ii))))\n   :mod (a / also))"], "smus": ["The new app, bump 2 breast, was designed.", "Holly Owens, 2, of Swanley, designed the new bump 2 breast app.", "Holly Owens, 2, of Swanley, designed the new bump 2 breast app.", "My daughter.", "I came up with the idea.", "I am pregnant with my daughter, Lola, who is now 3 months old.", "I came up with the idea when I was pregnant with my daughter, Lola, who is now 3 months old.", "-Chloe Ossins, husband", "Like bunnies on headlights heads.", "Like bunnies on headlights heads.", "Holly Ossins felt like a bunny with headlights on their heads.", "At first, Holly Ossins felt like a bunny with headlights on their heads.", "At first, Holly Ossins felt like a bunny with headlights on their heads.", "David Ossins' husband felt like a bunny with headlights on his head.", "I felt like a bunny in the headlights,'' Holly Ossins and her husband, David, felt.", "David Ossins husband felt like a bunny in headlights at first.", "David Ossins husband felt like a bunny in headlights at first.", "At first, Holly Ossins and her husband David felt like a bunny with headlights on their heads.", "At first, Holly Ossins and her husband David felt like a bunny with headlights on their heads.", "\"I first felt like a bunny with headlights,\" says Holly Ossins, 27, of Swanley.", "\"I first felt like a bunny with headlights,\" says Holly Ossins, 27, of Swanley.", "\"My husband David felt like a bunny with headlights,\" says Holly Ossins, 27, of Swanley.", "\"My husband David felt like a bunny with headlights,\" says Holly Ossins, 27, of Swanley.", "\"I felt like a bunny in headlights at first,\" says Holly Ossins, 27, of Swanley.", "\"I felt like a bunny in headlights at first,\" says Holly Ossins, 27, of Swanley.", "I use when I'm breast feeding.", "I do remember being boob about using when I was breast feeding.", "I also struggled to remember the boobs I used to use while breast feeding."]}, {"instance_id": "realsumm-23", "summary": "Harley Street is a top destination for private cosmetic surgery . Patients pay thousands for treatments Patients hope will change Patients lives . Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost Michael , 33 , self - esteem . Andrea , 72 , pays for a facelift - but Andrea , 72 , husband ca n't tell the difference .", "summary_trees": ["# ::snt Harley Street is a top destination for private cosmetic surgery .\n(d / destination\n      :mod (t / top)\n      :domain (s / street\n            :name (n / name\n                  :op1 \"Harley\"\n                  :op2 \"Street\"))\n      :purpose (s2 / surgery-01\n            :ARG2 (c / cosmetic)\n            :ARG1-of (p / private-03)))", "# ::snt Patients pay thousands for treatments Patients hope will change Patients lives .\n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p3 / patient)))\n      :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                  :quant 1000\n                  :unit (d / dollar)))\n      :ARG3 (t / treat-03\n            :ARG1 p2\n            :ARG0-of (c / change-01\n                  :ARG1 (l / life\n                        :poss p2)\n                  :ARG1-of (h2 / hope-01\n                        :ARG0 p2))))", "# ::snt Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost Michael , 33 , self - esteem .\n(s / spend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\")\n            :age (t / temporal-quantity\n                  :quant 33\n                  :unit (y / year))\n            :part (h / hair))\n      :ARG1 (t2 / transplant-01\n            :ARG1 h)\n      :ARG3 (m / monetary-quantity\n            :quant 7000\n            :unit (p2 / pound))\n      :purpose (b / boost-01\n            :ARG0 t2\n            :ARG1 (e / esteem-01\n                  :ARG0 p\n                  :ARG1 p)))", "# ::snt Andrea , 72 , pays for a facelift - but Andrea , 72 , husband ca n't tell the difference .\n(c / contrast-01\n      :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Andrea\")\n                  :age (t / temporal-quantity\n                        :quant 72\n                        :unit (y / year)))\n            :ARG3 (f / facelift))\n      :ARG2 (p3 / possible-01\n            :polarity -\n            :ARG1 (k / know-04\n                  :ARG0 (p4 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 p2\n                              :ARG2 (h2 / husband))\n                        :age (t2 / temporal-quantity\n                              :quant 72\n                              :unit (y2 / year)))\n                  :ARG1 (t3 / thing\n                        :ARG1-of (d / differ-02)))))"], "tree": ["(s2 / surgery-01\n    :ARG2 (c / cosmetic)\n    :ARG1 (p / private-03))", "(c / change-01\n   :ARG1 (l / life\n            :poss (p2 / person)))", "(c / change-01\n   :ARG1 (l / life\n            :poss (p2 / person))\n   :ARG1 (h2 / hope-01\n             :ARG0 p2))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient))))", "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG3 (t / treat-03\n            :ARG1 p2))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar)))\n   :ARG3 (t / treat-03\n            :ARG1 p2))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar)))\n   :ARG3 (t / treat-03\n            :ARG1 p2))", "(b / boost-01\n   :ARG0 (t2 / transplant-01)\n   :ARG1 (e / esteem-01\n            :ARG0 (p / person :name (n / name :op1 \"Michael\")))\n            :ARG1 p))", "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\")\n            :age (t / temporal-quantity\n                    :quant 33\n                    :unit (y / year))\n            :part (h / hair))\n   :ARG1 (t2 / transplant-01\n             :ARG1 h)\n   :ARG3 (m / monetary-quantity\n            :quant 7000\n            :unit (p2 / pound))\n   :purpose (b / boost-01\n               :ARG0 t2\n               :ARG1 (e / esteem-01\n                        :ARG0 p\n                        :ARG1 p)))", "(h / have-rel-role-91\n   :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n   :ARG2 (h2 / husband))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andrea\")\n             :age (t / temporal-quantity\n                     :quant 72\n                     :unit (y / year)))\n   :ARG3 (f / facelift))", "(k / know-04\n   :ARG0 (p4 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n                      :ARG2 (h2 / husband))\n             :age (t2 / temporal-quantity\n                      :quant 72\n                      :unit (y2 / year)))\n   :ARG1 (t3 / thing\n             :ARG1 (d / differ-02)))", "(p3 / possible-01\n    :polarity -\n    :ARG1 (k / know-04\n             :ARG0 (p4 / person\n                       :ARG0 (h / have-rel-role-91\n                                :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n                                :ARG2 (h2 / husband))\n                       :age (t2 / temporal-quantity\n                                :quant 72\n                                :unit (y2 / year)))\n             :ARG1 (t3 / thing\n                       :ARG1 (d / differ-02))))", "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andrea\")\n                      :age (t / temporal-quantity\n                              :quant 72\n                              :unit (y / year)))\n            :ARG3 (f / facelift))\n   :ARG2 (p3 / possible-01\n             :polarity -\n             :ARG1 (k / know-04\n                      :ARG0 (p4 / person\n                                :ARG0 (h / have-rel-role-91\n                                         :ARG1 p2\n                                         :ARG2 (h2 / husband))\n                                :age (t2 / temporal-quantity\n                                         :quant 72\n                                         :unit (y2 / year)))\n                      :ARG1 (t3 / thing\n                                :ARG1 (d / differ-02)))))"], "smus": ["Private cosmetic surgery.", "Change people's lives.", "Change people's lives into what they hope for.", "Patients pay.", "pay thousands.", "Patients pay for their own treatments.", "Patients pay thousands.", "Patients pay thousands for their treatments.", "Patients pay thousands for their treatments.", "The transplant will boost Michael's self-esteem.", "Michael, 33, spent PS7,000 on a hair transplant to boost his self esteem.", "Andrea is the husband.", "Andrea, 72, pays for a facelift.", "Andrea's 72-year-old husband knew the difference.", "Andrea's 72-year-old husband couldn't tell the difference.", "Andrea, 72, pays for a facelift, but her 72-year-old husband can't tell the difference."]}, {"instance_id": "realsumm-24", "summary": "General Motors unveiled General Motors concept car at an event in Shanghai . their concept car has ' dragonfly ' swing doors and ' crystal laser headlights ' their concept car is self - driving , electric , and the front chairs can swivel round . And using iris recognition software you can start their concept car using just your eyes .", "summary_trees": ["# ::snt General Motors unveiled General Motors concept car at an event in Shanghai .\n(u / unveil-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"General\"\n                  :op2 \"Motors\"))\n      :ARG1 (c2 / car\n            :mod (c3 / concept)\n            :mod c)\n      :location (e / event\n            :location (c4 / city\n                  :name (n2 / name\n                        :op1 \"Shanghai\"))))", "# ::snt their concept car has ' dragonfly ' swing doors and ' crystal laser headlights ' their concept car is self - driving , electric , and the front chairs can swivel round .\n(m / multi-sentence\n      :snt1 (h / have-03\n            :ARG0 (c / car\n                  :mod (c2 / concept)\n                  :poss (t / they))\n            :ARG1 (a / and\n                  :op1 (d / door\n                        :mod (s / swing)\n                        :mod (d2 / dragonfly))\n                  :op2 (h2 / headlight\n                        :mod (l / laser\n                              :mod (c3 / crystal)))))\n      :snt2 (a2 / and\n            :op1 (d3 / drive-01\n                  :ARG0 (s2 / self)\n                  :ARG1 (c4 / car\n                        :mod c2\n                        :mod (e / electric)))\n            :op2 (p / possible-01\n                  :ARG1 (s3 / swivel-01\n                        :ARG1 (c5 / chair\n                              :mod (f / front))\n                        :direction (r / round)))))", "# ::snt And using iris recognition software you can start their concept car using just your eyes .\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (s / start-01\n                  :ARG0 (y / you\n                        :part (e / eye\n                              :mod (j / just)))\n                  :ARG1 (c / car\n                        :mod (c2 / concept)\n                        :poss (t / they))\n                  :instrument e)\n            :manner (u / use-01\n                  :ARG0 y\n                  :ARG1 (s2 / software\n                        :ARG0-of (r / recognize-02\n                              :ARG1 (ii / iris))))))"], "tree": ["(u / unveil-01\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :mod (c / company :name (n / name :op1 \"General\" :op2 \"Motors\"))))", "(u / unveil-01\n   :location (e / event\n                :location (c4 / city\n                              :name (n2 / name\n                                        :op1 \"Shanghai\"))))", "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :mod c))", "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :mod c)\n   :location (e / event\n                :location (c4 / city\n                              :name (n2 / name\n                                        :op1 \"Shanghai\"))))", "(s3 / swivel-01\n    :ARG1 (c5 / chair\n              :mod (f / front))\n    :direction (r / round))", "(d3 / drive-01\n    :ARG0 (s2 / self)\n    :ARG1 (c4 / car\n              :mod (c2 / concept)\n              :mod (e / electric)))", "(p / possible-01\n   :ARG1 (s3 / swivel-01\n             :ARG1 (c5 / chair\n                       :mod (f / front))\n             :direction (r / round)))", "(h / have-03\n   :ARG0 (c / car\n            :mod (c2 / concept)\n            :poss (t / they))\n   :ARG1 (d / door\n            :mod (s / swing)\n            :mod (d2 / dragonfly)))", "(h / have-03\n   :ARG0 (c / car\n            :mod (c2 / concept)\n            :poss (t / they))\n   :ARG1 (h2 / headlight\n             :mod (l / laser\n                     :mod (c3 / crystal))))", "(h / have-03\n   :ARG0 (c / car\n            :mod (c2 / concept)\n            :poss (t / they))\n   :ARG1 (a / and\n            :op1 (d / door\n                    :mod (s / swing)\n                    :mod (d2 / dragonfly))\n            :op2 (h2 / headlight\n                     :mod (l / laser\n                             :mod (c3 / crystal)))))", "(u / use-01\n   :ARG1 (s2 / software\n             :ARG0 (r / recognize-02\n                      :ARG1 (ii / iris))))", "(s / start-01\n   :ARG1 (c / car\n            :mod (c2 / concept)\n            :poss (t / they)))", "(s / start-01\n   :ARG0 (y / you\n            :part (e / eye\n                     :mod (j / just))))", "(u / use-01\n   :ARG0 (y / you)\n   :ARG1 (s2 / software\n             :ARG0 (r / recognize-02\n                      :ARG1 (ii / iris))))", "(u / use-01\n   :ARG0 (y / you)\n   :ARG1 (s2 / software\n             :ARG0 (r / recognize-02\n                      :ARG1 (ii / iris))))", "(s / start-01\n   :ARG0 (y / you\n            :part (e / eye\n                     :mod (j / just)))\n   :ARG1 (c / car\n            :mod (c2 / concept)\n            :poss (t / they)))", "(s / start-01\n   :ARG0 (y / you\n            :part (e / eye\n                     :mod (j / just)))\n   :ARG1 (c / car\n            :mod (c2 / concept)\n            :poss (t / they))\n   :instrument e)", "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you\n                     :part (e / eye\n                              :mod (j / just)))\n            :ARG1 (c / car\n                     :mod (c2 / concept)\n                     :poss (t / they))\n            :instrument e))", "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you\n                     :part (e / eye\n                              :mod (j / just)))\n            :ARG1 (c / car\n                     :mod (c2 / concept)\n                     :poss (t / they))\n            :instrument e)\n   :manner (u / use-01\n              :ARG0 y\n              :ARG1 (s2 / software\n                        :ARG0 (r / recognize-02\n                                 :ARG1 (ii / iris)))))"], "smus": ["A concept car by General Motors was unveiled.", "Unveiled at an event in Shanghai.", "General Motors unveiled a concept car.", "General Motors unveiled a concept car at an event in Shanghai.", "The front chairs swivel round.", "Self driving a concept electric car", "The front chairs can swivel round.", "Their concept car has dragonfly swing doors.", "Their concept car has a Crystal Laser Headlight.", "Their concept car has dragonfly swing doors and a crystal laser headlight.", "using iris recognition software.", "Start their concept car.", "You start with just eyes.", "You are using IRIS recognition software.", "You are using IRIS recognition software.", "Just in your eyes, start with their concept car.", "With just eyes you'll start their concept car.", "You can start their concept car with just your eyes.", "Using iris recognition software, you can start their concept car with just your eyes."]}, {"instance_id": "realsumm-25", "summary": "Candidate Lynne Abraham says the 74 - year - old former district attorney suffered a momentary drop in blood pressure and that a momentary drop in blood pressure 's never happened before . While a doctor kept the 74 - year - old former district attorney from returning to the debate , the 74 - year - old former district attorney says the 74 - year - old former district attorney will not let a momentary drop in blood pressure affect the 74 - year - old former district attorney campaign .", "summary_trees": ["# ::snt Candidate Lynne Abraham says the 74 - year - old former district attorney suffered a momentary drop in blood pressure and that a momentary drop in blood pressure 's never happened before .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lynne\"\n                  :op2 \"Abraham\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (a / attorney\n                        :mod (d / district))\n                  :time (f / former))\n            :age (t / temporal-quantity\n                  :quant 74\n                  :unit (y / year))\n            :ARG0-of h\n            :ARG2 (c / candidate))\n      :ARG1 (a2 / and\n            :op1 (s2 / suffer-01\n                  :ARG0 (p2 / person)\n                  :ARG1 (d2 / drop-01\n                        :ARG1 (p3 / pressure\n                              :mod (b / blood))\n                        :mod (m / momentary)))\n            :op2 (d3 / drop-01\n                  :polarity -\n                  :ARG1 p3\n                  :mod m\n                  :time (b2 / before))))", "# ::snt While a doctor kept the 74 - year - old former district attorney from returning to the debate , the 74 - year - old former district attorney says the 74 - year - old former district attorney will not let a momentary drop in blood pressure affect the 74 - year - old former district attorney campaign .\n(c / contrast-01\n      :ARG1 (s / say-01\n            :ARG0 (a / attorney\n                  :mod (d / district)\n                  :age (t / temporal-quantity\n                        :quant 74\n                        :unit (y / year))\n                  :time (f / former))\n            :ARG1 (l / let-01\n                  :polarity -\n                  :ARG0 a\n                  :ARG1 (a2 / affect-01\n                        :ARG0 (d2 / drop-01\n                              :ARG1 (p / pressure\n                                    :mod (b / blood))\n                              :mod (m / momentary))\n                        :ARG1 (c2 / campaign-01\n                              :ARG0 a))))\n      :ARG2 (k / keep-04\n            :ARG0 (d3 / doctor)\n            :ARG1 a\n            :ARG2 (r / return-01\n                  :ARG1 a\n                  :ARG4 (d4 / debate-01))))"], "tree": ["(d3 / drop-01\n    :ARG1 (p3 / pressure)\n    :time (b2 / before))", "(d2 / drop-01\n    :ARG1 (p3 / pressure\n              :mod (b / blood)))", "(d3 / drop-01\n    :polarity -\n    :mod (m / momentary)\n    :time (b2 / before))", "(d3 / drop-01\n    :polarity -\n    :ARG1 (p3 / pressure)\n    :mod (m / momentary)\n    :time (b2 / before))", "(d2 / drop-01\n    :ARG1 (p3 / pressure\n              :mod (b / blood))\n    :mod (m / momentary))", "(h / have-org-role-91\n   :ARG2 (a / attorney\n            :mod (d / district))\n   :time (f / former))", "(s2 / suffer-01\n    :ARG0 (p2 / person)\n    :ARG1 (d2 / drop-01\n              :ARG1 (p3 / pressure\n                        :mod (b / blood))\n              :mod (m / momentary)))", "(s2 / suffer-01\n    :ARG0 (p2 / person)\n    :ARG1 (d2 / drop-01\n              :ARG1 (p3 / pressure\n                        :mod (b / blood))\n              :mod (m / momentary)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / attorney\n                              :mod (d / district))\n                     :time (f / former)\n                     :ARG0 p)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :ARG2 (c / candidate))\n   :ARG1 (d3 / drop-01\n             :polarity -\n             :ARG1 (p3 / pressure)\n             :mod (m / momentary)\n             :time (b2 / before)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / attorney\n                              :mod (d / district))\n                     :time (f / former)\n                     :ARG0 p)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :ARG2 (c / candidate))\n   :ARG1 (d3 / drop-01\n             :polarity -\n             :ARG1 (p3 / pressure)\n             :mod (m / momentary)\n             :time (b2 / before)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / attorney\n                              :mod (d / district))\n                     :time (f / former)\n                     :ARG0 p)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :ARG2 (c / candidate))\n   :ARG1 (s2 / suffer-01\n             :ARG0 (p2 / person)\n             :ARG1 (d2 / drop-01\n                       :ARG1 (p3 / pressure\n                                 :mod (b / blood))\n                       :mod (m / momentary))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / attorney\n                              :mod (d / district))\n                     :time (f / former)\n                     :ARG0 p)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :ARG2 (c / candidate))\n   :ARG1 (s2 / suffer-01\n             :ARG0 (p2 / person)\n             :ARG1 (d2 / drop-01\n                       :ARG1 (p3 / pressure\n                                 :mod (b / blood))\n                       :mod (m / momentary))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / attorney\n                              :mod (d / district))\n                     :time (f / former)\n                     :ARG0 p)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :ARG2 (c / candidate))\n   :ARG1 (a2 / and\n             :op1 (s2 / suffer-01\n                      :ARG0 (p2 / person)\n                      :ARG1 (d2 / drop-01\n                                :ARG1 (p3 / pressure\n                                          :mod (b / blood))\n                                :mod (m / momentary)))\n             :op2 (d3 / drop-01\n                      :polarity -\n                      :ARG1 p3\n                      :mod m\n                      :time (b2 / before))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (a / attorney\n                              :mod (d / district))\n                     :time (f / former)\n                     :ARG0 p)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :ARG2 (c / candidate))\n   :ARG1 (a2 / and\n             :op1 (s2 / suffer-01\n                      :ARG0 (p2 / person)\n                      :ARG1 (d2 / drop-01\n                                :ARG1 (p3 / pressure\n                                          :mod (b / blood))\n                                :mod (m / momentary)))\n             :op2 (d3 / drop-01\n                      :polarity -\n                      :ARG1 p3\n                      :mod m\n                      :time (b2 / before))))", "(r / return-01\n   :ARG1 (a / attorney)\n   :ARG4 (d4 / debate-01))", "(r / return-01\n   :ARG1 (a / attorney)\n   :ARG4 (d4 / debate-01))", "(k / keep-04\n   :ARG0 (d3 / doctor)\n   :ARG1 (a / attorney))", "(a2 / affect-01\n    :ARG1 (c2 / campaign-01\n              :ARG0 (a / attorney)))", "(d2 / drop-01\n    :ARG1 (p / pressure\n             :mod (b / blood)))", "(d2 / drop-01\n    :ARG1 (p / pressure\n             :mod (b / blood))\n    :mod (m / momentary))", "(k / keep-04\n   :ARG0 (d3 / doctor)\n   :ARG1 (a / attorney)\n   :ARG2 (r / return-01\n            :ARG1 a\n            :ARG4 (d4 / debate-01)))", "(k / keep-04\n   :ARG0 (d3 / doctor)\n   :ARG1 (a / attorney)\n   :ARG2 (r / return-01\n            :ARG1 a\n            :ARG4 (d4 / debate-01)))", "(a2 / affect-01\n    :ARG0 (d2 / drop-01\n              :ARG1 (p / pressure\n                       :mod (b / blood))\n              :mod (m / momentary)))", "(a2 / affect-01\n    :ARG0 (d2 / drop-01\n              :ARG1 (p / pressure\n                       :mod (b / blood))\n              :mod (m / momentary))\n    :ARG1 (c2 / campaign-01\n              :ARG0 (a / attorney)))", "(a2 / affect-01\n    :ARG0 (d2 / drop-01\n              :ARG1 (p / pressure\n                       :mod (b / blood))\n              :mod (m / momentary))\n    :ARG1 (c2 / campaign-01\n              :ARG0 (a / attorney)))", "(l / let-01\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / affect-01\n             :ARG0 (d2 / drop-01\n                       :ARG1 (p / pressure\n                                :mod (b / blood))\n                       :mod (m / momentary))\n             :ARG1 (c2 / campaign-01\n                       :ARG0 a)))", "(l / let-01\n   :polarity -\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / affect-01\n             :ARG0 (d2 / drop-01\n                       :ARG1 (p / pressure\n                                :mod (b / blood))\n                       :mod (m / momentary))\n             :ARG1 (c2 / campaign-01\n                       :ARG0 a)))", "(s / say-01\n   :ARG0 (a / attorney\n            :mod (d / district)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :time (f / former))\n   :ARG1 (l / let-01\n            :polarity -\n            :ARG0 a\n            :ARG1 (a2 / affect-01\n                      :ARG0 (d2 / drop-01\n                                :ARG1 (p / pressure\n                                         :mod (b / blood))\n                                :mod (m / momentary))\n                      :ARG1 (c2 / campaign-01\n                                :ARG0 a))))", "(s / say-01\n   :ARG0 (a / attorney\n            :mod (d / district)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year))\n            :time (f / former))\n   :ARG1 (l / let-01\n            :polarity -\n            :ARG0 a\n            :ARG1 (a2 / affect-01\n                      :ARG0 (d2 / drop-01\n                                :ARG1 (p / pressure\n                                         :mod (b / blood))\n                                :mod (m / momentary))\n                      :ARG1 (c2 / campaign-01\n                                :ARG0 a))))", "(c / contrast-01\n   :ARG1 (s / say-01\n            :ARG0 (a / attorney\n                     :mod (d / district)\n                     :age (t / temporal-quantity\n                             :quant 74\n                             :unit (y / year))\n                     :time (f / former))\n            :ARG1 (l / let-01\n                     :polarity -\n                     :ARG0 a\n                     :ARG1 (a2 / affect-01\n                               :ARG0 (d2 / drop-01\n                                         :ARG1 (p / pressure\n                                                  :mod (b / blood))\n                                         :mod (m / momentary))\n                               :ARG1 (c2 / campaign-01\n                                         :ARG0 a))))\n   :ARG2 (k / keep-04\n            :ARG0 (d3 / doctor)\n            :ARG1 a\n            :ARG2 (r / return-01\n                     :ARG1 a\n                     :ARG4 (d4 / debate-01))))", "(c / contrast-01\n   :ARG1 (s / say-01\n            :ARG0 (a / attorney\n                     :mod (d / district)\n                     :age (t / temporal-quantity\n                             :quant 74\n                             :unit (y / year))\n                     :time (f / former))\n            :ARG1 (l / let-01\n                     :polarity -\n                     :ARG0 a\n                     :ARG1 (a2 / affect-01\n                               :ARG0 (d2 / drop-01\n                                         :ARG1 (p / pressure\n                                                  :mod (b / blood))\n                                         :mod (m / momentary))\n                               :ARG1 (c2 / campaign-01\n                                         :ARG0 a))))\n   :ARG2 (k / keep-04\n            :ARG0 (d3 / doctor)\n            :ARG1 a\n            :ARG2 (r / return-01\n                     :ARG1 a\n                     :ARG4 (d4 / debate-01))))"], "smus": ["Pressure dropped earlier.", "Drop in blood pressure", "There was no momentary drop before.", "There was no momentary drop in pressure before.", "Momentary drop in blood pressure", "Former district attorney", "People suffered a momentary drop in blood pressure.", "People suffered a momentary drop in blood pressure.", "\"There was no momentary drop in pressure before,\" says Lynne Abraham, a 74-year-old candiate.", "\"There was no momentary drop in pressure before,\" says Lynne Abraham, a 74-year-old candiate.", "\"People suffered a momentary drop in blood pressure,\" says Lynne Abraham, a 74-year-old candide attorney.", "\"People suffered a momentary drop in blood pressure,\" says Lynne Abraham, a 74-year-old candide attorney.", "\"People suffered a momentary drop in blood pressure and it wasn't before,\" says Lynne Abraham, a former district attorney, candide, 74.", "\"People suffered a momentary drop in blood pressure and it wasn't before,\" says Lynne Abraham, a former district attorney, candide, 74.", "The attorney returned to debate.", "The attorney returned to debate.", "The doctor keeps an attorney.", "The attorney's campaign had an effect.", "Drop in blood pressure", "Momentary drop in blood pressure", "The doctor kept the attorney in return for debate.", "The doctor kept the attorney in return for debate.", "Momentary drop in blood pressure affects.", "Momentary drop in blood pressure has had an effect on the attorney's campaign.", "Momentary drop in blood pressure has had an effect on the attorney's campaign.", "Let the attorney let the momentary drop in blood pressure affect his campaign.", "The attorney didn't let the momentary drop in blood pressure affect his campaign.", "The former 74-year-old district attorney says he won't let his campaign have a momentary effect of a drop in blood pressure.", "The former 74-year-old district attorney says he won't let his campaign have a momentary effect of a drop in blood pressure.", "A former 74-year-old district attorney says he won't let a momentary drop in blood pressure affect his campaign, while a doctor keeps him in return for debate.", "A former 74-year-old district attorney says he won't let a momentary drop in blood pressure affect his campaign, while a doctor keeps him in return for debate."]}, {"instance_id": "realsumm-26", "summary": "Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday . Passenger door of vehicle flung open - releasing Bundles of notes onto Interstate 20 in Albilene , Texas . Motorists pulled over and abandoned Motorists vehicles to pick up Bundles of notes . Police have warned anyone caught with Bundles of notes will be arrested .", "summary_trees": ["# ::snt Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday .\n(s / spill-over-02\n      :ARG1 (n / note\n            :quant (b / bundle))\n      :ARG2 (r / road\n            :name (n2 / name\n                  :op1 \"Interstate\"\n                  :op2 20)\n            :location (c / city\n                  :name (n3 / name\n                        :op1 \"Alilene\")\n                  :location (s2 / state\n                        :name (n4 / name\n                              :op1 \"Texas\"))))\n      :time (d / date-entity\n            :weekday (f / friday)))", "# ::snt Passenger door of vehicle flung open - releasing Bundles of notes onto Interstate 20 in Albilene , Texas .\n(a / and\n      :op1 (f / flung-01\n            :ARG1 (d / door\n                  :part-of (v / vehicle)\n                  :mod (p / passenger))\n            :ARG2 (o / open-01\n                  :ARG1 d))\n      :op2 (r / release-01\n            :ARG0 d\n            :ARG1 (b / bundle-01\n                  :ARG1 (n / note))\n            :location (r2 / road\n                  :name (n2 / name\n                        :op1 \"Interstate\"\n                        :op2 20)\n                  :location (c / city\n                        :name (n3 / name\n                              :op1 \"Alilene\")\n                        :location (s / state\n                              :name (n4 / name\n                                    :op1 \"Texas\"))))))", "# ::snt Motorists pulled over and abandoned Motorists vehicles to pick up Bundles of notes .\n(a / and\n      :op1 (p / pull-over-05\n            :ARG1 (p2 / person\n                  :ARG0-of (d / drive-01\n                        :ARG1 (v / vehicle\n                              :poss p2))))\n      :op2 (a2 / abandon-01\n            :ARG0 p2\n            :ARG1 v)\n      :purpose (p3 / pick-up-04\n            :ARG0 p2\n            :ARG1 (b / bundle\n                  :consist-of (n / note))))", "# ::snt Police have warned anyone caught with Bundles of notes will be arrested .\n(w / warn-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                  :ARG1-of (c / catch-02\n                        :ARG2 (b / bundle\n                              :consist-of (n / note))))))"], "tree": ["(s / spill-over-02\n   :time (d / date-entity\n            :weekday (f / friday)))", "(s / spill-over-02\n   :ARG1 (n / note\n            :quant (b / bundle))\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20)\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\")\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\"))))\n   :time (d / date-entity\n            :weekday (f / friday)))", "(f / flung-01\n   :ARG1 (d / door\n            :part (v / vehicle)\n            :mod (p / passenger))\n   :ARG2 (o / open-01\n            :ARG1 d))", "(r / release-01\n   :location (r2 / road\n                 :name (n2 / name\n                           :op1 \"Interstate\"\n                           :op2 20)\n                 :location (c / city\n                              :name (n3 / name\n                                        :op1 \"Alilene\")\n                              :location (s / state\n                                           :name (n4 / name\n                                                     :op1 \"Texas\")))))", "(r / release-01\n   :ARG0 (d / door)\n   :ARG1 (b / bundle-01\n            :ARG1 (n / note))\n   :location (r2 / road\n                 :name (n2 / name\n                           :op1 \"Interstate\"\n                           :op2 20)\n                 :location (c / city\n                              :name (n3 / name\n                                        :op1 \"Alilene\")\n                              :location (s / state\n                                           :name (n4 / name\n                                                     :op1 \"Texas\")))))", "(d / drive-01\n   :ARG1 (v / vehicle\n            :poss (p2 / person)))", "(p3 / pick-up-04\n    :ARG0 (p2 / person)\n    :ARG1 (b / bundle\n             :consist-of (n / note)))", "(p3 / pick-up-04\n    :ARG0 (p2 / person)\n    :ARG1 (b / bundle\n             :consist-of (n / note)))", "(p / pull-over-05\n   :ARG1 (p2 / person\n             :ARG0 (d / drive-01\n                      :ARG1 (v / vehicle\n                               :poss p2))))", "(c / catch-02\n   :ARG2 (b / bundle\n            :consist-of (n / note)))", "(a / arrest-01\n   :ARG1 (a2 / anyone\n             :ARG1 (c / catch-02\n                      :ARG2 (b / bundle\n                               :consist-of (n / note)))))", "(a / arrest-01\n   :ARG1 (a2 / anyone\n             :ARG1 (c / catch-02\n                      :ARG2 (b / bundle\n                               :consist-of (n / note)))))", "(w / warn-01\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (b / bundle\n                                        :consist-of (n / note))))))", "(w / warn-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (b / bundle\n                                        :consist-of (n / note))))))", "(w / warn-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (b / bundle\n                                        :consist-of (n / note))))))"], "smus": ["spilled over Friday.", "Bundles of notes spilled over Interstate 20 in Alison, Texas, Friday.", "The passenger door of the vehicle flung open.", "Released at Interstate 20 in Alilene, Texas.", "The door was releasing bundles of notes on Interstate 20 in Alilene, Texas.", "People's vehicles are driven.", "People will pick up bundles of notes.", "People will pick up bundles of notes.", "The drivers of their vehicles pulled over.", "Bundles of notes were caught.", "Anyone caught with bundles of notes will be arrested.", "Anyone caught with bundles of notes will be arrested.", "Anyone caught with bundles of notes is warned to be arrested.", "Police have warned that anyone caught with bundles of notes will be arrested.", "Police have warned that anyone caught with bundles of notes will be arrested."]}, {"instance_id": "realsumm-27", "summary": "Godfrey Elfwick recruited via Twitter to appear on World Have Your Say . Came after claims Godfrey Elfwick had never seen the Star Wars franchise before . On World Have Your Say Godfrey Elfwick described the Star Wars franchise as both anti - women and anti - gay . Also said that Darth Vader was a black man and a ' really bad racial stereotype ' .", "summary_trees": ["# ::snt Godfrey Elfwick recruited via Twitter to appear on World Have Your Say .\n(r / recruit-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Godfrey\"\n                  :op2 \"Elfwick\"))\n      :ARG3 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))\n      :medium (p2 / publication\n            :name (n3 / name\n                  :op1 \"Twitter\")))", "# ::snt Came after claims Godfrey Elfwick had never seen the Star Wars franchise before .\n(c / come-01\n      :time (a / after\n            :op1 (c2 / claim-01\n                  :ARG1 (s / see-01\n                        :polarity -\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Godfrey\"\n                                    :op2 \"Elfwick\"))\n                        :ARG1 (f / franchise\n                              :name (n2 / name\n                                    :op1 \"Star\"\n                                    :op2 \"Wars\"))\n                        :time (e / ever)\n                        :time (b / before)))))", "# ::snt On World Have Your Say Godfrey Elfwick described the Star Wars franchise as both anti - women and anti - gay .\n(d / describe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Godfrey\"\n                  :op2 \"Elfwick\"))\n      :ARG1 (f / franchise\n            :name (n2 / name\n                  :op1 \"Star\"\n                  :op2 \"Wars\"))\n      :ARG2 (a / and\n            :op1 (o / oppose-01\n                  :ARG0 f\n                  :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                  :ARG0 f\n                  :ARG1 (g / gay-01)))\n      :medium (b / broadcast-program\n            :name (n3 / name\n                  :op1 \"World\"\n                  :op2 \"Have\"\n                  :op3 \"Your\"\n                  :op4 \"Say\")))", "# ::snt Also said that Darth Vader was a black man and a ' really bad racial stereotype ' .\n(s / say-01\n      :ARG1 (a / and\n            :op1 (m / man\n                  :ARG1-of (b / black-05)\n                  :domain (p / person\n                        :name (n / name\n                              :op1 \"Darth\"\n                              :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                  :ARG2 p\n                  :ARG3 (r / race)\n                  :ARG1-of (b2 / bad-07\n                        :degree (r2 / really))))\n      :mod (a2 / also))"], "tree": ["(r / recruit-01\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))", "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\")))", "(a / appear-01\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(a / appear-01\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(a / appear-01\n   :ARG1 (p / person :name (n / name :op1 \"Godfrey\" :op2 \"Elfwick\"))\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(a / appear-01\n   :ARG1 (p / person :name (n / name :op1 \"Godfrey\" :op2 \"Elfwick\"))\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG3 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\")))\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))", "(c / come-01\n   :time (a / after\n            :op1 (c2 / claim-01)))", "(s / see-01\n   :polarity -\n   :time (e / ever)\n   :time (b / before))", "(s / see-01\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\")))", "(s / see-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\")))", "(s / see-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :time (e / ever))", "(s / see-01\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :time (e / ever)\n   :time (b / before))", "(c2 / claim-01\n    :ARG1 (s / see-01\n             :polarity -\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Godfrey\"\n                               :op2 \"Elfwick\"))\n             :ARG1 (f / franchise\n                      :name (n2 / name\n                                :op1 \"Star\"\n                                :op2 \"Wars\"))\n             :time (e / ever)\n             :time (b / before)))", "(c2 / claim-01\n    :ARG1 (s / see-01\n             :polarity -\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Godfrey\"\n                               :op2 \"Elfwick\"))\n             :ARG1 (f / franchise\n                      :name (n2 / name\n                                :op1 \"Star\"\n                                :op2 \"Wars\"))\n             :time (e / ever)\n             :time (b / before)))", "(c / come-01\n   :time (a / after\n            :op1 (c2 / claim-01\n                     :ARG1 (s / see-01\n                              :polarity -\n                              :ARG0 (p / person\n                                       :name (n / name\n                                                :op1 \"Godfrey\"\n                                                :op2 \"Elfwick\"))\n                              :ARG1 (f / franchise\n                                       :name (n2 / name\n                                                 :op1 \"Star\"\n                                                 :op2 \"Wars\"))\n                              :time (e / ever)\n                              :time (b / before)))))", "(o2 / oppose-01\n    :ARG0 (f / franchise :name (n2 / name :op1 \"Star\" :op2 \"Wars\"))\n    :ARG1 (g / gay-01))", "(o / oppose-01\n   :ARG0 (f / franchise :name (n2 / name :op1 \"Star\" :op2 \"Wars\"))\n   :ARG1 (w / woman))", "(o2 / oppose-01\n    :ARG0 (f / franchise :name (n2 / name :op1 \"Star\" :op2 \"Wars\"))\n    :ARG1 (g / gay-01))", "(o / oppose-01\n   :ARG0 (f / franchise :name (n2 / name :op1 \"Star\" :op2 \"Wars\"))\n   :ARG1 (w / woman))", "(d / describe-01\n   :medium (b / broadcast-program\n              :name (n3 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(d / describe-01\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (o / oppose-01\n            :ARG0 f\n            :ARG1 (w / woman)))", "(d / describe-01\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (o2 / oppose-01\n             :ARG0 f\n             :ARG1 (g / gay-01)))", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\")))", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (o / oppose-01\n            :ARG0 f\n            :ARG1 (w / woman)))", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (o2 / oppose-01\n             :ARG0 f\n             :ARG1 (g / gay-01)))", "(d / describe-01\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (a / and\n            :op1 (o / oppose-01\n                    :ARG0 f\n                    :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                     :ARG0 f\n                     :ARG1 (g / gay-01))))", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (a / and\n            :op1 (o / oppose-01\n                    :ARG0 f\n                    :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                     :ARG0 f\n                     :ARG1 (g / gay-01))))", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (o / oppose-01\n            :ARG0 f\n            :ARG1 (w / woman))\n   :medium (b / broadcast-program\n              :name (n3 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (o2 / oppose-01\n             :ARG0 f\n             :ARG1 (g / gay-01))\n   :medium (b / broadcast-program\n              :name (n3 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\"))\n   :medium b)", "(d / describe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG1 (f / franchise\n            :name (n2 / name\n                      :op1 \"Star\"\n                      :op2 \"Wars\"))\n   :ARG2 (a / and\n            :op1 (o / oppose-01\n                    :ARG0 f\n                    :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                     :ARG0 f\n                     :ARG1 (g / gay-01)))\n   :medium (b / broadcast-program\n              :name (n3 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(s2 / stereotype-01\n    :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n    :ARG3 (r / race)\n    :ARG1 (b2 / bad-07\n              :degree (r2 / really)))", "(s / say-01\n   :ARG1 (m / man\n            :ARG1 (b / black-05)\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Darth\"\n                                :op2 \"Vader\")))\n   :mod (a2 / also))", "(s / say-01\n   :ARG1 (s2 / stereotype-01\n             :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n             :ARG3 (r / race)\n             :ARG1 (b2 / bad-07\n                       :degree (r2 / really)))\n   :mod (a2 / also)\n   :mod a2)", "(s / say-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG1 (b / black-05)\n                    :domain (p / person\n                               :name (n / name\n                                        :op1 \"Darth\"\n                                        :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                     :ARG2 p\n                     :ARG3 (r / race)\n                     :ARG1 (b2 / bad-07\n                               :degree (r2 / really))))\n   :mod (a2 / also))"], "smus": ["Recruited on Twitter.", "Godfrey Elfwick was recruited.", "appeared on World Have Your Say.", "appeared on World Have Your Say.", "Godfrey Elfwick will appear on World Have Your Say.", "Godfrey Elfwick will appear on World Have Your Say.", "Godfrey Elfwick was recruited to appear on World Have Your Say on Twitter.", "came after the claims.", "Never seen before.", "Star Wars is seen.", "Godfrey Elfwick has seen the Star Wars franchise.", "Godfrey Elfwick has never seen the Star Wars franchise.", "Godfrey Elfwick has never seen the Star Wars franchise before.", "There are claims that Godfrey Elfwick has never seen the Star Wars franchise before.", "There are claims that Godfrey Elfwick has never seen the Star Wars franchise before.", "It came after claims that Godfrey Elfwick had never seen the Star Wars franchise before.", "Star Wars is anti-gay.", "The Star Wars franchise is anti-women.", "Star Wars is anti-gay.", "The Star Wars franchise is anti-women.", "a href=\"http://www.worldhaveyoursay.com/show/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/shows/", "The Star Wars franchise described itself as anti-women.", "The Star Wars franchise described itself as anti-gay.", "Godfrey Elfwick described the Star Wars franchise.", "Godfrey Elfwick described the Star Wars franchise as anti-women.", "Godfrey Elfwick described the Star Wars franchise as anti-gay.", "The Star Wars franchise described itself as anti-women and anti-gay.", "Godfrey Elfwick described the Star Wars franchise as anti-women and anti-gay.", "Godfrey Elfwick described the Star Wars franchise as anti-women on \"World Have Your Say\".", "Godfrey Elfwick described the Star Wars franchise as anti-gay on World Have Your Say.", "Godfrey Elfwick described the Star Wars franchise as anti-women and anti-gay on World Have Your Say.", "Thearth Vader racial stereotype is really bad.", "Darth Vader also said he was a black man.", "Also, the stereotype of Darth Vader as a racial one is really bad.", "Also, Darth Vader was said to be a black man and the racial stereotypes he was in were really bad."]}, {"instance_id": "realsumm-28", "summary": "Cuban - born Kathy Ferreiro 's curves have attracted fans on social media . Cuban - born Kathy Ferreiro 's says photos of Cuban - born Kathy Ferreiro 's booty are all natural . Cuban - born Kathy Ferreiro 's is hoping to become next Kim Kardashian . Has a huge following in Colombia and other Latin American countries .", "summary_trees": ["# ::snt Cuban - born Kathy Ferreiro 's curves have attracted fans on social media .\n(a / attract-01\n      :ARG0 (c / curve\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Kathy\"\n                        :op2 \"Ferreiro\")\n                  :ARG1-of (b / bear-02\n                        :location (c2 / country\n                              :name (n2 / name\n                                    :op1 \"Cuba\")))))\n      :ARG1 (f / fan)\n      :medium (m / media\n            :mod (s / social)))", "# ::snt Cuban - born Kathy Ferreiro 's says photos of Cuban - born Kathy Ferreiro 's booty are all natural .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kathy\"\n                  :op2 \"Ferreiro\")\n            :ARG1-of (b / bear-02\n                  :location (c / country\n                        :name (n2 / name\n                              :op1 \"Cuba\")))\n            :part (b2 / booty))\n      :ARG1 (n3 / natural-03\n            :ARG1 (p2 / photograph-01\n                  :ARG1 b2\n                  :mod (a / all))))", "# ::snt Cuban - born Kathy Ferreiro 's is hoping to become next Kim Kardashian .\n(h / hope-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kathy\"\n                  :op2 \"Ferreiro\")\n            :ARG1-of (b / bear-02\n                  :location (c / country\n                        :name (n2 / name\n                              :op1 \"Cuba\"))))\n      :ARG1 (b2 / become-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")\n                  :mod (n4 / next))))", "# ::snt Has a huge following in Colombia and other Latin American countries .\n(f / follow-02\n      :ARG1 (ii / it)\n      :mod (h / huge)\n      :location (a / and\n            :op1 (c / country\n                  :name (n / name\n                        :op1 \"Colombia\"))\n            :op2 (c2 / country\n                  :location (w / world-region\n                        :name (n2 / name\n                              :op1 \"Latin\"\n                              :op2 \"America\"))\n                  :mod (o / other))))"], "tree": ["(a / attract-01\n   :medium (m / media\n              :mod (s / social)))", "(b / bear-02\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Cuba\")))", "(b / bear-02\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Cuba\")))", "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\"))))))", "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :ARG1 (f / fan))", "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :ARG1 (f / fan)\n   :medium (m / media\n              :mod (s / social)))", "(p2 / photograph-01\n    :ARG1 (b2 / booty)\n    :mod (a / all))", "(p2 / photograph-01\n    :ARG1 (b2 / booty)\n    :mod (a / all))", "(n3 / natural-03\n    :ARG1 (p2 / photograph-01\n              :ARG1 (b2 / booty)\n              :mod (a / all)))", "(b / bear-02\n   :location (c / country\n                :name (n2 / name\n                          :op1 \"Cuba\")))", "(n3 / natural-03\n    :ARG1 (p2 / photograph-01\n              :ARG1 (b2 / booty)\n              :mod (a / all)))", "(b / bear-02\n   :location (c / country\n                :name (n2 / name\n                          :op1 \"Cuba\")))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kathy\"\n                     :op2 \"Ferreiro\")\n            :ARG1 (b / bear-02\n                     :location (c / country\n                                  :name (n2 / name\n                                            :op1 \"Cuba\")))\n            :part (b2 / booty))\n   :ARG1 (n3 / natural-03\n             :ARG1 (p2 / photograph-01\n                       :ARG1 b2\n                       :mod (a / all))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kathy\"\n                     :op2 \"Ferreiro\")\n            :ARG1 (b / bear-02\n                     :location (c / country\n                                  :name (n2 / name\n                                            :op1 \"Cuba\")))\n            :part (b2 / booty))\n   :ARG1 (n3 / natural-03\n             :ARG1 (p2 / photograph-01\n                       :ARG1 b2\n                       :mod (a / all))))", "(b / bear-02\n   :location (c / country\n                :name (n2 / name\n                          :op1 \"Cuba\")))", "(b / bear-02\n   :location (c / country\n                :name (n2 / name\n                          :op1 \"Cuba\")))", "(b2 / become-01\n    :ARG1 (p / person :name (n / name :op1 \"Kathy\" :op2 \"Ferreiro\")))\n    :ARG2 (p2 / person\n              :name (n3 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")\n              :mod (n4 / next)))", "(b2 / become-01\n    :ARG1 (p / person :name (n / name :op1 \"Kathy\" :op2 \"Ferreiro\")))\n    :ARG2 (p2 / person\n              :name (n3 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")\n              :mod (n4 / next)))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kathy\"\n                     :op2 \"Ferreiro\")\n            :ARG1 (b / bear-02\n                     :location (c / country\n                                  :name (n2 / name\n                                            :op1 \"Cuba\"))))\n   :ARG1 (b2 / become-01\n             :ARG1 p\n             :ARG2 (p2 / person\n                       :name (n3 / name\n                                 :op1 \"Kim\"\n                                 :op2 \"Kardinez\")\n                       :mod (n4 / next))))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kathy\"\n                     :op2 \"Ferreiro\")\n            :ARG1 (b / bear-02\n                     :location (c / country\n                                  :name (n2 / name\n                                            :op1 \"Cuba\"))))\n   :ARG1 (b2 / become-01\n             :ARG1 p\n             :ARG2 (p2 / person\n                       :name (n3 / name\n                                 :op1 \"Kim\"\n                                 :op2 \"Kardinez\")\n                       :mod (n4 / next))))", "(f / follow-02\n   :mod (h / huge)\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))", "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge)\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))", "(f / follow-02\n   :mod (h / huge)\n   :location (c2 / country\n                 :location (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Latin\"\n                                        :op2 \"America\"))\n                 :mod (o / other)))", "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge)\n   :location (c2 / country\n                 :location (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Latin\"\n                                        :op2 \"America\"))\n                 :mod (o / other)))", "(f / follow-02\n   :mod (h / huge)\n   :location (a / and\n                :op1 (c / country\n                        :name (n / name\n                                 :op1 \"Colombia\"))\n                :op2 (c2 / country\n                         :location (w / world-region\n                                      :name (n2 / name\n                                                :op1 \"Latin\"\n                                                :op2 \"America\"))\n                         :mod (o / other))))", "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge)\n   :location (a / and\n                :op1 (c / country\n                        :name (n / name\n                                 :op1 \"Colombia\"))\n                :op2 (c2 / country\n                         :location (w / world-region\n                                      :name (n2 / name\n                                                :op1 \"Latin\"\n                                                :op2 \"America\"))\n                         :mod (o / other))))"], "smus": ["Social media is a popular medium.", "-Brought in Cuba", "-Brought in Cuba", "Kathy Ferreiro's Cuban-born curves are attracted.", "Kathy Ferreiro's Cuban-born curves have attracted fans.", "Kathy Ferreiro's Cuban birth curves have attracted fans via social media.", "All photographs of the booty.", "All photographs of the booty.", "The photos of the booty are all natural.", "-Brought in Cuba", "The photos of the booty are all natural.", "-Brought in Cuba", "Kathy Ferreiro says that the photos of the Cuban are all natural, that the Cuban is a part of the booty.", "Kathy Ferreiro says that the photos of the Cuban are all natural, that the Cuban is a part of the booty.", "-Brought in Cuba", "-Brought in Cuba", "Kathy Ferreiro will become the next Kim Kardinez.", "Kathy Ferreiro will become the next Kim Kardinez.", "Kathy Ferreiro, who was born in Cuba, is hoping to become the next Kim Kardinez.", "Kathy Ferreiro, who was born in Cuba, is hoping to become the next Kim Kardinez.", "Huge follow-up in Colombia.", "It is a huge follower in Colombia.", "There is huge follow-up in other Latin American countries.", "It's a huge follower in other Latin American countries.", "There is huge follow in Colombia and other Latin American countries.", "It has been a huge follower in Colombia and other Latin American countries."]}, {"instance_id": "realsumm-29", "summary": "Thousands of accounts vanished from the social network last week . the social network said the social network had received numerous reports about terror - promoting users . Decided to suspend 10,000 accounts for making threats of violence . Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis .", "summary_trees": ["# ::snt Thousands of accounts vanished from the social network last week .\n(v / vanish-01\n      :ARG1 (a / account\n            :quant (m / multiple\n                  :op1 1000))\n      :location (n / network\n            :ARG0-of (s / social-03))\n      :time (w / week\n            :mod (l / last)))", "# ::snt the social network said the social network had received numerous reports about terror - promoting users .\n(s / say-01\n      :ARG0 (n / network\n            :mod (s2 / social))\n      :ARG1 (r / receive-01\n            :ARG0 n\n            :ARG1 (r2 / report-01\n                  :ARG1 (p / person\n                        :ARG0-of (u / use-01)\n                        :ARG0-of (p2 / promote-02\n                              :ARG1 (t / terror)))\n                  :quant (n2 / numerous))))", "# ::snt Decided to suspend 10,000 accounts for making threats of violence .\n(d / decide-01\n      :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                  :quant 10000)\n            :ARG1-of (c / cause-01\n                  :ARG0 (t / threaten-01\n                        :ARG1 (v / violence)))))", "# ::snt Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis .\n(l / link-01\n      :ARG1 (s / suspend-01)\n      :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                  :name (n / name\n                        :op1 \"Anonymous\")\n                  :mod (h / hacktavist))\n            :ARG0-of (t / target-01\n                  :ARG1 (j / jihadi\n                        :mod (o / online))))\n      :mod (c3 / certain\n            :mod (a / almost)))"], "tree": ["(v / vanish-01\n   :location (n / network)\n   :time (w / week\n            :mod (l / last)))", "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :location (n / network\n                :ARG0 (s / social-03))\n   :time (w / week\n            :mod (l / last)))", "(r2 / report-01\n    :ARG1 (p / person\n             :ARG0 (u / use-01)\n             :ARG0 (p2 / promote-02\n                       :ARG1 (t / terror))))", "(r2 / report-01\n    :ARG1 (p / person\n             :ARG0 (u / use-01)\n             :ARG0 (p2 / promote-02\n                       :ARG1 (t / terror)))\n    :quant (n2 / numerous))", "(r / receive-01\n   :ARG0 (n / network)\n   :ARG1 (r2 / report-01\n             :ARG1 (p / person\n                      :ARG0 (u / use-01)\n                      :ARG0 (p2 / promote-02\n                                :ARG1 (t / terror)))\n             :quant (n2 / numerous)))", "(r / receive-01\n   :ARG0 (n / network)\n   :ARG1 (r2 / report-01\n             :ARG1 (p / person\n                      :ARG0 (u / use-01)\n                      :ARG0 (p2 / promote-02\n                                :ARG1 (t / terror)))\n             :quant (n2 / numerous)))", "(s / say-01\n   :ARG0 (n / network\n            :mod (s2 / social))\n   :ARG1 (r / receive-01\n            :ARG0 n\n            :ARG1 (r2 / report-01\n                      :ARG1 (p / person\n                               :ARG0 (u / use-01)\n                               :ARG0 (p2 / promote-02\n                                         :ARG1 (t / terror)))\n                      :quant (n2 / numerous))))", "(s / say-01\n   :ARG0 (n / network\n            :mod (s2 / social))\n   :ARG1 (r / receive-01\n            :ARG0 n\n            :ARG1 (r2 / report-01\n                      :ARG1 (p / person\n                               :ARG0 (u / use-01)\n                               :ARG0 (p2 / promote-02\n                                         :ARG1 (t / terror)))\n                      :quant (n2 / numerous))))", "(s / suspend-01\n   :ARG1 (a / account\n            :quant 10000))", "(c / cause-01\n   :ARG0 (t / threaten-01\n            :ARG1 (v / violence)))", "(s / suspend-01\n   :ARG1 (a / account\n            :quant 10000)\n   :ARG1 (c / cause-01\n            :ARG0 (t / threaten-01\n                     :ARG1 (v / violence))))", "(d / decide-01\n   :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                     :quant 10000)\n            :ARG1 (c / cause-01\n                     :ARG0 (t / threaten-01\n                              :ARG1 (v / violence)))))", "(d / decide-01\n   :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                     :quant 10000)\n            :ARG1 (c / cause-01\n                     :ARG0 (t / threaten-01\n                              :ARG1 (v / violence)))))", "(t / target-01\n   :ARG1 (j / jihadi\n            :mod (o / online)))", "(t / target-01\n   :ARG1 (j / jihadi\n            :mod (o / online)))", "(l / link-01\n   :mod (c3 / certain\n            :mod (a / almost)))", "(l / link-01\n   :mod (c3 / certain\n            :mod (a / almost)))", "(c / campaign-01\n   :ARG0 (c2 / collective\n             :name (n / name\n                      :op1 \"Anonymous\")\n             :mod (h / hacktavist)))", "(c / campaign-01\n   :ARG0 (c2 / collective\n             :name (n / name\n                      :op1 \"Anonymous\")\n             :mod (h / hacktavist))\n   :ARG0 (t / target-01\n            :ARG1 (j / jihadi\n                     :mod (o / online))))", "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online)))))", "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online))))\n   :mod (c3 / certain\n            :mod (a / almost)))", "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online))))\n   :mod (c3 / certain\n            :mod (a / almost)))"], "smus": ["The network vanished last week.", "Thousands of accounts vanished from social network last week.", "Reports of users promoting terror.", "There have been numerous reports of users promoting terror.", "The network has received numerous reports of users promoting terror.", "The network has received numerous reports of users promoting terror.", "A social network said it had received numerous reports of users promoting terror.", "A social network said it had received numerous reports of users promoting terror.", "Suspend 10,000 accounts.", "Because of threats of violence.", "10000 accounts suspended over threats of violence", "10000 accounts were decided to suspend over threats of violence.", "10000 accounts were decided to suspend over threats of violence.", "Online jihadis are targeted.", "Online jihadis are targeted.", "Almost certainly linked.", "Almost certainly linked.", "Anonymous is a hacktavist collective campaign.", "Anonymous is a hacktavist collective campaign targeting online jihadis.", "The suspensions were linked to an anonymous hacktavist collective's campaign targeting online jihadis.", "The suspensions are almost certainly linked to an anonymous hacktavist collective's campaign targeting online jihadis.", "The suspensions are almost certainly linked to an anonymous hacktavist collective's campaign targeting online jihadis."]}, {"instance_id": "realsumm-30", "summary": "Locals say power cuts the weekend before raid could be linked to heist . Locals also tell of suspicious ' drilling ' noises on evening of Good Friday . Group seen returning to scene on Saturday - a day after initial break - in . Police admit Police did n't respond after alarm went off early on Good Friday .", "summary_trees": ["# ::snt Locals say power cuts the weekend before raid could be linked to heist .\n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (l / local-02))\n      :ARG1 (p2 / possible-01\n            :ARG1 (l2 / link-01\n                  :ARG1 (c / cut-02\n                        :ARG1 (p3 / power)\n                        :time (w / weekend)\n                        :time (b / before\n                              :op1 (r / raid-01)))\n                  :ARG2 (h / heist))))", "# ::snt Locals also tell of suspicious ' drilling ' noises on evening of Good Friday .\n(t / tell-01\n      :ARG0 (p / person\n            :ARG1-of (l / local-02))\n      :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1-of (s / suspicious-03)\n            :time (d2 / date-entity\n                  :weekday (f / friday)\n                  :dayperiod (e / evening)))\n      :mod (a / also))", "# ::snt Group seen returning to scene on Saturday - a day after initial break - in .\n(s / see-01\n      :ARG1 (r / return-01\n            :ARG1 (g / group)\n            :ARG4 (s2 / scene)\n            :time (d / date-entity\n                  :weekday (s3 / saturday))\n            :time (a / after\n                  :op1 (b / break-02\n                        :mod (ii / initial))\n                  :quant (t / temporal-quantity\n                        :quant 1\n                        :unit (d2 / day)))))", "# ::snt Police admit Police did n't respond after alarm went off early on Good Friday .\n(a / admit-01\n      :ARG0 (p / police)\n      :ARG1 (r / respond-01\n            :polarity -\n            :ARG0 p\n            :time (a2 / after\n                  :op1 (g / go-off-16\n                        :ARG1 (a3 / alarm-01)\n                        :time (e / early\n                              :op1 (f / festival\n                                    :name (n / name\n                                          :op1 \"Good\"\n                                          :op2 \"Friday\")))))))"], "tree": ["(c / cut-02\n   :time (w / weekend)\n   :time (b / before\n            :op1 (r / raid-01)))", "(c / cut-02\n   :ARG1 (p3 / power)\n   :time (w / weekend)\n   :time (b / before\n            :op1 (r / raid-01)))", "(l2 / link-01\n    :ARG1 (c / cut-02\n             :ARG1 (p3 / power)\n             :time (w / weekend)\n             :time (b / before\n                      :op1 (r / raid-01)))\n    :ARG2 (h / heist))", "(l2 / link-01\n    :ARG1 (c / cut-02\n             :ARG1 (p3 / power)\n             :time (w / weekend)\n             :time (b / before\n                      :op1 (r / raid-01)))\n    :ARG2 (h / heist))", "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :ARG1 (p3 / power)\n                       :time (w / weekend)\n                       :time (b / before\n                                :op1 (r / raid-01)))\n              :ARG2 (h / heist)))", "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :ARG1 (p3 / power)\n                       :time (w / weekend)\n                       :time (b / before\n                                :op1 (r / raid-01)))\n              :ARG2 (h / heist)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :ARG1 (p3 / power)\n                                :time (w / weekend)\n                                :time (b / before\n                                         :op1 (r / raid-01)))\n                       :ARG2 (h / heist))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :ARG1 (p3 / power)\n                                :time (w / weekend)\n                                :time (b / before\n                                         :op1 (r / raid-01)))\n                       :ARG2 (h / heist))))", "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1 (s / suspicious-03)\n            :time (d2 / date-entity\n                      :weekday (f / friday)\n                      :dayperiod (e / evening))))", "(t / tell-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1 (s / suspicious-03)\n            :time (d2 / date-entity\n                      :weekday (f / friday)\n                      :dayperiod (e / evening)))\n   :mod (a / also))", "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene))", "(r / return-01\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :ARG1 (g / group)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :time (d / date-entity\n            :weekday (s3 / saturday))\n   :time (a / after\n            :op1 (b / break-02\n                    :mod (ii / initial))\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (d2 / day))))", "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday))\n   :time (a / after\n            :op1 (b / break-02\n                    :mod (ii / initial))\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (d2 / day))))", "(s / see-01\n   :ARG1 (r / return-01\n            :ARG1 (g / group)\n            :ARG4 (s2 / scene)\n            :time (d / date-entity\n                     :weekday (s3 / saturday))\n            :time (a / after\n                     :op1 (b / break-02\n                             :mod (ii / initial))\n                     :quant (t / temporal-quantity\n                               :quant 1\n                               :unit (d2 / day)))))", "(s / see-01\n   :ARG1 (r / return-01\n            :ARG1 (g / group)\n            :ARG4 (s2 / scene)\n            :time (d / date-entity\n                     :weekday (s3 / saturday))\n            :time (a / after\n                     :op1 (b / break-02\n                             :mod (ii / initial))\n                     :quant (t / temporal-quantity\n                               :quant 1\n                               :unit (d2 / day)))))", "(g / go-off-16\n   :time (e / early\n            :op1 (f / festival\n                    :name (n / name\n                             :op1 \"Good\"\n                             :op2 \"Friday\"))))", "(g / go-off-16\n   :ARG1 (a3 / alarm-01)\n   :time (e / early\n            :op1 (f / festival\n                    :name (n / name\n                             :op1 \"Good\"\n                             :op2 \"Friday\"))))", "(r / respond-01\n   :polarity -\n   :time (a2 / after\n             :op1 (g / go-off-16\n                     :time (e / early\n                              :op1 (f / festival\n                                      :name (n / name\n                                               :op1 \"Good\"\n                                               :op2 \"Friday\"))))))", "(r / respond-01\n   :polarity -\n   :ARG0 (p / police)\n   :time (a2 / after\n             :op1 (g / go-off-16\n                     :ARG1 (a3 / alarm-01)\n                     :time (e / early\n                              :op1 (f / festival\n                                      :name (n / name\n                                               :op1 \"Good\"\n                                               :op2 \"Friday\"))))))", "(a / admit-01\n   :ARG0 (p / police)\n   :ARG1 (r / respond-01\n            :polarity -\n            :ARG0 p\n            :time (a2 / after\n                      :op1 (g / go-off-16\n                              :ARG1 (a3 / alarm-01)\n                              :time (e / early\n                                       :op1 (f / festival\n                                               :name (n / name\n                                                        :op1 \"Good\"\n                                                        :op2 \"Friday\")))))))"], "smus": ["Cuts over the weekend before the raid.", "Power cuts over the weekend before raid", "Power cuts over the weekend before the raid were linked to the heist.", "Power cuts over the weekend before the raid were linked to the heist.", "Power cuts over the weekend before the raid could have been linked to the heist.", "Power cuts over the weekend before the raid could have been linked to the heist.", "Locals say power cuts over the weekend before the raid could have been linked to the heist.", "Locals say power cuts over the weekend before the raid could have been linked to the heist.", "Locals tell of suspicious drill noises Friday evening.", "Locals also tell of suspicious drill noises Friday evening.", "The Group is returning to the scene.", "Returning Saturday.", "Returning Saturday.", "Group will be returning Saturday.", "The Group will be returning to the scene Saturday.", "The return will take place Saturday, a day after the initial break.", "The Group was returning to the scene Saturday, a day after the initial break.", "The Group saw the scene returning on Saturday, a day after the initial break.", "The Group saw the scene returning on Saturday, a day after the initial break.", "Good Friday goes off early.", "The alarm went off early on Good Friday.", "After the Good Friday goes off, it won't respond.", "Police didn't respond after the alarm went off early on Good Friday.", "Police admit they didn't respond after the alarm went off early on Good Friday."]}, {"instance_id": "realsumm-31", "summary": "Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole . the flames erupted just moments after Shiraz Nawaz walked over the manhole in the busy street . Incredibly no - one was hurt in the incident after Shiraz Nawaz evacuated the area .", "summary_trees": ["# ::snt Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole .\n(f / feel-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Shiraz\"\n                  :op2 \"Nawaz\"))\n      :ARG1 (l / lucky\n            :domain p\n            :ARG1-of (c / cause-01\n                  :ARG0 (l2 / live-01\n                        :ARG0 p)))\n      :time (a / after\n            :op1 (s / shoot-02\n                  :ARG0 (f2 / flame)\n                  :ARG3 (m / manhole))))", "# ::snt the flames erupted just moments after Shiraz Nawaz walked over the manhole in the busy street .\n(e / erupt-01\n      :ARG1 (f / flame)\n      :time (a / after\n            :op1 (w / walk-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Shiraz\"\n                              :op2 \"Nawaz\"))\n                  :ARG2 (o / over\n                        :op1 (m / manhole\n                              :location (s / street\n                                    :ARG1-of (b / busy-02)))))\n            :quant (m2 / moment\n                  :mod (j / just))))", "# ::snt Incredibly no - one was hurt in the incident after Shiraz Nawaz evacuated the area .\n(h / hurt-01\n      :ARG1 (n / no-one)\n      :degree (ii / incredible)\n      :time (ii2 / incident)\n      :time (a / after\n            :op1 (e / evacuate-01\n                  :ARG0 (p / person\n                        :name (n2 / name\n                              :op1 \"Shiraz\"\n                              :op2 \"Nawaz\"))\n                  :ARG1 (a2 / area))))"], "tree": ["(c / cause-01\n   :ARG0 (l2 / live-01\n             :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))", "(s / shoot-02\n   :ARG0 (f2 / flame)\n   :ARG3 (m / manhole))", "(f / feel-01\n   :time (a / after\n            :op1 (s / shoot-02)))", "(f / feel-01\n   :time (a / after\n            :op1 (s / shoot-02)))", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p))))", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p)))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame)\n                    :ARG3 (m / manhole))))", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p)))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame)\n                    :ARG3 (m / manhole))))", "(e / erupt-01\n   :time (a / after\n            :op1 (w / walk-01)\n            :quant (m2 / moment\n                       :mod (j / just))))", "(w / walk-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG2 (o / over\n            :op1 (m / manhole\n                    :location (s / street\n                                 :ARG1 (b / busy-02)))))", "(e / erupt-01\n   :ARG1 (f / flame)\n   :time (a / after\n            :op1 (w / walk-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Shiraz\"\n                                      :op2 \"Nawaz\"))\n                    :ARG2 (o / over\n                             :op1 (m / manhole\n                                     :location (s / street\n                                                  :ARG1 (b / busy-02)))))\n            :quant (m2 / moment\n                       :mod (j / just))))", "(e / evacuate-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Shiraz\"\n                      :op2 \"Nawaz\"))\n   :ARG1 (a2 / area))", "(e / evacuate-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Shiraz\"\n                      :op2 \"Nawaz\"))\n   :ARG1 (a2 / area))", "(h / hurt-01\n   :degree (ii / incredible)\n   :time (ii2 / incident)\n   :time (a / after\n            :op1 (e / evacuate-01)))", "(h / hurt-01\n   :ARG1 (n / no-one)\n   :degree (ii / incredible)\n   :time (ii2 / incident)\n   :time (a / after\n            :op1 (e / evacuate-01\n                    :ARG0 (p / person\n                             :name (n2 / name\n                                       :op1 \"Shiraz\"\n                                       :op2 \"Nawaz\"))\n                    :ARG1 (a2 / area))))"], "smus": ["Because Shiraz Nawabs lives.", "Flames shot through the manhole.", "Feeled after the shots.", "Feeled after the shots.", "Shiraz Nawza felt lucky to have lived.", "After flames shot through the manhole Shiraz Nawza felt lucky to have lived.", "After flames shot through the manhole Shiraz Nawza felt lucky to have lived.", "Just moments after walking, a erupting.", "Shiraz Nawabs walked over a manhole in a busy street.", "The flames erupted just moments after Shiraz Nawaz walked over a busy street manhole.", "Shiraz Nawabs evacuated the area.", "Shiraz Nawabs evacuated the area.", "incredibly hurt during the incident after the evacuation.", "No one was hurt incredibly in the incident after Shiraz Nawabs evacuated the area."]}, {"instance_id": "realsumm-32", "summary": "Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi . Was five miles from the coast travelling to Phuket when engine exploded . Ao Nang Princess 5 ferry caught fire around 3.30pm before sinking around 6 pm . Passengers seen throwing Passengers overboard before being rescued . No injuries reported but search will continue into tomorrow for missing girl .", "summary_trees": ["# ::snt Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi .\n(b / be-located-at-91\n      :ARG1 (f / ferry\n            :name (n / name\n                  :op1 \"Ao\"\n                  :op2 \"Nang\"\n                  :op3 \"Princess\"\n                  :op4 5))\n      :ARG2 (s / sea\n            :name (n2 / name\n                  :op1 \"Andaman\"\n                  :op2 \"Sea\"))\n      :time (w / way\n            :direction (r / resort\n                  :name (n3 / name\n                        :op1 \"Krabi\"))))", "# ::snt Was five miles from the coast travelling to Phuket when engine exploded .\n(t / travel-01\n      :ARG0 (ii / i)\n      :ARG1 (d / distance-quantity\n            :quant 5\n            :unit (m / mile)\n            :location (f / from\n                  :op1 (c / coast)))\n      :ARG4 (ii2 / island\n            :name (n / name\n                  :op1 \"Phuket\"))\n      :time (e / explode-01\n            :ARG1 (e2 / engine)))", "# ::snt Ao Nang Princess 5 ferry caught fire around 3.30pm before sinking around 6 pm .\n(a / and\n      :op1 (c / catch-on-fire-09\n            :ARG1 (f / ferry\n                  :name (n / name\n                        :op1 \"Ao\"\n                        :op2 \"Nang\"\n                        :op3 \"Princess\"\n                        :op4 5))\n            :time (a2 / around\n                  :op1 (d / date-entity\n                        :time \"13:30\")))\n      :op2 (s / sink-01\n            :ARG1 f\n            :time (a3 / around\n                  :op1 (d2 / date-entity\n                        :time \"18:00\"))))", "# ::snt Passengers seen throwing Passengers overboard before being rescued .\n(s / see-01\n      :ARG1 (t / throw-01\n            :ARG0 (p / passenger)\n            :ARG1 (p2 / passenger)\n            :ARG2 (o / overboard)\n            :time (b / before\n                  :op1 (r / rescue-01\n                        :ARG1 p2))))", "# ::snt No injuries reported but search will continue into tomorrow for missing girl .\n(h / have-concession-91\n      :ARG1 (r / report-01\n            :polarity -\n            :ARG1 (ii / injure-01))\n      :ARG2 (c / continue-01\n            :ARG1 (s / search-01\n                  :ARG2 (g / girl\n                        :ARG1-of (m / miss-01)))\n            :time (ii2 / into\n                  :op1 (t / tomorrow))))"], "tree": ["(b / be-located-at-91\n   :time (w / way\n            :direction (r / resort\n                          :name (n3 / name\n                                    :op1 \"Krabi\"))))", "(b / be-located-at-91\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\")))", "(b / be-located-at-91\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\"))\n   :time (w / way\n            :direction (r / resort\n                          :name (n3 / name\n                                    :op1 \"Krabi\"))))", "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG4 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\")))", "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (d / distance-quantity\n            :quant 5\n            :unit (m / mile)\n            :location (f / from\n                         :op1 (c / coast))))", "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG4 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine)))", "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (d / distance-quantity\n            :quant 5\n            :unit (m / mile)\n            :location (f / from\n                         :op1 (c / coast)))\n   :ARG4 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine)))", "(s / sink-01\n   :time (a3 / around\n             :op1 (d2 / date-entity\n                      :time \"18:00\")))", "(c / catch-on-fire-09\n   :time (a2 / around\n             :op1 (d / date-entity\n                     :time \"13:30\")))", "(s / sink-01\n   :time (a3 / around\n             :op1 (d2 / date-entity\n                      :time \"18:00\")))", "(s / sink-01\n   :ARG1 (f / ferry :name (n / name :op1 \"Ao\" :op2 \"Nang\" :op3 \"Princess\" :op4))\n   :time (a3 / around\n             :op1 (d2 / date-entity\n                      :time \"18:00\")))", "(s / sink-01\n   :ARG1 (f / ferry :name (n / name :op1 \"Ao\" :op2 \"Nang\" :op3 \"Princess\" :op4))\n   :time (a3 / around\n             :op1 (d2 / date-entity\n                      :time \"18:00\")))", "(c / catch-on-fire-09\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :time (a2 / around\n             :op1 (d / date-entity\n                     :time \"13:30\")))", "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger))", "(t / throw-01\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard))", "(t / throw-01\n   :time (b / before\n            :op1 (r / rescue-01)))", "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard))", "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 (p2 / passenger)\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p2)))", "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG0 (p / passenger)\n            :ARG1 (p2 / passenger)\n            :ARG2 (o / overboard)\n            :time (b / before\n                     :op1 (r / rescue-01\n                             :ARG1 p2))))", "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG0 (p / passenger)\n            :ARG1 (p2 / passenger)\n            :ARG2 (o / overboard)\n            :time (b / before\n                     :op1 (r / rescue-01\n                             :ARG1 p2))))", "(r / report-01\n   :polarity -\n   :ARG1 (ii / injure-01))", "(s / search-01\n   :ARG2 (g / girl\n            :ARG1 (m / miss-01)))", "(c / continue-01\n   :time (ii2 / into\n              :op1 (t / tomorrow)))", "(h / have-concession-91\n   :ARG1 (r / report-01\n            :polarity -\n            :ARG1 (ii / injure-01)))", "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1 (m / miss-01))))", "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1 (m / miss-01)))\n   :time (ii2 / into\n              :op1 (t / tomorrow)))", "(h / have-concession-91\n   :ARG1 (r / report-01\n            :polarity -\n            :ARG1 (ii / injure-01))\n   :ARG2 (c / continue-01\n            :ARG1 (s / search-01\n                     :ARG2 (g / girl\n                              :ARG1 (m / miss-01)))\n            :time (ii2 / into\n                       :op1 (t / tomorrow))))", "(h / have-concession-91\n   :ARG1 (r / report-01\n            :polarity -\n            :ARG1 (ii / injure-01))\n   :ARG2 (c / continue-01\n            :ARG1 (s / search-01\n                     :ARG2 (g / girl\n                              :ARG1 (m / miss-01)))\n            :time (ii2 / into\n                       :op1 (t / tomorrow))))"], "smus": ["On the way to Rabi resort.", "The Ao Nang Princess 5 ferry is on the Andaman Sea.", "On the way to the resort of Rabi, the Ao Nam Princess 5 ferry is on the Andaman Sea.", "I'm traveling to Phuket.", "I'm traveling 5 miles from the coast.", "I was traveling to Phuket when the engine exploded.", "I was traveling 5 miles from the coast to Phuket when the engine exploded.", "Sinking around 8pm.", "Around 13:30 p.m., the fire caught on fire.", "Sinking around 8pm.", "The Ao Nang Princess ferry sank around 8 a.m.", "The Ao Nang Princess ferry sank around 8 a.m.", "The Ao Nang Princess 5 ferry caught fire around 13:30 p.m.", "Passengers throwing passengers.", "Throwing passengers overboard.", "Throwing before being rescued.", "Passengers throwing passengers overboard.", "Passengers throwing passengers overboard before they were rescued.", "The passengers were seen throwing passengers overboard before they were rescued.", "The passengers were seen throwing passengers overboard before they were rescued.", "No injuries were reported.", "Search for missing girl", "Continue into tomorrow.", "No injuries were reported, though.", "Search continues for missing girl", "The search for the missing girl will continue into tomorrow.", "There has been no reported injury but the search for the missing girl continues into tomorrow.", "There has been no reported injury but the search for the missing girl continues into tomorrow."]}, {"instance_id": "realsumm-33", "summary": "The worker was caught on camera by a member of the public . Field owner TH Clements & Son was alerted and The worker was sacked . Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves .", "summary_trees": ["# ::snt The worker was caught on camera by a member of the public .\n(c / catch-03\n      :ARG0 (m / member\n            :part-of (p / public))\n      :ARG1 (p2 / person\n            :ARG0-of (w / work-01))\n      :ARG2 (c2 / camera))", "# ::snt Field owner TH Clements & Son was alerted and The worker was sacked .\n(a / and\n      :op1 (a2 / alert-01\n            :ARG1 (p / person\n                  :ARG0-of (o / own-01\n                        :ARG1 (f / field))\n                  :mod (c / company\n                        :name (n / name\n                              :op1 \"TH\"\n                              :op2 \"Clements\"\n                              :op3 \"&\"\n                              :op4 \"Son\"))))\n      :op2 (s / sack-01\n            :ARG1 (p2 / person\n                  :ARG0-of (w / work-01))))", "# ::snt Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves .\n(m / multi-sentence\n      :snt1 (p / person\n            :ARG0-of (p2 / pass-by-17)\n            :ARG0-of (u / use-01\n                  :ARG1 (p3 / phone\n                        :mod (m2 / mobile))\n                  :ARG2 (s / snap-03\n                        :ARG0 p\n                        :ARG1 (a / act-01\n                              :ARG1-of (b / brand-01\n                                    :ARG2 (d / disgust-01))\n                              :mod (p4 / photo))))\n            :mod (c / company\n                  :name (n / name\n                        :op1 \"Tesco\")))\n      :snt2 (u2 / undergo-28\n            :ARG1 (v / vegetable)\n            :ARG2 (a2 / assess-01\n                  :ARG1 v\n                  :ARG1-of (e / extensive-03))\n            :time (b2 / before\n                  :op1 (h / hit-01\n                        :ARG1 (s2 / shelf)))))"], "tree": ["(c / catch-03\n   :ARG0 (m / member\n            :part (p / public)))", "(c / catch-03\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01))\n   :ARG2 (c2 / camera))", "(c / catch-03\n   :ARG0 (m / member\n            :part (p / public))\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01)))", "(c / catch-03\n   :ARG0 (m / member\n            :part (p / public))\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01))\n   :ARG2 (c2 / camera))", "(s / sack-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01)))", "(s / sack-01\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01)))", "(a2 / alert-01\n    :ARG1 (p / person\n             :ARG0 (o / own-01\n                      :ARG1 (f / field))\n             :mod (c / company\n                     :name (n / name\n                              :op1 \"TH\"\n                              :op2 \"Clements\"\n                              :op3 \"&\"\n                              :op4 \"Son\"))))", "(a2 / alert-01\n    :ARG1 (p / person\n             :ARG0 (o / own-01\n                      :ARG1 (f / field))\n             :mod (c / company\n                     :name (n / name\n                              :op1 \"TH\"\n                              :op2 \"Clements\"\n                              :op3 \"&\"\n                              :op4 \"Son\"))))", "(a2 / assess-01\n    :ARG1 (v / vegetable)\n    :ARG1 (e / extensive-03))", "(u2 / undergo-28\n    :time (b2 / before\n              :op1 (h / hit-01)))", "(a / act-01\n   :ARG1 (b / brand-01\n            :ARG2 (d / disgust-01))\n   :mod (p4 / photo))", "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v\n              :ARG1 (e / extensive-03)))", "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v\n              :ARG1 (e / extensive-03))\n    :time (b2 / before\n              :op1 (h / hit-01\n                      :ARG1 (s2 / shelf))))", "(s / snap-03\n   :ARG0 (p :mod (c / company\n                    :name (n / name\n                             :op1 \"Tesco\")))\n   :ARG1 (a / act-01\n            :ARG1 (b / brand-01\n                     :ARG2 (d / disgust-01))\n            :mod (p4 / photo)))", "(u / use-01\n   :ARG1 (p3 / phone\n             :mod (m2 / mobile))\n   :ARG2 (s / snap-03\n            :ARG0 (p :mod (c / company\n                             :name (n / name\n                                      :op1 \"Tesco\")))\n            :ARG1 (a / act-01\n                     :ARG1 (b / brand-01\n                              :ARG2 (d / disgust-01))\n                     :mod (p4 / photo))))"], "smus": ["A member of the public was caught.", "The worker was caught on camera.", "A member of the public has caught the worker.", "A member of the public has caught the worker on camera.", "The worker was sacked.", "The worker was sacked.", "Field owners TH Clements & Son were alerted.", "Field owners TH Clements & Son were alerted.", "The vegetables have undergone an extensive assessment.", "Underwent a 'hit and run' before hitting.", "The photo is an act of being branded disgusting.", "Vegetables undergo an extensive assessment.", "Vegetables undergo extensive assessment before hitting the shelves.", "Tesco snap photo action branded disgusting.", "The mobile phone used by Tesco to snap a photo act of being branded disgusting."]}, {"instance_id": "realsumm-34", "summary": "Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption . Muhammadu Buhar 's an ex - dictator , but there 's reason for optimism . Muhammadu Buhar says Jonathan administration failed to address corruption , poverty and rise of Boko Haram . Muhammadu Buhar may be tonic to years of misrule .", "summary_trees": ["# ::snt Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Stanley\"))\n      :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Muhammadu\"\n                        :op2 \"Buhar\"))\n            :ARG1 (v / vote-01)\n            :ARG2 (c / country\n                  :name (n3 / name\n                        :op1 \"Nigeria\"))\n            :ARG1-of (c2 / cause-01\n                  :ARG0 (c3 / campaign-01\n                        :ARG0 p2\n                        :ARG1 (a / against\n                              :op1 (c4 / corrupt-01))))))", "# ::snt Muhammadu Buhar 's an ex - dictator ,\n(d / dictator\n      :domain (p / person\n            :name (n / name\n                  :op1 \"Muhammadu\"\n                  :op2 \"Buhar\"))\n      :time (e / ex))", "# ::snt but there 's reason for optimism .\n(c / contrast-01\n      :ARG2 (r / reason\n            :ARG0-of (c2 / cause-01\n                  :ARG1 (o / optimism))))", "# ::snt Muhammadu Buhar says Jonathan administration failed to address corruption , poverty and rise of Boko Haram .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Muhammadu\"\n                  :op2 \"Buhar\"))\n      :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                  :ARG0-of (a / administrate-01)\n                  :mod (p2 / person\n                        :name (n2 / name\n                              :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                  :ARG0 g\n                  :ARG1 (a3 / and\n                        :op1 (c / corruption)\n                        :op2 (p3 / poor)\n                        :op3 (r / rise-01\n                              :ARG1 (c2 / criminal-organization\n                                    :name (n3 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))))", "# ::snt Muhammadu Buhar may be tonic to years of misrule .\n(p / possible-01\n      :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                  :duration (m2 / multiple\n                        :op1 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (y / year))))\n            :domain (p2 / person\n                  :name (n / name\n                        :op1 \"Muhammadu\"\n                        :op2 \"Buhar\"))))"], "tree": ["(c3 / campaign-01\n    :ARG1 (a / against\n             :op1 (c4 / corrupt-01)))", "(c3 / campaign-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))\n    :ARG1 (a / against\n             :op1 (c4 / corrupt-01)))", "(c3 / campaign-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))\n    :ARG1 (a / against\n             :op1 (c4 / corrupt-01)))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\")))", "(c2 / cause-01\n    :ARG0 (c3 / campaign-01\n              :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))\n              :ARG1 (a / against\n                       :op1 (c4 / corrupt-01))))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\")))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01)\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\")))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01)\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\"))\n   :ARG1 (c2 / cause-01\n             :ARG0 (c3 / campaign-01\n                       :ARG0 p2\n                       :ARG1 (a / against\n                                :op1 (c4 / corrupt-01)))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Muhammadu\"\n                                :op2 \"Buhar\"))\n            :ARG1 (v / vote-01)\n            :ARG2 (c / country\n                     :name (n3 / name\n                               :op1 \"Nigeria\"))\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / campaign-01\n                                :ARG0 p2\n                                :ARG1 (a / against\n                                         :op1 (c4 / corrupt-01))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Muhammadu\"\n                                :op2 \"Buhar\"))\n            :ARG1 (v / vote-01)\n            :ARG2 (c / country\n                     :name (n3 / name\n                               :op1 \"Nigeria\"))\n            :ARG1 (c2 / cause-01\n                      :ARG0 (c3 / campaign-01\n                                :ARG0 p2\n                                :ARG1 (a / against\n                                         :op1 (c4 / corrupt-01))))))", "(d / dictator\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :time (e / ex))", "(c / contrast-01\n   :ARG2 (r / reason\n            :ARG0 (c2 / cause-01\n                      :ARG1 (o / optimism))))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (c / corruption))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (p3 / poor))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (c / corruption))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (p3 / poor))", "(r / rise-01\n   :ARG1 (c2 / criminal-organization\n             :name (n3 / name\n                       :op1 \"Boko\"\n                       :op2 \"Hararma\")))", "(r / rise-01\n   :ARG1 (c2 / criminal-organization\n             :name (n3 / name\n                       :op1 \"Boko\"\n                       :op2 \"Hararma\")))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\"))))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (r / rise-01\n             :ARG1 (c2 / criminal-organization\n                       :name (n3 / name\n                                 :op1 \"Boko\"\n                                 :op2 \"Hararma\"))))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (r / rise-01\n             :ARG1 (c2 / criminal-organization\n                       :name (n3 / name\n                                 :op1 \"Boko\"\n                                 :op2 \"Hararma\"))))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (c / corruption)))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (p3 / poor)))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (c / corruption)))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (p3 / poor)))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (a3 / and\n              :op1 (c / corruption)\n              :op2 (p3 / poor)\n              :op3 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n3 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))", "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (a3 / and\n              :op1 (c / corruption)\n              :op2 (p3 / poor)\n              :op3 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n3 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n3 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n3 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (c / corruption))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (p3 / poor))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (c / corruption))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (p3 / poor))))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (a3 / and\n                       :op1 (c / corruption)\n                       :op2 (p3 / poor)\n                       :op3 (r / rise-01\n                               :ARG1 (c2 / criminal-organization\n                                         :name (n3 / name\n                                                   :op1 \"Boko\"\n                                                   :op2 \"Hararma\"))))))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (a3 / and\n                       :op1 (c / corruption)\n                       :op2 (p3 / poor)\n                       :op3 (r / rise-01\n                               :ARG1 (c2 / criminal-organization\n                                         :name (n3 / name\n                                                   :op1 \"Boko\"\n                                                   :op2 \"Hararma\"))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (r / rise-01\n                               :ARG1 (c2 / criminal-organization\n                                         :name (n3 / name\n                                                   :op1 \"Boko\"\n                                                   :op2 \"Hararma\"))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (r / rise-01\n                               :ARG1 (c2 / criminal-organization\n                                         :name (n3 / name\n                                                   :op1 \"Boko\"\n                                                   :op2 \"Hararma\"))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (a3 / and\n                                :op1 (c / corruption)\n                                :op2 (p3 / poor)\n                                :op3 (r / rise-01\n                                        :ARG1 (c2 / criminal-organization\n                                                  :name (n3 / name\n                                                            :op1 \"Boko\"\n                                                            :op2 \"Hararma\")))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muhammadu\"\n                     :op2 \"Buhar\"))\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (a3 / and\n                                :op1 (c / corruption)\n                                :op2 (p3 / poor)\n                                :op3 (r / rise-01\n                                        :ARG1 (c2 / criminal-organization\n                                                  :name (n3 / name\n                                                            :op1 \"Boko\"\n                                                            :op2 \"Hararma\")))))))", "(p / possible-01\n   :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                            :duration (m2 / multiple\n                                          :op1 (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y / year))))\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"Muhammadu\"\n                                 :op2 \"Buhar\"))))", "(p / possible-01\n   :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                            :duration (m2 / multiple\n                                          :op1 (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y / year))))\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"Muhammadu\"\n                                 :op2 \"Buhar\"))))"], "smus": ["Campaign against corruption.", "Muhammadu Buhar is a campaign against corruption.", "Muhammadu Buhar is a campaign against corruption.", "Muhammadu Buhar won.", "Because Muhammadu Buhar is a campaign against corruption.", "Muhammadu Buhar won the vote.", "Muhammadu Buhar won Nigeria.", "Muhammadu Buhar won the vote for Nigeria.", "Muhammadu Buhar won the vote for Nigeria because he campaigned against corruption.", "Tim Stanley said Muhammadu Buhar won the vote for Nigeria because he was campaigning against corruption.", "Tim Stanley said Muhammadu Buhar won the vote for Nigeria because he was campaigning against corruption.", "Muhammadu Buhar is an ex-dictator.", "But the reason for optimism is...", "Government to address corruption", "Government to address poverty.", "Government to address corruption", "Government to address poverty.", "The rise of the Boko Hararma.", "The rise of the Boko Hararma.", "Jonathan's administration failed.", "The government will address the rise of the Boko Hararma.", "The government will address the rise of the Boko Hararma.", "Jonathan's administration failed to address corruption.", "Jonathan's administration failed to address poverty.", "Jonathan's administration failed to address corruption.", "Jonathan's administration failed to address poverty.", "The government will address corruption, poverty and the rise of the Boko Hararma.", "The government will address corruption, poverty and the rise of the Boko Hararma.", "Jonathan's administration failed to address the rise of the Bok Hararma.", "Jonathan's administration failed to address the rise of the Bok Hararma.", "Mohammed Buhar says the Jonathan administration failed to address corruption.", "Mohammed Buhar says the Jonathan administration failed to address poverty.", "Mohammed Buhar says the Jonathan administration failed to address corruption.", "Mohammed Buhar says the Jonathan administration failed to address poverty.", "Jonathan's administration failed to address corruption, poverty and the rise of Bok Hararma.", "Jonathan's administration failed to address corruption, poverty and the rise of Bok Hararma.", "Muhammadu Buhar says the Jonathan administration failed to address the rise of the Bok Hararma group.", "Muhammadu Buhar says the Jonathan administration failed to address the rise of the Bok Hararma group.", "Muhammadu Buhar says the Jonathan administration failed to address corruption, poverty and the rise of the Bok Hararma organization.", "Muhammadu Buhar says the Jonathan administration failed to address corruption, poverty and the rise of the Bok Hararma organization.", "Muhammadu Buhar may have been a tonic for years of misrule.", "Muhammadu Buhar may have been a tonic for years of misrule."]}, {"instance_id": "realsumm-35", "summary": "Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey . Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and Bulgaria 's high inflation . Bulgaria 's Black Sea resorts most popular resort of Sunny Beach copies those of Spain and Greece .", "summary_trees": ["# ::snt Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey .\n(h / have-degree-91\n      :ARG1 (r / resort\n            :location (s / sea\n                  :name (n / name\n                        :op1 \"Black\"\n                        :op2 \"Sea\"))\n            :poss (c / country\n                  :name (n2 / name\n                        :op1 \"Bulgaria\")))\n      :ARG2 (c2 / cheap-02\n            :ARG1 r)\n      :ARG3 (m / more)\n      :ARG4 (h2 / hotspot\n            :location (a / and\n                  :op1 (c3 / country\n                        :name (n3 / name\n                              :op1 \"Italy\"))\n                  :op2 (c4 / country\n                        :name (n4 / name\n                              :op1 \"Spain\"))\n                  :op3 (c5 / country\n                        :name (n5 / name\n                              :op1 \"Turkey\")))))", "# ::snt Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and Bulgaria 's high inflation .\n(m / multi-sentence\n      :snt1 (f / find-01\n            :ARG0 (p / person\n                  :ARG0-of (r / research-01))\n            :ARG1 (d / destination\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (c / cheap-02\n                              :ARG1 d)\n                        :ARG3 (m2 / most)))\n            :manner (u / use-01\n                  :ARG0 p\n                  :ARG1 (b / basket\n                        :mod (s / shop-01)\n                        :mod (ii / imaginary))))\n      :snt2 (d2 / drive-02\n            :ARG0 (a / and\n                  :op1 (r2 / rate\n                        :mod (e / exchange-01)\n                        :ARG1-of (l / low-04))\n                  :op2 (ii2 / inflate-01\n                        :ARG1 (c2 / country\n                              :name (n / name\n                                    :op1 \"Bulgaria\"))\n                        :ARG1-of (h2 / high-02)))\n            :ARG1 (p2 / price-01\n                  :ARG1-of (c3 / cheap-02))))", "# ::snt Bulgaria 's Black Sea resorts most popular resort of Sunny Beach copies those of Spain and Greece .\n(c / copy-01\n      :ARG1 (r / resort\n            :poss (c2 / country\n                  :name (n / name\n                        :op1 \"Bulgaria\"))\n            :location (s / sea\n                  :name (n2 / name\n                        :op1 \"Black\"\n                        :op2 \"Sea\"))\n            :domain (b / beach\n                  :name (n3 / name\n                        :op1 \"Sunny\"\n                        :op2 \"Beach\")\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (p / popular-02\n                              :ARG1 b)\n                        :ARG3 (m / most))))\n      :ARG2 (r2 / resort\n            :poss (a / and\n                  :op1 (c3 / country\n                        :name (n4 / name\n                              :op1 \"Spain\"))\n                  :op2 (c4 / country\n                        :name (n5 / name\n                              :op1 \"Greece\")))))"], "tree": ["(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (c3 / country\n                           :name (n3 / name\n                                     :op1 \"Italy\"))))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (c4 / country\n                           :name (n4 / name\n                                     :op1 \"Spain\"))))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (c5 / country\n                           :name (n5 / name\n                                     :op1 \"Turkey\"))))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (a / and\n                          :op1 (c3 / country\n                                   :name (n3 / name\n                                             :op1 \"Italy\"))\n                          :op2 (c4 / country\n                                   :name (n4 / name\n                                             :op1 \"Spain\"))\n                          :op3 (c5 / country\n                                   :name (n5 / name\n                                             :op1 \"Turkey\")))))", "(h / have-degree-91\n   :ARG2 (c / cheap-02\n            :ARG1 (d / destination))\n   :ARG3 (m2 / most))", "(ii2 / inflate-01\n     :ARG1 (c2 / country\n               :name (n / name\n                        :op1 \"Bulgaria\"))\n     :ARG1 (h2 / high-02))", "(u / use-01\n   :ARG0 (p / person)\n   :ARG1 (b / basket\n            :mod (s / shop-01)\n            :mod (ii / imaginary)))", "(d2 / drive-02\n    :ARG0 (r2 / rate\n              :mod (e / exchange-01)\n              :ARG1 (l / low-04))\n    :ARG1 (p2 / price-01\n              :ARG1 (c3 / cheap-02)))", "(d2 / drive-02\n    :ARG0 (ii2 / inflate-01\n               :ARG1 (c2 / country\n                         :name (n / name\n                                  :op1 \"Bulgaria\"))\n               :ARG1 (h2 / high-02))\n    :ARG1 (p2 / price-01\n              :ARG1 (c3 / cheap-02))\n    :ARG1 p2)", "(d2 / drive-02\n    :ARG0 (a / and\n             :op1 (r2 / rate\n                      :mod (e / exchange-01)\n                      :ARG1 (l / low-04))\n             :op2 (ii2 / inflate-01\n                       :ARG1 (c2 / country\n                                 :name (n / name\n                                          :op1 \"Bulgaria\"))\n                       :ARG1 (h2 / high-02)))\n    :ARG1 (p2 / price-01\n              :ARG1 (c3 / cheap-02)))", "(f / find-01\n   :ARG0 (p / person\n            :ARG0 (r / research-01))\n   :ARG1 (d / destination\n            :ARG1 (h / have-degree-91\n                     :ARG2 (c / cheap-02\n                              :ARG1 d)\n                     :ARG3 (m2 / most)))\n   :manner (u / use-01\n              :ARG0 p\n              :ARG1 (b / basket\n                       :mod (s / shop-01)\n                       :mod (ii / imaginary))))", "(h / have-degree-91\n   :ARG2 (p / popular-02\n            :ARG1 (b / beach :name (n3 / name :op1 \"Sunny\" :op2 \"Beach\"))))\n   :ARG3 (m / most))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most)))))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most))))\n   :ARG2 (r2 / resort\n             :poss (c3 / country\n                       :name (n4 / name\n                                 :op1 \"Spain\"))))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most))))\n   :ARG2 (r2 / resort\n             :poss (c4 / country\n                       :name (n5 / name\n                                 :op1 \"Greece\"))))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most))))\n   :ARG2 (r2 / resort\n             :poss (c3 / country\n                       :name (n4 / name\n                                 :op1 \"Spain\"))))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most))))\n   :ARG2 (r2 / resort\n             :poss (c4 / country\n                       :name (n5 / name\n                                 :op1 \"Greece\"))))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most))))\n   :ARG2 (r2 / resort\n             :poss (a / and\n                      :op1 (c3 / country\n                               :name (n4 / name\n                                         :op1 \"Spain\"))\n                      :op2 (c4 / country\n                               :name (n5 / name\n                                         :op1 \"Greece\")))))", "(c / copy-01\n   :ARG1 (r / resort\n            :poss (c2 / country\n                      :name (n / name\n                               :op1 \"Bulgaria\"))\n            :location (s / sea\n                         :name (n2 / name\n                                   :op1 \"Black\"\n                                   :op2 \"Sea\"))\n            :domain (b / beach\n                       :name (n3 / name\n                                 :op1 \"Sunny\"\n                                 :op2 \"Beach\")\n                       :ARG1 (h / have-degree-91\n                                :ARG2 (p / popular-02\n                                         :ARG1 b)\n                                :ARG3 (m / most))))\n   :ARG2 (r2 / resort\n             :poss (a / and\n                      :op1 (c3 / country\n                               :name (n4 / name\n                                         :op1 \"Spain\"))\n                      :op2 (c4 / country\n                               :name (n5 / name\n                                         :op1 \"Greece\")))))"], "smus": ["Bulgaria's Black Sea resorts are cheaper.", "Bulgaria's Black Sea resorts are cheaper than Italy's hotspots.", "Bulgaria's Black Sea resorts are cheaper than Spain's hotspots.", "Bulgaria's Black Sea resorts are cheaper than Turkey's hotspots.", "Bulgaria's Black Sea resorts are cheaper than hotspots in Italy, Spain and Turkey.", "The cheapest destination", "Bulgaria has experienced high inflation.", "People are using an imaginary shopping basket.", "Low exchange rates have driven up prices for goods.", "Bulgaria's high inflation has driven up prices for goods.", "Low exchange rates and Bulgaria's high inflation have driven up prices for goods.", "The researchers found the cheapest destination using an imaginary shopping basket.", "Sunny Beach is the most popular.", "Copy of Bulgaria's Black Sea resort - Sunny Beach - the most popular beach", "Bulgaria's Black Sea resort - Sunny Beach, the most popular beach in Spain - copies Spain's.", "Bulgaria's Black Sea resort - Sunny Beach, the most popular beach in Greece - copies Greece's.", "Bulgaria's Black Sea resort - Sunny Beach, the most popular beach in Spain - copies Spain's.", "Bulgaria's Black Sea resort - Sunny Beach, the most popular beach in Greece - copies Greece's.", "Bulgaria's Black Sea resort - Sunny Beach - the most popular one - copies the resorts of Spain and Greece.", "Bulgaria's Black Sea resort - Sunny Beach - the most popular one - copies the resorts of Spain and Greece."]}, {"instance_id": "realsumm-36", "summary": "WARNING : GRAPHIC CONTENT . Series of photos appear to show the beheading of a man in Hama in Syria . a man is handcuffed and blindfolded as a man is led from a van to area of land . a man is surrounded by men with guns and executioner with a meat cleaver . It is claimed a man was the beheading of a man in Hama in Syria because a man is an alleged ' blasphemer '", "summary_trees": ["# ::snt WARNING : GRAPHIC CONTENT .\n(a / and\n      :op1 (t / thing\n            :ARG0-of (w / warn-01))\n      :op2 (c / content\n            :mod (g / graphic)))", "# ::snt Series of photos appear to show the beheading of a man in Hama in Syria .\n(a / appear-02\n      :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                  :consist-of (p / photo))\n            :ARG1 (b / behead-01\n                  :ARG1 (m / man)\n                  :location (c / city\n                        :name (n / name\n                              :op1 \"Hama\")\n                        :location (c2 / country\n                              :name (n2 / name\n                                    :op1 \"Syria\"))))))", "# ::snt a man is handcuffed and blindfolded as a man is led from a van to area of land .\n(a / and\n      :op1 (h / handcuff-01\n            :ARG1 (m / man))\n      :op2 (b / blindfold-01\n            :ARG1 m)\n      :time (l / lead-01\n            :ARG1 (m2 / man)\n            :ARG3 (v / van)\n            :ARG4 (a2 / area\n                  :mod (l2 / land))))", "# ::snt a man is surrounded by men with guns and executioner with a meat cleaver .\n(s / surround-01\n      :ARG1 (a / and\n            :op1 (m / man\n                  :ARG0-of (h / have-03\n                        :ARG1 (g / gun)))\n            :op2 (p / person\n                  :ARG0-of (e / execute-01)\n                  :ARG0-of (h2 / have-03\n                        :ARG1 (c / cleaver\n                              :purpose (m2 / meat)))))\n      :ARG2 (m3 / man))", "# ::snt It is claimed a man was the beheading of a man in Hama in Syria because a man is an alleged ' blasphemer '\n(c / claim-01\n      :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :location (c2 / city\n                  :name (n / name\n                        :op1 \"Hama\")\n                  :location (c3 / country\n                        :name (n2 / name\n                              :op1 \"Syria\")))\n            :ARG1-of (c4 / cause-01\n                  :ARG0 (b2 / blaspheme-01\n                        :ARG0 m\n                        :ARG1-of (a / allege-01)))))"], "tree": ["(a / and\n   :op1 (t / thing\n           :ARG0-of (w / warn-01))\n   :op2 (c / content\n           :mod (g / graphic)))", "(b / behead-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))", "(b / behead-01\n   :ARG1 (m / man)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))", "(s / show-01\n   :ARG0 (s2 / series\n             :consist-of (p / photo))\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Hama\")\n                         :location (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"Syria\")))))", "(a / appear-02\n   :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                      :consist-of (p / photo))\n            :ARG1 (b / behead-01\n                     :ARG1 (m / man)\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Hama\")\n                                  :location (c2 / country\n                                                :name (n2 / name\n                                                          :op1 \"Syria\"))))))", "(l / lead-01\n   :ARG1 (m2 / man)\n   :ARG3 (v / van)\n   :ARG4 (a2 / area\n             :mod (l2 / land)))", "(h2 / have-03\n    :ARG1 (c / cleaver\n             :purpose (m2 / meat)))", "(s / surround-01\n   :ARG1 (m / man\n            :ARG0 (h / have-03\n                     :ARG1 (g / gun))))", "(s / surround-01\n   :ARG1 (m / man\n            :ARG0 (h / have-03\n                     :ARG1 (g / gun)))\n   :ARG2 (m3 / man))", "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (e / execute-01)\n            :ARG0 (h2 / have-03\n                      :ARG1 (c / cleaver\n                               :purpose (m2 / meat)))))", "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (e / execute-01)\n            :ARG0 (h2 / have-03\n                      :ARG1 (c / cleaver\n                               :purpose (m2 / meat))))\n   :ARG2 (m3 / man)\n   :ARG2 m3)", "(s / surround-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG0 (h / have-03\n                             :ARG1 (g / gun)))\n            :op2 (p / person\n                    :ARG0 (e / execute-01)\n                    :ARG0 (h2 / have-03\n                              :ARG1 (c / cleaver\n                                       :purpose (m2 / meat))))))", "(s / surround-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG0 (h / have-03\n                             :ARG1 (g / gun)))\n            :op2 (p / person\n                    :ARG0 (e / execute-01)\n                    :ARG0 (h2 / have-03\n                              :ARG1 (c / cleaver\n                                       :purpose (m2 / meat)))))\n   :ARG2 (m3 / man))", "(b2 / blaspheme-01\n    :ARG0 (m / man)\n    :ARG1 (a / allege-01))", "(c4 / cause-01\n    :ARG0 (b2 / blaspheme-01\n              :ARG0 (m / man)\n              :ARG1 (a / allege-01)))", "(b / behead-01\n   :location (c2 / city\n                 :name (n / name\n                          :op1 \"Hama\")\n                 :location (c3 / country\n                               :name (n2 / name\n                                         :op1 \"Syria\"))))", "(b / behead-01\n   :ARG1 (m / man)\n   :location (c2 / city\n                 :name (n / name\n                          :op1 \"Hama\")\n                 :location (c3 / country\n                               :name (n2 / name\n                                         :op1 \"Syria\")))\n   :ARG1 (c4 / cause-01\n             :ARG0 (b2 / blaspheme-01\n                       :ARG0 m\n                       :ARG1 (a / allege-01))))", "(c / claim-01\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :location (c2 / city\n                          :name (n / name\n                                   :op1 \"Hama\")\n                          :location (c3 / country\n                                        :name (n2 / name\n                                                  :op1 \"Syria\")))\n            :ARG1 (c4 / cause-01\n                      :ARG0 (b2 / blaspheme-01\n                                :ARG0 m\n                                :ARG1 (a / allege-01)))))"], "smus": ["Warning, Graphic Content.", "The beheading took place in Hama, Syria.", "The man was beheaded in Hama, Syria.", "A series of photos will show the beheading of a man in Hama, Syria.", "A series of photos appear to show the beheading of a man in Hama, Syria.", "The man was led by a van to a land area.", "has a meat cleaver.", "The men were surrounded by men with guns.", "The men were surrounded by men with guns.", "The executioner was surrounded by a meat cleaver.", "The executioner had a meat cleaver in his hand and the men were surrounded by him.", "The men were surrounded by guns and the executioner was a meat cleaver.", "The men were surrounded by men with guns and an executioner with a meat cleaver.", "The man is blaspheming the allegations.", "Because the man is blaming the alleged.", "The beheading took place in Hama, Syria.", "The man was beheaded in Hama, Syria because of alleged blasphemy.", "The man was beheaded in Hama, Syria, for blasphemy of the alleged motive."]}, {"instance_id": "realsumm-37", "summary": "Denise and Glen Higgs thought Denise and Glen Higgs 'd never have children . Denise was made infertile due to cancer treatment , but Denise and Glen Higgs tried IVF . Couple from of Braunton , Devon , had Mazy , born three years ago . Tried again using the same batch and had twins Carter & Carson last week .", "summary_trees": ["# ::snt Denise and Glen Higgs thought Denise and Glen Higgs 'd never have children .\n(t / think-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Denise\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Glenn\"\n                        :op2 \"Higgs\")))\n      :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))", "# ::snt Denise was made infertile due to cancer treatment , but Denise and Glen Higgs tried IVF .\n(c / contrast-01\n      :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                  :ARG2 (d / disease\n                        :name (n / name\n                              :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                  :domain (p / person\n                        :name (n2 / name\n                              :op1 \"Denise\"))))\n      :ARG2 (t2 / try-01\n            :ARG0 (a / and\n                  :op1 p\n                  :op2 (p2 / person\n                        :name (n3 / name\n                              :op1 \"Glenn\"\n                              :op2 \"Higgs\")))\n            :ARG1 (f / fertilize-01\n                  :mod (ii2 / in-vitro))))", "# ::snt Couple from of Braunton , Devon , had Mazy , born three years ago .\n(h / have-05\n      :ARG0 (c / couple\n            :source (c2 / city\n                  :name (n / name\n                        :op1 \"Braunton\")\n                  :location (c3 / county\n                        :name (n2 / name\n                              :op1 \"Devon\"))))\n      :ARG1 (p / person\n            :name (n3 / name\n                  :op1 \"Mazy\")\n            :ARG1-of (b / bear-02\n                  :time (b2 / before\n                        :op1 (n4 / now)\n                        :quant (t / temporal-quantity\n                              :quant 3\n                              :unit (y / year))))))", "# ::snt Tried again using the same batch and had twins Carter & Carson last week .\n(a / and\n      :op1 (t / try-01\n            :ARG0 (ii / i)\n            :mod (a2 / again)\n            :manner (u / use-01\n                  :ARG0 ii\n                  :ARG1 (b / batch\n                        :ARG1-of (s / same-01))))\n      :op2 (h / have-05\n            :ARG0 ii\n            :ARG1 (a3 / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Carter\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Carson\"))\n                  :mod (t2 / twin))\n            :time (w / week\n                  :mod (l / last))))"], "tree": ["(h / have-05\n   :ARG0 (a / and)\n   :ARG1 (c / child))", "(h / have-05\n   :polarity -\n   :time (e / ever))", "(h / have-05\n   :polarity -\n   :ARG0 (a / and)\n   :ARG1 (c / child)\n   :time (e / ever))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Denise\"))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 p\n            :ARG1 (c / child)\n            :time (e / ever)))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Denise\"))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 p\n            :ARG1 (c / child)\n            :time (e / ever)))", "(t / think-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Glenn\"\n                       :op2 \"Higgs\"))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 p2\n            :ARG1 (c / child)\n            :time (e / ever))\n   :ARG1 h)", "(t / think-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Glenn\"\n                       :op2 \"Higgs\"))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 p2\n            :ARG1 (c / child)\n            :time (e / ever))\n   :ARG1 h)", "(t / think-01\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Denise\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Glenn\"\n                               :op2 \"Higgs\")))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))", "(t / think-01\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Denise\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Glenn\"\n                               :op2 \"Higgs\")))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))", "(t / treat-03\n   :ARG2 (d / disease\n            :name (n / name\n                     :op1 \"cancer\")))", "(t2 / try-01\n    :ARG0 (p / person :name (n2 / name :op1 \"Denise\"))\n    :ARG1 (f / fertilize-01\n             :mod (ii2 / in-vitro)))", "(t2 / try-01\n    :ARG0 (p / person :name (n2 / name :op1 \"Denise\"))\n    :ARG1 (f / fertilize-01\n             :mod (ii2 / in-vitro)))", "(t2 / try-01\n    :ARG0 (p2 / person\n              :name (n3 / name\n                        :op1 \"Glenn\"\n                        :op2 \"Higgs\"))\n    :ARG1 (f / fertilize-01\n             :mod (ii2 / in-vitro))\n    :ARG1 f)", "(t2 / try-01\n    :ARG0 (p2 / person\n              :name (n3 / name\n                        :op1 \"Glenn\"\n                        :op2 \"Higgs\"))\n    :ARG1 (f / fertilize-01\n             :mod (ii2 / in-vitro))\n    :ARG1 f)", "(t2 / try-01\n    :ARG0 (a / and\n             :op1 (p / person :name (n2 / name :op1 \"Denise\"))\n             :op2 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Glenn\"\n                                :op2 \"Higgs\")))\n    :ARG1 (f / fertilize-01\n             :mod (ii2 / in-vitro)))", "(t2 / try-01\n    :ARG0 (a / and\n             :op1 (p / person :name (n2 / name :op1 \"Denise\"))\n             :op2 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Glenn\"\n                                :op2 \"Higgs\")))\n    :ARG1 (f / fertilize-01\n             :mod (ii2 / in-vitro)))", "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (d / disease\n                     :name (n / name\n                              :op1 \"cancer\")))\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n2 / name\n                                  :op1 \"Denise\"))))", "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG2 (d / disease\n                     :name (n / name\n                              :op1 \"cancer\")))\n   :ARG1 (ii / infertile\n             :domain (p / person\n                        :name (n2 / name\n                                  :op1 \"Denise\"))))", "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain (p / person\n                                 :name (n2 / name\n                                           :op1 \"Denise\"))))\n   :ARG2 (t2 / try-01\n             :ARG0 p\n             :ARG1 (f / fertilize-01\n                      :mod (ii2 / in-vitro))))", "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain (p / person\n                                 :name (n2 / name\n                                           :op1 \"Denise\"))))\n   :ARG2 (t2 / try-01\n             :ARG0 p\n             :ARG1 (f / fertilize-01\n                      :mod (ii2 / in-vitro))))", "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain (p / person\n                                 :name (n2 / name\n                                           :op1 \"Denise\"))))\n   :ARG2 (t2 / try-01\n             :ARG0 (p2 / person\n                       :name (n3 / name\n                                 :op1 \"Glenn\"\n                                 :op2 \"Higgs\"))\n             :ARG1 (f / fertilize-01\n                      :mod (ii2 / in-vitro))\n             :ARG1 f))", "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain (p / person\n                                 :name (n2 / name\n                                           :op1 \"Denise\"))))\n   :ARG2 (t2 / try-01\n             :ARG0 (p2 / person\n                       :name (n3 / name\n                                 :op1 \"Glenn\"\n                                 :op2 \"Higgs\"))\n             :ARG1 (f / fertilize-01\n                      :mod (ii2 / in-vitro))\n             :ARG1 f))", "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain (p / person\n                                 :name (n2 / name\n                                           :op1 \"Denise\"))))\n   :ARG2 (t2 / try-01\n             :ARG0 (a / and\n                      :op1 p\n                      :op2 (p2 / person\n                               :name (n3 / name\n                                         :op1 \"Glenn\"\n                                         :op2 \"Higgs\")))\n             :ARG1 (f / fertilize-01\n                      :mod (ii2 / in-vitro))))", "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain (p / person\n                                 :name (n2 / name\n                                           :op1 \"Denise\"))))\n   :ARG2 (t2 / try-01\n             :ARG0 (a / and\n                      :op1 p\n                      :op2 (p2 / person\n                               :name (n3 / name\n                                         :op1 \"Glenn\"\n                                         :op2 \"Higgs\")))\n             :ARG1 (f / fertilize-01\n                      :mod (ii2 / in-vitro))))", "(b / bear-02\n   :time (b2 / before\n             :op1 (n4 / now)\n             :quant (t / temporal-quantity\n                       :quant 3\n                       :unit (y / year))))", "(b / bear-02\n   :time (b2 / before\n             :op1 (n4 / now)\n             :quant (t / temporal-quantity\n                       :quant 3\n                       :unit (y / year))))", "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :name (n3 / name\n                      :op1 \"Mazy\")\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :op1 (n4 / now)\n                               :quant (t / temporal-quantity\n                                         :quant 3\n                                         :unit (y / year))))))", "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :name (n3 / name\n                      :op1 \"Mazy\")\n            :ARG1 (b / bear-02\n                     :time (b2 / before\n                               :op1 (n4 / now)\n                               :quant (t / temporal-quantity\n                                         :quant 3\n                                         :unit (y / year))))))", "(u / use-01\n   :ARG1 (b / batch\n            :ARG1 (s / same-01)))", "(h / have-05\n   :time (w / week\n            :mod (l / last)))", "(t / try-01\n   :mod (a2 / again)\n   :manner (u / use-01))", "(u / use-01\n   :ARG0 (ii / i)\n   :ARG1 (b / batch\n            :ARG1 (s / same-01)))", "(u / use-01\n   :ARG0 (ii / i)\n   :ARG1 (b / batch\n            :ARG1 (s / same-01)))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carter\")))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carson\")\n             :mod (t2 / twin)))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :time (w / week\n            :mod (l / last)))", "(t / try-01\n   :ARG0 (ii / i)\n   :mod (a2 / again)\n   :manner (u / use-01\n              :ARG0 ii\n              :ARG1 (b / batch\n                       :ARG1 (s / same-01))))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carson\")\n             :mod (t2 / twin))\n   :time (w / week\n            :mod (l / last))\n   :time w)", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (a3 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Carter\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carson\"))\n             :mod (t2 / twin)))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (a3 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Carter\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carson\"))\n             :mod (t2 / twin))\n   :time (w / week\n            :mod (l / last)))"], "smus": ["The children will have children.", "Never have.", "And the children will never have children.", "Denise thought she would never have children.", "Denise thought she would never have children.", "Glenn Higgs thought he would never have children.", "Glenn Higgs thought he would never have children.", "Denise and Glenn Higgs thought they would never have children.", "Denise and Glenn Higgs thought they would never have children.", "Cancer treatment", "Denise tried in vitro fertilization.", "Denise tried in vitro fertilization.", "Glenn Higgs tried in vitro fertilization.", "Glenn Higgs tried in vitro fertilization.", "Denise and Glenn Higgs tried in vitro fertilization.", "Denise and Glenn Higgs tried in vitro fertilization.", "Treatment of cancer has made Denise infertile.", "Treatment of cancer has made Denise infertile.", "Cancer treatment has made Denise infertile, but she tried in vitro fertilization.", "Cancer treatment has made Denise infertile, but she tried in vitro fertilization.", "Denise was made infertile by cancer treatment, but Glenn Higgs tried in vitro fertilization.", "Denise was made infertile by cancer treatment, but Glenn Higgs tried in vitro fertilization.", "Denise was made infertile by cancer treatment, but she and Glenn Higgs tried in vitro fertilization.", "Denise was made infertile by cancer treatment, but she and Glenn Higgs tried in vitro fertilization.", "Born three years ago", "Born three years ago", "The couple from Brainton, Devon, had Mazy born three years ago.", "The couple from Brainton, Devon, had Mazy born three years ago.", "using the same batch.", "Had last week.", "Trying again using.", "I'm using the same batch.", "I'm using the same batch.", "I had Carter.", "I had the Carson twins.", "I had Carter last week.", "I've tried again using the same batch.", "Last week I had the twins, Carson.", "I had Carter and Carter as twins.", "Last week I had Carter and Carson as twins."]}, {"instance_id": "realsumm-38", "summary": "Speed camera discovered pointing at house in Handsworth , Birmingham . Fixed cameras switched off across the West Midlands in Spring of 2013 . Site is not going to be part of a new trial using digital technology . Obsolete camera may now be taken down after engineers examine device .", "summary_trees": ["# ::snt Speed camera discovered pointing at house in Handsworth , Birmingham .\n(d / discover-01\n      :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0-of (p / point-01\n                  :ARG2 (h / house\n                        :location (c2 / city-district\n                              :name (n / name\n                                    :op1 \"Handsworth\")\n                              :part-of (c3 / city\n                                    :name (n2 / name\n                                          :op1 \"Birmingham\")))))))", "# ::snt Fixed cameras switched off across the West Midlands in Spring of 2013 .\n(s / switch-off-04\n      :ARG1 (c / camera\n            :ARG1-of (f / fix-03))\n      :location (a / across\n            :op1 (c2 / country-region\n                  :name (n / name\n                        :op1 \"West\"\n                        :op2 \"Midlands\")))\n      :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))", "# ::snt Site is not going to be part of a new trial using digital technology .\n(h / have-part-91\n      :polarity -\n      :ARG1 (t / try-02\n            :ARG1-of (n / new-01)\n            :ARG0-of (u / use-01\n                  :ARG1 (t2 / technology\n                        :mod (d / digit))))\n      :ARG2 (s / site))", "# ::snt Obsolete camera may now be taken down after engineers examine device .\n(p / possible-01\n      :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                  :mod (o / obsolete))\n            :time (a / after\n                  :op1 (e / examine-01\n                        :ARG0 (p2 / person\n                              :ARG0-of (e2 / engineer-01))\n                        :ARG1 (d / device))))\n      :time (n / now))"], "tree": ["(p / point-01\n   :ARG2 (h / house\n            :location (c2 / city-district\n                          :name (n / name\n                                   :op1 \"Handsworth\")\n                          :part (c3 / city\n                                    :name (n2 / name\n                                              :op1 \"Birmingham\")))))", "(d / discover-01\n   :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0 (p / point-01\n                     :ARG2 (h / house\n                              :location (c2 / city-district\n                                            :name (n / name\n                                                     :op1 \"Handsworth\")\n                                            :part (c3 / city\n                                                      :name (n2 / name\n                                                                :op1 \"Birmingham\")))))))", "(d / discover-01\n   :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0 (p / point-01\n                     :ARG2 (h / house\n                              :location (c2 / city-district\n                                            :name (n / name\n                                                     :op1 \"Handsworth\")\n                                            :part (c3 / city\n                                                      :name (n2 / name\n                                                                :op1 \"Birmingham\")))))))", "(s / switch-off-04\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))", "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))", "(u / use-01\n   :ARG1 (t2 / technology\n             :mod (d / digit)))", "(u / use-01\n   :ARG1 (t2 / technology\n             :mod (d / digit)))", "(t / try-02\n   :ARG1 (n / new-01)\n   :ARG0 (u / use-01\n            :ARG1 (t2 / technology\n                      :mod (d / digit))))", "(h / have-part-91\n   :ARG1 (t / try-02\n            :ARG1 (n / new-01)\n            :ARG0 (u / use-01\n                     :ARG1 (t2 / technology\n                               :mod (d / digit))))\n   :ARG2 (s / site))", "(h / have-part-91\n   :polarity -\n   :ARG1 (t / try-02\n            :ARG1 (n / new-01)\n            :ARG0 (u / use-01\n                     :ARG1 (t2 / technology\n                               :mod (d / digit))))\n   :ARG2 (s / site))", "(t / take-down-22\n   :time (a / after\n            :op1 (e / examine-01)))", "(e / examine-01\n   :ARG0 (p2 / person\n             :ARG0 (e2 / engineer-01))\n   :ARG1 (d / device))", "(e / examine-01\n   :ARG0 (p2 / person\n             :ARG0 (e2 / engineer-01))\n   :ARG1 (d / device))", "(t / take-down-22\n   :ARG1 (c / camera\n            :mod (o / obsolete))\n   :time (a / after\n            :op1 (e / examine-01\n                    :ARG0 (p2 / person\n                              :ARG0 (e2 / engineer-01))\n                    :ARG1 (d / device))))", "(p / possible-01\n   :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                     :mod (o / obsolete))\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG0 (p2 / person\n                                       :ARG0 (e2 / engineer-01))\n                             :ARG1 (d / device))))\n   :time (n / now))"], "smus": ["Point to a house in Handsworth, Birmingham.", "A speed camera was discovered pointing at a house in Handsworth, Birmingham.", "A speed camera was discovered pointing at a house in Handsworth, Birmingham.", "Switched off across the West Midlands in spring 2013.", "Fixed cameras switched off across the West Midlands in spring 2013.", "using digital technology", "using digital technology", "Using digital technology is trying to do new things.", "The site is part of a new trial using digital technology.", "The site is not part of a new trial of using digitized technology.", "taken down after examination.", "Engineers examine the device.", "Engineers examine the device.", "The obsolete camera was taken down after engineers examine the device.", "Now the obsolete camera can be taken down after engineers examine the device."]}, {"instance_id": "realsumm-39", "summary": "Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia . Charles Terreni , 18 , was a USC freshman and a member of the Pi Kappa Alpha house . Coroner identified cause of death as alcohol poisoning . Toxicology tests showed Charles Terreni , 18 , had a blood alcohol of .375 . Neighbors said there was a large party ; a beer keg was still visible outside .", "summary_trees": ["# ::snt Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia .\n(f / find-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Charles\"\n                  :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                  :quant 18\n                  :unit (y / year)))\n      :ARG2 (d / die-01\n            :ARG1 p)\n      :time (d2 / date-entity\n            :day 18\n            :month 3)\n      :location (h / house\n            :mod (f2 / frat)\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Columbia\"))))", "# ::snt Charles Terreni , 18 , was a USC freshman and a member of the Pi Kappa Alpha house .\n(a / and\n      :op1 (f / freshman\n            :domain (p / person\n                  :name (n / name\n                        :op1 \"Charles\"\n                        :op2 \"Terreni\")\n                  :age (t / temporal-quantity\n                        :quant 18\n                        :unit (y / year)))\n            :location (u / university\n                  :name (n2 / name\n                        :op1 \"USC\")))\n      :op2 (h / have-org-role-91\n            :ARG0 p\n            :ARG1 (h2 / house\n                  :name (n3 / name\n                        :op1 \"Pi\"\n                        :op2 \"Kappa\"\n                        :op3 \"Alpha\"))\n            :ARG2 (m / member)))", "# ::snt Coroner identified cause of death as alcohol poisoning .\n(ii / identify-01\n      :ARG0 (c / coroner)\n      :ARG1 (c2 / cause-01\n            :ARG1 (d / die-01))\n      :ARG2 (p / poison-02\n            :ARG1 (a / alcohol)))", "# ::snt Toxicology tests showed Charles Terreni , 18 , had a blood alcohol of .375 .\n(s / show-01\n      :ARG0 (t / test-01\n            :ARG2 (t2 / toxicology))\n      :ARG1 (h / have-03\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Charles\"\n                        :op2 \"Terreni\")\n                  :age (t3 / temporal-quantity\n                        :quant 18\n                        :unit (y / year)))\n            :ARG1 (a / alcohol\n                  :mod (b / blood)\n                  :quant (c / concentration-quantity\n                        :quant 375\n                        :unit (f / fluid-ounce\n                              :mod (f2 / fluid))))))", "# ::snt Neighbors said there was a large party \n(s / say-01\n      :ARG0 (n / neighbor)\n      :ARG1 (p / party-01\n            :mod (l / large)))"], "tree": ["(f / find-01\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year))))", "(f / find-01\n   :time (d2 / date-entity)\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\")))\n   :ARG2 (m / member))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\")))\n   :ARG1 (h2 / house\n             :name (n3 / name\n                       :op1 \"Pi\"\n                       :op2 \"Kappa\"\n                       :op3 \"Alpha\"))\n   :ARG2 (m / member))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\")))\n   :ARG1 (h2 / house\n             :name (n3 / name\n                       :op1 \"Pi\"\n                       :op2 \"Kappa\"\n                       :op3 \"Alpha\"))\n   :ARG2 (m / member))", "(ii / identify-01\n    :ARG0 (c / coroner)\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01))\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))", "(h / have-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t3 / temporal-quantity\n                     :quant 18\n                     :unit (y / year)))\n   :ARG1 (a / alcohol\n            :mod (b / blood)\n            :quant (c / concentration-quantity\n                      :quant 375\n                      :unit (f / fluid-ounce\n                               :mod (f2 / fluid)))))", "(h / have-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t3 / temporal-quantity\n                     :quant 18\n                     :unit (y / year)))\n   :ARG1 (a / alcohol\n            :mod (b / blood)\n            :quant (c / concentration-quantity\n                      :quant 375\n                      :unit (f / fluid-ounce\n                               :mod (f2 / fluid)))))", "(s / show-01\n   :ARG0 (t / test-01\n            :ARG2 (t2 / toxicology))\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Charles\"\n                              :op2 \"Terreni\")\n                     :age (t3 / temporal-quantity\n                              :quant 18\n                              :unit (y / year)))\n            :ARG1 (a / alcohol\n                     :mod (b / blood)\n                     :quant (c / concentration-quantity\n                               :quant 375\n                               :unit (f / fluid-ounce\n                                        :mod (f2 / fluid))))))", "(s / show-01\n   :ARG0 (t / test-01\n            :ARG2 (t2 / toxicology))\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Charles\"\n                              :op2 \"Terreni\")\n                     :age (t3 / temporal-quantity\n                              :quant 18\n                              :unit (y / year)))\n            :ARG1 (a / alcohol\n                     :mod (b / blood)\n                     :quant (c / concentration-quantity\n                               :quant 375\n                               :unit (f / fluid-ounce\n                                        :mod (f2 / fluid))))))", "(s / say-01\n   :ARG0 (n / neighbor)\n   :ARG1 (p / party-01\n            :mod (l / large)))", "(s / say-01\n   :ARG0 (n / neighbor)\n   :ARG1 (p / party-01\n            :mod (l / large)))"], "smus": ["Found in a frat house in Columbia.", "Charles Terreni, 18, was found.", "Found in a frat house in Columbia.", "Charles Terreni, 18, was found in a frat house in Columbia.", "Charles Terreni, 18, was found dead March 18 in a frat house in Columbia.", "Charles Terreni is a member.", "Charles Terreni is a member of the Pi Kappa Alpha house.", "Charles Terreni is a member of the Pi Kappa Alpha house.", "The coroner identified the cause of death as alcohol poisoning.", "Charles Terreni, 18, had 375 fl.oz of blood alcohol.", "Charles Terreni, 18, had 375 fl.oz of blood alcohol.", "The toxicology tests showed that Charles Terreni, 18, had 375 fl.oz. of blood alcohol.", "The toxicology tests showed that Charles Terreni, 18, had 375 fl.oz. of blood alcohol.", "The neighbors said it was a large party.", "The neighbors said it was a large party."]}, {"instance_id": "realsumm-40", "summary": "Air strikes were launched by Saudi forces a month ago against rebels . Saudi forces have focused on beating back Shiite Houthi rebels in Yemen . Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings . Prince Alwaleed Bin Talal made pledged on Wednesday after bombing raids appeared to resume , despite an official announcement that bombing raids would be halted last night .", "summary_trees": ["# ::snt Air strikes were launched by Saudi forces a month ago against rebels .\n(l / launch-01\n      :ARG0 (f / force\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Saudi\"\n                        :op2 \"Arabia\")))\n      :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                  :ARG0-of (r / rebel-01))\n            :path (a / air))\n      :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                  :quant 1\n                  :unit (m / month))))", "# ::snt Saudi forces have focused on beating back Shiite Houthi rebels in Yemen .\n(f / focus-01\n      :ARG0 (f2 / force\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Saudi\"\n                        :op2 \"Arabia\")))\n      :ARG2 (b / beat-back-05\n            :ARG0 f2\n            :ARG1 (p / person\n                  :ARG0-of (r / rebel-01)\n                  :mod (r2 / religious-group\n                        :name (n2 / name\n                              :op1 \"Shiite\"\n                              :op2 \"Hathi\"))\n                  :location (c2 / country\n                        :name (n3 / name\n                              :op1 \"Yemen\")))))", "# ::snt Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings .\n(p / pledge-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Alwaleed\"\n                  :op2 \"Bin\"\n                  :op3 \"Talal\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p3 / prince)))\n      :ARG2 (c / car-make\n            :name (n2 / name\n                  :op1 \"Bentley\"))\n      :beneficiary (p4 / person\n            :ARG0-of (p5 / pilot-01)\n            :ARG1-of (ii / involve-01\n                  :ARG2 (b / bomb-01))))", "# ::snt Prince Alwaleed Bin Talal made pledged on Wednesday after bombing raids appeared to resume , despite an official announcement that bombing raids would be halted last night .\n(p / pledge-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Alwaleed\"\n                  :op2 \"Bin\"\n                  :op3 \"Talal\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p3 / prince)))\n      :time (d / date-entity\n            :weekday (w / wednesday))\n      :time (a / after\n            :op1 (a2 / appear-02\n                  :ARG1 (r / resume-01\n                        :ARG1 (r2 / raid-01\n                              :ARG2 (b / bomb-01)))))\n      :concession (a3 / announce-01\n            :ARG1 (h2 / halt-01\n                  :ARG1 r2)\n            :mod (o / official)\n            :time (d2 / date-entity\n                  :dayperiod (n2 / night)\n                  :mod (y / yesterday))))"], "tree": ["(s / strike-01\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01)))", "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01)))", "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01))\n   :path (a / air))", "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG0 (f / force)\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air)))", "(l / launch-01\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(l / launch-01\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(l / launch-01\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air)))", "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG0 (f / force)\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(b / beat-back-05\n   :ARG0 (f2 / force)\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01)\n            :mod (r2 / religious-group\n                     :name (n2 / name\n                               :op1 \"Shiite\"\n                               :op2 \"Hathi\"))\n            :location (c2 / country\n                          :name (n3 / name\n                                    :op1 \"Yemen\"))))", "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG0 f2\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01)\n                     :mod (r2 / religious-group\n                              :name (n2 / name\n                                        :op1 \"Shiite\"\n                                        :op2 \"Hathi\"))\n                     :location (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"Yemen\")))))", "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\")\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))", "(r / resume-01\n   :ARG1 (r2 / raid-01\n             :ARG2 (b / bomb-01)))", "(a2 / appear-02\n    :ARG1 (r / resume-01\n             :ARG1 (r2 / raid-01\n                       :ARG2 (b / bomb-01))))", "(a2 / appear-02\n    :ARG1 (r / resume-01\n             :ARG1 (r2 / raid-01\n                       :ARG2 (b / bomb-01))))", "(a3 / announce-01\n    :time (d2 / date-entity\n              :dayperiod (n2 / night)\n              :mod (y / yesterday)))", "(a3 / announce-01\n    :mod (o / official)\n    :time (d2 / date-entity\n              :dayperiod (n2 / night)\n              :mod (y / yesterday)))", "(a3 / announce-01\n    :ARG1 (h2 / halt-01\n              :ARG1 (r2 / raid-01))\n    :time (d2 / date-entity\n              :dayperiod (n2 / night)\n              :mod (y / yesterday)))", "(a3 / announce-01\n    :ARG1 (h2 / halt-01\n              :ARG1 (r2 / raid-01))\n    :mod (o / official)\n    :time (d2 / date-entity\n              :dayperiod (n2 / night)\n              :mod (y / yesterday)))", "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (a / after\n            :op1 (a2 / appear-02))\n   :concession (a3 / announce-01\n                   :mod (o / official)\n                   :time (d2 / date-entity\n                             :dayperiod (n2 / night)\n                             :mod (y / yesterday))))", "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\")\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (a / after\n            :op1 (a2 / appear-02\n                     :ARG1 (r / resume-01\n                              :ARG1 (r2 / raid-01\n                                        :ARG2 (b / bomb-01)))))\n   :concession (a3 / announce-01\n                   :ARG1 (h2 / halt-01\n                             :ARG1 r2)\n                   :mod (o / official)\n                   :time (d2 / date-entity\n                             :dayperiod (n2 / night)\n                             :mod (y / yesterday))))"], "smus": ["Rebel strikes", "Forces strike rebels", "Forces launched airstrikes on rebels.", "Forces launched air strikes on rebels.", "The launch was a month ago.", "The launch was a month ago.", "The launch was a month ago.", "Saudi forces have launched airstrikes on rebels.", "Forces launched air strikes on the rebels a month ago.", "Saudi forces have launched airstrikes on rebels in the past month.", "Saudi forces have launched airstrikes on rebels in the past month.", "Forces beating back Shiite Hathi rebels in Yemen", "Saudi forces have focused on beating back Shiite Hathi rebels in Yemen.", "Prince Alwaleed Bin Talal pledged a Bentley to pilots involved in the bombs.", "The bomb raids will resume.", "The bomb raids appeared to resume.", "The bomb raids appeared to resume.", "The announcement came last night.", "Official announcement tonight.", "The raids were announced last night to be halted.", "The official announcement was made last night that the raids had been halted.", "The pledge was made Wednesday after it appeared despite an official announcement last night.", "Prince Alwaleed Bin Talal pledged Wednesday after the bomb raids appeared to resume despite an official announcement last night that the raids had halted."]}, {"instance_id": "realsumm-41", "summary": "Brawl at Spring Gardens station in Philadelphia was captured on CCTV . Fight involved students from nearby Benjamin Franklin High School . At one point an attacker falls onto the tracks , but manages to get back up . After Fight , the victims and attackers walk onto the same train .", "summary_trees": ["# ::snt Brawl at Spring Gardens station in Philadelphia was captured on CCTV .\n(c / capture-01\n      :ARG0 (t / television\n            :mod (c2 / circuit\n                  :ARG1-of (c3 / close-01)))\n      :ARG1 (b / brawl-01\n            :location (s / station\n                  :name (n / name\n                        :op1 \"Spring\"\n                        :op2 \"Gardens\")\n                  :location (c4 / city\n                        :name (n2 / name\n                              :op1 \"Philadelphia\")))))", "# ::snt Fight involved students from nearby Benjamin Franklin High School .\n(ii / involve-01\n      :ARG1 (p / person\n            :ARG0-of (s / study-01)\n            :source (h / high-school\n                  :name (n / name\n                        :op1 \"Benjamin\"\n                        :op2 \"Franklin\"\n                        :op3 \"High\"\n                        :op4 \"School\")\n                  :location (n2 / nearby)))\n      :ARG2 (f / fight-01))", "# ::snt At one point an attacker falls onto the tracks , but manages to get back up .\n(h / have-concession-91\n      :ARG1 (m / manage-01\n            :ARG0 (p / person\n                  :ARG0-of (a / attack-01))\n            :ARG1 (g / get-back-10\n                  :ARG1 p\n                  :ARG2 (t / track)))\n      :ARG2 (f / fall-01\n            :ARG1 p\n            :ARG4 t\n            :time (p2 / point\n                  :quant 1)))", "# ::snt After Fight , the victims and attackers walk onto the same train .\n(w / walk-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :ARG1-of (v / victimize-01))\n            :op2 (p2 / person\n                  :ARG0-of (a2 / attack-01)))\n      :destination (t / train\n            :ARG1-of (s / same-01))\n      :time (a3 / after\n            :op1 (f / fight-01)))"], "tree": ["(b / brawl-01\n   :location (s / station\n                :name (n / name\n                         :op1 \"Spring\"\n                         :op2 \"Gardens\")\n                :location (c4 / city\n                              :name (n2 / name\n                                        :op1 \"Philadelphia\"))))", "(b / brawl-01\n   :location (s / station\n                :name (n / name\n                         :op1 \"Spring\"\n                         :op2 \"Gardens\")\n                :location (c4 / city\n                              :name (n2 / name\n                                        :op1 \"Philadelphia\"))))", "(c / capture-01\n   :ARG0 (t / television\n            :mod (c2 / circuit\n                     :ARG1 (c3 / close-01)))\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :name (n / name\n                                  :op1 \"Spring\"\n                                  :op2 \"Gardens\")\n                         :location (c4 / city\n                                       :name (n2 / name\n                                                 :op1 \"Philadelphia\")))))", "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01)\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")\n                        :location (n2 / nearby))))", "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01)\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")\n                        :location (n2 / nearby)))\n    :ARG2 (f / fight-01))", "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01)\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")\n                        :location (n2 / nearby)))\n    :ARG2 (f / fight-01))", "(g / get-back-10\n   :ARG1 (p / person)\n   :ARG2 (t / track))", "(g / get-back-10\n   :ARG1 (p / person)\n   :ARG2 (t / track))", "(f / fall-01\n   :time (p2 / point\n             :quant 1))", "(f / fall-01\n   :time (p2 / point\n             :quant 1))", "(f / fall-01\n   :time (p2 / point\n             :quant 1))", "(f / fall-01\n   :ARG1 (p / person)\n   :time (p2 / point\n             :quant 1))", "(m / manage-01\n   :ARG0 (p / person\n            :ARG0 (a / attack-01)))", "(f / fall-01\n   :ARG1 (p / person)\n   :ARG4 (t / track)\n   :time (p2 / point\n             :quant 1))", "(f / fall-01\n   :ARG1 (p / person)\n   :ARG4 (t / track)\n   :time (p2 / point\n             :quant 1))", "(m / manage-01\n   :ARG0 (p / person\n            :ARG0 (a / attack-01))\n   :ARG1 (g / get-back-10\n            :ARG1 p\n            :ARG2 (t / track)))", "(m / manage-01\n   :ARG0 (p / person\n            :ARG0 (a / attack-01))\n   :ARG1 (g / get-back-10\n            :ARG1 p\n            :ARG2 (t / track)))", "(h / have-concession-91\n   :ARG1 (m / manage-01\n            :ARG0 (p / person\n                     :ARG0 (a / attack-01))\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 (t / track))))", "(h / have-concession-91\n   :ARG1 (m / manage-01\n            :ARG0 (p / person\n                     :ARG0 (a / attack-01))\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 (t / track)))\n   :ARG2 (f / fall-01\n            :ARG1 p\n            :ARG4 t\n            :time (p2 / point\n                      :quant 1)))", "(h / have-concession-91\n   :ARG1 (m / manage-01\n            :ARG0 (p / person\n                     :ARG0 (a / attack-01))\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 (t / track)))\n   :ARG2 (f / fall-01\n            :ARG1 p\n            :ARG4 t\n            :time (p2 / point\n                      :quant 1)))", "(w / walk-01\n   :ARG0 (p / person\n            :ARG1 (v / victimize-01)))", "(w / walk-01\n   :ARG0 (p2 / person\n             :ARG0 (a2 / attack-01)))", "(w / walk-01\n   :destination (t / train)\n   :time (a3 / after\n             :op1 (f / fight-01)))", "(w / walk-01\n   :ARG0 (a / and\n            :op1 (p / person\n                    :ARG1 (v / victimize-01))\n            :op2 (p2 / person\n                     :ARG0 (a2 / attack-01))))", "(w / walk-01\n   :ARG0 (p / person\n            :ARG1 (v / victimize-01))\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :time (a3 / after\n             :op1 (f / fight-01)))", "(w / walk-01\n   :ARG0 (p2 / person\n             :ARG0 (a2 / attack-01))\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :destination t\n   :time (a3 / after\n             :op1 (f / fight-01)))", "(w / walk-01\n   :ARG0 (a / and\n            :op1 (p / person\n                    :ARG1 (v / victimize-01))\n            :op2 (p2 / person\n                     :ARG0 (a2 / attack-01)))\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :time (a3 / after\n             :op1 (f / fight-01)))"], "smus": ["Brawl at Spring Gardens in Philadelphia", "Brawl at Spring Gardens in Philadelphia", "A closed circuit television captured the brawl at the Spring Gardens station in Philadelphia.", "The students involved were from nearby Benjamin Franklin High School.", "Students from nearby Benjamin Franklin High School got involved in the fight.", "Students from nearby Benjamin Franklin High School got involved in the fight.", "People are getting back on the tracks.", "People are getting back on the tracks.", "falls at one point.", "falls at one point.", "falls at one point.", "At one point, people fall.", "The attacker manages.", "At one point, people fall off tracks.", "At one point, people fall off tracks.", "The attacker manages to get back on track.", "The attacker manages to get back on track.", "But the attacker manages to get back on the tracks.", "The attacker manages to get back on the tracks but falls off at one point.", "The attacker manages to get back on the tracks but falls off at one point.", "Victims walk.", "The attackers walk.", "After the fight, walk to the train.", "Victims and attackers walk.", "Victims walk to the same train after the fight.", "The attackers walk to the same train after the fight.", "Victims and attackers walk to the same train after the fight."]}, {"instance_id": "realsumm-42", "summary": "Paul and Laura Elliott met half way round at St Katharine Docks . Ceremony was witnessed by 80 guests . Paul and Laura Elliott ran across finish line under a shower of confetti . Returned to scene of ceremony for party later on . Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father .", "summary_trees": ["# ::snt Paul and Laura Elliott met half way round at St Katharine Docks .\n(m / meet-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Paul\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Laura\"\n                  :op2 \"Elliott\"))\n      :location (p3 / port\n            :name (n3 / name\n                  :op1 \"St\"\n                  :op2 \"Katharine\"\n                  :op3 \"Docks\"))\n      :extent (r / round-03\n            :extent (h / half)))", "# ::snt Ceremony was witnessed by 80 guests .\n(w / witness-01\n      :ARG0 (g / guest\n            :quant 80)\n      :ARG1 (c / ceremony))", "# ::snt Paul and Laura Elliott ran across finish line under a shower of confetti .\n(r / run-02\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Paul\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Laura\"\n                        :op2 \"Elliott\")))\n      :path (a2 / across\n            :op1 (l / line\n                  :mod (f / finish-01)))\n      :manner (u / under\n            :op1 (s / shower-01\n                  :ARG1 (c / confetti))))", "# ::snt Returned to scene of ceremony for party later on .\n(r / return-01\n      :ARG4 (s / scene\n            :location-of (c / ceremony\n                  :purpose (p / party-01)))\n      :time (a / after))", "# ::snt Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father .\n(r / raise-02\n      :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound))\n      :purpose (r2 / research-01\n            :ARG1 (c / cancer))\n      :manner (h / honor-01\n            :ARG1 (p2 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 (p3 / person\n                              :name (n / name\n                                    :op1 \"Paul\"))\n                        :ARG2 (f / father)))))"], "tree": ["(m / meet-03\n   :location (p3 / port\n                 :name (n3 / name\n                           :op1 \"St\"\n                           :op2 \"Katharine\"\n                           :op3 \"Docks\"))\n   :extent (r / round-03\n              :extent (h / half)))", "(m / meet-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\"))\n   :location (p3 / port\n                 :name (n3 / name\n                           :op1 \"St\"\n                           :op2 \"Katharine\"\n                           :op3 \"Docks\"))\n   :extent (r / round-03\n              :extent (h / half)))", "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80))", "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80)\n   :ARG1 (c / ceremony))", "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80)\n   :ARG1 (c / ceremony))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\")))", "(r / run-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\")))", "(r / run-02\n   :path (a2 / across\n             :op1 (l / line\n                     :mod (f / finish-01)))\n   :manner (u / under\n              :op1 (s / shower-01)))", "(r / run-02\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Paul\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Laura\"\n                               :op2 \"Elliott\"))))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"))\n   :path (a2 / across\n             :op1 (l / line\n                     :mod (f / finish-01)))\n   :manner (u / under\n              :op1 (s / shower-01\n                      :ARG1 (c / confetti))))", "(r / run-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\"))\n   :path (a2 / across\n             :op1 (l / line\n                     :mod (f / finish-01)))\n   :path a2\n   :manner (u / under\n              :op1 (s / shower-01\n                      :ARG1 (c / confetti))))", "(r / run-02\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Paul\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Laura\"\n                               :op2 \"Elliott\")))\n   :path (a2 / across\n             :op1 (l / line\n                     :mod (f / finish-01)))\n   :manner (u / under\n              :op1 (s / shower-01\n                      :ARG1 (c / confetti))))", "(r / return-01\n   :ARG4 (s / scene\n            :location (c / ceremony\n                         :purpose (p / party-01)))\n   :time (a / after))", "(r / raise-02\n   :purpose (r2 / research-01)\n   :manner (h / honor-01))", "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound)))", "(h2 / have-rel-role-91\n    :ARG1 (p3 / person\n              :name (n / name\n                       :op1 \"Paul\"))\n    :ARG2 (f / father))", "(h / honor-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG1 (p3 / person\n                                 :name (n / name\n                                          :op1 \"Paul\"))\n                       :ARG2 (f / father))))", "(h / honor-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG1 (p3 / person\n                                 :name (n / name\n                                          :op1 \"Paul\"))\n                       :ARG2 (f / father))))", "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound))\n   :purpose (r2 / research-01\n                :ARG1 (c / cancer))\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG1 (p3 / person\n                                            :name (n / name\n                                                     :op1 \"Paul\"))\n                                  :ARG2 (f / father)))))"], "smus": ["The meeting took place round half way through St Katharine Docks.", "Paul met Laura Elliott round the half-way through at St Katharine Docks.", "80 guests were witnessed.", "The Ceremony was witnessed by 80 guests.", "The Ceremony was witnessed by 80 guests.", "Paul ran.", "Laura Elliott ran.", "ran across the finish line under a shower.", "Paul and Laura Elliott ran.", "Paul ran across the finish line under a confetti shower.", "Laura Elliott ran across the finish line under a confetti shower.", "Paul and Laura Elliott ran across the finish line under a confetti shower.", "The scene of the party ceremony was later returned.", "Raised in honor of Research", "PS7,000 raised.", "Paul's father.", "Honor to Paul's father.", "Honor to Paul's father.", "7,000 pounds were raised for Cancer Research in honour of Paul's father."]}, {"instance_id": "realsumm-43", "summary": "Nasr Bitar spotted Google Street View car driving around last autumn . Decided it was ' Nasr Bitar time to shine ' with Google Street View car so followed in Nasr Bitar car to get a selfie . Sensing the perfect moment , Nasr Bitar got out and took the snap in Mississauga . Picture of a selfie and the Street View image shared 2.9million times .", "summary_trees": ["# ::snt Nasr Bitar spotted Google Street View car driving around last autumn .\n(s / spot-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nasr\"\n                  :op2 \"Bitar\"))\n      :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                  :name (n2 / name\n                        :op1 \"Google\"\n                        :op2 \"Street\"\n                        :op3 \"View\"))\n            :ARG1 (a / around))\n      :time (d2 / date-entity\n            :season (a2 / autumn)\n            :mod (y / year\n                  :mod (l / last))))", "# ::snt Decided it was ' Nasr Bitar time to shine ' with Google Street View car so followed in Nasr Bitar car to get a selfie .\n(d / decide-01\n      :ARG1 (s / shine-01\n            :ARG1 (c / city\n                  :name (n / name\n                        :op1 \"Nasr\"\n                        :op2 \"Bitar\"))\n            :instrument (c2 / car\n                  :name (n2 / name\n                        :op1 \"Google\"\n                        :op2 \"Street\"\n                        :op3 \"View\")))\n      :ARG0-of (c3 / cause-01\n            :ARG1 (f / follow-01\n                  :ARG1 (ii / i)\n                  :ARG2 (c4 / car\n                        :mod c)\n                  :purpose (g / get-01\n                        :ARG0 ii\n                        :ARG1 (s2 / selfie)))))", "# ::snt Sensing the perfect moment , Nasr Bitar got out and took the snap in Mississauga .\n(a / and\n      :op1 (g / get-05\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Nasr\"\n                        :op2 \"Bitar\"))\n            :ARG2 (o / out))\n      :op2 (s / snap-03\n            :ARG0 p\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Mississauga\")))\n      :manner (s2 / sense-01\n            :ARG0 p\n            :ARG1 (m / moment\n                  :ARG1-of (p2 / perfect-02))))", "# ::snt Picture of a selfie and the Street View image shared 2.9million times .\n(a / and\n      :op1 (p / picture\n            :mod (s / selfie))\n      :op2 (ii / image\n            :mod (p2 / product\n                  :name (n / name\n                        :op1 \"Street\"\n                        :op2 \"View\"))\n            :ARG1-of (s2 / share-01\n                  :frequency (t / times\n                        :quant 2900000))))"], "tree": ["(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\")))", "(s / spot-01\n   :time (d2 / date-entity\n             :season (a2 / autumn)\n             :mod (y / year\n                     :mod (l / last))))", "(s / spot-01\n   :time (d2 / date-entity\n             :season (a2 / autumn)\n             :mod (y / year\n                     :mod (l / last))))", "(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\"))\n   :ARG1 (a / around))", "(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\"))\n   :ARG1 (a / around))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around)))", "(s / spot-01\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn)\n             :mod (y / year\n                     :mod (l / last))))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn)\n             :mod (y / year\n                     :mod (l / last))))", "(g / get-01\n   :ARG0 (ii / i)\n   :ARG1 (s2 / selfie))", "(g / get-01\n   :ARG0 (ii / i)\n   :ARG1 (s2 / selfie))", "(f / follow-01\n   :ARG1 (ii / i)\n   :ARG2 (c4 / car\n             :mod (c / city :name (n / name :op1 \"Nasr\" :op2 \"Bitar\"))))", "(s / shine-01\n   :instrument (c2 / car\n                   :name (n2 / name\n                             :op1 \"Google\"\n                             :op2 \"Street\"\n                             :op3 \"View\")))", "(f / follow-01\n   :ARG1 (ii / i)\n   :ARG2 (c4 / car\n             :mod (c / city :name (n / name :op1 \"Nasr\" :op2 \"Bitar\")))\n   :purpose (g / get-01\n               :ARG0 ii\n               :ARG1 (s2 / selfie)))", "(c3 / cause-01\n    :ARG1 (f / follow-01\n             :ARG1 (ii / i)\n             :ARG2 (c4 / car\n                       :mod (c / city :name (n / name :op1 \"Nasr\" :op2 \"Bitar\")))\n             :purpose (g / get-01\n                         :ARG0 ii\n                         :ARG1 (s2 / selfie))))", "(s / shine-01\n   :ARG1 (c / city\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :instrument (c2 / car\n                   :name (n2 / name\n                             :op1 \"Google\"\n                             :op2 \"Street\"\n                             :op3 \"View\")))", "(d / decide-01\n   :ARG1 (s / shine-01\n            :ARG1 (c / city\n                     :name (n / name\n                              :op1 \"Nasr\"\n                              :op2 \"Bitar\"))\n            :instrument (c2 / car\n                            :name (n2 / name\n                                      :op1 \"Google\"\n                                      :op2 \"Street\"\n                                      :op3 \"View\")))\n   :ARG0 (c3 / cause-01\n             :ARG1 (f / follow-01\n                      :ARG1 (ii / i)\n                      :ARG2 (c4 / car\n                                :mod c)\n                      :purpose (g / get-01\n                                  :ARG0 ii\n                                  :ARG1 (s2 / selfie)))))", "(s2 / sense-01\n    :ARG1 (m / moment\n             :ARG1 (p2 / perfect-02)))", "(s2 / sense-01\n    :ARG0 (p / person :name (n / name :op1 \"Nasr\" :op2 \"Bitar\"))\n    :ARG1 (m / moment\n             :ARG1 (p2 / perfect-02)))", "(s2 / sense-01\n    :ARG0 (p / person :name (n / name :op1 \"Nasr\" :op2 \"Bitar\"))\n    :ARG1 (m / moment\n             :ARG1 (p2 / perfect-02)))", "(s / snap-03\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"Mississauga\")))", "(s / snap-03\n   :ARG0 (p / person :name (n / name :op1 \"Nasr\" :op2 \"Bitar\"))\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"Mississauga\")))", "(g / get-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG2 (o / out))", "(s2 / share-01\n    :frequency (t / times\n                  :quant 2900000))", "(s2 / share-01\n    :frequency (t / times\n                  :quant 2900000))"], "smus": ["Driving a Google Street View.", "Spotted in last year's autumn.", "Spotted in last year's autumn.", "Google Street View is driving around.", "Google Street View is driving around.", "Nasr Balitar spotted a Google Street View driving around.", "Last autumn, a Google Street View spotted around.", "Last autumn Nasr Balitar spotted a Google Street View driving around.", "I did get a selfie.", "I did get a selfie.", "I followed by a Nasr Balitar car.", "Shine with Google Street View.", "I followed the Nasr car to get a selfie.", "So I followed the Nasr car to get a selfie.", "Nasr Bali will shine with a Google Street View car.", "Nasr Bali decided to shine with a Google Street View car so I followed the car to get a selfie.", "sense of a perfect moment.", "Nasr tar is sensing a perfect moment.", "Nasr tar is sensing a perfect moment.", "Snap in Mississauga", "Nasr biraat snaps in Mississauga", "Nasr tar got out.", "Shared 2.90 million times.", "Shared 2.90 million times."]}, {"instance_id": "realsumm-44", "summary": "Rory McIlroy bidding to win Rory McIlroy first Masters title this week at Augusta . Rory McIlroy finished tied for eighth place last year in Rory McIlroy best finish in Georgia . Rory McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year . One Direction star Niall Horan caddied for Rory McIlroy in Wednesday 's Par-3 Contest .", "summary_trees": ["# ::snt Rory McIlroy bidding to win Rory McIlroy first Masters title this week at Augusta .\n(b / bid-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                  :mod (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\"))\n                  :ord (o / ordinal-entity\n                        :value 1))\n            :time (w2 / week\n                  :mod (t2 / this))\n            :location (f / facility\n                  :name (n3 / name\n                        :op1 \"Augusta\"))))", "# ::snt Rory McIlroy finished tied for eighth place last year in Rory McIlroy best finish in Georgia .\n(f / finish-07\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG2 (t / tie-01\n            :ARG1 p\n            :ARG3 (p2 / place\n                  :ord (o / ordinal-entity\n                        :value 8)))\n      :time (y / year\n            :mod (l / last))\n      :subevent-of (f2 / finish-07\n            :ARG0 p\n            :location (s / state\n                  :name (n2 / name\n                        :op1 \"Georgia\"))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (g / good-03\n                        :ARG1 f2)\n                  :ARG3 (m / most))))", "# ::snt Rory McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year .\n(l / look-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                  :value 3)\n            :mod (s / straight))\n      :time (a / after\n            :op1 (w2 / win-01\n                  :ARG0 p\n                  :ARG2 (a2 / and\n                        :op1 (e / event\n                              :name (n2 / name\n                                    :op1 \"The\"\n                                    :op2 \"Open\"))\n                        :op2 (e2 / event\n                              :name (n3 / name\n                                    :op1 \"USPGA\"\n                                    :op2 \"Championship\")))\n                  :time (y / year\n                        :mod (l2 / last)))))", "# ::snt One Direction star Niall Horan caddied for Rory McIlroy in Wednesday 's Par-3 Contest .\n(c / caddie-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Niall\"\n                  :op2 \"Horan\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"One\"\n                              :op2 \"Direction\"))\n                  :ARG2 (s / star)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :subevent-of (c2 / contest-02\n            :name (n4 / name\n                  :op1 \"Par-3\")\n            :time (d / date-entity\n                  :weekday (w / wednesday))))"], "tree": ["(w / win-01\n   :time (w2 / week\n             :mod (t2 / this)))", "(w / win-01\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))", "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\")))", "(w / win-01\n   :time (w2 / week\n             :mod (t2 / this))\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))", "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1)))", "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1))\n   :time (w2 / week\n             :mod (t2 / this)))", "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1))\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))", "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1))\n   :time (w2 / week\n             :mod (t2 / this))\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))", "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                     :mod (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\"))\n                     :ord (o / ordinal-entity\n                             :value 1))\n            :time (w2 / week\n                      :mod (t2 / this))\n            :location (f / facility\n                         :name (n3 / name\n                                   :op1 \"Augusta\"))))", "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                     :mod (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\"))\n                     :ord (o / ordinal-entity\n                             :value 1))\n            :time (w2 / week\n                      :mod (t2 / this))\n            :location (f / facility\n                         :name (n3 / name\n                                   :op1 \"Augusta\"))))", "(f / finish-07\n   :time (y / year\n            :mod (l / last)))", "(h / have-degree-91\n   :ARG2 (g / good-03\n            :ARG1 (f2 / finish-07))\n   :ARG3 (m / most))", "(f2 / finish-07\n    :location (s / state\n                 :name (n2 / name\n                           :op1 \"Georgia\")))", "(t / tie-01\n   :ARG1 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG3 (p2 / place\n             :ord (o / ordinal-entity\n                     :value 8)))", "(f2 / finish-07\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :location (s / state\n                 :name (n2 / name\n                           :op1 \"Georgia\"))\n    :ARG1 (h / have-degree-91\n             :ARG2 (g / good-03\n                      :ARG1 f2)\n             :ARG3 (m / most)))", "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG2 (t / tie-01\n            :ARG1 p\n            :ARG3 (p2 / place\n                      :ord (o / ordinal-entity\n                              :value 8)))\n   :time (y / year\n            :mod (l / last)))", "(w2 / win-01\n    :time (y / year\n             :mod (l2 / last)))", "(l / look-04\n   :time (a / after\n            :op1 (w2 / win-01)))", "(w / win-01\n   :mod (m / major)\n   :ord (o / ordinal-entity\n           :value 3)\n   :mod (s / straight))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (e / event\n             :name (n2 / name\n                       :op1 \"The\"\n                       :op2 \"Open\")))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (e2 / event\n              :name (n3 / name\n                        :op1 \"USPGA\"\n                        :op2 \"Championship\")))", "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :mod (m / major)\n   :ord (o / ordinal-entity\n           :value 3)\n   :mod (s / straight))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (e / event\n             :name (n2 / name\n                       :op1 \"The\"\n                       :op2 \"Open\"))\n    :time (y / year\n             :mod (l2 / last)))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (e2 / event\n              :name (n3 / name\n                        :op1 \"USPGA\"\n                        :op2 \"Championship\"))\n    :time (y / year\n             :mod (l2 / last))\n    :time y)", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (a2 / and\n              :op1 (e / event\n                      :name (n2 / name\n                                :op1 \"The\"\n                                :op2 \"Open\"))\n              :op2 (e2 / event\n                       :name (n3 / name\n                                 :op1 \"USPGA\"\n                                 :op2 \"Championship\"))))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (a2 / and\n              :op1 (e / event\n                      :name (n2 / name\n                                :op1 \"The\"\n                                :op2 \"Open\"))\n              :op2 (e2 / event\n                       :name (n3 / name\n                                 :op1 \"USPGA\"\n                                 :op2 \"Championship\")))\n    :time (y / year\n             :mod (l2 / last)))", "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                    :value 3)\n            :mod (s / straight))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p\n                     :ARG2 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\"))\n                     :time (y / year\n                              :mod (l2 / last)))))", "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                    :value 3)\n            :mod (s / straight))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p\n                     :ARG2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\"))\n                     :time (y / year\n                              :mod (l2 / last))\n                     :time y)))", "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                    :value 3)\n            :mod (s / straight))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p\n                     :ARG2 (a2 / and\n                               :op1 (e / event\n                                       :name (n2 / name\n                                                 :op1 \"The\"\n                                                 :op2 \"Open\"))\n                               :op2 (e2 / event\n                                        :name (n3 / name\n                                                  :op1 \"USPGA\"\n                                                  :op2 \"Championship\")))\n                     :time (y / year\n                              :mod (l2 / last)))))", "(c2 / contest-02\n    :name (n4 / name\n              :op1 \"Par-3\")\n    :time (d / date-entity\n             :weekday (w / wednesday)))", "(c2 / contest-02\n    :name (n4 / name\n              :op1 \"Par-3\")\n    :time (d / date-entity\n             :weekday (w / wednesday)))", "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"One\"\n                      :op2 \"Direction\"))\n   :ARG2 (s / star))", "(c / caddie-01\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))", "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\")\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))\n                     :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Rory\"\n                       :op2 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))"], "smus": ["Win this week.", "Win at Augusta.", "Ryan McIlroy is bidding.", "Win this week at Augusta.", "Ry McIlroy will win the first Masters title.", "This week, Ry McIlroy will win the first Masters title.", "At Augusta, Rory McIlroy will win the first Masters title.", "This week, at Augusta, Rory McIlroy will win the first Masters title.", "Ryder is bidding to win the first Masters title this week at Augusta.", "Ryder is bidding to win the first Masters title this week at Augusta.", "Finish of last year", "Best finish.", "Finish in Georgia.", "rory mcilroy is tied to eighth place.", "Ryan McIlroy is the best finisher in Georgia.", "Last year, Ryan McIlroy finished tied for eighth place.", "Winning last year.", "Looking after winning.", "The third major victory straight.", "The Open is Rory McIlroy's victory.", "Ry McIlroy is winning the USPGA Championship.", "The third major victory for Ryan McIlroy is straight up.", "Last year, Ry McIlroy was winning the Open.", "Last year, Ryder won the USPGA Championship.", "Ryder McIlroy is winning the Open and USPGA Championship.", "Last year, Ryder won the Open and USPGA Championship.", "After winning the Open last year, Ryan McIlroy is looking to win his third major straight.", "After winning the USPGA Championship last year, Ryan McIlroy is looking to win his third major straight.", "After winning the Open and USPGA Championship last year, Rory McIlroy is looking to win his third major straight.", "Par-3 Contest Wednesday", "Par-3 Contest Wednesday", "One Direction star.", "Caddied in the Par-3 Contest Wednesday.", "One Direction star Niall Horan caddied for Ryan McIlroy in the Par-3 contest Wednesday."]}, {"instance_id": "realsumm-45", "summary": "Danny Higginbotham covers Danny Higginbotham time under Roy Keane in Danny Higginbotham new book . Danny Higginbotham played for Roy Keane Sunderland during the 2007 - 08 season . Roy Keane told Roy Keane players ' basically his players 're s * * * ' before a game with Aston Villa . Roy Keane also told one player one player was ' not f * * * * * * good enough ' to play for Keane 's Sunderland .", "summary_trees": ["# ::snt Danny Higginbotham covers Danny Higginbotham time under Roy Keane in Danny Higginbotham new book .\n(c / cover-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Higginbotham\"))\n      :ARG1 (t / time\n            :poss p\n            :prep-under (p2 / person\n                  :name (n2 / name\n                        :op1 \"Roy\"\n                        :op2 \"Keane\")))\n      :medium (b / book\n            :ARG1-of (n3 / new-01)))", "# ::snt Danny Higginbotham played for Roy Keane Sunderland during the 2007 - 08 season .\n(p / play-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Higginbotham\"))\n      :ARG3 (t / team\n            :name (n2 / name\n                  :op1 \"Roy\"\n                  :op2 \"Keane\")\n            :part-of t\n            :name (n3 / name\n                  :op1 \"Sunderland\"))\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 2007)\n            :op2 (d3 / date-entity\n                  :year 2008)))", "# ::snt Roy Keane told Roy Keane players ' basically his players 're s *\n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Roy\"\n                  :op2 \"Keane\"))\n      :ARG1 (t2 / thing\n            :poss (p2 / person\n                  :ARG0-of (p3 / play-01)\n                  :poss p)\n            :mod (b / basic))\n      :ARG2 p2)", "# ::snt * * ' before a game with Aston Villa .\n(b / be-temporally-at-91\n      :ARG2 (b2 / before\n            :op1 (g / game\n                  :mod (t / team\n                        :name (n / name\n                              :op1 \"Aston\"\n                              :op2 \"Villa\")))))", "# ::snt Roy Keane also told one player one player was ' not f *\n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Roy\"\n                  :op2 \"Keane\"))\n      :ARG1 (f / fuck-01\n            :polarity -\n            :ARG0 (p2 / person\n                  :quant 1\n                  :ARG0-of (p3 / play-01)\n                  :ARG2-of t))\n      :mod (a / also))", "# ::snt * *\n(a / amr-empty)", "# ::snt *\n(a / amr-empty)", "# ::snt * * good enough ' to play for Keane 's Sunderland .\n(h / have-degree-91\n      :ARG2 (g / good-03)\n      :ARG3 (e / enough)\n      :ARG6 (p / play-01\n            :ARG3 (t / team\n                  :name (n / name\n                        :op1 \"Sunderland\")\n                  :poss (p2 / person\n                        :name (n2 / name\n                              :op1 \"Keane\")))))"], "tree": ["(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\")))", "(c / cover-03\n   :ARG1 (t / time\n            :poss (p / person :name (n / name :op1 \"Danny\" :op2 \"Higginbotham\"))\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))", "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :ARG1 (t / time\n            :poss p\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))", "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :ARG1 (t / time\n            :poss p\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\")))\n   :medium (b / book\n              :ARG1 (n3 / new-01)))", "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Danny\"\n                      :op2 \"Higginbotham\")))", "(p / play-01\n   :time (d / date-interval\n            :op1 (d2 / date-entity\n                     :year 2007)\n            :op2 (d3 / date-entity\n                     :year 2008)))", "(p / play-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Danny\"\n                      :op2 \"Higginbotham\"))\n   :ARG3 (t / team\n            :name (n2 / name\n                      :op1 \"Roy\"\n                      :op2 \"Keane\")\n            :part t\n            :name (n3 / name\n                      :op1 \"Sunderland\"))\n   :time (d / date-interval\n            :op1 (d2 / date-entity\n                     :year 2007)\n            :op2 (d3 / date-entity\n                     :year 2008)))", "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Roy\"\n                     :op2 \"Keane\"))\n   :ARG1 (t2 / thing\n             :poss (p2 / person\n                       :ARG0 (p3 / play-01)\n                       :poss p)\n             :mod (b / basic)))", "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Roy\"\n                     :op2 \"Keane\"))\n   :ARG1 (t2 / thing\n             :poss (p2 / person\n                       :ARG0 (p3 / play-01)\n                       :poss p)\n             :mod (b / basic))\n   :ARG2 p2)", "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Roy\"\n                     :op2 \"Keane\"))\n   :ARG1 (t2 / thing\n             :poss (p2 / person\n                       :ARG0 (p3 / play-01)\n                       :poss p)\n             :mod (b / basic))\n   :ARG2 p2)", "(b / be-temporally-at-91\n   :ARG2 (b2 / before\n             :op1 (g / game\n                     :mod (t / team\n                             :name (n / name\n                                      :op1 \"Aston\"\n                                      :op2 \"Villa\")))))", "(b / be-temporally-at-91\n   :ARG2 (b2 / before\n             :op1 (g / game\n                     :mod (t / team\n                             :name (n / name\n                                      :op1 \"Aston\"\n                                      :op2 \"Villa\")))))", "(f / fuck-01\n   :polarity -\n   :ARG0 (p2 / person\n             :quant 1\n             :ARG0 (p3 / play-01)))", "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Roy\"\n                     :op2 \"Keane\"))\n   :ARG1 (f / fuck-01\n            :polarity -\n            :ARG0 (p2 / person\n                      :quant 1\n                      :ARG0 (p3 / play-01)))\n   :ARG2 p2\n   :mod (a / also))", "(a / amr-empty)", "(a / amr-empty)", "(p / play-01\n   :ARG3 (t / team\n            :name (n / name\n                     :op1 \"Sunderland\")\n            :poss (p2 / person\n                      :name (n2 / name\n                                :op1 \"Keane\"))))", "(h / have-degree-91\n   :ARG2 (g / good-03)\n   :ARG3 (e / enough)\n   :ARG6 (p / play-01\n            :ARG3 (t / team\n                     :name (n / name\n                              :op1 \"Sunderland\")\n                     :poss (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Keane\")))))"], "smus": ["Danny Higginbotham covers.", "Covers Danny Higginbotham's time under Roy Keane.", "Danny Higginbotham covers her time under Roy Keane.", "In the new book, Danny Higginbotham covers her time under Roy Keane.", "Danny Higginbotham played.", "Played from 2007-2008.", "Danny Higginbotham played for the Royals against Southend in 2007-2008.", "Roy Keane told what his players were basically like.", "Roy Keane told him basically what his players were up to.", "Roy Keane told him basically what his players were up to.", "Before the Aston Villa game.", "Before the Aston Villa game.", "One player who is not fucking is.", "Roy Keane also told him that one player was not fucking.", "SetC-WP-01", "SetC-WP-01", "Play Kevine's Underland.", "Good enough to play for Keane's Scotland."]}, {"instance_id": "realsumm-46", "summary": "Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 . Owner suspected Ornate bed , now on display had historic value and experts have been investigating . Historian now claims DNA from the timber proves Ornate bed , now on display belonged to Henry VII . Ornate bed , now on display , was made for King and wife Elizabeth of York .", "summary_trees": ["# ::snt Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 .\n(a / and\n      :op1 (d / dump-01\n            :ARG1 (b / bed\n                  :mod (p / poster\n                        :quant 4))\n            :location (p2 / park\n                  :mod (c / car)\n                  :mod (h / hotel)))\n      :op2 (s / sell-01\n            :ARG1 b\n            :ARG3 (m / monetary-quantity\n                  :quant 2100\n                  :unit (p3 / pound))\n            :time (a2 / auction-off-01)))", "# ::snt Owner suspected Ornate bed , now on display had historic value and experts have been investigating .\n(a / and\n      :op1 (s / suspect-01\n            :ARG0 (p / person\n                  :ARG0-of (o / own-01))\n            :ARG1 (v / value-01\n                  :ARG1 (b / bed\n                        :name (n / name\n                              :op1 \"Ornate\")\n                        :ARG1-of (d / display-01\n                              :time (n2 / now)))\n                  :ARG2 (h / history)))\n      :op2 (ii / investigate-01\n            :ARG0 (p2 / person\n                  :ARG1-of (e / expert-01))))", "# ::snt Historian now claims DNA from the timber proves Ornate bed , now on display belonged to Henry VII .\n(c / claim-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (h2 / historian)))\n      :ARG1 (p2 / prove-01\n            :ARG0 (n / nucleic-acid\n                  :name (n2 / name\n                        :op1 \"DNA\")\n                  :source (t / timber))\n            :ARG1 (b / belong-01\n                  :ARG0 (b2 / bed\n                        :name (n3 / name\n                              :op1 \"Ornate\")\n                        :ARG1-of (d / display-01\n                              :time (n4 / now)))\n                  :ARG1 (p3 / person\n                        :name (n5 / name\n                              :op1 \"Henry\"\n                              :op2 \"VII\"))))\n      :time (n6 / now))", "# ::snt Ornate bed , now on display , was made for King and wife Elizabeth of York .\n(m / make-01\n      :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1-of (d / display-01\n                  :time (n / now)))\n      :ARG3 (p / person\n            :name (n2 / name\n                  :op1 \"Elizabeth\"\n                  :op2 \"of\"\n                  :op3 \"York\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (k / king))\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG2 (w / wife))))"], "tree": ["(d / dump-01\n   :location (p2 / park\n                 :mod (c / car)\n                 :mod (h / hotel)))", "(s / sell-01\n   :ARG1 (b / bed)\n   :ARG3 (m / monetary-quantity\n            :quant 2100\n            :unit (p3 / pound))\n   :time (a2 / auction-off-01))", "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4))\n   :location (p2 / park\n                 :mod (c / car)\n                 :mod (h / hotel)))", "(ii / investigate-01\n    :ARG0 (p2 / person\n              :ARG1 (e / expert-01)))", "(ii / investigate-01\n    :ARG0 (p2 / person\n              :ARG1 (e / expert-01)))", "(v / value-01\n   :ARG1 (b / bed\n            :name (n / name\n                     :op1 \"Ornate\")\n            :ARG1 (d / display-01\n                     :time (n2 / now))))", "(v / value-01\n   :ARG1 (b / bed\n            :name (n / name\n                     :op1 \"Ornate\")\n            :ARG1 (d / display-01\n                     :time (n2 / now)))\n   :ARG2 (h / history))", "(v / value-01\n   :ARG1 (b / bed\n            :name (n / name\n                     :op1 \"Ornate\")\n            :ARG1 (d / display-01\n                     :time (n2 / now)))\n   :ARG2 (h / history))", "(s / suspect-01\n   :ARG1 (v / value-01\n            :ARG1 (b / bed\n                     :name (n / name\n                              :op1 \"Ornate\")\n                     :ARG1 (d / display-01\n                              :time (n2 / now)))\n            :ARG2 (h / history)))", "(s / suspect-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01))\n   :ARG1 (v / value-01\n            :ARG1 (b / bed\n                     :name (n / name\n                              :op1 \"Ornate\")\n                     :ARG1 (d / display-01\n                              :time (n2 / now)))\n            :ARG2 (h / history)))", "(b / belong-01\n   :ARG0 (b2 / bed\n             :name (n3 / name\n                       :op1 \"Ornate\")\n             :ARG1 (d / display-01\n                      :time (n4 / now)))\n   :ARG1 (p3 / person\n             :name (n5 / name\n                       :op1 \"Henry\"\n                       :op2 \"VII\")))", "(b / belong-01\n   :ARG0 (b2 / bed\n             :name (n3 / name\n                       :op1 \"Ornate\")\n             :ARG1 (d / display-01\n                      :time (n4 / now)))\n   :ARG1 (p3 / person\n             :name (n5 / name\n                       :op1 \"Henry\"\n                       :op2 \"VII\")))", "(p2 / prove-01\n    :ARG1 (b / belong-01\n             :ARG0 (b2 / bed\n                       :name (n3 / name\n                                 :op1 \"Ornate\")\n                       :ARG1 (d / display-01\n                                :time (n4 / now)))\n             :ARG1 (p3 / person\n                       :name (n5 / name\n                                 :op1 \"Henry\"\n                                 :op2 \"VII\"))))", "(p2 / prove-01\n    :ARG0 (n / nucleic-acid\n             :name (n2 / name\n                       :op1 \"DNA\")\n             :source (t / timber))\n    :ARG1 (b / belong-01\n             :ARG0 (b2 / bed\n                       :name (n3 / name\n                                 :op1 \"Ornate\")\n                       :ARG1 (d / display-01\n                                :time (n4 / now)))\n             :ARG1 (p3 / person\n                       :name (n5 / name\n                                 :op1 \"Henry\"\n                                 :op2 \"VII\"))))", "(p2 / prove-01\n    :ARG0 (n / nucleic-acid\n             :name (n2 / name\n                       :op1 \"DNA\")\n             :source (t / timber))\n    :ARG1 (b / belong-01\n             :ARG0 (b2 / bed\n                       :name (n3 / name\n                                 :op1 \"Ornate\")\n                       :ARG1 (d / display-01\n                                :time (n4 / now)))\n             :ARG1 (p3 / person\n                       :name (n5 / name\n                                 :op1 \"Henry\"\n                                 :op2 \"VII\"))))", "(c / claim-01\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")\n                      :source (t / timber))\n             :ARG1 (b / belong-01\n                      :ARG0 (b2 / bed\n                                :name (n3 / name\n                                          :op1 \"Ornate\")\n                                :ARG1 (d / display-01\n                                         :time (n4 / now)))\n                      :ARG1 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Henry\"\n                                          :op2 \"VII\")))))", "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")\n                      :source (t / timber))\n             :ARG1 (b / belong-01\n                      :ARG0 (b2 / bed\n                                :name (n3 / name\n                                          :op1 \"Ornate\")\n                                :ARG1 (d / display-01\n                                         :time (n4 / now)))\n                      :ARG1 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Henry\"\n                                          :op2 \"VII\")))))", "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")\n                      :source (t / timber))\n             :ARG1 (b / belong-01\n                      :ARG0 (b2 / bed\n                                :name (n3 / name\n                                          :op1 \"Ornate\")\n                                :ARG1 (d / display-01\n                                         :time (n4 / now)))\n                      :ARG1 (p3 / person\n                                :name (n5 / name\n                                          :op1 \"Henry\"\n                                          :op2 \"VII\"))))\n   :time (n6 / now))", "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1 (d / display-01\n                     :time (n / now))))", "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1 (d / display-01\n                     :time (n / now)))\n   :ARG3 (p / person\n            :name (n2 / name\n                      :op1 \"Elizabeth\"\n                      :op2 \"of\"\n                      :op3 \"York\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (k / king))\n            :ARG0 (h2 / have-rel-role-91\n                      :ARG2 (w / wife))))"], "smus": ["Dumped in hotel car park.", "The bed sold for PS2100 at the auction.", "4 poster bed dumped in hotel car park.", "Experts are investigating.", "Experts are investigating.", "The Ornate bed has a value for now's display.", "The Ornate bed is a bed of historical value for what it is now on display.", "The Ornate bed is a bed of historical value for what it is now on display.", "The Ornate bed, suspected of being of historical value, is now on display.", "The owner suspected that the Ornate bed was of historical value for the display it is on now.", "The Ornate bed in the now-decorated display belonged to Henry VI.", "The Ornate bed in the now-decorated display belonged to Henry VI.", "Proof that the Ornate bed on display now belonged to Henry VI.", "DNA from the timber proves that the Ornate bed on display now belonged to Henry VI.", "DNA from the timber proves that the Ornate bed on display now belonged to Henry VI.", "The claim claims DNA from the timber proves that the Ornate bed on display now belonged to Henry VI.", "The historian claims DNA from the timber proves that the ornate bed on display now belonged to Henry VI.", "Now a historian claims DNA from the timber proves that the Ornate bed on display now belonged to Henry VI.", "The ornate bed is made for the display now.", "The ornate bed for now's display was made for Queen Elizabeth of York's wife."]}, {"instance_id": "realsumm-47", "summary": "Attorney : Robert Bates assumed the gun was a Taser because Robert Bates saw a laser sight on the gun . Harris family lawyers say there are stark differences between the gun and Taser used . In 2009 , an officer in California also said an officer in California mistakenly used an officer in California gun instead of a Taser .", "summary_trees": ["# ::snt Attorney : Robert Bates assumed the gun was a Taser because Robert Bates saw a laser sight on the gun .\n(s / say-01\n      :ARG0 (a / attorney)\n      :ARG1 (a2 / assume-02\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Robert\"\n                        :op2 \"Bates\"))\n            :ARG1 (t / taser\n                  :domain (g / gun))\n            :ARG1-of (c / cause-01\n                  :ARG0 (s2 / see-01\n                        :ARG0 p\n                        :ARG1 (s3 / sight-01\n                              :ARG0 (l / laser)\n                              :location g)))))", "# ::snt Harris family lawyers say there are stark differences between the gun and Taser used .\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (f / family\n                        :name (n / name\n                              :op1 \"Harris\"))\n                  :ARG2 (l / lawyer)))\n      :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                  :ARG1-of (u / use-01))\n            :mod (s2 / stark)))", "# ::snt In 2009 , an officer in California also said an officer in California mistakenly used an officer in California gun instead of a Taser .\n(s / say-01\n      :ARG0 (o / officer\n            :location (s2 / state\n                  :name (n / name\n                        :op1 \"California\")))\n      :ARG1 (u / use-01\n            :ARG0 (o2 / officer\n                  :location s2)\n            :ARG1 (o3 / officer\n                  :location (g / gun\n                        :mod s2\n                        :ARG1-of (ii / instead-of-91\n                              :ARG2 (t / taser))))\n            :ARG2-of (m / mistake-01\n                  :ARG0 o2))\n      :mod (a / also)\n      :time (d / date-entity\n            :year 2009))"], "tree": ["(s3 / sight-01\n    :ARG0 (l / laser)\n    :location (g / gun))", "(a2 / assume-02\n    :ARG1 (t / taser\n             :domain (g / gun)))", "(s2 / see-01\n    :ARG1 (s3 / sight-01\n              :ARG0 (l / laser)\n              :location (g / gun)))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\"))\n    :ARG1 (s3 / sight-01\n              :ARG0 (l / laser)\n              :location (g / gun)))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\"))\n    :ARG1 (s3 / sight-01\n              :ARG0 (l / laser)\n              :location (g / gun)))", "(c / cause-01\n   :ARG0 (s2 / see-01\n             :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\"))\n             :ARG1 (s3 / sight-01\n                       :ARG0 (l / laser)\n                       :location (g / gun))))", "(a2 / assume-02\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Robert\"\n                      :op2 \"Bates\"))\n    :ARG1 (t / taser\n             :domain (g / gun)))", "(a2 / assume-02\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Robert\"\n                      :op2 \"Bates\"))\n    :ARG1 (t / taser\n             :domain (g / gun))\n    :ARG1 (c / cause-01\n             :ARG0 (s2 / see-01\n                       :ARG0 p\n                       :ARG1 (s3 / sight-01\n                                 :ARG0 (l / laser)\n                                 :location g))))", "(s / say-01\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / assume-02\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Robert\"\n                               :op2 \"Bates\"))\n             :ARG1 (t / taser\n                      :domain (g / gun))\n             :ARG1 (c / cause-01\n                      :ARG0 (s2 / see-01\n                                :ARG0 p\n                                :ARG1 (s3 / sight-01\n                                          :ARG0 (l / laser)\n                                          :location g)))))", "(s / say-01\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / assume-02\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Robert\"\n                               :op2 \"Bates\"))\n             :ARG1 (t / taser\n                      :domain (g / gun))\n             :ARG1 (c / cause-01\n                      :ARG0 (s2 / see-01\n                                :ARG0 p\n                                :ARG1 (s3 / sight-01\n                                          :ARG0 (l / laser)\n                                          :location g)))))", "(h / have-rel-role-91\n   :ARG1 (f / family\n            :name (n / name\n                     :op1 \"Harris\"))\n   :ARG2 (l / lawyer))", "(d / differ-02\n   :ARG1 (g / gun)\n   :ARG2 (t / taser\n            :ARG1 (u / use-01))\n   :mod (s2 / stark))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\"))\n                     :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                     :ARG1 (u / use-01))\n            :mod (s2 / stark)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\"))\n                     :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                     :ARG1 (u / use-01))\n            :mod (s2 / stark)))", "(u / use-01\n   :ARG0 (o2 / officer\n             :location (s2 / state :name (n / name :op1 \"California\"))))", "(s / say-01\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))", "(u / use-01\n   :ARG1 (o3 / officer\n             :location (g / gun\n                          :mod (s2 / state :name (n / name :op1 \"California\"))\n                          :ARG1 (ii / instead-of-91\n                                    :ARG2 (t / taser)))))", "(u / use-01\n   :ARG0 (o2 / officer\n             :location s2)\n   :ARG1 (o3 / officer\n             :location (g / gun\n                          :mod (s2 / state :name (n / name :op1 \"California\"))\n                          :ARG1 (ii / instead-of-91\n                                    :ARG2 (t / taser)))))", "(u / use-01\n   :ARG0 (o2 / officer\n             :location s2)\n   :ARG1 (o3 / officer\n             :location (g / gun\n                          :mod (s2 / state :name (n / name :op1 \"California\"))\n                          :ARG1 (ii / instead-of-91\n                                    :ARG2 (t / taser))))\n   :ARG2 (m / mistake-01\n            :ARG0 o2))", "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer\n                      :location s2)\n            :ARG1 (o3 / officer\n                      :location (g / gun\n                                   :mod s2\n                                   :ARG1 (ii / instead-of-91\n                                             :ARG2 (t / taser))))\n            :ARG2 (m / mistake-01\n                     :ARG0 o2)))", "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 (o2 / officer\n                      :location s2)\n            :ARG1 (o3 / officer\n                      :location (g / gun\n                                   :mod s2\n                                   :ARG1 (ii / instead-of-91\n                                             :ARG2 (t / taser))))\n            :ARG2 (m / mistake-01\n                     :ARG0 o2))\n   :mod (a / also)\n   :time (d / date-entity\n            :year 2009))"], "smus": ["The laser sighting on the gun.", "assumed the gun was a Taser.", "The laser sighting on the gun was seen.", "Robert Bates saw a laser sighting in the gun.", "Robert Bates saw a laser sighting in the gun.", "Because Robert Bates saw a laser sighting in the gun.", "Robert Bates assumed the gun was a taser.", "Robert Bates assumed the gun was a taser because he saw a laser sighting on it.", "The attorney said Robert Bates assumed the gun was a taser because he saw a laser sighting on it.", "The attorney said Robert Bates assumed the gun was a taser because he saw a laser sighting on it.", "The Harris family lawyers.", "There are stark differences between a gun and the Taser used.", "Harris family lawyers say the gun and taser used are stark differences.", "Harris family lawyers say the gun and taser used are stark differences.", "The California officer used --", "Also in 2009 said:", "The California gun officer used the i instead of the taser.", "The California gun officer used the i instead of the Taser.", "The California gun officer used the i instead of the Taser mistakenly.", "An officer in California said he mistakenly used an officer in California with a taser instead of a California gun.", "In 2009, an officer in California also said he mistakenly used an officer in California with a taser instead of a California gun."]}, {"instance_id": "realsumm-48", "summary": "Singer arrived at artists ' entrance to gain entry to Drake 's gig . Security told Bieber area was at full capacity and denied admission . A row erupted and a Coachella staffer tried to get Bieber into Drake 's gig . But festival security then intervened and put Bieber in chokehold and removed Bieber from the area .", "summary_trees": ["# ::snt Singer arrived at artists ' entrance to gain entry to Drake 's gig .\n(a / arrive-01\n      :ARG1 (p / person\n            :ARG0-of (s / sing-01))\n      :ARG4 (e / entrance\n            :poss (a2 / artist))\n      :purpose (g / gain-02\n            :ARG0 p\n            :ARG1 (e2 / enter-01\n                  :ARG0 p\n                  :ARG1 (g2 / gig\n                        :poss (p2 / person\n                              :name (n / name\n                                    :op1 \"Drake\"))))))", "# ::snt Security told Bieber area was at full capacity and denied admission .\n(a / and\n      :op1 (t / tell-01\n            :ARG0 (s / security)\n            :ARG1 (c / capacity\n                  :ARG1-of (f / full-09)\n                  :domain (a2 / area\n                        :poss (p / person\n                              :name (n / name\n                                    :op1 \"Bieber\"))))\n            :ARG2 p)\n      :op2 (d / deny-01\n            :ARG0 s\n            :ARG1 (a3 / admit-02\n                  :ARG1 p)\n            :ARG2 p))", "# ::snt A row erupted and a Coachella staffer tried to get Bieber into Drake 's gig .\n(a / and\n      :op1 (e / erupt-01\n            :ARG1 (r / row))\n      :op2 (t / try-01\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (e2 / event\n                              :name (n / name\n                                    :op1 \"Coeachella\"))\n                        :ARG2 (s / staffer)))\n            :ARG1 (g / get-05\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Bieber\"))\n                  :ARG2 (g2 / gig\n                        :poss (p3 / person\n                              :name (n3 / name\n                                    :op1 \"Drake\"))))))", "# ::snt But festival security then intervened and put Bieber in chokehold and removed Bieber from the area .\n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (ii / intervene-01\n                  :ARG0 (s / security\n                        :mod (f / festival)))\n            :op2 (p / put-01\n                  :ARG0 s\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 \"Bieber\"))\n                  :ARG2 (c2 / chokehold))\n            :op3 (r / remove-01\n                  :ARG0 s\n                  :ARG1 p2\n                  :ARG2 (a2 / area))\n            :time (t / then)))"], "tree": ["(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01)))", "(e2 / enter-01\n    :ARG0 (p / person)\n    :ARG1 (g2 / gig\n              :poss (p2 / person\n                        :name (n / name\n                                 :op1 \"Drake\"))))", "(e2 / enter-01\n    :ARG0 (p / person)\n    :ARG1 (g2 / gig\n              :poss (p2 / person\n                        :name (n / name\n                                 :op1 \"Drake\"))))", "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist)))", "(g / gain-02\n   :ARG0 (p / person)\n   :ARG1 (e2 / enter-01\n             :ARG0 p\n             :ARG1 (g2 / gig\n                       :poss (p2 / person\n                                 :name (n / name\n                                          :op1 \"Drake\")))))", "(g / gain-02\n   :ARG0 (p / person)\n   :ARG1 (e2 / enter-01\n             :ARG0 p\n             :ARG1 (g2 / gig\n                       :poss (p2 / person\n                                 :name (n / name\n                                          :op1 \"Drake\")))))", "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist))\n   :purpose (g / gain-02\n               :ARG0 p\n               :ARG1 (e2 / enter-01\n                         :ARG0 p\n                         :ARG1 (g2 / gig\n                                   :poss (p2 / person\n                                             :name (n / name\n                                                      :op1 \"Drake\"))))))", "(d / deny-01\n   :ARG1 (a3 / admit-02\n             :ARG1 (p / person :name (n / name :op1 \"Bieber\"))))", "(d / deny-01\n   :ARG0 (s / security)\n   :ARG1 (a3 / admit-02\n             :ARG1 (p / person :name (n / name :op1 \"Bieber\"))))", "(d / deny-01\n   :ARG0 (s / security)\n   :ARG1 (a3 / admit-02\n             :ARG1 (p / person :name (n / name :op1 \"Bieber\")))\n   :ARG2 p)", "(t / tell-01\n   :ARG0 (s / security)\n   :ARG1 (c / capacity\n            :ARG1 (f / full-09)\n            :domain (a2 / area\n                        :poss (p / person\n                                 :name (n / name\n                                          :op1 \"Bieber\")))))", "(t / tell-01\n   :ARG0 (s / security)\n   :ARG1 (c / capacity\n            :ARG1 (f / full-09)\n            :domain (a2 / area\n                        :poss (p / person\n                                 :name (n / name\n                                          :op1 \"Bieber\"))))\n   :ARG2 p)", "(t / tell-01\n   :ARG0 (s / security)\n   :ARG1 (c / capacity\n            :ARG1 (f / full-09)\n            :domain (a2 / area\n                        :poss (p / person\n                                 :name (n / name\n                                          :op1 \"Bieber\"))))\n   :ARG2 p)", "(h / have-org-role-91\n   :ARG1 (e2 / event\n             :name (n / name\n                      :op1 \"Coeachella\"))\n   :ARG2 (s / staffer))", "(g / get-05\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bieber\"))\n   :ARG2 (g2 / gig\n             :poss (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Drake\"))))", "(g / get-05\n   :ARG0 (p / person)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bieber\"))\n   :ARG2 (g2 / gig\n             :poss (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Drake\"))))", "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (e2 / event\n                               :name (n / name\n                                        :op1 \"Coeachella\"))\n                     :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))\n            :ARG2 (g2 / gig\n                      :poss (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Drake\")))))", "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (e2 / event\n                               :name (n / name\n                                        :op1 \"Coeachella\"))\n                     :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))\n            :ARG2 (g2 / gig\n                      :poss (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Drake\")))))", "(r / remove-01\n   :ARG1 (p2 / person :name (n / name :op1 \"Bieber\"))\n   :ARG2 (a2 / area))", "(r / remove-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person :name (n / name :op1 \"Bieber\"))\n   :ARG2 (a2 / area))", "(ii / intervene-01\n    :ARG0 (s / security\n             :mod (f / festival)))", "(r / remove-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person :name (n / name :op1 \"Bieber\"))\n   :ARG2 (a2 / area))", "(ii / intervene-01\n    :ARG0 (s / security\n             :mod (f / festival)))", "(p / put-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Bieber\")))", "(c / contrast-01\n   :ARG2 (ii / intervene-01\n             :ARG0 (s / security\n                      :mod (f / festival))))", "(p / put-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Bieber\"))\n   :ARG2 (c2 / chokehold))", "(p / put-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Bieber\"))\n   :ARG2 (c2 / chokehold))", "(p / put-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Bieber\"))\n   :ARG2 (c2 / chokehold))", "(c / contrast-01\n   :ARG2 (r / remove-01\n            :ARG0 (s / security)\n            :ARG1 (p2 / person :name (n / name :op1 \"Bieber\"))\n            :ARG2 (a2 / area)\n            :time (t / then)))", "(c / contrast-01\n   :ARG2 (p / put-01\n            :ARG0 (s / security)\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Bieber\"))\n            :ARG2 (c2 / chokehold)))", "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (ii / intervene-01\n                     :ARG0 (s / security\n                              :mod (f / festival)))\n            :op2 (p / put-01\n                    :ARG0 s\n                    :ARG1 (p2 / person\n                              :name (n / name\n                                       :op1 \"Bieber\"))\n                    :ARG2 (c2 / chokehold))\n            :op3 (r / remove-01\n                    :ARG0 s\n                    :ARG1 p2\n                    :ARG2 (a2 / area))\n            :time (t / then)))"], "smus": ["The singer arrived.", "People entered Drake's gig.", "People entered Drake's gig.", "The singer arrived at the artists' entrance.", "People will gain entry to Drake's gig.", "People will gain entry to Drake's gig.", "The singer arrived at the entrance of the artists to gain entry to Drake's gig.", "Bieber's admission was denied.", "Security denied Bieber admission.", "Security denied Bieber admission.", "Security told reporters that Bieber's area was in full capacity.", "The security had told Bieber's area was in full capacity.", "The security had told Bieber's area was in full capacity.", "Coeachella staffer", "Bieber will get Drake's gig.", "People will get Bieber for Drake's gig.", "Coeachella's staffer tried to get Bieber into Drake's gig.", "Coeachella's staffer tried to get Bieber into Drake's gig.", "Bieber was removed from the area.", "Security removed Bieber from the area.", "Festival security intervened.", "Security removed Bieber from the area.", "Festival security intervened.", "Security put Bieber in.", "But festival security intervened.", "Bieber was put in a chokehold.", "Security put Bieber in a chokehold.", "Security put Bieber in a chokehold.", "But then security removed Bieber from the area.", "But security put Bieber in a chokehold.", "But then festival security intervened, put Bieber in a chokehold and removed him from the area."]}, {"instance_id": "realsumm-49", "summary": "Sir Philip Carter died at Sir Philip Carter home on Thursday morning after a short illness . Sir Philip Carter served Everton during three spells after first joining Everton in 1977 . Everton chairman Bill Kenwright pays tribute to a ' great man and leader '", "summary_trees": ["# ::snt Sir Philip Carter died at Sir Philip Carter home on Thursday morning after a short illness .\n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Philip\"\n                  :op3 \"Carter\"))\n      :location (h / home\n            :poss p)\n      :time (d2 / date-entity\n            :weekday (t / thursday)\n            :dayperiod (m / morning))\n      :time (a / after\n            :op1 (ii / ill-01\n                  :ARG1 p\n                  :ARG1-of (s / short-07))))", "# ::snt Sir Philip Carter served Everton during three spells after first joining Everton in 1977 .\n(s / serve-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Philip\"\n                  :op3 \"Carter\"))\n      :ARG2 (t / team\n            :name (n2 / name\n                  :op1 \"Everton\"))\n      :duration (s2 / spell\n            :quant 3)\n      :time (a / after\n            :op1 (j / join-04\n                  :ARG0 p\n                  :ARG1 t\n                  :time (d / date-entity\n                        :year 1977)\n                  :ord (o / ordinal-entity\n                        :value 1))))", "# ::snt Everton chairman Bill Kenwright pays tribute to a ' great man and leader '\n(p / pay\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Bill\"\n                  :op2 \"Kenwright\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (t / team\n                        :name (n2 / name\n                              :op1 \"Everton\"))\n                  :ARG2 (c / chairman)))\n      :ARG1 (p3 / person\n            :mod (g / great)\n            :ARG0-of (l / lead-02)))"], "tree": ["(ii / ill-01\n    :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))\n    :ARG1 (s / short-07))", "(d / die-01\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning)))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\")))", "(d / die-01\n   :location (h / home)\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning))\n   :time (a / after\n            :op1 (ii / ill-01)))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning)))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :location (h / home\n                :poss p)\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning))\n   :time (a / after\n            :op1 (ii / ill-01\n                     :ARG1 p\n                     :ARG1 (s / short-07))))", "(j / join-04\n   :time (d / date-entity\n            :year 1977))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n   :time (d / date-entity\n            :year 1977))", "(j / join-04\n   :time (d / date-entity\n            :year 1977)\n   :ord (o / ordinal-entity\n           :value 1))", "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\")))", "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04)))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n   :time (d / date-entity\n            :year 1977)\n   :ord (o / ordinal-entity\n           :value 1))", "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 p\n                    :ARG1 t\n                    :time (d / date-entity\n                             :year 1977)\n                    :ord (o / ordinal-entity\n                            :value 1))))", "(h / have-org-role-91\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :ARG2 (c / chairman))"], "smus": ["Sir Philip Carter is short - ill.", "Died Thursday morning.", "Sir Philip Carter died.", "Died at home Thursday morning after illness.", "Sir Philip Carter died Thursday morning.", "Sir Philip Carter died at his home Thursday morning after a short illness.", "Joining in 1977.", "Sir Philip Carter joined Everton in 1977.", "Joining in 1977 for the first time.", "Sir Philip Carter served.", "After joining, served three spells.", "Sir Philip Carter joined Everton in 1977 for the first time.", "Sir Philip Carter served three spells at Everton after joining the club in 1977 for the first time.", "Everton's chairman"]}, {"instance_id": "realsumm-50", "summary": "Border collies Ace and Holly were caught on camera performing a gravity - defying feat together . The two pooches stood up on The two pooches hind legs while balancing on The two pooches owner and trainer Dai Aoki . The two pooches have appeared in a number of videos showing off The two pooches tricks .", "summary_trees": ["# ::snt Border collies Ace and Holly were caught on camera performing a gravity - defying feat together .\n(c / catch-03\n      :ARG1 (a / and\n            :op1 (d / dog\n                  :name (n / name\n                        :op1 \"Ace\"))\n            :op2 (d2 / dog\n                  :name (n2 / name\n                        :op1 \"Holly\"))\n            :mod (b / border))\n      :ARG2 (p / perform-01\n            :ARG0 a\n            :ARG1 (f / feat\n                  :manner-of (d3 / defy-01\n                        :ARG0 a\n                        :ARG1 (g / gravity)))\n            :manner (t / together))\n      :medium (c2 / camera))", "# ::snt The two pooches stood up on The two pooches hind legs while balancing on The two pooches owner and trainer Dai Aoki .\n(s / stand-up-07\n      :ARG1 (p / pooches\n            :quant 2\n            :part (l / leg\n                  :mod (h / hind)\n                  :prep-on-of s))\n      :time (b / balance-01\n            :ARG1 p\n            :prep-on (p2 / person\n                  :name (n / name\n                        :op1 \"Dai\"\n                        :op2 \"Aoki\")\n                  :ARG0-of (o / own-01\n                        :ARG1 p)\n                  :ARG0-of (t / train-01))))", "# ::snt The two pooches have appeared in a number of videos showing off The two pooches tricks .\n(a / appear-01\n      :ARG1 (p / pooch\n            :quant 2)\n      :medium (v / video\n            :quant (n / number)\n            :ARG0-of (s / show-off-03\n                  :ARG1 (t / trick-01\n                        :ARG0 p))))"], "tree": ["(d3 / defy-01\n    :ARG0 (a / and)\n    :ARG1 (g / gravity))", "(d3 / defy-01\n    :ARG0 (a / and)\n    :ARG1 (g / gravity))", "(p / perform-01\n   :ARG1 (f / feat\n            :manner (d3 / defy-01\n                        :ARG0 (a / and)\n                        :ARG1 (g / gravity))))", "(p / perform-01\n   :ARG0 (a / and)\n   :ARG1 (f / feat\n            :manner (d3 / defy-01\n                        :ARG0 a\n                        :ARG1 (g / gravity))))", "(p / perform-01\n   :ARG0 (a / and)\n   :ARG1 (f / feat\n            :manner (d3 / defy-01\n                        :ARG0 a\n                        :ARG1 (g / gravity)))\n   :manner (t / together))", "(c / catch-03\n   :ARG1 (d / dog\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p / perform-01\n            :ARG0 d\n            :ARG1 (f / feat\n                     :manner (d3 / defy-01\n                                 :ARG0 d\n                                 :ARG1 (g / gravity)))\n            :manner (t / together)))", "(c / catch-03\n   :ARG1 (d / dog\n            :name (n / name\n                     :op1 \"Ace\"))\n   :ARG2 (p / perform-01\n            :ARG0 d\n            :ARG1 (f / feat\n                     :manner (d3 / defy-01\n                                 :ARG0 d\n                                 :ARG1 (g / gravity)))\n            :manner (t / together))\n   :medium (c2 / camera))", "(c / catch-03\n   :ARG1 (d2 / dog\n             :name (n2 / name\n                       :op1 \"Holly\")\n             :mod (b / border))\n   :ARG2 (p / perform-01\n            :ARG0 d2\n            :ARG1 (f / feat\n                     :manner (d3 / defy-01\n                                 :ARG0 d2\n                                 :ARG1 (g / gravity)))\n            :manner (t / together))\n   :ARG2 p)", "(c / catch-03\n   :ARG1 (d2 / dog\n             :name (n2 / name\n                       :op1 \"Holly\")\n             :mod (b / border))\n   :ARG2 (p / perform-01\n            :ARG0 d2\n            :ARG1 (f / feat\n                     :manner (d3 / defy-01\n                                 :ARG0 d2\n                                 :ARG1 (g / gravity)))\n            :manner (t / together))\n   :ARG2 p\n   :medium (c2 / camera))", "(c / catch-03\n   :ARG1 (a / and\n            :op1 (d / dog\n                    :name (n / name\n                             :op1 \"Ace\"))\n            :op2 (d2 / dog\n                     :name (n2 / name\n                               :op1 \"Holly\"))\n            :mod (b / border))\n   :ARG2 (p / perform-01\n            :ARG0 a\n            :ARG1 (f / feat\n                     :manner (d3 / defy-01\n                                 :ARG0 a\n                                 :ARG1 (g / gravity)))\n            :manner (t / together)))", "(c / catch-03\n   :ARG1 (a / and\n            :op1 (d / dog\n                    :name (n / name\n                             :op1 \"Ace\"))\n            :op2 (d2 / dog\n                     :name (n2 / name\n                               :op1 \"Holly\"))\n            :mod (b / border))\n   :ARG2 (p / perform-01\n            :ARG0 a\n            :ARG1 (f / feat\n                     :manner (d3 / defy-01\n                                 :ARG0 a\n                                 :ARG1 (g / gravity)))\n            :manner (t / together))\n   :medium (c2 / camera))", "(b / balance-01\n   :prep-on (p2 / person\n                :name (n / name\n                         :op1 \"Dai\"\n                         :op2 \"Aoki\")))", "(s / stand-up-07\n   :ARG1 (p / pooches\n            :quant 2\n            :part (l / leg\n                     :mod (h / hind))))", "(b / balance-01\n   :ARG1 (p / pooches)\n   :prep-on (p2 / person\n                :name (n / name\n                         :op1 \"Dai\"\n                         :op2 \"Aoki\")\n                :ARG0 (o / own-01\n                         :ARG1 p)\n                :ARG0 (t / train-01)))", "(s / stand-up-07\n   :ARG1 (p / pooches\n            :quant 2\n            :part (l / leg\n                     :mod (h / hind)))\n   :prep-on l\n   :time (b / balance-01\n            :ARG1 p\n            :prep-on (p2 / person\n                         :name (n / name\n                                  :op1 \"Dai\"\n                                  :op2 \"Aoki\")\n                         :ARG0 (o / own-01\n                                  :ARG1 p)\n                         :ARG0 (t / train-01))))", "(s / show-off-03\n   :ARG1 (t / trick-01\n            :ARG0 (p / pooch)))", "(a / appear-01\n   :medium (v / video\n              :quant (n / number)))", "(a / appear-01\n   :ARG1 (p / pooch\n            :quant 2)\n   :medium (v / video\n              :quant (n / number)\n              :ARG0 (s / show-off-03\n                       :ARG1 (t / trick-01\n                                :ARG0 p))))"], "smus": ["The defying of gravity and...", "The defying of gravity and...", "performing feats of defiance and gravity.", "The feat of defying gravity was performed by the two.", "Together, they are performing a feat of defying gravity.", "Ace was caught performing a feat of defying gravity together.", "The dog, Ace, was caught on camera performing a feat of defying gravity together.", "The border dog Holly was caught performing a feat of defying gravity together.", "The border dog Holly was caught on camera performing a feat of defying gravity together.", "The border dogs Ace and Holly were caught performing a feat of defying gravity together.", "The border dogs Ace and Holly were caught on camera performing a feat of defying gravity together.", "Balancing on Dai Aoki.", "Two pooches stood up with hind legs.", "Pooches balancing on their owner, Dai Aoki, in the training.", "Two hind legs pooches stood up on their hind legs while balancing on their owner, Dai Aoki, in the training.", "showing off the tricks of the pooch.", "A number of videos have appeared.", "Two pooch appeared in a number of videos showing off their tricks."]}, {"instance_id": "realsumm-51", "summary": "Dayna Dobias , 19 , has created a video in which Dayna Dobias , 19 dances despite having a disability that makes it difficult for Dayna Dobias , 19 to walk . Dayna Dobias , 19 loves TV , film and fashion , and says Dayna Dobias , 19 \u2019s not happy with how people with disabilities are represented . Dayna Dobias , 19 has created several videos during the past year aimed at changing stereotypes .", "summary_trees": ["# ::snt Dayna Dobias , 19 , has created a video in which Dayna Dobias , 19 dances despite having a disability that makes it difficult for Dayna Dobias , 19 to walk .\n(c / create-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dayna\"\n                  :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                  :quant 19\n                  :unit (y / year)))\n      :ARG1 (v / video\n            :medium-of (d / dance-01\n                  :ARG0 p\n                  :concession (h / have-03\n                        :ARG0 p\n                        :ARG1 (d2 / disability\n                              :ARG0-of (m / make-02\n                                    :ARG1 (d3 / difficult\n                                          :domain (w / walk-01\n                                                :ARG0 p))))))))", "# ::snt Dayna Dobias , 19 loves TV , film and fashion , and says Dayna Dobias , 19 \u2019s not happy with how people with disabilities are represented .\n(a / and\n      :op1 (l / love-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Dayna\"\n                        :op2 \"Dobias\")\n                  :age (t / temporal-quantity\n                        :quant 19\n                        :unit (y / year)))\n            :ARG1 (a2 / and\n                  :op1 (t2 / television)\n                  :op2 (f / film)\n                  :op3 (f2 / fashion)))\n      :op2 (s / say-01\n            :ARG0 p\n            :ARG1 (h / happy-01\n                  :polarity -\n                  :ARG0 (t3 / thing\n                        :ARG2-of (r / represent-01\n                              :ARG1 (p2 / person\n                                    :ARG0-of (h2 / have-03\n                                          :ARG1 (d / disability)))))\n                  :ARG1 p)))", "# ::snt Dayna Dobias , 19 has created several videos during the past year aimed at changing stereotypes .\n(c / create-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dayna\"\n                  :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                  :quant 19\n                  :unit (y / year)))\n      :ARG1 (v / video\n            :quant (s / several)\n            :ARG1-of (a / aim-02\n                  :ARG2 (c2 / change-01\n                        :ARG1 (s2 / stereotype-01))))\n      :time (b / before\n            :op1 (n2 / now)\n            :duration (t2 / temporal-quantity\n                  :quant 1\n                  :unit (y2 / year))))"], "tree": ["(m / make-02\n   :ARG1 (d3 / difficult\n             :domain (w / walk-01\n                        :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))", "(h / have-03\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :ARG1 (d2 / disability\n             :ARG0 (m / make-02\n                      :ARG1 (d3 / difficult\n                                :domain (w / walk-01\n                                           :ARG0 p)))))", "(h / have-03\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :ARG1 (d2 / disability\n             :ARG0 (m / make-02\n                      :ARG1 (d3 / difficult\n                                :domain (w / walk-01\n                                           :ARG0 p)))))", "(d / dance-01\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :concession (h / have-03\n                  :ARG0 p\n                  :ARG1 (d2 / disability\n                            :ARG0 (m / make-02\n                                     :ARG1 (d3 / difficult\n                                               :domain (w / walk-01\n                                                          :ARG0 p))))))", "(c / create-01\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n                       :concession (h / have-03\n                                      :ARG0 p\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 p))))))))", "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p\n                       :concession (h / have-03\n                                      :ARG0 p\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 p))))))))", "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p\n                       :concession (h / have-03\n                                      :ARG0 p\n                                      :ARG1 (d2 / disability\n                                                :ARG0 (m / make-02\n                                                         :ARG1 (d3 / difficult\n                                                                   :domain (w / walk-01\n                                                                              :ARG0 p))))))))", "(r / represent-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-03\n                       :ARG1 (d / disability))))", "(l / love-01\n   :ARG1 (a2 / and\n             :op1 (t2 / television)\n             :op2 (f / film)\n             :op3 (f2 / fashion)))", "(h / happy-01\n   :ARG0 (t3 / thing\n             :ARG2 (r / represent-01\n                      :ARG1 (p2 / person\n                                :ARG0 (h2 / have-03\n                                          :ARG1 (d / disability))))))", "(h / happy-01\n   :ARG0 (t3 / thing\n             :ARG2 (r / represent-01\n                      :ARG1 (p2 / person\n                                :ARG0 (h2 / have-03\n                                          :ARG1 (d / disability)))))\n   :ARG1 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))", "(h / happy-01\n   :polarity -\n   :ARG0 (t3 / thing\n             :ARG2 (r / represent-01\n                      :ARG1 (p2 / person\n                                :ARG0 (h2 / have-03\n                                          :ARG1 (d / disability)))))\n   :ARG1 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (t2 / television))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (f / film))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (f2 / fashion))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (t2 / television))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (f / film))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (f2 / fashion))", "(s / say-01\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :ARG1 (h / happy-01\n            :polarity -\n            :ARG0 (t3 / thing\n                      :ARG2 (r / represent-01\n                               :ARG1 (p2 / person\n                                         :ARG0 (h2 / have-03\n                                                   :ARG1 (d / disability)))))\n            :ARG1 p))", "(s / say-01\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :ARG1 (h / happy-01\n            :polarity -\n            :ARG0 (t3 / thing\n                      :ARG2 (r / represent-01\n                               :ARG1 (p2 / person\n                                         :ARG0 (h2 / have-03\n                                                   :ARG1 (d / disability)))))\n            :ARG1 p))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (a2 / and\n             :op1 (t2 / television)\n             :op2 (f / film)\n             :op3 (f2 / fashion)))", "(l / love-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (a2 / and\n             :op1 (t2 / television)\n             :op2 (f / film)\n             :op3 (f2 / fashion)))", "(a / aim-02\n   :ARG2 (c2 / change-01\n             :ARG1 (s2 / stereotype-01)))", "(c / create-01\n   :time (b / before\n            :op1 (n2 / now)\n            :duration (t2 / temporal-quantity\n                          :quant 1\n                          :unit (y2 / year))))", "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :quant (s / several)\n            :ARG1 (a / aim-02\n                     :ARG2 (c2 / change-01\n                               :ARG1 (s2 / stereotype-01))))\n   :time (b / before\n            :op1 (n2 / now)\n            :duration (t2 / temporal-quantity\n                          :quant 1\n                          :unit (y2 / year))))"], "smus": ["Makes Dayna Dobias difficult to walk.", "Dayna Dobias has a disability that makes it difficult for her to walk.", "Dayna Dobias has a disability that makes it difficult for her to walk.", "Dayna Dobias dances, though she has a disability that makes it difficult for her to walk.", "A video of Dayna Dobias dancing was created, though she has a disability that makes it difficult for her to walk.", "Dayna Dobias, 19, has created a video in which she dances despite a disability that makes it difficult for her to walk.", "Dayna Dobias, 19, has created a video in which she dances despite a disability that makes it difficult for her to walk.", "representing people with disabilities.", "Loves TV, film and fashion.", "Happy to represent people with disabilities.", "Dayna Dobias is happy to represent people with disabilities.", "Dayna Dobias is not happy with what disability represents.", "Dayna Dobias, 19, loves TV.", "Dayna Dobias, 19, loves the film.", "Dayna Dobias, 19, loves fashion.", "Dayna Dobias, 19, loves TV.", "Dayna Dobias, 19, loves the film.", "Dayna Dobias, 19, loves fashion.", "Dayna Dobias says she is not happy with what people with disabilities are represented to.", "Dayna Dobias says she is not happy with what people with disabilities are represented to.", "Dayna Dobias, 19, loves TV, film and fashion.", "Dayna Dobias, 19, loves TV, film and fashion.", "aimed at changing stereotypes.", "Created over the past year.", "Over the past year, 19 year old Dayna Dobias has created several videos aimed at changing stereotypes."]}, {"instance_id": "realsumm-52", "summary": "Manchester United take on Manchester City on Sunday . Match will begin at 4 pm local time at Manchester United Old Trafford home . Police have no objections to kick - off being so late in the afternoon . Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final .", "summary_trees": ["# ::snt Manchester United take on Manchester City on Sunday .\n(t / take-on-09\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Manchester\"\n                  :op2 \"United\"))\n      :ARG1 (t3 / team\n            :name (n2 / name\n                  :op1 \"Manchester\"\n                  :op2 \"City\"))\n      :time (d / date-entity\n            :weekday (s / sunday)))", "# ::snt Match will begin at 4 pm local time at Manchester United Old Trafford home .\n(b / begin-01\n      :ARG1 (m / match-03)\n      :location (h / home\n            :mod (t / team\n                  :name (n / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\"))\n            :mod (s / sports-facility\n                  :name n\n                  :op1 \"Old\"\n                  :op2 \" Trafford\"))\n      :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))", "# ::snt Police have no objections to kick - off being so late in the afternoon .\n(o / object-01\n      :polarity -\n      :ARG0 (p / police)\n      :ARG1 (k / kick-off-04\n            :time (l / late\n                  :op1 (d / date-entity\n                        :dayperiod (a / afternoon))\n                  :degree (s / so))))", "# ::snt Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final .\n(s / see-01\n      :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                  :mod (c / city\n                        :name (n / name\n                              :op1 \"Manchester\")))\n            :time (w / weekend)\n            :time (l / late\n                  :op1 (d2 / date-entity\n                        :dayperiod (a / afternoon)))\n            :mod (l2 / last))\n      :ARG1 (a2 / arrest-01\n            :ARG1 (f / fan\n                  :quant 34)\n            :location (s2 / sports-facility\n                  :name (n2 / name\n                        :op1 \"Wembley\"))\n            :time (f2 / final\n                  :mod (s3 / semi)\n                  :subevent-of (g / game\n                        :name (n3 / name\n                              :op1 \"FA\"\n                              :op2 \"Cup\")\n                        :time (d3 / date-entity\n                              :year 2011)))))"], "tree": ["(t / take-on-09\n   :time (d / date-entity\n            :weekday (s / sunday)))", "(t / take-on-09\n   :time (d / date-entity\n            :weekday (s / sunday)))", "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\")))", "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\"))\n   :time (d / date-entity\n            :weekday (s / sunday)))", "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\"))\n   :time (d / date-entity\n            :weekday (s / sunday)))", "(b / begin-01\n   :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))", "(b / begin-01\n   :ARG1 (m / match-03)\n   :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))", "(b / begin-01\n   :location (h / home\n                :mod (t / team\n                        :name (n / name\n                                 :op1 \"Manchester\"\n                                 :op2 \"United\"))\n                :mod (s / sports-facility\n                        :name n\n                        :op1 \"Old\"\n                        :op2 \" Trafford\"))\n   :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))", "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :mod (t / team\n                        :name (n / name\n                                 :op1 \"Manchester\"\n                                 :op2 \"United\"))\n                :mod (s / sports-facility\n                        :name n\n                        :op1 \"Old\"\n                        :op2 \" Trafford\"))\n   :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))", "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))", "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))", "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))", "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))", "(o / object-01\n   :ARG0 (p / police)\n   :ARG1 (k / kick-off-04\n            :time (l / late\n                     :op1 (d / date-entity\n                             :dayperiod (a / afternoon))\n                     :degree (s / so))))", "(o / object-01\n   :polarity -\n   :ARG0 (p / police)\n   :ARG1 (k / kick-off-04\n            :time (l / late\n                     :op1 (d / date-entity\n                             :dayperiod (a / afternoon))\n                     :degree (s / so))))", "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34))", "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\")))\n   :time (w / weekend))", "(k / kick-off-04\n   :time (w / weekend)\n   :time (l / late\n            :op1 (d2 / date-entity\n                     :dayperiod (a / afternoon)))\n   :mod (l2 / last))", "(a2 / arrest-01\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent (g / game\n                           :name (n3 / name\n                                     :op1 \"FA\"\n                                     :op2 \"Cup\")\n                           :time (d3 / date-entity\n                                     :year 2011))))", "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34)\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent (g / game\n                           :name (n3 / name\n                                     :op1 \"FA\"\n                                     :op2 \"Cup\")\n                           :time (d3 / date-entity\n                                     :year 2011))))", "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\")))\n   :time (w / weekend)\n   :time (l / late\n            :op1 (d2 / date-entity\n                     :dayperiod (a / afternoon)))\n   :mod (l2 / last))", "(a2 / arrest-01\n    :location (s2 / sports-facility\n                  :name (n2 / name\n                            :op1 \"Wembley\"))\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent (g / game\n                           :name (n3 / name\n                                     :op1 \"FA\"\n                                     :op2 \"Cup\")\n                           :time (d3 / date-entity\n                                     :year 2011))))", "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34)\n    :location (s2 / sports-facility\n                  :name (n2 / name\n                            :op1 \"Wembley\"))\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent (g / game\n                           :name (n3 / name\n                                     :op1 \"FA\"\n                                     :op2 \"Cup\")\n                           :time (d3 / date-entity\n                                     :year 2011))))", "(s / see-01\n   :ARG1 (a2 / arrest-01\n             :ARG1 (f / fan\n                      :quant 34)\n             :location (s2 / sports-facility\n                           :name (n2 / name\n                                     :op1 \"Wembley\"))\n             :time (f2 / final\n                       :mod (s3 / semi)\n                       :subevent (g / game\n                                    :name (n3 / name\n                                              :op1 \"FA\"\n                                              :op2 \"Cup\")\n                                    :time (d3 / date-entity\n                                              :year 2011)))))", "(s / see-01\n   :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                     :mod (c / city\n                             :name (n / name\n                                      :op1 \"Manchester\")))\n            :time (w / weekend)\n            :time (l / late\n                     :op1 (d2 / date-entity\n                              :dayperiod (a / afternoon)))\n            :mod (l2 / last))\n   :ARG1 (a2 / arrest-01\n             :ARG1 (f / fan\n                      :quant 34)\n             :location (s2 / sports-facility\n                           :name (n2 / name\n                                     :op1 \"Wembley\"))\n             :time (f2 / final\n                       :mod (s3 / semi)\n                       :subevent (g / game\n                                    :name (n3 / name\n                                              :op1 \"FA\"\n                                              :op2 \"Cup\")\n                                    :time (d3 / date-entity\n                                              :year 2011)))))", "(s / see-01\n   :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                     :mod (c / city\n                             :name (n / name\n                                      :op1 \"Manchester\")))\n            :time (w / weekend)\n            :time (l / late\n                     :op1 (d2 / date-entity\n                              :dayperiod (a / afternoon)))\n            :mod (l2 / last))\n   :ARG1 (a2 / arrest-01\n             :ARG1 (f / fan\n                      :quant 34)\n             :location (s2 / sports-facility\n                           :name (n2 / name\n                                     :op1 \"Wembley\"))\n             :time (f2 / final\n                       :mod (s3 / semi)\n                       :subevent (g / game\n                                    :name (n3 / name\n                                              :op1 \"FA\"\n                                              :op2 \"Cup\")\n                                    :time (d3 / date-entity\n                                              :year 2011)))))"], "smus": ["Take on Sunday.", "Take on Sunday.", "Manchester United will take on Manchester City.", "Manchester United will take on Manchester City on Sunday.", "Manchester United will take on Manchester City on Sunday.", "The time will begin at 6pm local time.", "The match will begin at 6pm local time.", "Beginning at 16:00 local time, Manchester United will begin at Old Trafford.", "The match will begin at 16:00 local time at Old Trafford home to Manchester United.", "Kicking off so late in the afternoon.", "Kicking off so late in the afternoon.", "Kicking off so late in the afternoon.", "Kicking off so late in the afternoon.", "Police objected to the fact that the kickoff was so late in the afternoon.", "Police had no objections to the fact that the kickoff was so late in the afternoon.", "34 fans were arrested.", "The Manchester derby kicks off over the weekend.", "Last weekend's kick off was late in the afternoon.", "The arrests occurred in the semi-finals of the 2011 FA Cup.", "34 fans were arrested in the semi-finals of the 2011 FA Cup.", "The Manchester derby kicked off last weekend in late afternoon.", "Wembley was arrested in the semi-finals of the 2011 FA Cup.", "34 fans were arrested at Wimbledon in the semi-finals of the 2011 FA Cup.", "34 fans were arrested in the WC semi-finals of the 2011 FA Cup.", "The Manchester derby's last weekend late afternoon kick-off saw 34 fans arrested at Wembley in the semi-finals of the 2011 FA Cup.", "The Manchester derby's last weekend late afternoon kick-off saw 34 fans arrested at Wembley in the semi-finals of the 2011 FA Cup."]}, {"instance_id": "realsumm-53", "summary": "Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh . The Bangladeshi president alleged India 's had used India 's influence in the ICC . Governing body asked The Bangladeshi president to withdraw criticised or apologise . But Kamal confirmed Kamal intention to step down .", "summary_trees": ["# ::snt Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh .\n(c / criticize-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kamal\"))\n      :ARG1 (d / decide-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG3 (u / umpire)))\n            :ARG1 (a / award-01\n                  :ARG0 p2\n                  :ARG1 (b / ball\n                        :mod (c2 / controversy))\n                  :ARG2 (p3 / person\n                        :name (n2 / name\n                              :op1 \"Rohit\"\n                              :op2 \"Sharma\"))\n                  :time (m / match-03\n                        :ARG0 (c3 / country\n                              :name (n3 / name\n                                    :op1 \"India\"))\n                        :ARG1 (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Bangladesh\"))\n                        :subevent-of (g / game\n                              :name (n5 / name\n                                    :op1 \"World\"\n                                    :op2 \"Cup\"))))))", "# ::snt The Bangladeshi president alleged India 's had used India 's influence in the ICC .\n(a / allege-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Bangladesh\"))\n                  :ARG2 (p2 / president)))\n      :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                  :ARG0 c2\n                  :ARG1 (o / organization\n                        :name (n3 / name\n                              :op1 \"ICC\")))))", "# ::snt Governing body asked The Bangladeshi president to withdraw criticised or apologise .\n(a / ask-02\n      :ARG0 (b / body\n            :ARG0-of (g / govern-01))\n      :ARG1 (o / or\n            :op1 (w / withdraw-01\n                  :ARG0 (p / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG1 (c / country\n                                    :name (n / name\n                                          :op1 \"Bangladesh\"))\n                              :ARG2 (p2 / president)))\n                  :ARG1 p\n                  :ARG2 (c2 / criticize-01\n                        :ARG1 p))\n            :op2 (a2 / apologize-01\n                  :ARG0 p))\n      :ARG2 p)", "# ::snt But Kamal confirmed Kamal intention to step down .\n(c / contrast-01\n      :ARG2 (c2 / confirm-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Kamal\"))\n            :ARG1 (ii / intend-01\n                  :ARG0 p\n                  :ARG1 (s / step-down-04\n                        :ARG0 p))))"], "tree": ["(a / award-01\n   :ARG1 (b / ball\n            :mod (c2 / controversy)))", "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\")))", "(m / match-03\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\")))", "(a / award-01\n   :ARG0 (p2 / person)\n   :ARG1 (b / ball\n            :mod (c2 / controversy)))", "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\")))", "(m / match-03\n   :subevent (g / game\n                :name (n5 / name\n                          :op1 \"World\"\n                          :op2 \"Cup\")))", "(a / award-01\n   :time (m / match-03\n            :subevent (g / game\n                         :name (n5 / name\n                                   :op1 \"World\"\n                                   :op2 \"Cup\"))))", "(a / award-01\n   :time (m / match-03\n            :subevent (g / game\n                         :name (n5 / name\n                                   :op1 \"World\"\n                                   :op2 \"Cup\"))))", "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\"))\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\")))", "(a / award-01\n   :ARG1 (b / ball\n            :mod (c2 / controversy))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Rohit\"\n                       :op2 \"Sharma\")))", "(a / award-01\n   :ARG0 (p2 / person)\n   :ARG1 (b / ball\n            :mod (c2 / controversy))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Rohit\"\n                       :op2 \"Sharma\")))", "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\"))\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\"))\n   :subevent (g / game\n                :name (n5 / name\n                          :op1 \"World\"\n                          :op2 \"Cup\")))", "(a / award-01\n   :ARG1 (b / ball\n            :mod (c2 / controversy))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Rohit\"\n                       :op2 \"Sharma\"))\n   :time (m / match-03\n            :ARG0 (c3 / country\n                      :name (n3 / name\n                                :op1 \"India\"))\n            :ARG1 (c4 / country\n                      :name (n4 / name\n                                :op1 \"Bangladesh\"))\n            :subevent (g / game\n                         :name (n5 / name\n                                   :op1 \"World\"\n                                   :op2 \"Cup\"))))", "(a / award-01\n   :ARG0 (p2 / person)\n   :ARG1 (b / ball\n            :mod (c2 / controversy))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Rohit\"\n                       :op2 \"Sharma\"))\n   :time (m / match-03\n            :ARG0 (c3 / country\n                      :name (n3 / name\n                                :op1 \"India\"))\n            :ARG1 (c4 / country\n                      :name (n4 / name\n                                :op1 \"Bangladesh\"))\n            :subevent (g / game\n                         :name (n5 / name\n                                   :op1 \"World\"\n                                   :op2 \"Cup\"))))", "(d / decide-01\n   :ARG1 (a / award-01\n            :ARG0 (p2 / person)\n            :ARG1 (b / ball\n                     :mod (c2 / controversy))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Rohit\"\n                                :op2 \"Sharma\"))\n            :time (m / match-03\n                     :ARG0 (c3 / country\n                               :name (n3 / name\n                                         :op1 \"India\"))\n                     :ARG1 (c4 / country\n                               :name (n4 / name\n                                         :op1 \"Bangladesh\"))\n                     :subevent (g / game\n                                  :name (n5 / name\n                                            :op1 \"World\"\n                                            :op2 \"Cup\")))))", "(d / decide-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG3 (u / umpire)))\n   :ARG1 (a / award-01\n            :ARG0 p2\n            :ARG1 (b / ball\n                     :mod (c2 / controversy))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Rohit\"\n                                :op2 \"Sharma\"))\n            :time (m / match-03\n                     :ARG0 (c3 / country\n                               :name (n3 / name\n                                         :op1 \"India\"))\n                     :ARG1 (c4 / country\n                               :name (n4 / name\n                                         :op1 \"Bangladesh\"))\n                     :subevent (g / game\n                                  :name (n5 / name\n                                            :op1 \"World\"\n                                            :op2 \"Cup\")))))", "(d / decide-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG3 (u / umpire)))\n   :ARG1 (a / award-01\n            :ARG0 p2\n            :ARG1 (b / ball\n                     :mod (c2 / controversy))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Rohit\"\n                                :op2 \"Sharma\"))\n            :time (m / match-03\n                     :ARG0 (c3 / country\n                               :name (n3 / name\n                                         :op1 \"India\"))\n                     :ARG1 (c4 / country\n                               :name (n4 / name\n                                         :op1 \"Bangladesh\"))\n                     :subevent (g / game\n                                  :name (n5 / name\n                                            :op1 \"World\"\n                                            :op2 \"Cup\")))))", "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG3 (u / umpire)))\n            :ARG1 (a / award-01\n                     :ARG0 p2\n                     :ARG1 (b / ball\n                              :mod (c2 / controversy))\n                     :ARG2 (p3 / person\n                               :name (n2 / name\n                                         :op1 \"Rohit\"\n                                         :op2 \"Sharma\"))\n                     :time (m / match-03\n                              :ARG0 (c3 / country\n                                        :name (n3 / name\n                                                  :op1 \"India\"))\n                              :ARG1 (c4 / country\n                                        :name (n4 / name\n                                                  :op1 \"Bangladesh\"))\n                              :subevent (g / game\n                                           :name (n5 / name\n                                                     :op1 \"World\"\n                                                     :op2 \"Cup\"))))))", "(u / use-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"India\")))", "(ii / influence-01\n    :ARG0 (c2 / country :name (n2 / name :op1 \"India\"))\n    :ARG1 (o / organization\n             :name (n3 / name\n                       :op1 \"ICC\")))", "(ii / influence-01\n    :ARG0 (c2 / country :name (n2 / name :op1 \"India\"))\n    :ARG1 (o / organization\n             :name (n3 / name\n                       :op1 \"ICC\")))", "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Bangladesh\"))\n   :ARG2 (p2 / president))", "(u / use-01\n   :ARG1 (ii / influence-01\n             :ARG0 (c2 / country :name (n2 / name :op1 \"India\"))\n             :ARG1 (o / organization\n                      :name (n3 / name\n                                :op1 \"ICC\"))))", "(u / use-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"India\"))\n   :ARG1 (ii / influence-01\n             :ARG0 c2\n             :ARG1 (o / organization\n                      :name (n3 / name\n                                :op1 \"ICC\"))))", "(u / use-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"India\"))\n   :ARG1 (ii / influence-01\n             :ARG0 c2\n             :ARG1 (o / organization\n                      :name (n3 / name\n                                :op1 \"ICC\"))))", "(a / allege-01\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                      :ARG0 c2\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))", "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))\n                     :ARG2 (p2 / president)))\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                      :ARG0 c2\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))", "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Bangladesh\"))\n   :ARG2 (p2 / president))", "(w / withdraw-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))\n                     :ARG2 (p2 / president))))", "(w / withdraw-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))\n                     :ARG2 (p2 / president)))\n   :ARG1 p)", "(w / withdraw-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))\n                     :ARG2 (p2 / president)))\n   :ARG1 p\n   :ARG2 (c2 / criticize-01\n             :ARG1 p))", "(w / withdraw-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))\n                     :ARG2 (p2 / president)))\n   :ARG1 p\n   :ARG2 (c2 / criticize-01\n             :ARG1 p))", "(a / ask-02\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (p / person\n                             :ARG0 (h / have-org-role-91\n                                      :ARG1 (c / country\n                                               :name (n / name\n                                                        :op1 \"Bangladesh\"))\n                                      :ARG2 (p2 / president)))\n                    :ARG1 p\n                    :ARG2 (c2 / criticize-01\n                              :ARG1 p))\n            :op2 (a2 / apologize-01\n                     :ARG0 p))\n   :ARG2 p)", "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (p / person\n                             :ARG0 (h / have-org-role-91\n                                      :ARG1 (c / country\n                                               :name (n / name\n                                                        :op1 \"Bangladesh\"))\n                                      :ARG2 (p2 / president)))\n                    :ARG1 p\n                    :ARG2 (c2 / criticize-01\n                              :ARG1 p))\n            :op2 (a2 / apologize-01\n                     :ARG0 p)))", "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (p / person\n                             :ARG0 (h / have-org-role-91\n                                      :ARG1 (c / country\n                                               :name (n / name\n                                                        :op1 \"Bangladesh\"))\n                                      :ARG2 (p2 / president)))\n                    :ARG1 p\n                    :ARG2 (c2 / criticize-01\n                              :ARG1 p))\n            :op2 (a2 / apologize-01\n                     :ARG0 p))\n   :ARG2 p)", "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (p / person\n                             :ARG0 (h / have-org-role-91\n                                      :ARG1 (c / country\n                                               :name (n / name\n                                                        :op1 \"Bangladesh\"))\n                                      :ARG2 (p2 / president)))\n                    :ARG1 p\n                    :ARG2 (c2 / criticize-01\n                              :ARG1 p))\n            :op2 (a2 / apologize-01\n                     :ARG0 p))\n   :ARG2 p)", "(ii / intend-01\n    :ARG1 (s / step-down-04\n             :ARG0 (p / person :name (n / name :op1 \"Kamal\"))))", "(ii / intend-01\n    :ARG0 (p / person :name (n / name :op1 \"Kamal\"))\n    :ARG1 (s / step-down-04\n             :ARG0 p))", "(ii / intend-01\n    :ARG0 (p / person :name (n / name :op1 \"Kamal\"))\n    :ARG1 (s / step-down-04\n             :ARG0 p))", "(c2 / confirm-01\n    :ARG1 (ii / intend-01\n              :ARG0 (p / person :name (n / name :op1 \"Kamal\"))\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))", "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\"))\n    :ARG1 (ii / intend-01\n              :ARG0 p\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))", "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\"))\n    :ARG1 (ii / intend-01\n              :ARG0 p\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))", "(c / contrast-01\n   :ARG2 (c2 / confirm-01\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Kamal\"))\n             :ARG1 (ii / intend-01\n                       :ARG0 p\n                       :ARG1 (s / step-down-04\n                                :ARG0 p))))"], "smus": ["award the controversial ball", "India is the match.", "Bangladesh in match", "People will award the controversy ball.", "Kamal criticized.", "The match will be in the World Cup.", "Award will be given during the World Cup match.", "Award will be given during the World Cup match.", "India v Bangladesh match", "Award the controversial ball to Rohit Sharma.", "People will award Rohit Sharma the controversial ball.", "India v Bangladesh matchup in World Cup", "The World Cup match between India and Bangladesh will award Rohit Sharma with the controversial ball.", "People will award Rohit Sharma the controversial ball in the World Cup match between India and Bangladesh.", "The decision to award Rohit Sharma the controversial ball in the World Cup match between India and Bangladesh.", "The umpires made the decision to award Rohit Sharma the controversial ball in India - Bangladesh match in the World Cup.", "The umpires made the decision to award Rohit Sharma the controversial ball in India - Bangladesh match in the World Cup.", "Kamal criticized the decision of umpires to award Rohit Sharma the controversial ball in India - Bangladesh match in the World Cup.", "India has used it.", "India has influence over the ICC.", "India has influence over the ICC.", "Bangladesh's president.", "India's influence on the ICC has been used.", "India has used its influence on the ICC.", "India has used its influence on the ICC.", "India allegedly used influence over the ICC.", "Bangladesh's president alleged India had used influence over the ICC.", "Bangladesh's president", "The Bangladeshi president will withdraw.", "The Bangladeshi president will withdraw from the country.", "The Bangladeshi president will withdraw from being criticized.", "The Bangladeshi president will withdraw from being criticized.", "The Bangladeshi president was asked to withdraw from criticism or apologize.", "The government body asked the Bangladeshi president to withdraw from criticism or apologize.", "The government body asked the Bangladeshi president to withdraw from criticism or apologize.", "The government body asked the Bangladeshi president to withdraw from criticism or apologize.", "Kamal's intention was to step down.", "Kamal had the intention to step down.", "Kamal had the intention to step down.", "Kamal confirmed his intention to step down.", "Kamal confirmed his intention to step down.", "Kamal confirmed his intention to step down.", "But Kamal confirmed his intention to step down."]}, {"instance_id": "realsumm-54", "summary": "Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 . Joe Calzaghe believes Floyd Mayweather unbeaten record is a burden . Despite believes , Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao . READ : Ricky Hatton gives Ricky Hatton prediction to Jeff Powell ahead of the fight . READ : Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale .", "summary_trees": ["# ::snt Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 .\n(f / face-off-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Floyd\"\n                  :op2 \"Mayweather\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Manny\"\n                  :op2 \"Pacquiao\"))\n      :location (c / city\n            :name (n3 / name\n                  :op1 \"Las\"\n                  :op2 \"Vegas\"))\n      :time (d / date-entity\n            :day 2\n            :month 5))", "# ::snt Joe Calzaghe believes Floyd Mayweather unbeaten record is a burden .\n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Joe\"\n                  :op2 \"Calzaghe\"))\n      :ARG1 (b2 / burden-01\n            :ARG1 (r / record\n                  :poss (p2 / person\n                        :name (n2 / name\n                              :op1 \"Floyd\"\n                              :op2 \"Mayweather\"))\n                  :ARG1-of (b3 / beat-03\n                        :polarity -))))", "# ::snt Despite believes , Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao .\n(h / have-concession-91\n      :ARG1 (t / think-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Joe\"\n                        :op2 \"Calzaghe\"))\n            :ARG1 (b / beat-03\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Floyd\"\n                              :op2 \"Mayweather\"))\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Manny\"\n                              :op2 \"Pacquiao\"))))\n      :ARG2 (b2 / believe-01))", "# ::snt READ :\n(r / read-01\n      :ARG1 (ii / it))", "# ::snt Ricky Hatton gives Ricky Hatton prediction to Jeff Powell ahead of the fight .\n(p / predict-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Ricky\"\n                  :op2 \"Hatton\"))\n      :ARG2 (p3 / person\n            :name (n2 / name\n                  :op1 \"Jeff\"\n                  :op2 \"Powell\"))\n      :time (a / ahead\n            :op1 (f / fight-01)))", "# ::snt READ :\n(r / read-01\n      :ARG1 (ii / it))", "# ::snt Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale .\n(s / sell-01\n      :ARG1 (t / ticket\n            :mod (o / oppose-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Floyd\"\n                              :op2 \"Mayweather\"))\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Manny\"\n                              :op2 \"Pacquiao\"))))\n      :time (f / final))"], "tree": ["(f / face-off-02\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\"))\n   :time (d / date-entity\n            :day 2\n            :month 5))", "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\"))\n   :time (d / date-entity\n            :day 2\n            :month 5))", "(b2 / burden-01\n    :ARG1 (r / record\n             :poss (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Floyd\"\n                                 :op2 \"Mayweather\"))\n             :ARG1 (b3 / beat-03\n                       :polarity -)))", "(b / believe-01\n   :ARG1 (b2 / burden-01\n             :ARG1 (r / record\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Floyd\"\n                                          :op2 \"Mayweather\"))\n                      :ARG1 (b3 / beat-03\n                                :polarity -))))", "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b2 / burden-01\n             :ARG1 (r / record\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Floyd\"\n                                          :op2 \"Mayweather\"))\n                      :ARG1 (b3 / beat-03\n                                :polarity -))))", "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b2 / burden-01\n             :ARG1 (r / record\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Floyd\"\n                                          :op2 \"Mayweather\"))\n                      :ARG1 (b3 / beat-03\n                                :polarity -))))", "(b / beat-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Floyd\"\n                       :op2 \"Mayweather\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))", "(b / beat-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Floyd\"\n                       :op2 \"Mayweather\"))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Floyd\"\n                                :op2 \"Mayweather\"))\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Manny\"\n                                :op2 \"Pacquiao\"))))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Floyd\"\n                                :op2 \"Mayweather\"))\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Manny\"\n                                :op2 \"Pacquiao\"))))", "(h / have-concession-91\n   :ARG1 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Joe\"\n                              :op2 \"Calzaghe\"))\n            :ARG1 (b / beat-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Floyd\"\n                                         :op2 \"Mayweather\"))\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Manny\"\n                                         :op2 \"Pacquiao\")))))", "(h / have-concession-91\n   :ARG1 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Joe\"\n                              :op2 \"Calzaghe\"))\n            :ARG1 (b / beat-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Floyd\"\n                                         :op2 \"Mayweather\"))\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Manny\"\n                                         :op2 \"Pacquiao\"))))\n   :ARG2 (b2 / believe-01))", "(h / have-concession-91\n   :ARG1 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Joe\"\n                              :op2 \"Calzaghe\"))\n            :ARG1 (b / beat-03\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Floyd\"\n                                         :op2 \"Mayweather\"))\n                     :ARG1 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Manny\"\n                                         :op2 \"Pacquiao\"))))\n   :ARG2 (b2 / believe-01))", "(r / read-01\n   :ARG1 (ii / it))", "(p / predict-01\n   :time (a / ahead\n            :op1 (f / fight-01)))", "(p / predict-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Ricky\"\n                      :op2 \"Hatton\"))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jeff\"\n                       :op2 \"Powell\"))\n   :time (a / ahead\n            :op1 (f / fight-01)))", "(r / read-01\n   :ARG1 (ii / it))", "(o / oppose-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\")))", "(o / oppose-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))", "(o / oppose-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))", "(s / sell-01\n   :ARG1 (t / ticket\n            :mod (o / oppose-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Floyd\"\n                                      :op2 \"Mayweather\"))\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Manny\"\n                                        :op2 \"Pacquiao\")))))", "(s / sell-01\n   :ARG1 (t / ticket\n            :mod (o / oppose-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Floyd\"\n                                      :op2 \"Mayweather\"))\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Manny\"\n                                        :op2 \"Pacquiao\"))))\n   :time (f / final))"], "smus": ["On May 2, face off in Las Vegas.", "Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2.", "The burden of unbeaten record for Floyd Mayweather is on.", "Floyd Mayweather's unbeaten record is believed to be the burden.", "Joe Calzaghe believes Floyd Mayweather's unbeaten record is a burden.", "Joe Calzaghe believes Floyd Mayweather's unbeaten record is a burden.", "Floyd Mayweather will beat Manny Pacquiao.", "Floyd Mayweather will beat Manny Pacquiao.", "Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao.", "Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao.", "But Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao.", "Despite the beliefs, Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao.", "Despite the beliefs, Joe Calzaghe thinks Floyd Mayweather will beat Manny Pacquiao.", "It was read.", "The prediction ahead of the fight.", "Ricky Hatton predicts Jeff Powell ahead of the fight.", "It was read.", "Floyd Mayweather is against.", "Floyd Mayweather is against Manny Pacquiao.", "Floyd Mayweather is against Manny Pacquiao.", "Tickets to Floyd Mayweather v. Manny Pacquiao were sold.", "The Floyd Mayweather v. Manny Pacquiao tickets were finally sold."]}, {"instance_id": "realsumm-55", "summary": "Winchester Council in Hampshire claimed annual clean - up hit by new rules . But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation . Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish .", "summary_trees": ["# ::snt Winchester Council in Hampshire claimed annual clean - up hit by new rules .\n(c / claim-01\n      :ARG0 (c2 / council\n            :mod (c3 / city\n                  :name (n / name\n                        :op1 \"Winchester\")\n                  :location (c4 / county\n                        :name (n2 / name\n                              :op1 \"Hampshire\"))))\n      :ARG1 (h / hit-01\n            :ARG0 (r / rule\n                  :ARG1-of (n3 / new-01))\n            :ARG1 c2\n            :ARG2 (c5 / clean-up-02\n                  :frequency (r2 / rate-entity-91\n                        :ARG3 (t / temporal-quantity\n                              :quant 1\n                              :unit (y / year))))))", "# ::snt But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation .\n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (d / deny-01\n                  :ARG0 (g / government-organization\n                        :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))\n                  :ARG1 (t / tighten-01\n                        :ARG0 g\n                        :ARG1 (r / rule)))\n            :op2 (a2 / add-01\n                  :ARG0 g\n                  :ARG1 (ii / interpret-01\n                        :ARG0 (c2 / council)\n                        :ARG1 (l / legislate-01)\n                        :ARG1-of (o / over-03)))))", "# ::snt Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish .\n(a / accuse-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Andrew\"\n                  :op3 \"Motion\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (l / laureate\n                        :mod (p2 / poet))))\n      :ARG1 (a2 / and\n            :op1 (p3 / person\n                  :ARG0-of h\n                  :ARG1 (h2 / hall\n                        :mod (t / town))\n                  :ARG2 (b / boss)))\n      :op2 (g / government-organization\n            :name (n2 / name\n                  :op1 \"Highways\"\n                  :op2 \"Agency\"))\n      :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                  :ARG0 a2\n                  :ARG1 (r2 / remove-01\n                        :ARG0 a2\n                        :ARG1 (r3 / rubbish)))))"], "tree": ["(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))", "(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))", "(h / hit-01\n   :ARG0 (r / rule\n            :ARG1 (n3 / new-01))\n   :ARG1 (c2 / council))", "(c5 / clean-up-02\n    :frequency (r2 / rate-entity-91\n                   :ARG3 (t / temporal-quantity\n                            :quant 1\n                            :unit (y / year))))", "(h / hit-01\n   :ARG0 (r / rule\n            :ARG1 (n3 / new-01))\n   :ARG1 (c2 / council)\n   :ARG2 (c5 / clean-up-02\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1\n                                     :unit (y / year)))))", "(c / claim-01\n   :ARG1 (h / hit-01\n            :ARG0 (r / rule\n                     :ARG1 (n3 / new-01))\n            :ARG1 (c2 / council)\n            :ARG2 (c5 / clean-up-02\n                      :frequency (r2 / rate-entity-91\n                                     :ARG3 (t / temporal-quantity\n                                              :quant 1\n                                              :unit (y / year))))))", "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\")\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (h / hit-01\n            :ARG0 (r / rule\n                     :ARG1 (n3 / new-01))\n            :ARG1 c2\n            :ARG2 (c5 / clean-up-02\n                      :frequency (r2 / rate-entity-91\n                                     :ARG3 (t / temporal-quantity\n                                              :quant 1\n                                              :unit (y / year))))))", "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\")\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (h / hit-01\n            :ARG0 (r / rule\n                     :ARG1 (n3 / new-01))\n            :ARG1 c2\n            :ARG2 (c5 / clean-up-02\n                      :frequency (r2 / rate-entity-91\n                                     :ARG3 (t / temporal-quantity\n                                              :quant 1\n                                              :unit (y / year))))))", "(t / tighten-01\n   :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n   :ARG1 (r / rule))", "(ii / interpret-01\n    :ARG0 (c2 / council)\n    :ARG1 (l / legislate-01))", "(ii / interpret-01\n    :ARG0 (c2 / council)\n    :ARG1 (l / legislate-01)\n    :ARG1 (o / over-03))", "(a2 / add-01\n    :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n    :ARG1 (ii / interpret-01\n              :ARG0 (c2 / council)\n              :ARG1 (l / legislate-01)\n              :ARG1 (o / over-03)))", "(a2 / add-01\n    :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n    :ARG1 (ii / interpret-01\n              :ARG0 (c2 / council)\n              :ARG1 (l / legislate-01)\n              :ARG1 (o / over-03)))", "(c / contrast-01\n   :ARG2 (a2 / add-01\n             :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n             :ARG1 (ii / interpret-01\n                       :ARG0 (c2 / council)\n                       :ARG1 (l / legislate-01)\n                       :ARG1 (o / over-03))))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Health\"\n                     :op2 \"and\"\n                     :op3 \"Safety\"\n                     :op4 \"Executive\"))\n   :ARG1 (t / tighten-01\n            :ARG0 g\n            :ARG1 (r / rule)))", "(c / contrast-01\n   :ARG2 (d / deny-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))\n            :ARG1 (t / tighten-01\n                     :ARG0 g\n                     :ARG1 (r / rule))))", "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (d / deny-01\n                    :ARG0 (g / government-organization\n                             :name (n / name\n                                      :op1 \"Health\"\n                                      :op2 \"and\"\n                                      :op3 \"Safety\"\n                                      :op4 \"Executive\"))\n                    :ARG1 (t / tighten-01\n                             :ARG0 g\n                             :ARG1 (r / rule)))\n            :op2 (a2 / add-01\n                     :ARG0 g\n                     :ARG1 (ii / interpret-01\n                               :ARG0 (c2 / council)\n                               :ARG1 (l / legislate-01)\n                               :ARG1 (o / over-03)))))", "(r2 / remove-01\n    :ARG0 (a2 / and)\n    :ARG1 (r3 / rubbish))", "(r2 / remove-01\n    :ARG0 (a2 / and)\n    :ARG1 (r3 / rubbish))", "(r / ruin-01\n   :ARG0 (a2 / and)\n   :ARG1 (c / countryside))", "(h / have-org-role-91\n   :ARG2 (l / laureate\n            :mod (p2 / poet)))", "(f / fail-01\n   :ARG1 (r2 / remove-01\n             :ARG0 (a2 / and)\n             :ARG1 (r3 / rubbish)))", "(f / fail-01\n   :ARG0 (a2 / and)\n   :ARG1 (r2 / remove-01\n             :ARG0 a2\n             :ARG1 (r3 / rubbish)))", "(a / accuse-01\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\")))", "(r / ruin-01\n   :ARG0 (a2 / and)\n   :ARG1 (c / countryside)\n   :ARG3 (f / fail-01\n            :ARG0 a2\n            :ARG1 (r2 / remove-01\n                      :ARG0 a2\n                      :ARG1 (r3 / rubbish))))", "(a / accuse-01\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0 (h / have-org-role-91)\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish)))))", "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (l / laureate\n                              :mod (p2 / poet))))\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0-of h\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish)))))", "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (l / laureate\n                              :mod (p2 / poet))))\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0-of h\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\"))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish)))))"], "smus": ["Every year.", "Every year.", "The new rules have hit the Council.", "The clean up takes place every year.", "The new rules have hit the Council with annual clean ups.", "The new rules claimed the Council had been hit with a annual clean-up.", "The Winchester, Hampshire, Council claimed it was hit by new rules for a annual clean-up.", "The Winchester, Hampshire, Council claimed it was hit by new rules for a annual clean-up.", "The Health and Safety Executive is tightening the rules.", "Councils are interpreting legislation.", "Councils are interpreting legislation as over.", "The Health and Safety Executive added that the councils were interpreting the legislation as over.", "The Health and Safety Executive added that the councils were interpreting the legislation as over.", "But the Health and Safety Executive added that the councils were interpreting the legislation as over.", "The Health and Safety Executive denied tightening the rules.", "But the Health and Safety Executive denied tightening the rules.", "But the Health and Safety Executive denied tightening the rules and added that the councils were interpreting the legislation over.", "and remove the rubbish.", "and remove the rubbish.", "The countryside is being ruined by the 'people' and 'people' of the countryside.", "Poetry laureate", "failing to remove the rubbish.", "and failing to remove rubbish.", "accused the Highway Agency of...", "The countryside is ruined by the countryside failing to remove rubbish.", "The bosses of the town hall were accused of ruining the countryside by failing to remove rubbish.", "Poetry laureate Sir Andrew Motion accused the bosses of the town hall of ruining the countryside by failing to remove rubbish.", "Poetry laureate Sir Andrew Motion accused town hall bosses and the Highways Agency of ruining the countryside by failing to remove rubbish."]}, {"instance_id": "realsumm-56", "summary": "Simon Wood , 38 , from Oldham won Masterchef last Friday . Simon Wood , 38 , from Oldham got cooking skills by feeding culinary creations to Simon Wood , 38 , from Oldham kids . Simon Wood , 38 , from Oldham says one of Simon Wood , 38 , from Oldham favourite meals is a plain omelette .", "summary_trees": ["# ::snt Simon Wood , 38 , from Oldham won Masterchef last Friday .\n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Simon\"\n                  :op2 \"Wood\")\n            :age (t / temporal-quantity\n                  :quant 38\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Oldham\")))\n      :ARG1 (a / award\n            :name (n3 / name\n                  :op1 \"Masterchef\"))\n      :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "# ::snt Simon Wood , 38 , from Oldham got cooking skills by feeding culinary creations to Simon Wood , 38 , from Oldham kids .\n(g / get-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Simon\"\n                  :op2 \"Wood\")\n            :age (t / temporal-quantity\n                  :quant 38\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Oldham\")))\n      :ARG1 (s / skill\n            :topic (c2 / cook-01))\n      :manner (f / feed-01\n            :ARG0 p\n            :ARG1 (t2 / thing\n                  :ARG1-of (c3 / create-01\n                        :ARG0 (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Simon\"\n                                    :op2 \"Wood\")\n                              :age (t3 / temporal-quantity\n                                    :quant 38\n                                    :unit (y2 / year))\n                              :source (k / kid\n                                    :mod c)))\n                  :mod (c4 / culinary))\n            :ARG2 p2))", "# ::snt Simon Wood , 38 , from Oldham says one of Simon Wood , 38 , from Oldham favourite meals is a plain omelette .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Simon\"\n                  :op2 \"Wood\")\n            :age (t / temporal-quantity\n                  :quant 38\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Oldham\")))\n      :ARG1 (m / meal\n            :quant 1\n            :ARG1-of (ii / include-91\n                  :ARG2 (m2 / meal\n                        :ARG1-of (f / favor-01\n                              :ARG0 (p2 / person\n                                    :name (n3 / name\n                                          :op1 \"Simon\"\n                                          :op2 \"Wood\")\n                                    :age (t2 / temporal-quantity\n                                          :quant 38\n                                          :unit (y2 / year))\n                                    :source c))))\n            :domain (o / omelette\n                  :mod (p3 / plain))))"], "tree": ["(w / win-01\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "(w / win-01\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\"))))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\")))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\"))\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\"))\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "(c3 / create-01\n    :ARG0 (p2 / person\n              :name (n3 / name\n                        :op1 \"Simon\"\n                        :op2 \"Wood\")\n              :age (t3 / temporal-quantity\n                       :quant 38\n                       :unit (y2 / year))\n              :source (k / kid\n                         :mod (c / city :name (n2 / name :op1 \"Oldham\")))))", "(g / get-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (s / skill\n            :topic (c2 / cook-01)))", "(f / feed-01\n   :ARG0 (p / person :name (n / name :op1 \"Simon\" :op2 \"Wood\")))\n   :ARG1 (t2 / thing\n             :ARG1 (c3 / create-01\n                       :ARG0 (p2 / person\n                                 :name (n3 / name\n                                           :op1 \"Simon\"\n                                           :op2 \"Wood\")\n                                 :age (t3 / temporal-quantity\n                                          :quant 38\n                                          :unit (y2 / year))\n                                 :source (k / kid\n                                            :mod (c / city :name (n2 / name :op1 \"Oldham\")))))\n             :mod (c4 / culinary)))", "(f / feed-01\n   :ARG0 (p / person :name (n / name :op1 \"Simon\" :op2 \"Wood\")))\n   :ARG1 (t2 / thing\n             :ARG1 (c3 / create-01\n                       :ARG0 (p2 / person\n                                 :name (n3 / name\n                                           :op1 \"Simon\"\n                                           :op2 \"Wood\")\n                                 :age (t3 / temporal-quantity\n                                          :quant 38\n                                          :unit (y2 / year))\n                                 :source (k / kid\n                                            :mod (c / city :name (n2 / name :op1 \"Oldham\")))))\n             :mod (c4 / culinary))\n   :ARG2 p2)", "(f / feed-01\n   :ARG0 (p / person :name (n / name :op1 \"Simon\" :op2 \"Wood\")))\n   :ARG1 (t2 / thing\n             :ARG1 (c3 / create-01\n                       :ARG0 (p2 / person\n                                 :name (n3 / name\n                                           :op1 \"Simon\"\n                                           :op2 \"Wood\")\n                                 :age (t3 / temporal-quantity\n                                          :quant 38\n                                          :unit (y2 / year))\n                                 :source (k / kid\n                                            :mod (c / city :name (n2 / name :op1 \"Oldham\")))))\n             :mod (c4 / culinary))\n   :ARG2 p2)", "(g / get-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (s / skill\n            :topic (c2 / cook-01))\n   :manner (f / feed-01\n              :ARG0 p\n              :ARG1 (t2 / thing\n                        :ARG1 (c3 / create-01\n                                  :ARG0 (p2 / person\n                                            :name (n3 / name\n                                                      :op1 \"Simon\"\n                                                      :op2 \"Wood\")\n                                            :age (t3 / temporal-quantity\n                                                     :quant 38\n                                                     :unit (y2 / year))\n                                            :source (k / kid\n                                                       :mod c)))\n                        :mod (c4 / culinary))\n              :ARG2 p2))", "(f / favor-01\n   :ARG0 (p2 / person\n             :name (n3 / name\n                       :op1 \"Simon\"\n                       :op2 \"Wood\")\n             :age (t2 / temporal-quantity\n                      :quant 38\n                      :unit (y2 / year))\n             :source (c / city :name (n2 / name :op1 \"Oldham\"))))", "(ii / include-91\n    :ARG2 (m2 / meal\n              :ARG1 (f / favor-01\n                       :ARG0 (p2 / person\n                                 :name (n3 / name\n                                           :op1 \"Simon\"\n                                           :op2 \"Wood\")\n                                 :age (t2 / temporal-quantity\n                                          :quant 38\n                                          :unit (y2 / year))\n                                 :source (c / city :name (n2 / name :op1 \"Oldham\"))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (m / meal\n            :quant 1\n            :ARG1 (ii / include-91\n                      :ARG2 (m2 / meal\n                                :ARG1 (f / favor-01\n                                         :ARG0 (p2 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Simon\"\n                                                             :op2 \"Wood\")\n                                                   :age (t2 / temporal-quantity\n                                                            :quant 38\n                                                            :unit (y2 / year))\n                                                   :source c))))\n            :domain (o / omelette\n                       :mod (p3 / plain))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (m / meal\n            :quant 1\n            :ARG1 (ii / include-91\n                      :ARG2 (m2 / meal\n                                :ARG1 (f / favor-01\n                                         :ARG0 (p2 / person\n                                                   :name (n3 / name\n                                                             :op1 \"Simon\"\n                                                             :op2 \"Wood\")\n                                                   :age (t2 / temporal-quantity\n                                                            :quant 38\n                                                            :unit (y2 / year))\n                                                   :source c))))\n            :domain (o / omelette\n                       :mod (p3 / plain))))"], "smus": ["The last Friday, the winner was", "The last Friday, the winner was", "Simon Wood, 38, of Oldham won.", "Simon Wood, 38, of Oldham won the Masterchef.", "Simon Wood, 38, of Oldham, won the Masterchef last Friday.", "Simon Wood, 38, of Oldham, won the Masterchef last Friday.", "Simon Wood, 38, was created from Oldham kids.", "Simon Wood, 38, of Oldham, got his cooking skills.", "Simon Wood is feeding the culinary creations of Simon Wood, 38, from Oldham kids.", "Simon Wood is feeding himself with the culinary creations of Simon Wood, 38, from Oldham kids.", "Simon Wood is feeding himself with the culinary creations of Simon Wood, 38, from Oldham kids.", "Simon Wood, 38, of Oldham got his cooking skills by feeding himself with his 38 year old culinary creations from Oldham kids.", "Simon Wood, 38, of Oldham, is a favorite.", "One of Simon Wood's favorite meals was a 38-year-old from Oldham.", "\"One of Simon Wood's favorite meals from Oldham is a plain omelette,\" says the 38-year-old from Oldham.", "\"One of Simon Wood's favorite meals from Oldham is a plain omelette,\" says the 38-year-old from Oldham."]}, {"instance_id": "realsumm-57", "summary": "Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 . Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back . James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield . Burnley 's Danny Ings and Manchester United 's James Wilson up front .", "summary_trees": ["# ::snt Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 .\n(b / be-located-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Gerhard\"\n                  :op2 \"Tremmel\")\n            :poss (t / team\n                  :name (n2 / name\n                        :op1 \"Swansea\")))\n      :ARG2 (g / goal)\n      :location (b2 / behind\n            :op1 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Free\"\n                        :op2 \"Agent\")\n                  :subevent (s / score-entity\n                        :op1 4\n                        :op2 4\n                        :op3 2))))", "# ::snt Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back .\n(b / be-located-at-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Glen\"\n                        :op2 \"Johnson\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Kolo\"\n                        :op2 \"Toure\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Ron\"\n                        :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                  :name (n4 / name\n                        :op1 \"Luke\"\n                        :op2 \"Garbutt\")))\n      :ARG2 (b2 / back))", "# ::snt James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield .\n(a / and\n      :op1 (p / person\n            :name (n / name\n                  :op1 \"James\"\n                  :op2 \"Milner\"))\n      :op2 (p2 / person\n            :name (n2 / name\n                  :op1 \"Mikel\"\n                  :op2 \"Arteta\"))\n      :op3 (p3 / person\n            :name (n3 / name\n                  :op1 \"Tom\"\n                  :op2 \"Cleverley\"))\n      :op4 (p4 / person\n            :name (n4 / name\n                  :op1 \"Jonas\"\n                  :op2 \"Gutierrez\"))\n      :location (m / midfield))", "# ::snt Burnley 's Danny Ings and Manchester United 's James Wilson up front .\n(a / and\n      :op1 (p / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Ingers\")\n            :poss (t / team\n                  :name (n2 / name\n                        :op1 \"Burnley\")))\n      :op2 (p2 / person\n            :name (n3 / name\n                  :op1 \"James\"\n                  :op2 \"Wilson\")\n            :poss (t2 / team\n                  :name (n4 / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\")))\n      :location (u / up-front))"], "tree": ["(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Gerhard\"\n                     :op2 \"Tremmel\")\n            :poss (t / team\n                     :name (n2 / name\n                               :op1 \"Swansea\")))\n   :ARG2 (g / goal))", "(b / be-located-at-91\n   :location (b2 / behind\n                 :op1 (t2 / team\n                          :name (n3 / name\n                                    :op1 \"Free\"\n                                    :op2 \"Agent\")\n                          :subevent (s / score-entity\n                                       :op1 4\n                                       :op2 4\n                                       :op3 2))))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Gerhard\"\n                     :op2 \"Tremmel\")\n            :poss (t / team\n                     :name (n2 / name\n                               :op1 \"Swansea\")))\n   :ARG2 (g / goal)\n   :location (b2 / behind\n                 :op1 (t2 / team\n                          :name (n3 / name\n                                    :op1 \"Free\"\n                                    :op2 \"Agent\")\n                          :subevent (s / score-entity\n                                       :op1 4\n                                       :op2 4\n                                       :op3 2))))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Glen\"\n                     :op2 \"Johnson\"))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kolo\"\n                       :op2 \"Toure\"))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Ron\"\n                       :op2 \"Vlaar\"))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Glen\"\n                     :op2 \"Johnson\"))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kolo\"\n                       :op2 \"Toure\"))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Ron\"\n                       :op2 \"Vlaar\"))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p4 / person\n             :name (n4 / name\n                       :op1 \"Luke\"\n                       :op2 \"Garbutt\"))\n   :ARG2 (b2 / back)\n   :ARG2 b2)", "(b / be-located-at-91\n   :ARG1 (p4 / person\n             :name (n4 / name\n                       :op1 \"Luke\"\n                       :op2 \"Garbutt\"))\n   :ARG2 (b2 / back)\n   :ARG2 b2)", "(b / be-located-at-91\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Glen\"\n                             :op2 \"Johnson\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Kolo\"\n                               :op2 \"Toure\"))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Ron\"\n                               :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Luke\"\n                               :op2 \"Garbutt\")))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Glen\"\n                             :op2 \"Johnson\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Kolo\"\n                               :op2 \"Toure\"))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Ron\"\n                               :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Luke\"\n                               :op2 \"Garbutt\")))\n   :ARG2 (b2 / back))", "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"James\"\n                    :op2 \"Milner\"))\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Mikel\"\n                      :op2 \"Arteta\"))\n   :op3 (p3 / person\n            :name (n3 / name\n                      :op1 \"Tom\"\n                      :op2 \"Cleverley\"))\n   :op4 (p4 / person\n            :name (n4 / name\n                      :op1 \"Jonas\"\n                      :op2 \"Gutierrez\"))\n   :location (m / midfield))", "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Danny\"\n                    :op2 \"Ingers\")\n           :poss (t / team\n                    :name (n2 / name\n                              :op1 \"Burnley\")))\n   :op2 (p2 / person\n            :name (n3 / name\n                      :op1 \"James\"\n                      :op2 \"Wilson\")\n            :poss (t2 / team\n                      :name (n4 / name\n                                :op1 \"Manchester\"\n                                :op2 \"United\")))\n   :location (u / up-front))"], "smus": ["Swansea's Gerhard Tremmel is in goal.", "Behind the Free Agents 4-4 2", "Swansea's Gerhard Tr\u00fcmmel is in goal behind the Free Agents in 4-4-2.", "Glen Johnson is back.", "Kolo Toure is back.", "Ron Vaar is back.", "Glen Johnson is back.", "Kolo Toure is back.", "Ron Vaar is back.", "Luke Garbutt is back at the back.", "Luke Garbutt is back at the back.", "Glen Johnson, Kolo Toure, Ron Vaar and Luke Garbutt are back.", "Glen Johnson, Kolo Toure, Ron Vaar and Luke Garbutt are back.", "James Milner, Micel Arteta, Tom Cleverley and Jonathan Gutierrez in midfield.", "Burton's Danny Ingers and Manchester United's James Wilson were up front."]}, {"instance_id": "realsumm-58", "summary": "Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome junior prom together last year . For Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome prom picture , Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome held up a sign which read : ' Real friends do n't count chromosomes ' . a sign which read : ' Real friends do n't count chromosomes ' references the fact that people with Down syndrome have an extra copy of chromosome 21 .", "summary_trees": ["# ::snt Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome junior prom together last year .\n(p / plan-01\n      :ARG0 (a / and\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 \"Mikenzy\"\n                        :op2 \"Sell\")\n                  :ARG0-of (s / study-01\n                        :location (h / high-school\n                              :location (s2 / state\n                                    :name (n2 / name\n                                          :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Matt\"\n                        :op2 \"Pliska\")\n                  :ARG0-of (s3 / study-01\n                        :location h)\n                  :ARG0-of (h2 / have-03\n                        :ARG1 (m / medical-condition\n                              :name (n4 / name\n                                    :op1 \"Down\"\n                                    :op2 \"Syndrome\")))))\n      :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                  :mod (j / junior)\n                  :mod (p5 / person\n                        :ARG0-of (s4 / study-01\n                              :location h)))\n            :time (y / year\n                  :mod (l / last))\n            :manner (t / together)))", "# ::snt For Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome prom picture , Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome held up a sign which read : ' Real friends do n't count chromosomes ' .\n(h / hold-up-10\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Mikenzy\"\n                        :op2 \"Sell\")\n                  :ARG0-of (s / study-01\n                        :location (h2 / high-school\n                              :location (s2 / state\n                                    :name (n2 / name\n                                          :op1 \"Michigan\")))))\n            :op2 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Matt\"\n                        :op2 \"Pliska\")\n                  :ARG0-of (s3 / study-01\n                        :location (h3 / high-school\n                              :location s2))\n                  :ARG0-of (h4 / have-03\n                        :ARG1 (p3 / picture\n                              :mod (p4 / prom)\n                              :mod (m / medical-condition\n                                    :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))))\n      :ARG1 (s4 / sign\n            :ARG0-of (r / read-01\n                  :ARG1 (c / count-01\n                        :polarity -\n                        :ARG0 (f / friend\n                              :ARG1-of (r2 / real-04))\n                        :ARG1 (c2 / chromosome)))))", "# ::snt a sign which read : ' Real friends do n't count chromosomes ' references the fact that people with Down syndrome have an extra copy of chromosome 21 .\n(r / reference-04\n      :ARG0 (s / sign\n            :ARG1-of (r2 / read-01\n                  :ARG3 (c / count-01\n                        :polarity -\n                        :ARG0 (f / friend\n                              :ARG1-of (r3 / real-04))\n                        :ARG1 (c2 / chromosome))))\n      :ARG1 (h / have-03\n            :ARG0 (p / person\n                  :ARG1 (m / medical-condition\n                        :name (n / name\n                              :op1 \"Down\"\n                              :op2 \"Syndrome\")))\n            :ARG0 p)\n      :ARG1 (c3 / copy-01\n            :ARG1 (c4 / chromosome\n                  :mod 21)\n            :mod (e / extra)))"], "tree": ["(g / go-02\n   :time (y / year\n            :mod (l / last)))", "(h2 / have-03\n    :ARG1 (m / medical-condition\n             :name (n4 / name\n                       :op1 \"Down\"\n                       :op2 \"Syndrome\")))", "(g / go-02\n   :time (y / year\n            :mod (l / last))\n   :manner (t / together))", "(s / study-01\n   :location (h / high-school\n                :location (s2 / state\n                              :name (n2 / name\n                                        :op1 \"Michigan\"))))", "(s / study-01\n   :location (h / high-school\n                :location (s2 / state\n                              :name (n2 / name\n                                        :op1 \"Michigan\"))))", "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :mod (p5 / person\n                      :ARG0 (s4 / study-01\n                                :location (h / high-school)))))", "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :mod (p5 / person\n                      :ARG0 (s4 / study-01\n                                :location (h / high-school))))\n   :time (y / year\n            :mod (l / last)))", "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :mod (p5 / person\n                      :ARG0 (s4 / study-01\n                                :location (h / high-school))))\n   :time (y / year\n            :mod (l / last))\n   :manner (t / together))", "(p / plan-01\n   :ARG1 (g / go-02\n            :ARG0 (a / and)\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location (h / high-school))))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together)))", "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Sell\")\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :ARG0 p2\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location h)))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together)))", "(p / plan-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mikenzy\"\n                      :op2 \"Sell\")\n             :ARG0 (s / study-01\n                      :location (h / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (g / go-02\n            :ARG0 p2\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location h)))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together)))", "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\")\n             :ARG0 (s3 / study-01\n                       :location (h / high-school))\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :ARG0 p3\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location h)))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together))\n   :ARG1 g)", "(p / plan-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\")\n             :ARG0 (s3 / study-01\n                       :location (h / high-school))\n             :ARG0 (h2 / have-03\n                       :ARG1 (m / medical-condition\n                                :name (n4 / name\n                                          :op1 \"Down\"\n                                          :op2 \"Syndrome\"))))\n   :ARG1 (g / go-02\n            :ARG0 p3\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location h)))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together))\n   :ARG1 g)", "(p / plan-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Mikenzy\"\n                              :op2 \"Sell\")\n                     :ARG0 (s / study-01\n                              :location (h / high-school\n                                           :location (s2 / state\n                                                         :name (n2 / name\n                                                                   :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Matt\"\n                               :op2 \"Pliska\")\n                     :ARG0 (s3 / study-01\n                               :location h)\n                     :ARG0 (h2 / have-03\n                               :ARG1 (m / medical-condition\n                                        :name (n4 / name\n                                                  :op1 \"Down\"\n                                                  :op2 \"Syndrome\")))))\n   :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location h)))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together)))", "(p / plan-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Mikenzy\"\n                              :op2 \"Sell\")\n                     :ARG0 (s / study-01\n                              :location (h / high-school\n                                           :location (s2 / state\n                                                         :name (n2 / name\n                                                                   :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Matt\"\n                               :op2 \"Pliska\")\n                     :ARG0 (s3 / study-01\n                               :location h)\n                     :ARG0 (h2 / have-03\n                               :ARG1 (m / medical-condition\n                                        :name (n4 / name\n                                                  :op1 \"Down\"\n                                                  :op2 \"Syndrome\")))))\n   :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :mod (p5 / person\n                               :ARG0 (s4 / study-01\n                                         :location h)))\n            :time (y / year\n                     :mod (l / last))\n            :manner (t / together)))", "(s3 / study-01\n    :location (h3 / high-school\n                  :location (s2 / state :name (n2 / name :op1 \"Michigan\"))))", "(s3 / study-01\n    :location (h3 / high-school\n                  :location (s2 / state :name (n2 / name :op1 \"Michigan\"))))", "(c / count-01\n   :ARG0 (f / friend\n            :ARG1 (r2 / real-04))\n   :ARG1 (c2 / chromosome))", "(c / count-01\n   :polarity -\n   :ARG0 (f / friend\n            :ARG1 (r2 / real-04))\n   :ARG1 (c2 / chromosome))", "(s / study-01\n   :location (h2 / high-school\n                 :location (s2 / state\n                               :name (n2 / name\n                                         :op1 \"Michigan\"))))", "(c / count-01\n   :polarity -\n   :ARG0 (f / friend\n            :ARG1 (r2 / real-04))\n   :ARG1 (c2 / chromosome))", "(s / study-01\n   :location (h2 / high-school\n                 :location (s2 / state\n                               :name (n2 / name\n                                         :op1 \"Michigan\"))))", "(r / read-01\n   :ARG1 (c / count-01\n            :polarity -\n            :ARG0 (f / friend\n                     :ARG1 (r2 / real-04))\n            :ARG1 (c2 / chromosome)))", "(r / read-01\n   :ARG1 (c / count-01\n            :polarity -\n            :ARG0 (f / friend\n                     :ARG1 (r2 / real-04))\n            :ARG1 (c2 / chromosome)))", "(h4 / have-03\n    :ARG1 (p3 / picture\n              :mod (p4 / prom)\n              :mod (m / medical-condition\n                      :name (n4 / name\n                                :op1 \"Down\"\n                                :op2 \"Syndrome\"))))", "(h / hold-up-10\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mikenzy\"\n                     :op2 \"Sell\")\n            :ARG0 (s / study-01\n                     :location (h2 / high-school\n                                   :location (s2 / state\n                                                 :name (n2 / name\n                                                           :op1 \"Michigan\")))))\n   :ARG1 (s4 / sign\n             :ARG0 (r / read-01\n                      :ARG1 (c / count-01\n                               :polarity -\n                               :ARG0 (f / friend\n                                        :ARG1 (r2 / real-04))\n                               :ARG1 (c2 / chromosome)))))", "(h / hold-up-10\n   :ARG0 (p2 / person\n             :name (n3 / name\n                       :op1 \"Matt\"\n                       :op2 \"Pliska\")\n             :ARG0 (s3 / study-01\n                       :location (h3 / high-school\n                                     :location (s2 / state :name (n2 / name :op1 \"Michigan\"))))\n             :ARG0 (h4 / have-03\n                       :ARG1 (p3 / picture\n                                 :mod (p4 / prom)\n                                 :mod (m / medical-condition\n                                         :name (n4 / name\n                                                   :op1 \"Down\"\n                                                   :op2 \"Syndrome\")))))\n   :ARG1 (s4 / sign\n             :ARG0 (r / read-01\n                      :ARG1 (c / count-01\n                               :polarity -\n                               :ARG0 (f / friend\n                                        :ARG1 (r2 / real-04))\n                               :ARG1 (c2 / chromosome))))\n   :ARG1 s4)", "(h / hold-up-10\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Mikenzy\"\n                             :op2 \"Sell\")\n                    :ARG0 (s / study-01\n                             :location (h2 / high-school\n                                           :location (s2 / state\n                                                         :name (n2 / name\n                                                                   :op1 \"Michigan\")))))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Matt\"\n                               :op2 \"Pliska\")\n                     :ARG0 (s3 / study-01\n                               :location (h3 / high-school\n                                             :location s2))\n                     :ARG0 (h4 / have-03\n                               :ARG1 (p3 / picture\n                                         :mod (p4 / prom)\n                                         :mod (m / medical-condition\n                                                 :name (n4 / name\n                                                           :op1 \"Down\"\n                                                           :op2 \"Syndrome\"))))))\n   :ARG1 (s4 / sign\n             :ARG0 (r / read-01\n                      :ARG1 (c / count-01\n                               :polarity -\n                               :ARG0 (f / friend\n                                        :ARG1 (r2 / real-04))\n                               :ARG1 (c2 / chromosome)))))", "(c3 / copy-01\n    :ARG1 (c4 / chromosome\n              :mod 21))", "(c3 / copy-01\n    :ARG1 (c4 / chromosome\n              :mod 21)\n    :mod (e / extra))", "(c / count-01\n   :ARG0 (f / friend\n            :ARG1 (r3 / real-04))\n   :ARG1 (c2 / chromosome))", "(c / count-01\n   :polarity -\n   :ARG0 (f / friend\n            :ARG1 (r3 / real-04))\n   :ARG1 (c2 / chromosome))", "(c / count-01\n   :polarity -\n   :ARG0 (f / friend\n            :ARG1 (r3 / real-04))\n   :ARG1 (c2 / chromosome))", "(h / have-03\n   :ARG0 (p / person\n            :ARG1 (m / medical-condition\n                     :name (n / name\n                              :op1 \"Down\"\n                              :op2 \"Syndrome\")))\n   :ARG0 p)", "(r2 / read-01\n    :ARG3 (c / count-01\n             :polarity -\n             :ARG0 (f / friend\n                      :ARG1 (r3 / real-04))\n             :ARG1 (c2 / chromosome)))", "(r / reference-04\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p))", "(r / reference-04\n   :ARG0 (s / sign\n            :ARG1 (r2 / read-01\n                      :ARG3 (c / count-01\n                               :polarity -\n                               :ARG0 (f / friend\n                                        :ARG1 (r3 / real-04))\n                               :ARG1 (c2 / chromosome))))\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p))", "(r / reference-04\n   :ARG0 (s / sign\n            :ARG1 (r2 / read-01\n                      :ARG3 (c / count-01\n                               :polarity -\n                               :ARG0 (f / friend\n                                        :ARG1 (r3 / real-04))\n                               :ARG1 (c2 / chromosome))))\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p)\n   :ARG1 (c3 / copy-01\n             :ARG1 (c4 / chromosome\n                       :mod 21)\n             :mod (e / extra)))"], "smus": ["Go last year.", "has Down syndrome.", "Last year, go together.", "Studying in high school in Michigan.", "Studying in high school in Michigan.", "and go to junior prom for high school students.", "Last year, the kids and their high school students went to junior prom.", "Last year, the kids and their high school students went together to junior prom.", "Plans are for the kids to go together to junior prom last year, for high school students.", "Mikenzy Sell, a high school student in Michigan, plans to go together to the junior prom with the students there last year.", "Mikenzy Sell, a high school student in Michigan, plans to go together to the junior prom with the students there last year.", "Matt Pliska, a high school student with Down syndrome, plans to go together to the junior prom last year for his high school students.", "Matt Pliska, a high school student with Down syndrome, plans to go together to the junior prom last year for his high school students.", "Mikenzy Sell and Matt Pliska, both high school students in Michigan, plan to go to their high school seniors' junior prom last year together.", "Mikenzy Sell and Matt Pliska, both high school students in Michigan, plan to go to their high school seniors' junior prom last year together.", "Studying in high school in Michigan.", "Studying in high school in Michigan.", "Real friends will count on chromosomes.", "Real friends don't count on chromosomes.", "Studying in high school in Michigan.", "Real friends don't count on chromosomes.", "Studying in high school in Michigan.", "Read: Real friends don't count chromosomes.", "Read: Real friends don't count chromosomes.", "has a prom picture of Down syndrome.", "Mikenzy Sell, of Michigan, held up a sign that read \"real friends don't count chromosomes.\"", "Matt Pliska, whose high school students have a Down Syndrome prom picture, held up a sign that reads \"real friends don't count chromosomes.\"", "Mikenzy Sell and Matt Pliska of Michigan high school students (they have a Down Syndrome prom picture) held up a sign that real friends don't count chromosomes.", "a copy of chromosome 21", "Extra copy of chromosome 21", "Real friends will count on a chromosome.", "Real friends don't count on chromosomes.", "Real friends don't count on chromosomes.", "People with Down syndrome have it.", "Read: Real friends don't count chromosomes.", "There are references to people with Down Syndrome.", "The sign that reads \"real friends don't count\" on the chromosome references people with Down syndrome.", "The sign that reads \"real friends don't count\" references people with Down syndrome who have an extra copy of chromosome 21."]}, {"instance_id": "realsumm-59", "summary": "Police say Michael Scott Shemansky came to Police attention after Michael Scott Shemansky failed to appear for a supervised visit with Michael Scott Shemansky son Saturday . Saturday was found dead at the home they shared in Winter Garden , Florida . Michael Scott Shemansky was going through a difficult divorce and neighbors believe the stress may have caused Michael Scott Shemansky to snap .", "summary_trees": ["# ::snt Police say Michael Scott Shemansky came to Police attention after Michael Scott Shemansky failed to appear for a supervised visit with Michael Scott Shemansky son Saturday .\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                  :name (n / name\n                        :op1 \"Michael\"\n                        :op2 \"Scott\"\n                        :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                  :ARG0 p\n                  :ARG1 p2)\n            :time (a2 / after\n                  :op1 (f / fail-01\n                        :ARG1 p2\n                        :ARG2 (a3 / appear-01\n                              :ARG1 p2\n                              :purpose (v / visit-01\n                                    :ARG0 p2\n                                    :ARG1 (p3 / person\n                                          :ARG0-of (h / have-rel-role-91\n                                                :ARG1 p2\n                                                :ARG2 (s2 / son)))\n                                    :ARG1-of (s3 / supervise-01\n                                          :ARG0 p))\n                              :time (d / date-entity\n                                    :weekday (s4 / saturday)))))))", "# ::snt Saturday was found dead at the home they shared in Winter Garden , Florida .\n(f / find-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Saturday\")\n            :ARG1-of (d / die-01))\n      :location (h / home\n            :ARG1-of (s / share-01\n                  :ARG0 (t / they))\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Winter\"\n                        :op2 \"Garden\")\n                  :location (s2 / state\n                        :name (n3 / name\n                              :op1 \"Florida\")))))", "# ::snt Michael Scott Shemansky was going through a difficult divorce and neighbors believe the stress may have caused Michael Scott Shemansky to snap .\n(a / and\n      :op1 (g / go-through-20\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Michael\"\n                        :op2 \"Scott\"\n                        :op3 \"Shemansky\"))\n            :ARG1 (d / divorce-01\n                  :ARG1 p\n                  :mod (d2 / difficult)))\n      :op2 (b / believe-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (n2 / neighbor)))\n            :ARG1 (p3 / possible-01\n                  :ARG1 (c / cause-01\n                        :ARG0 (s / stress-02)\n                        :ARG1 (s2 / snap-04\n                              :ARG1 p)))))"], "tree": ["(h / have-rel-role-91\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (s2 / son))", "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01)))", "(a3 / appear-01\n    :time (d / date-entity\n             :weekday (s4 / saturday)))", "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01)))", "(c / come-01\n   :time (a2 / after\n             :op1 (f / fail-01)))", "(a3 / appear-01\n    :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n    :time (d / date-entity\n             :weekday (s4 / saturday)))", "(a3 / appear-01\n    :purpose (v / visit-01)\n    :time (d / date-entity\n             :weekday (s4 / saturday)))", "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\")))", "(v / visit-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p2\n                      :ARG2 (s2 / son))))", "(v / visit-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG1 (p3 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p2\n                      :ARG2 (s2 / son)))\n   :ARG1 (s3 / supervise-01\n             :ARG0 (p / police)))", "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)\n            :ARG1 p2))", "(a3 / appear-01\n    :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n    :purpose (v / visit-01\n                :ARG0 p2\n                :ARG1 (p3 / person\n                          :ARG0 (h / have-rel-role-91\n                                   :ARG1 p2\n                                   :ARG2 (s2 / son)))\n                :ARG1 (s3 / supervise-01\n                          :ARG0 (p / police)))\n    :time (d / date-entity\n             :weekday (s4 / saturday)))", "(f / fail-01\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (a3 / appear-01\n             :ARG1 p2\n             :purpose (v / visit-01\n                         :ARG0 p2\n                         :ARG1 (p3 / person\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 p2\n                                            :ARG2 (s2 / son)))\n                         :ARG1 (s3 / supervise-01\n                                   :ARG0 (p / police)))\n             :time (d / date-entity\n                      :weekday (s4 / saturday))))", "(f / fail-01\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (a3 / appear-01\n             :ARG1 p2\n             :purpose (v / visit-01\n                         :ARG0 p2\n                         :ARG1 (p3 / person\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 p2\n                                            :ARG2 (s2 / son)))\n                         :ARG1 (s3 / supervise-01\n                                   :ARG0 (p / police)))\n             :time (d / date-entity\n                      :weekday (s4 / saturday))))", "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2\n                               :purpose (v / visit-01\n                                           :ARG0 p2\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2\n                                                              :ARG2 (s2 / son)))\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 (p / police)))\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))", "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2\n                               :purpose (v / visit-01\n                                           :ARG0 p2\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2\n                                                              :ARG2 (s2 / son)))\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 p))\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))", "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)\n            :ARG1 p2)\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2\n                               :purpose (v / visit-01\n                                           :ARG0 p2\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2\n                                                              :ARG2 (s2 / son)))\n                                           :ARG1 (s3 / supervise-01\n                                                     :ARG0 p))\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))", "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Michael\"\n                               :op2 \"Scott\"\n                               :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                     :ARG0 p\n                     :ARG1 p2)\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG1 p2\n                              :ARG2 (a3 / appear-01\n                                        :ARG1 p2\n                                        :purpose (v / visit-01\n                                                    :ARG0 p2\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG1 p2\n                                                                       :ARG2 (s2 / son)))\n                                                    :ARG1 (s3 / supervise-01\n                                                              :ARG0 p))\n                                        :time (d / date-entity\n                                                 :weekday (s4 / saturday)))))))", "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Michael\"\n                               :op2 \"Scott\"\n                               :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                     :ARG0 p\n                     :ARG1 p2)\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG1 p2\n                              :ARG2 (a3 / appear-01\n                                        :ARG1 p2\n                                        :purpose (v / visit-01\n                                                    :ARG0 p2\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG1 p2\n                                                                       :ARG2 (s2 / son)))\n                                                    :ARG1 (s3 / supervise-01\n                                                              :ARG0 p))\n                                        :time (d / date-entity\n                                                 :weekday (s4 / saturday)))))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Saturday\")\n            :ARG1 (d / die-01)))", "(f / find-01\n   :location (h / home\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Winter\"\n                                       :op2 \"Garden\")\n                             :location (s2 / state\n                                           :name (n3 / name\n                                                     :op1 \"Florida\")))))", "(f / find-01\n   :location (h / home\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Winter\"\n                                       :op2 \"Garden\")\n                             :location (s2 / state\n                                           :name (n3 / name\n                                                     :op1 \"Florida\")))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Saturday\")\n            :ARG1 (d / die-01))\n   :location (h / home\n                :ARG1 (s / share-01\n                         :ARG0 (t / they))\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Winter\"\n                                       :op2 \"Garden\")\n                             :location (s2 / state\n                                           :name (n3 / name\n                                                     :op1 \"Florida\")))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Saturday\")\n            :ARG1 (d / die-01))\n   :location (h / home\n                :ARG1 (s / share-01\n                         :ARG0 (t / they))\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Winter\"\n                                       :op2 \"Garden\")\n                             :location (s2 / state\n                                           :name (n3 / name\n                                                     :op1 \"Florida\")))))", "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (n2 / neighbor))", "(d / divorce-01\n   :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :mod (d2 / difficult))", "(c / cause-01\n   :ARG0 (s / stress-02)\n   :ARG1 (s2 / snap-04\n             :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))))", "(p3 / possible-01\n    :ARG1 (c / cause-01\n             :ARG0 (s / stress-02)\n             :ARG1 (s2 / snap-04\n                       :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))))", "(g / go-through-20\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Scott\"\n                     :op3 \"Shemansky\"))\n   :ARG1 (d / divorce-01\n            :ARG1 p\n            :mod (d2 / difficult)))", "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n                      :ARG2 (n2 / neighbor)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG0 (s / stress-02)\n                      :ARG1 (s2 / snap-04\n                                :ARG1 p))))"], "smus": ["Michael Scott Shemansky is the son of the late Shemansky.", "came after the failed.", "appear on Saturday.", "came after the failed.", "came after the failed.", "Michael Scott Shemansky will appear Saturday.", "appeared for a visit Saturday.", "Michael Scott Shemansky came.", "Michael Scott Shemansky visited his son.", "Michael Scott Shemansky visited his son for police supervision.", "Michael Scott Shemansky came under police attention.", "Michael Scott Shemansky will appear Saturday to visit his son's supervisory person.", "Michael Scott Shemansky failed to appear Saturday to make a police-supervised visit to his son.", "Michael Scott Shemansky failed to appear Saturday to make a police-supervised visit to his son.", "Michael Scott Shemansky came after he failed to appear on Saturday to make a police-supervised visit to his son.", "Michael Scott Shemansky came under police attention after he failed to appear on Saturday to make a visit to his son's supervisor.", "Michael Scott Shemansky came under police attention after he failed to appear on Saturday to make a visit to his son's supervisor.", "Police say Michael Scott Shemansky came under their attention after he failed to appear on Saturday to make a visit to his son's supervisor.", "Police say Michael Scott Shemansky came under their attention after he failed to appear on Saturday to make a visit to his son's supervisor.", "Saturday was found dead.", "Home found in Florida's Winter Garden", "Home found in Florida's Winter Garden", "Saturday was found dead in their shared home in Winter Garden, Florida.", "Saturday was found dead in their shared home in Winter Garden, Florida.", "Michael Scott Shemansky is one of the neighbors.", "Michael Scott Shemansky's divorce was difficult.", "The stress has caused Michael Scott Shemansky to snap.", "The stress could have caused Michael Scott Shemansky to snap.", "Michael Scott Shemansky went through a difficult divorce.", "Michael Scott Shemansky's neighbors believe stress may have caused him to snap."]}, {"instance_id": "realsumm-60", "summary": "Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday . Bayern Munich progressed 7 - 4 on aggregate to reach semi - finals . Thomas Muller scored 27th the Champions League goal to pass Mario Gomez . Thomas Muller is now the leading German scorer in the Champions League . After game Thomas Muller led the celebrations with supporters using a megaphone .", "summary_trees": ["# ::snt Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday .\n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Bayern\"\n                  :op2 \"Munich\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Porto\"))\n      :ARG2 (g / game\n            :name (n3 / name\n                  :op1 \"Champions\"\n                  :op2 \"League\"))\n      :time (d / date-entity\n            :weekday (t3 / tuesday))\n      :quant (s / score-entity\n            :op1 6\n            :op2 1))", "# ::snt Bayern Munich progressed 7 - 4 on aggregate to reach semi - finals .\n(p / progress-01\n      :ARG1 (t / team\n            :name (n / name\n                  :op1 \"Bayern\"\n                  :op2 \"Munich\"))\n      :ARG4 (r / reach-01\n            :ARG0 t\n            :ARG1 (f / final\n                  :mod (s / semi)))\n      :manner (s2 / score-entity\n            :op1 7\n            :op2 4\n            :ARG4-of (a / aggregate-01)))", "# ::snt Thomas Muller scored 27th the Champions League goal to pass Mario Gomez .\n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Thomas\"\n                  :op2 \"Muller\"))\n      :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                  :value 27)\n            :mod (g2 / game\n                  :name (n2 / name\n                        :op1 \"Champions\"\n                        :op2 \"League\")))\n      :ARG2 (p2 / pass-03\n            :ARG0 p\n            :ARG1 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\"))))", "# ::snt Thomas Muller is now the leading German scorer in the Champions League .\n(h / have-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Thomas\"\n                  :op2 \"Muller\"))\n      :ARG1 (p2 / person\n            :ARG0-of (s / score-01\n                  :ARG3 (g / game\n                        :name (n2 / name\n                              :op1 \"Champions\"\n                              :op2 \"League\")))\n            :mod (c / country\n                  :name (n3 / name\n                        :op1 \"Germany\"))\n            :ARG0-of (l / lead-01\n                  :ARG1 g))\n      :time (n4 / now))", "# ::snt After game Thomas Muller led the celebrations with supporters using a megaphone .\n(l / lead-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Thomas\"\n                  :op2 \"Muller\"))\n      :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                  :ARG0-of (s / support-01)\n                  :ARG0-of (u / use-01\n                        :ARG1 (m / megaphone))))\n      :time (a / after\n            :op1 (g / game)))"], "tree": ["(b / beat-03\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))", "(b / beat-03\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))", "(b / beat-03\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op1 6\n             :op2 1))", "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\")))", "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))", "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\")))", "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))", "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op1 6\n             :op2 1))", "(p / progress-01\n   :manner (s2 / score-entity\n               :op1 7\n               :op2 4))", "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Bayern\" :op2 \"Munich\"))\n   :ARG1 (f / final\n            :mod (s / semi)))", "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Bayern\" :op2 \"Munich\"))\n   :ARG1 (f / final\n            :mod (s / semi)))", "(p / progress-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\")))", "(p / progress-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG4 (r / reach-01\n            :ARG0 t\n            :ARG1 (f / final\n                     :mod (s / semi)))\n   :manner (s2 / score-entity\n               :op1 7\n               :op2 4\n               :ARG4 (a / aggregate-01)))", "(p2 / pass-03\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\")))", "(p2 / pass-03\n    :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\")))", "(p2 / pass-03\n    :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\")))", "(s / score-01\n   :ARG2 (p2 / pass-03\n             :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\"))))", "(s / score-01\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG0 p\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG0 p\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))", "(s / score-01\n   :ARG3 (g / game\n            :name (n2 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\")))", "(h / have-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (p2 / person\n             :ARG0 (s / score-01\n                      :ARG3 (g / game\n                               :name (n2 / name\n                                         :op1 \"Champions\"\n                                         :op2 \"League\")))\n             :mod (c / country\n                     :name (n3 / name\n                               :op1 \"Germany\"))\n             :ARG0 (l / lead-01\n                      :ARG1 g)))", "(h / have-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (p2 / person\n             :ARG0 (s / score-01\n                      :ARG3 (g / game\n                               :name (n2 / name\n                                         :op1 \"Champions\"\n                                         :op2 \"League\")))\n             :mod (c / country\n                     :name (n3 / name\n                               :op1 \"Germany\"))\n             :ARG0 (l / lead-01\n                      :ARG1 g))\n   :time (n4 / now))", "(h / have-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (p2 / person\n             :ARG0 (s / score-01\n                      :ARG3 (g / game\n                               :name (n2 / name\n                                         :op1 \"Champions\"\n                                         :op2 \"League\")))\n             :mod (c / country\n                     :name (n3 / name\n                               :op1 \"Germany\"))\n             :ARG0 (l / lead-01\n                      :ARG1 g))\n   :time (n4 / now))", "(l / lead-02\n   :time (a / after\n            :op1 (g / game)))", "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\")))", "(c / celebrate-02\n   :accompanier (p2 / person\n                    :ARG0 (s / support-01)\n                    :ARG0 (u / use-01\n                             :ARG1 (m / megaphone))))", "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01)\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone)))))", "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01)\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone))))\n   :time (a / after\n            :op1 (g / game)))"], "smus": ["beat Tuesday", "beat Tuesday", "Tuesday beat, 6-1", "Bayern Munich beat Porto 2-0.", "Bayern Munich beat Porto 2-0 on Tuesday.", "Bayern Munich beat Porto 1-0 in the Champions League.", "Bayern Munich beat Porto 2-0 in the Champions League on Tuesday.", "Bayern M\u00fcnchen beat Porto 6-0 in the Champions League game Tuesday.", "Progressed 7-4.", "Bayern Munich will reach the semi-finals.", "Bayern Munich will reach the semi-finals.", "Bayern Munich progressed.", "Bayern Munich progressed to the semi-finals with an aggregate of 7-4.", "Pass Mario Gomez.", "Thomas Muller will pass Mario Gomez.", "Thomas Muller will pass Mario Gomez.", "Thomas Muller scored to pass Mario Gomez.", "Thomas Muller scored the 27th goal in the Champions League.", "The 27th goal in the Champions League game scored by Thomas Muller to pass Mario Gomez.", "Thomas Muller scored the 27th goal in the Champions League to pass Mario Gomez.", "Thomas Muller scored the 27th goal in the Champions League to pass Mario Gomez.", "-Champions League score", "Thomas Muller has a German league lead scorer in the Champions League.", "Thomas Muller now has a German captain in the Champions League.", "Thomas Muller now has a German captain in the Champions League.", "Lead after the game.", "Thomas Muller led.", "Celebrations with supporters using the megaphone", "Thomas Muller led celebrations with supporters using the megaphone.", "After the game Thomas Muller led celebrations with supporters using the megaphone."]}, {"instance_id": "realsumm-61", "summary": "Domenico Rancadore given a seven - year sentence by Italian court in 1999 . Domenico Rancadore was convicted for role as a ' man of honour ' , taking bribes from builders . In February Domenico Rancadore lost battle against extradition to Italy . Today it emerged that Domenico Rancadore case expired in October last year .", "summary_trees": ["# ::snt Domenico Rancadore given a seven - year sentence by Italian court in 1999 .\n(s / sentence-01\n      :ARG0 (c / court\n            :mod (c2 / country\n                  :name (n / name\n                        :op1 \"Italy\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Domenico\"\n                  :op2 \"Rancadore\"))\n      :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year))\n      :time (d / date-entity\n            :year 1999))", "# ::snt Domenico Rancadore was convicted for role as a ' man of honour ' , taking bribes from builders .\n(c / convict-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Domenico\"\n                  :op2 \"Rancadore\"))\n      :ARG2 (a / and\n            :op1 (r / role\n                  :mod (m / man\n                        :mod (h / honor)))\n            :op2 (b / bribe-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :ARG0-of (b2 / build-01)))))", "# ::snt In February Domenico Rancadore lost battle against extradition to Italy .\n(l / lose-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Domenico\"\n                  :op2 \"Rancadore\"))\n      :ARG1 (b / battle-01\n            :ARG0 p\n            :ARG1 (e / extradite-01\n                  :ARG1 p\n                  :ARG3 (c / country\n                        :name (n2 / name\n                              :op1 \"Italy\"))))\n      :time (d / date-entity\n            :month 2))", "# ::snt Today it emerged that Domenico Rancadore case expired in October last year .\n(e / emerge-02\n      :ARG1 (e2 / expire-01\n            :ARG1 (c / case-03\n                  :ARG2 (p / person\n                        :name (n / name\n                              :op1 \"Domenico\"\n                              :op2 \"Rancadore\")))\n            :time (d / date-entity\n                  :month 10\n                  :mod (y / year\n                        :mod (l / last))))\n      :time (t / today))"], "tree": ["(s / sentence-01\n   :time (d / date-entity\n            :year 1999))", "(s / sentence-01\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year)))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\")))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year)))", "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year))\n   :time (d / date-entity\n            :year 1999))", "(b / bribe-01\n   :ARG0 (p / person :name (n / name :op1 \"Domenico\" :op2 \"Rancadore\"))\n   :ARG1 (p2 / person\n             :ARG0 (b2 / build-01)))", "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :ARG2 (r / role\n            :mod (m / man\n                    :mod (h / honor))))", "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :ARG2 (b / bribe-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :ARG0 (b2 / build-01))))", "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :ARG2 (a / and\n            :op1 (r / role\n                    :mod (m / man\n                            :mod (h / honor)))\n            :op2 (b / bribe-01\n                    :ARG0 p\n                    :ARG1 (p2 / person\n                              :ARG0 (b2 / build-01)))))", "(l / lose-03\n   :time (d / date-entity\n            :month 2))", "(l / lose-03\n   :time (d / date-entity\n            :month 2))", "(l / lose-03\n   :time (d / date-entity\n            :month 2))", "(e / extradite-01\n   :ARG1 (p / person :name (n / name :op1 \"Domenico\" :op2 \"Rancadore\"))\n   :ARG3 (c / country\n            :name (n2 / name\n                      :op1 \"Italy\")))", "(l / lose-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\")))", "(b / battle-01\n   :ARG1 (e / extradite-01\n            :ARG1 (p / person :name (n / name :op1 \"Domenico\" :op2 \"Rancadore\"))\n            :ARG3 (c / country\n                     :name (n2 / name\n                               :op1 \"Italy\"))))", "(b / battle-01\n   :ARG0 (p / person :name (n / name :op1 \"Domenico\" :op2 \"Rancadore\"))\n   :ARG1 (e / extradite-01\n            :ARG1 p\n            :ARG3 (c / country\n                     :name (n2 / name\n                               :op1 \"Italy\"))))", "(b / battle-01\n   :ARG0 (p / person :name (n / name :op1 \"Domenico\" :op2 \"Rancadore\"))\n   :ARG1 (e / extradite-01\n            :ARG1 p\n            :ARG3 (c / country\n                     :name (n2 / name\n                               :op1 \"Italy\"))))", "(l / lose-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :time (d / date-entity\n            :month 2))", "(l / lose-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :ARG1 (b / battle-01\n            :ARG0 p\n            :ARG1 (e / extradite-01\n                     :ARG1 p\n                     :ARG3 (c / country\n                              :name (n2 / name\n                                        :op1 \"Italy\")))))", "(l / lose-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :ARG1 (b / battle-01\n            :ARG0 p\n            :ARG1 (e / extradite-01\n                     :ARG1 p\n                     :ARG3 (c / country\n                              :name (n2 / name\n                                        :op1 \"Italy\"))))\n   :time (d / date-entity\n            :month 2))", "(l / lose-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\"))\n   :ARG1 (b / battle-01\n            :ARG0 p\n            :ARG1 (e / extradite-01\n                     :ARG1 p\n                     :ARG3 (c / country\n                              :name (n2 / name\n                                        :op1 \"Italy\"))))\n   :time (d / date-entity\n            :month 2))", "(c / case-03\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Domenico\"\n                     :op2 \"Rancadore\")))", "(e2 / expire-01\n    :time (d / date-entity\n             :month 10\n             :mod (y / year\n                     :mod (l / last))))", "(e2 / expire-01\n    :time (d / date-entity\n             :month 10\n             :mod (y / year\n                     :mod (l / last))))", "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :name (n / name\n                               :op1 \"Domenico\"\n                               :op2 \"Rancadore\"))))", "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :name (n / name\n                               :op1 \"Domenico\"\n                               :op2 \"Rancadore\")))\n    :time (d / date-entity\n             :month 10\n             :mod (y / year\n                     :mod (l / last))))", "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :name (n / name\n                               :op1 \"Domenico\"\n                               :op2 \"Rancadore\")))\n    :time (d / date-entity\n             :month 10\n             :mod (y / year\n                     :mod (l / last))))", "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :name (n / name\n                                        :op1 \"Domenico\"\n                                        :op2 \"Rancadore\")))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y / year\n                              :mod (l / last)))))", "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :name (n / name\n                                        :op1 \"Domenico\"\n                                        :op2 \"Rancadore\")))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y / year\n                              :mod (l / last))))\n   :time (t / today))", "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :name (n / name\n                                        :op1 \"Domenico\"\n                                        :op2 \"Rancadore\")))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y / year\n                              :mod (l / last))))\n   :time (t / today))"], "smus": ["The sentence was in 1999.", "The sentence is a seven year sentence.", "The sentence was given to Domenico Rancadore.", "Domenico Rancadore received a 7 year sentence.", "In 1999 an Italian court sentenced Domenico Rancadore to seven years.", "Domenico Rancadore bribed builders.", "Domenico Rancadore was convicted of the role of honorable man.", "Domenico Rancadore was convicted of bribing builders.", "Domenico Rancadore was convicted of the role of honor man and of bribing builders.", "Losed in February.", "Losed in February.", "Losed in February.", "Domenico Rancadore was extradited to Italy.", "Domenico Rancadore lost.", "The battle over the extradition of Domenico Rancadore to Italy is brewing.", "Domenico Rancadore is in battle over extradition to Italy.", "Domenico Rancadore is in battle over extradition to Italy.", "Domenico Rancadore lost in February.", "Domenico Rancadore lost the battle over extradition to Italy.", "Domenico Rancadore lost the battle over extradition to Italy in February.", "Domenico Rancadore lost the battle over extradition to Italy in February.", "In the case of Domenico Rancadore.", "expired in October of last year.", "expired in October of last year.", "The case against Domenico Rancadore expired.", "The case against Domenico Rancadore expired in October of last year.", "The case against Domenico Rancadore expired in October of last year.", "It emerged that the case against Domenico Rancadore expired in October of last year.", "Today it emerged that the case against Domenico Rancadore expired in October of last year.", "Today it emerged that the case against Domenico Rancadore expired in October of last year."]}, {"instance_id": "realsumm-62", "summary": "Baron the German Shepard was filmed as Baron the German Shepard helped get the dishes done at home in California . Baron the German Shepard was professionally trained at the Hill Country K9 school . To date filmed has been watched over 27,000 times . Many viewers have deemed Baron the German Shepard cleaning antics ' cute ' and adorable '", "summary_trees": ["# ::snt Baron the German Shepard was filmed as Baron the German Shepard helped get the dishes done at home in California .\n(f / film-01\n      :ARG1 (w / work-of-art\n            :name (n / name\n                  :op1 \"Baron\"\n                  :op2 \"the\"\n                  :op3 \"German\"\n                  :op4 \"Shepard\"))\n      :prep-as (h / help-01\n            :ARG0 w\n            :ARG1 (d / do-02\n                  :ARG1 (d2 / dish)\n                  :location (h2 / home\n                        :location (s / state\n                              :name (n2 / name\n                                    :op1 \"California\"))))))", "# ::snt Baron the German Shepard was professionally trained at the Hill Country K9 school .\n(t / train-01\n      :ARG0 (s / school\n            :name (n / name\n                  :op1 \"Hill\"\n                  :op2 \"Country\"\n                  :op3 \"K9\"))\n      :ARG2 (a / animal\n            :name (n2 / name\n                  :op1 \"Baron\"\n                  :op2 \"the\"\n                  :op3 \"German\"\n                  :op4 \"Shepard\"))\n      :manner (p / professional))", "# ::snt To date filmed has been watched over 27,000 times .\n(w / watch-01\n      :ARG1 (t / thing\n            :ARG1-of (f / film-01))\n      :time (t2 / to-date)\n      :quant (o / over\n            :op1 27000))", "# ::snt Many viewers have deemed Baron the German Shepard cleaning antics ' cute ' and adorable '\n(d / deem-01\n      :ARG0 (p / person\n            :ARG0-of (v / view-01)\n            :quant (m / many))\n      :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                  :topic (c2 / clean-01\n                        :ARG0 (a4 / animal\n                              :name (n / name\n                                    :op1 \"Baron\")\n                              :mod (b / breed\n                                    :name n\n                                    :op1 \"German\"\n                                    :op2 \"Shepard\"))))))"], "tree": ["(d / do-02\n   :location (h2 / home\n                 :location (s / state\n                              :name (n2 / name\n                                        :op1 \"California\"))))", "(f / film-01\n   :ARG1 (w / work-of-art\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\")))", "(d / do-02\n   :ARG1 (d2 / dish)\n   :location (h2 / home\n                 :location (s / state\n                              :name (n2 / name\n                                        :op1 \"California\"))))", "(h / help-01\n   :ARG0 (w / work-of-art :name (n / name :op1 \"Baron\" :op2 \"the\" :op3 \"German\" :op4 \"Shepard\"))\n   :ARG1 (d / do-02\n            :ARG1 (d2 / dish)\n            :location (h2 / home\n                          :location (s / state\n                                       :name (n2 / name\n                                                 :op1 \"California\")))))", "(h / help-01\n   :ARG0 (w / work-of-art :name (n / name :op1 \"Baron\" :op2 \"the\" :op3 \"German\" :op4 \"Shepard\"))\n   :ARG1 (d / do-02\n            :ARG1 (d2 / dish)\n            :location (h2 / home\n                          :location (s / state\n                                       :name (n2 / name\n                                                 :op1 \"California\")))))", "(f / film-01\n   :ARG1 (w / work-of-art\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\"))\n   :prep-as (h / help-01\n               :ARG0 w\n               :ARG1 (d / do-02\n                        :ARG1 (d2 / dish)\n                        :location (h2 / home\n                                      :location (s / state\n                                                   :name (n2 / name\n                                                             :op1 \"California\"))))))", "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\")))", "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\"))\n   :ARG2 (a / animal\n            :name (n2 / name\n                      :op1 \"Baron\"\n                      :op2 \"the\"\n                      :op3 \"German\"\n                      :op4 \"Shepard\"))\n   :manner (p / professional))", "(w / watch-01\n   :ARG1 (t / thing\n            :ARG1 (f / film-01)))", "(w / watch-01\n   :time (t2 / to-date)\n   :quant (o / over\n             :op1 27000))", "(w / watch-01\n   :ARG1 (t / thing\n            :ARG1 (f / film-01))\n   :time (t2 / to-date)\n   :quant (o / over\n             :op1 27000))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (c / cute))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (c / cute))", "(c2 / clean-01\n    :ARG0 (a4 / animal\n              :name (n / name\n                       :op1 \"Baron\")\n              :mod (b / breed\n                      :name n\n                      :op1 \"German\"\n                      :op2 \"Shepard\")))", "(d / deem-01\n   :ARG1 (a2 / adorable\n             :domain (a3 / antics\n                         :topic (c2 / clean-01\n                                    :ARG0 (a4 / animal\n                                              :name (n / name\n                                                       :op1 \"Baron\")\n                                              :mod (b / breed\n                                                      :name n\n                                                      :op1 \"German\"\n                                                      :op2 \"Shepard\"))))))", "(d / deem-01\n   :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                        :topic (c2 / clean-01\n                                   :ARG0 (a4 / animal\n                                             :name (n / name\n                                                      :op1 \"Baron\")\n                                             :mod (b / breed\n                                                     :name n\n                                                     :op1 \"German\"\n                                                     :op2 \"Shepard\"))))))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (a2 / adorable\n             :domain (a3 / antics\n                         :topic (c2 / clean-01\n                                    :ARG0 (a4 / animal\n                                              :name (n / name\n                                                       :op1 \"Baron\")\n                                              :mod (b / breed\n                                                      :name n\n                                                      :op1 \"German\"\n                                                      :op2 \"Shepard\"))))))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (a2 / adorable\n             :domain (a3 / antics\n                         :topic (c2 / clean-01\n                                    :ARG0 (a4 / animal\n                                              :name (n / name\n                                                       :op1 \"Baron\")\n                                              :mod (b / breed\n                                                      :name n\n                                                      :op1 \"German\"\n                                                      :op2 \"Shepard\"))))))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                        :topic (c2 / clean-01\n                                   :ARG0 (a4 / animal\n                                             :name (n / name\n                                                      :op1 \"Baron\")\n                                             :mod (b / breed\n                                                     :name n\n                                                     :op1 \"German\"\n                                                     :op2 \"Shepard\"))))))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                        :topic (c2 / clean-01\n                                   :ARG0 (a4 / animal\n                                             :name (n / name\n                                                      :op1 \"Baron\")\n                                             :mod (b / breed\n                                                     :name n\n                                                     :op1 \"German\"\n                                                     :op2 \"Shepard\"))))))"], "smus": ["done at home in California.", "The film was filmed of Baron the German Shepard.", "The dishes are done in a home in California.", "Baron the German Shepard helped get the dishes done in California.", "Baron the German Shepard helped get the dishes done in California.", "Baron the German Shepard was filmed as she helped do the dishes at her California home.", "The Hill Country K9 school was trained.", "The Hill Country K9 school has professionally trained the Baron the German Shepard.", "The film was watched.", "Over 27,000 watched to date.", "The film has been watched over 27,000 times to date.", "Many viewers have deemed it cute.", "Many viewers have deemed it cute.", "The cleaning of the German Shepard Baron.", "The antics of the German Shepherd Baron's cleaning are deemed adorable.", "The antics of the German Shepherd Baron cleaning are deemed cute and adorable.", "Many viewers have deemed the antics of the German Shepard Baron's cleaning adorable.", "Many viewers have deemed the antics of the German Shepard Baron's cleaning adorable.", "Many viewers have deemed the antics of the German Shepard Baron's cleaning cute and adorable.", "Many viewers have deemed the antics of the German Shepard Baron's cleaning cute and adorable."]}, {"instance_id": "realsumm-63", "summary": "Jihadis face fines , whipping or even jail time for wearing Nike products . Ban is also partly due to Nike sharing Nike name with a Greek Goddess . Commanders say its name also sounds like sexual slang words in Arabic . Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words .", "summary_trees": ["# ::snt Jihadis face fines , whipping or even jail time for wearing Nike products .\n(f / face-01\n      :ARG0 (j / jihadi)\n      :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (t / time\n                  :mod (j2 / jail)\n                  :mod (e / even)))\n      :ARG1-of (c / cause-01\n            :ARG0 (w2 / wear-01\n                  :ARG0 j\n                  :ARG1 (p / product\n                        :mod (c2 / company\n                              :name (n / name\n                                    :op1 \"Nike\"))))))", "# ::snt Ban is also partly due to Nike sharing Nike name with a Greek Goddess .\n(c / cause-01\n      :ARG0 (s / share-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Nike\"))\n            :ARG1 (n2 / name\n                  :poss p)\n            :ARG2 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Goddess\")\n                  :mod (c2 / country\n                        :name (n4 / name\n                              :op1 \"Greece\"))))\n      :ARG1 (b / ban-01)\n      :degree (p3 / part)\n      :mod (a / also))", "# ::snt Commanders say its name also sounds like sexual slang words in Arabic .\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (c / command-02))\n      :ARG1 (s2 / sound-01\n            :ARG1 (n / name\n                  :poss (ii / it))\n            :ARG2 (w / word\n                  :mod (s3 / slang\n                        :mod (s4 / sex))\n                  :medium (l / language\n                        :name (n2 / name\n                              :op1 \"Arabic\")))\n            :mod (a / also)))", "# ::snt Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words .\n(b / ban-01\n      :ARG1 (w / wear-01\n            :ARG0 (p / person\n                  :mod (t / that)\n                  :ARG0-of (l / live-01\n                        :location (u / under\n                              :op1 (c / criminal-organization\n                                    :name (n / name\n                                          :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                  :op1 (j / jeans)\n                  :op2 (ii / item\n                        :ARG2-of (c2 / clothe-01)\n                        :ARG0-of (c3 / carry-01\n                              :ARG1 (o2 / or\n                                    :op1 (l2 / language\n                                          :ARG0-of (p2 / provoke-01))\n                                    :op2 (w2 / word\n                                          :ARG1-of (s / swear-01)))))))\n      :ARG2 p\n      :time (a / already))"], "tree": ["(w2 / wear-01\n    :ARG1 (p / product\n             :mod (c2 / company\n                      :name (n / name\n                               :op1 \"Nike\"))))", "(w2 / wear-01\n    :ARG0 (j / jihadi)\n    :ARG1 (p / product\n             :mod (c2 / company\n                      :name (n / name\n                               :op1 \"Nike\"))))", "(w2 / wear-01\n    :ARG0 (j / jihadi)\n    :ARG1 (p / product\n             :mod (c2 / company\n                      :name (n / name\n                               :op1 \"Nike\"))))", "(c / cause-01\n   :ARG0 (w2 / wear-01\n             :ARG0 (j / jihadi)\n             :ARG1 (p / product\n                      :mod (c2 / company\n                               :name (n / name\n                                        :op1 \"Nike\")))))", "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (t / time\n                    :mod (j2 / jail)\n                    :mod (e / even))))", "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (t / time\n                    :mod (j2 / jail)\n                    :mod (e / even)))\n   :ARG1 (c / cause-01\n            :ARG0 (w2 / wear-01\n                      :ARG0 j\n                      :ARG1 (p / product\n                               :mod (c2 / company\n                                        :name (n / name\n                                                 :op1 \"Nike\"))))))", "(s / share-01\n   :ARG1 (n2 / name\n             :poss (p / person :name (n / name :op1 \"Nike\"))))", "(c / cause-01\n   :degree (p3 / part)\n   :mod (a / also))", "(s / share-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nike\"))\n   :ARG1 (n2 / name\n             :poss p))", "(s / share-01\n   :ARG1 (n2 / name\n             :poss (p / person :name (n / name :op1 \"Nike\")))\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Goddess\")\n             :mod (c2 / country\n                      :name (n4 / name\n                                :op1 \"Greece\"))))", "(s / share-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nike\"))\n   :ARG1 (n2 / name\n             :poss p)\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Goddess\")\n             :mod (c2 / country\n                      :name (n4 / name\n                                :op1 \"Greece\"))))", "(s / share-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nike\"))\n   :ARG1 (n2 / name\n             :poss p)\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Goddess\")\n             :mod (c2 / country\n                      :name (n4 / name\n                                :op1 \"Greece\"))))", "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Nike\"))\n            :ARG1 (n2 / name\n                      :poss p)\n            :ARG2 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Goddess\")\n                      :mod (c2 / country\n                               :name (n4 / name\n                                         :op1 \"Greece\"))))\n   :ARG1 (b / ban-01)\n   :degree (p3 / part)\n   :mod (a / also))", "(s2 / sound-01\n    :ARG1 (n / name\n             :poss (ii / it)))", "(s2 / sound-01\n    :ARG1 (n / name\n             :poss (ii / it))\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\"))))", "(s2 / sound-01\n    :ARG1 (n / name\n             :poss (ii / it))\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\")))\n    :mod (a / also))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (c / command-02))\n   :ARG1 (s2 / sound-01\n             :ARG1 (n / name\n                      :poss (ii / it))\n             :ARG2 (w / word\n                      :mod (s3 / slang\n                               :mod (s4 / sex))\n                      :medium (l / language\n                                 :name (n2 / name\n                                           :op1 \"Arabic\")))\n             :mod (a / also)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (c / command-02))\n   :ARG1 (s2 / sound-01\n             :ARG1 (n / name\n                      :poss (ii / it))\n             :ARG2 (w / word\n                      :mod (s3 / slang\n                               :mod (s4 / sex))\n                      :medium (l / language\n                                 :name (n2 / name\n                                           :op1 \"Arabic\")))\n             :mod (a / also)))", "(l / live-01\n   :location (u / under\n                :op1 (c / criminal-organization\n                        :name (n / name\n                                 :op1 \"ISIS\"))))", "(l / live-01\n   :location (u / under\n                :op1 (c / criminal-organization\n                        :name (n / name\n                                 :op1 \"ISIS\"))))", "(c3 / carry-01\n    :ARG1 (o2 / or\n              :op1 (l2 / language\n                       :ARG0 (p2 / provoke-01))\n              :op2 (w2 / word\n                       :ARG1 (s / swear-01))))", "(w / wear-01\n   :ARG0 (p / person\n            :mod (t / that)\n            :ARG0 (l / live-01\n                     :location (u / under\n                                  :op1 (c / criminal-organization\n                                          :name (n / name\n                                                   :op1 \"ISIS\")))))\n   :ARG1 (o / or\n            :op1 (j / jeans)\n            :op2 (ii / item\n                     :ARG2 (c2 / clothe-01)\n                     :ARG0 (c3 / carry-01\n                               :ARG1 (o2 / or\n                                         :op1 (l2 / language\n                                                  :ARG0 (p2 / provoke-01))\n                                         :op2 (w2 / word\n                                                  :ARG1 (s / swear-01)))))))", "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :mod (t / that)\n                     :ARG0 (l / live-01\n                              :location (u / under\n                                           :op1 (c / criminal-organization\n                                                   :name (n / name\n                                                            :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                     :op1 (j / jeans)\n                     :op2 (ii / item\n                              :ARG2 (c2 / clothe-01)\n                              :ARG0 (c3 / carry-01\n                                        :ARG1 (o2 / or\n                                                  :op1 (l2 / language\n                                                           :ARG0 (p2 / provoke-01))\n                                                  :op2 (w2 / word\n                                                           :ARG1 (s / swear-01)))))))\n   :ARG2 p\n   :time (a / already))"], "smus": ["Wearing Nike products.", "Jihadi was wearing Nike products.", "Jihadi was wearing Nike products.", "Because Jihadis are wearing Nike products.", "Jihadis face fines, whipping or even jail time.", "Jihadis face fines, whipping or even jail time for wearing Nike products.", "Sharing Nike's name.", "Also partly because...", "Nike is sharing his name.", "Nik's name is sharing the Goddess's name with the Greek gods.", "Nike is sharing his name with the Goddess of Greece.", "Nike is sharing his name with the Goddess of Greece.", "The ban is also partly due to Nike sharing his name with the Greek goddaughter.", "Sounds like its name.", "Its name sounds like sex slang words in Arabic.", "Its name also sounds like sex slang words in Arabic.", "The commandants say its name also sounds like sexist slang words in Arabic.", "The commandants say its name also sounds like sexist slang words in Arabic.", "Living under ISIS.", "Living under ISIS.", "carrying provocative language or swearing wor.", "Those living under ISIS are wearing jeans or clothing items carrying provocative language or swearing wors.", "Those living under ISIS are already banned from wearing jeans or clothing items carrying provocative language or swearing wors."]}, {"instance_id": "realsumm-64", "summary": "Lorraine Bracco was asked by The Sopranos creator to be Carmela . Lorraine Bracco turned The Sopranos creator down because Lorraine Bracco played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 . Convinced showrunner David Chase to let Lorraine Bracco play the role of Dr. Jennifer Melfi .", "summary_trees": ["# ::snt Lorraine Bracco was asked by The Sopranos creator to be Carmela .\n(a / ask-02\n      :ARG0 (p / person\n            :ARG0-of (c / create-01\n                  :ARG1 (b / broadcast-program\n                        :name (n / name\n                              :op1 \"The\"\n                              :op2 \"Sopranos\"))))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Carmela\")\n            :domain (p3 / person\n                  :name (n3 / name\n                        :op1 \"Lorraine\"\n                        :op2 \"Bracco\")))\n      :ARG2 p3)", "# ::snt Lorraine Bracco turned The Sopranos creator down because Lorraine Bracco played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 .\n(t / turn-down-05\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lorraine\"\n                  :op2 \"Bracco\"))\n      :ARG1 (p2 / person\n            :ARG0-of (c / create-01\n                  :ARG1 (b / broadcast-program\n                        :name (n2 / name\n                              :op1 \"The\"\n                              :op2 \"Sopranos\"))))\n      :ARG1-of (c2 / cause-01\n            :ARG0 (p3 / play-02\n                  :ARG0 p\n                  :ARG1 (p4 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (m / mobster)\n                              :ARG2 (w / wife)))\n                  :time (d / date-entity\n                        :year 1990)\n                  :subevent-of (w2 / work-of-art\n                        :name (n3 / name\n                              :op1 \"Goodfellas\")\n                        :poss (p5 / person\n                              :name (n4 / name\n                                    :op1 \"Martin\"\n                                    :op2 \"Scorsese\"))))))", "# ::snt Convinced showrunner David Chase to let Lorraine Bracco play the role of Dr. Jennifer Melfi .\n(c / convince-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Chase\")\n            :ARG0-of (r / run-01\n                  :ARG1 (s / show)))\n      :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                  :ARG0 (p3 / person\n                        :name (n2 / name\n                              :op1 \"Lorraine\"\n                              :op2 \"Bracco\"))\n                  :ARG1 (d / doctor\n                        :name (n3 / name\n                              :op1 \"Jennifer\"\n                              :op2 \"Melfi\")))))"], "tree": ["(c / create-01\n   :ARG1 (b / broadcast-program\n            :name (n / name\n                     :op1 \"The\"\n                     :op2 \"Sopranos\")))", "(c / create-01\n   :ARG1 (b / broadcast-program\n            :name (n / name\n                     :op1 \"The\"\n                     :op2 \"Sopranos\")))", "(a / ask-02\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\")))\n   :ARG2 p3)", "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\"))))", "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\")))\n   :ARG2 p3)", "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\")))\n   :ARG2 p3)", "(h / have-rel-role-91\n   :ARG1 (m / mobster)\n   :ARG2 (w / wife))", "(c / create-01\n   :ARG1 (b / broadcast-program\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Sopranos\")))", "(c / create-01\n   :ARG1 (b / broadcast-program\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Sopranos\")))", "(p3 / play-02\n    :ARG0 (p / person :name (n / name :op1 \"Lorraine\" :op2 \"Bracco\"))\n    :ARG1 (p4 / person\n              :ARG0 (h / have-rel-role-91\n                       :ARG1 (m / mobster)\n                       :ARG2 (w / wife))))", "(p3 / play-02\n    :time (d / date-entity\n             :year 1990)\n    :subevent (w2 / work-of-art\n                  :name (n3 / name\n                            :op1 \"Goodfellas\")\n                  :poss (p5 / person\n                            :name (n4 / name\n                                      :op1 \"Martin\"\n                                      :op2 \"Scorsese\"))))", "(t / turn-down-05\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lorraine\"\n                     :op2 \"Bracco\"))\n   :ARG1 (p2 / person\n             :ARG0 (c / create-01\n                      :ARG1 (b / broadcast-program\n                               :name (n2 / name\n                                         :op1 \"The\"\n                                         :op2 \"Sopranos\")))))", "(p3 / play-02\n    :ARG0 (p / person :name (n / name :op1 \"Lorraine\" :op2 \"Bracco\"))\n    :ARG1 (p4 / person\n              :ARG0 (h / have-rel-role-91\n                       :ARG1 (m / mobster)\n                       :ARG2 (w / wife)))\n    :time (d / date-entity\n             :year 1990)\n    :subevent (w2 / work-of-art\n                  :name (n3 / name\n                            :op1 \"Goodfellas\")\n                  :poss (p5 / person\n                            :name (n4 / name\n                                      :op1 \"Martin\"\n                                      :op2 \"Scorsese\"))))", "(c2 / cause-01\n    :ARG0 (p3 / play-02\n              :ARG0 (p / person :name (n / name :op1 \"Lorraine\" :op2 \"Bracco\"))\n              :ARG1 (p4 / person\n                        :ARG0 (h / have-rel-role-91\n                                 :ARG1 (m / mobster)\n                                 :ARG2 (w / wife)))\n              :time (d / date-entity\n                       :year 1990)\n              :subevent (w2 / work-of-art\n                            :name (n3 / name\n                                      :op1 \"Goodfellas\")\n                            :poss (p5 / person\n                                      :name (n4 / name\n                                                :op1 \"Martin\"\n                                                :op2 \"Scorsese\")))))", "(t / turn-down-05\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lorraine\"\n                     :op2 \"Bracco\"))\n   :ARG1 (p2 / person\n             :ARG0 (c / create-01\n                      :ARG1 (b / broadcast-program\n                               :name (n2 / name\n                                         :op1 \"The\"\n                                         :op2 \"Sopranos\"))))\n   :ARG1 (c2 / cause-01\n             :ARG0 (p3 / play-02\n                       :ARG0 p\n                       :ARG1 (p4 / person\n                                 :ARG0 (h / have-rel-role-91\n                                          :ARG1 (m / mobster)\n                                          :ARG2 (w / wife)))\n                       :time (d / date-entity\n                                :year 1990)\n                       :subevent (w2 / work-of-art\n                                     :name (n3 / name\n                                               :op1 \"Goodfellas\")\n                                     :poss (p5 / person\n                                               :name (n4 / name\n                                                         :op1 \"Martin\"\n                                                         :op2 \"Scorsese\"))))))", "(p2 / play-02\n    :ARG0 (p3 / person\n              :name (n2 / name\n                        :op1 \"Lorraine\"\n                        :op2 \"Bracco\"))\n    :ARG1 (d / doctor\n             :name (n3 / name\n                       :op1 \"Jennifer\"\n                       :op2 \"Melfi\")))", "(p2 / play-02\n    :ARG0 (p3 / person\n              :name (n2 / name\n                        :op1 \"Lorraine\"\n                        :op2 \"Bracco\"))\n    :ARG1 (d / doctor\n             :name (n3 / name\n                       :op1 \"Jennifer\"\n                       :op2 \"Melfi\")))", "(l / let-01\n   :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Chase\")))\n   :ARG1 (p2 / play-02\n             :ARG0 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Lorraine\"\n                                 :op2 \"Bracco\"))\n             :ARG1 (d / doctor\n                      :name (n3 / name\n                                :op1 \"Jennifer\"\n                                :op2 \"Melfi\"))))", "(l / let-01\n   :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Chase\")))\n   :ARG1 (p2 / play-02\n             :ARG0 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Lorraine\"\n                                 :op2 \"Bracco\"))\n             :ARG1 (d / doctor\n                      :name (n3 / name\n                                :op1 \"Jennifer\"\n                                :op2 \"Melfi\"))))", "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\")\n            :ARG0 (r / run-01\n                     :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Lorraine\"\n                                          :op2 \"Bracco\"))\n                      :ARG1 (d / doctor\n                               :name (n3 / name\n                                         :op1 \"Jennifer\"\n                                         :op2 \"Melfi\")))))", "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\")\n            :ARG0 (r / run-01\n                     :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Lorraine\"\n                                          :op2 \"Bracco\"))\n                      :ARG1 (d / doctor\n                               :name (n3 / name\n                                         :op1 \"Jennifer\"\n                                         :op2 \"Melfi\")))))"], "smus": ["The Sopranos was a creation.", "The Sopranos was a creation.", "Lorraine Bracco was asked to be Carmela.", "The creators of The Sopranos have asked, \"Lorraine Bracco is Carmela.\"", "The creators of The Sopranos have asked her to be Carmela Lorraine Bracco.", "The creators of The Sopranos have asked her to be Carmela Lorraine Bracco.", "The mobster's wife.", "The Sopranos was a creation.", "The Sopranos was a creation.", "Lorraine Bracco played the wife of a mobster.", "Played in 1990 in Martin Scorsese's Goodfellas.", "Lorraine Bracco turned down the creator of \"The Sopranos\".", "In 1990, Lorraine Bracco played the wife of a mobster in Martin Scorsese's \"Goodfellas\".", "Because in 1990 in Martin Scorsese's Goodfellas, Lorraine Bracco played the wife of a mobster.", "Lorraine Bracco turned down the creator of The Sopranos because she played the wife of a mobster in the 1990 Martin Scorsese's \"Goodfellas\".", "Lorraine Bracco will play Dr. Jennifer Melfi.", "Lorraine Bracco will play Dr. Jennifer Melfi.", "David Chase will let Lorraine Bracco play Dr. Jennifer Melfi.", "David Chase will let Lorraine Bracco play Dr. Jennifer Melfi.", "David Chase, the show's showrunner, was convinced to let Lorraine Bracco play Dr. Jennifer Melchi.", "David Chase, the show's showrunner, was convinced to let Lorraine Bracco play Dr. Jennifer Melchi."]}, {"instance_id": "realsumm-65", "summary": "Kevin Carr set off on Kevin Carr epic journey from Haytor , Dartmoor in July 2013 . Kevin Carr is now less than 24 hours away from completing his epic journey . Kevin Carr ran around the world unsupported - taking Kevin Carr own tent with Kevin Carr . Kevin Carr is set to break the previous record held by an Australian by 24 hours .", "summary_trees": ["# ::snt Kevin Carr set off on Kevin Carr epic journey from Haytor , Dartmoor in July 2013 .\n(s / set-off-33\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Carr\"))\n      :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n      :source (l / location\n            :name (n2 / name\n                  :op1 \"Haytor\")\n            :part-of (ii / island\n                  :name (n3 / name\n                        :op1 \"Dartmoor\")))\n      :time (d / date-entity\n            :month 7\n            :year 2013))", "# ::snt Kevin Carr is now less than 24 hours away from completing his epic journey .\n(b / be-temporally-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Carr\"))\n      :ARG2 (a / away\n            :op1 (c / complete-01\n                  :ARG0 p\n                  :ARG1 (j / journey-01\n                        :ARG0 p\n                        :mod (e / epic)))\n            :duration (l / less-than\n                  :op1 (t / temporal-quantity\n                        :quant 24\n                        :unit (h / hour))))\n      :time (n2 / now))", "# ::snt Kevin Carr ran around the world unsupported - taking Kevin Carr own tent with Kevin Carr .\n(r / run-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Carr\"))\n      :path (a / around\n            :op1 (w / world))\n      :manner (s / support-01\n            :polarity -\n            :ARG1 p)\n      :manner (t / take-01\n            :ARG0 p\n            :ARG1 (t2 / tent\n                  :poss p)\n            :prep-with p))", "# ::snt Kevin Carr is set to break the previous record held by an Australian by 24 hours .\n(s / set-08\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Carr\"))\n      :ARG2 (b / break-02\n            :ARG0 p\n            :ARG1 (r / record\n                  :time (p2 / previous)\n                  :ARG1-of (h / hold-01\n                        :ARG0 (p3 / person\n                              :mod (c / country\n                                    :name (n2 / name\n                                          :op1 \"Australia\")))))\n            :extent (t / temporal-quantity\n                  :quant 24\n                  :unit (h2 / hour))))"], "tree": ["(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :mod (e / epic))", "(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :mod (e / epic))", "(s / set-off-33\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7\n            :year 2013))", "(s / set-off-33\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7\n            :year 2013))", "(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :mod (e / epic))", "(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :mod (e / epic))", "(c / complete-01\n   :ARG1 (j / journey-01\n            :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n            :mod (e / epic)))", "(c / complete-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic)))", "(c / complete-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic)))", "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n                    :ARG1 (j / journey-01\n                             :ARG0 p\n                             :mod (e / epic)))\n            :duration (l / less-than\n                         :op1 (t / temporal-quantity\n                                 :quant 24\n                                 :unit (h / hour)))))", "(b / be-temporally-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 p\n                    :ARG1 (j / journey-01\n                             :ARG0 p\n                             :mod (e / epic)))\n            :duration (l / less-than\n                         :op1 (t / temporal-quantity\n                                 :quant 24\n                                 :unit (h / hour)))))", "(b / be-temporally-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 p\n                    :ARG1 (j / journey-01\n                             :ARG0 p\n                             :mod (e / epic)))\n            :duration (l / less-than\n                         :op1 (t / temporal-quantity\n                                 :quant 24\n                                 :unit (h / hour))))\n   :time (n2 / now))", "(t / take-01\n   :ARG1 (t2 / tent\n             :poss (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :ARG1 (t2 / tent\n             :poss p))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :ARG1 (t2 / tent\n             :poss p)\n   :prep-with p)", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\")))", "(r / run-02\n   :path (a / around\n            :op1 (w / world))\n   :manner (s / support-01\n              :polarity -)\n   :manner (t / take-01))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :path (a / around\n            :op1 (w / world))\n   :manner (s / support-01\n              :polarity -\n              :ARG1 p)\n   :manner (t / take-01\n              :ARG0 p\n              :ARG1 (t2 / tent\n                        :poss p)\n              :prep-with p))", "(b / break-02\n   :extent (t / temporal-quantity\n              :quant 24\n              :unit (h2 / hour)))", "(h / hold-01\n   :ARG0 (p3 / person\n             :mod (c / country\n                     :name (n2 / name\n                               :op1 \"Australia\"))))", "(b / break-02\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :ARG1 (r / record\n            :time (p2 / previous)\n            :ARG1 (h / hold-01\n                     :ARG0 (p3 / person\n                               :mod (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Australia\"))))))", "(b / break-02\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :ARG1 (r / record\n            :time (p2 / previous)\n            :ARG1 (h / hold-01\n                     :ARG0 (p3 / person\n                               :mod (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Australia\")))))\n   :extent (t / temporal-quantity\n              :quant 24\n              :unit (h2 / hour)))", "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG2 (b / break-02\n            :ARG0 p\n            :ARG1 (r / record\n                     :time (p2 / previous)\n                     :ARG1 (h / hold-01\n                              :ARG0 (p3 / person\n                                        :mod (c / country\n                                                :name (n2 / name\n                                                          :op1 \"Australia\")))))\n            :extent (t / temporal-quantity\n                       :quant 24\n                       :unit (h2 / hour))))", "(s / set-08\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG2 (b / break-02\n            :ARG0 p\n            :ARG1 (r / record\n                     :time (p2 / previous)\n                     :ARG1 (h / hold-01\n                              :ARG0 (p3 / person\n                                        :mod (c / country\n                                                :name (n2 / name\n                                                          :op1 \"Australia\")))))\n            :extent (t / temporal-quantity\n                       :quant 24\n                       :unit (h2 / hour))))"], "smus": ["Kevin Carr's journey has been epic.", "Kevin Carr's journey has been epic.", "Set off from Haytor on Dartmoor in July 2013.", "Kevin Carr set off on an epic journey from Haytor, Dartmoor, in July 2013.", "Kevin Carr's journey has been epic.", "Kevin Carr's journey has been epic.", "Completed Kevin Carr's epic journey.", "Kevin Carr is completing his epic journey.", "Kevin Carr is completing his epic journey.", "Kevin Carr is less than 24 hours away from completing his epic journey.", "Kevin Carr was less than 24 hours away from completing his epic journey.", "Kevin Carr is now less than 24 hours away from completing his epic journey.", "Kevin Carr's tent was taken.", "Kevin Carr took his tent.", "Kevin Carr took his tent with him.", "Kevin Carr ran.", "Run around the world unsupported and taken.", "Kevin Carr ran around the world unsupported, taking his tent with him.", "Break for 24 hours.", "Australians are being held.", "Kevin Carr will break the previous record held by the Australians.", "Kevin Carr will break the previous Australian record held in 24 hours.", "Kevin Carr has set a previous record of being held by Australians for 24 hours.", "Kevin Carr has set a previous record of being held by Australians for 24 hours."]}, {"instance_id": "realsumm-66", "summary": "David Axelrod masterminded two Obama presidential election victories . David Axelrod was hired by Labour leader Ed Miliband amid great fanfare last year . Revealed at a book launch that David Axelrod is not resident for tax purposes in UK . Labour confirms Labour pays David Axelrod in dollars through consultancy firm .", "summary_trees": ["# ::snt David Axelrod masterminded two Obama presidential election victories .\n(m / mastermind-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Axelrod\"))\n      :ARG1 (w / win-01\n            :quant 2\n            :ARG1 (e / elect-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Obama\"))\n                  :ARG2 (p3 / president))))", "# ::snt David Axelrod was hired by Labour leader Ed Miliband amid great fanfare last year .\n(h / hire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Ed\"\n                  :op2 \"Miliband\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (p3 / person\n            :name (n3 / name\n                  :op1 \"David\"\n                  :op2 \"Axelrod\"))\n      :time (y / year\n            :mod (l2 / last))\n      :manner (f / fanfare\n            :mod (g / great)))", "# ::snt Revealed at a book launch that David Axelrod is not resident for tax purposes in UK .\n(r / reveal-01\n      :ARG1 (r2 / reside-01\n            :polarity -\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"David\"\n                        :op2 \"Axelrod\"))\n            :ARG1 (c / country\n                  :name (n2 / name\n                        :op1 \"UK\"))\n            :purpose (t / tax-01))\n      :location (l / launch-01\n            :ARG1 (b / book)))", "# ::snt Labour confirms Labour pays David Axelrod in dollars through consultancy firm .\n(c / confirm-01\n      :ARG0 (p / political-party\n            :name (n / name\n                  :op1 \"Labour\"))\n      :ARG1 (p2 / pay-01\n            :ARG0 p\n            :ARG2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"David\"\n                        :op2 \"Axelrod\"))\n            :manner (d / dollar)\n            :instrument (f / firm\n                  :ARG0-of (c2 / consult-01))))"], "tree": ["(e / elect-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Obama\")))", "(e / elect-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Obama\"))\n   :ARG2 (p3 / president))", "(e / elect-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Obama\"))\n   :ARG2 (p3 / president))", "(w / win-01\n   :quant 2\n   :ARG1 (e / elect-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Obama\"))\n            :ARG2 (p3 / president)))", "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\"))\n   :ARG1 (w / win-01\n            :quant 2\n            :ARG1 (e / elect-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Obama\"))\n                     :ARG2 (p3 / president))))", "(l / lead-02\n   :ARG1 (p2 / political-party\n             :name (n2 / name\n                       :op1 \"Labour\")))", "(h / hire-01\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))", "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"David\"\n                       :op2 \"Axelrod\")))", "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"David\"\n                       :op2 \"Axelrod\"))\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))", "(r2 / reside-01\n    :polarity -\n    :purpose (t / tax-01))", "(r2 / reside-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"David\"\n                      :op2 \"Axelrod\")))", "(r2 / reside-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"David\"\n                      :op2 \"Axelrod\"))\n    :ARG1 (c / country\n             :name (n2 / name\n                       :op1 \"UK\")))", "(r2 / reside-01\n    :polarity -\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"David\"\n                      :op2 \"Axelrod\"))\n    :ARG1 (c / country\n             :name (n2 / name\n                       :op1 \"UK\"))\n    :purpose (t / tax-01))", "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"David\"\n                               :op2 \"Axelrod\"))\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"UK\"))\n             :purpose (t / tax-01)))", "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"David\"\n                               :op2 \"Axelrod\"))\n             :ARG1 (c / country\n                      :name (n2 / name\n                                :op1 \"UK\"))\n             :purpose (t / tax-01))\n   :location (l / launch-01\n                :ARG1 (b / book)))", "(p2 / pay-01\n    :manner (d / dollar)\n    :instrument (f / firm))", "(p2 / pay-01\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"David\"\n                        :op2 \"Axelrod\")))", "(p2 / pay-01\n    :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"David\"\n                        :op2 \"Axelrod\"))\n    :manner (d / dollar)\n    :instrument (f / firm\n                   :ARG0 (c2 / consult-01)))", "(c / confirm-01\n   :ARG1 (p2 / pay-01\n             :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"David\"\n                                 :op2 \"Axelrod\"))\n             :manner (d / dollar)\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))", "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :ARG0 p\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"David\"\n                                 :op2 \"Axelrod\"))\n             :manner (d / dollar)\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))", "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :ARG0 p\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"David\"\n                                 :op2 \"Axelrod\"))\n             :manner (d / dollar)\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))"], "smus": ["Obama's election", "Obama's presidential election", "Obama's presidential election", "Obama's presidential election has won 2", "David Axelrod masterminded two victories in Obama's presidential election.", "Labour leadership", "Hired last year with great fanfare.", "Labour leader Ed Miliband has hired David Axelrod.", "Last year Labour leader Ed Miliband hired David Axelrod with great fanfare.", "Not residential for tax purposes.", "David Axelrod is a resident.", "David Axelrod is a resident of the UK.", "David Axelrod is not resident in the UK for tax purposes.", "David Axelrod has been revealed not to be resident in the UK for tax purposes.", "David Axelrod was revealed at the book launch as not residing in the UK for tax purposes.", "The firm pays by dollars.", "David Axelrod pays.", "Labour pays David Axelrod dollars through a consulting firm.", "The confirmation is that Labour pays David Axelrod dollars through a consulting firm.", "Labour confirms it pays David Axelrod with dollars through a consulting firm.", "Labour confirms it pays David Axelrod with dollars through a consulting firm."]}, {"instance_id": "realsumm-67", "summary": "HBO is the US network behind Game of Thrones and the Sopranos . Service is available on Apple TV and iOS exclusively for three months . Apple TV has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 .", "summary_trees": ["# ::snt HBO is the US network behind Game of Thrones and the Sopranos .\n(n / network\n      :mod (c / country\n            :name (n2 / name\n                  :op1 \"US\"))\n      :domain (c2 / company\n            :name (n3 / name\n                  :op1 \"HBO\"))\n      :location (b / behind\n            :op1 (a / and\n                  :op1 (b2 / broadcast-program\n                        :name (n4 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))\n                  :op2 (b3 / broadcast-program\n                        :name (n5 / name\n                              :op1 \"The\"\n                              :op2 \"Sopranos\")))))", "# ::snt Service is available on Apple TV and iOS exclusively for three months .\n(a / available-02\n      :ARG2 (s / service)\n      :location (a2 / and\n            :op1 (p / product\n                  :name (n / name\n                        :op1 \"Apple\"\n                        :op2 \"TV\"))\n            :op2 (p2 / product\n                  :name (n2 / name\n                        :op1 \"iOS\")))\n      :duration (t / temporal-quantity\n            :quant 3\n            :unit (m / month)\n            :ARG0-of (e / exclusive-02)))", "# ::snt Apple TV has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 .\n(c / cut-02\n      :ARG0 (p / product\n            :name (n / name\n                  :op1 \"Apple\"\n                  :op2 \"TV\"))\n      :ARG1 (p2 / price-01\n            :ARG1 p)\n      :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n      :ARG4 (m2 / monetary-quantity\n            :quant 69\n            :unit (d2 / dollar))\n      :mod (a / also))"], "tree": ["(n / network\n   :mod (c / country\n           :name (n2 / name\n                     :op1 \"US\"))\n   :domain (c2 / company\n               :name (n3 / name\n                         :op1 \"HBO\"))\n   :location (b / behind\n                :op1 (a / and\n                        :op1 (b2 / broadcast-program\n                                 :name (n4 / name\n                                           :op1 \"Game\"\n                                           :op2 \"of\"\n                                           :op3 \"Thrones\"))\n                        :op2 (b3 / broadcast-program\n                                 :name (n5 / name\n                                           :op1 \"The\"\n                                           :op2 \"Sopranos\")))))", "(a / available-02\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\")))", "(a / available-02\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\")))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\")))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\")))", "(a / available-02\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\"))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month)))", "(a / available-02\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\"))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month))\n   :duration t)", "(a / available-02\n   :location (a2 / and\n                 :op1 (p / product\n                         :name (n / name\n                                  :op1 \"Apple\"\n                                  :op2 \"TV\"))\n                 :op2 (p2 / product\n                          :name (n2 / name\n                                    :op1 \"iOS\"))))", "(a / available-02\n   :ARG2 (s / service)\n   :location (a2 / and\n                 :op1 (p / product\n                         :name (n / name\n                                  :op1 \"Apple\"\n                                  :op2 \"TV\"))\n                 :op2 (p2 / product\n                          :name (n2 / name\n                                    :op1 \"iOS\"))))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\"))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month)\n                :ARG0 (e / exclusive-02)))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\"))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month)\n                :ARG0 (e / exclusive-02))\n   :duration t)", "(a / available-02\n   :location (a2 / and\n                 :op1 (p / product\n                         :name (n / name\n                                  :op1 \"Apple\"\n                                  :op2 \"TV\"))\n                 :op2 (p2 / product\n                          :name (n2 / name\n                                    :op1 \"iOS\")))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month)))", "(a / available-02\n   :ARG2 (s / service)\n   :location (a2 / and\n                 :op1 (p / product\n                         :name (n / name\n                                  :op1 \"Apple\"\n                                  :op2 \"TV\"))\n                 :op2 (p2 / product\n                          :name (n2 / name\n                                    :op1 \"iOS\")))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month)\n                :ARG0 (e / exclusive-02)))", "(c / cut-02\n   :ARG1 (p2 / price-01\n             :ARG1 (p / product :name (n / name :op1 \"Apple\" :op2 \"TV\"))))", "(c / cut-02\n   :ARG0 (p / product\n            :name (n / name\n                     :op1 \"Apple\"\n                     :op2 \"TV\"))\n   :ARG1 (p2 / price-01\n             :ARG1 p))", "(c / cut-02\n   :ARG0 (p / product\n            :name (n / name\n                     :op1 \"Apple\"\n                     :op2 \"TV\"))\n   :ARG1 (p2 / price-01\n             :ARG1 p)\n   :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n   :ARG4 (m2 / monetary-quantity\n             :quant 69\n             :unit (d2 / dollar))\n   :mod (a / also))"], "smus": ["HBO is the US network behind Game of Thrones and The Sopranos.", "available on ios", "available on Apple TV.", "Service is available on iOS.", "Service is available on Apple TV.", "The Apple TV has been available for 3 months.", "For three months, it will be available on iOS.", "Available on Apple TV and iOS.", "The service is available on Apple TV and iOS.", "The service will be available exclusively on Apple TV for 3 months.", "The service will be available exclusively on iOS for three months.", "Apple TV and iOS are available for 3 months.", "The service will be available exclusively on Apple TV and iOS for 3 months.", "Apple TV price cut", "Apple TV has cut its price.", "Apple TV has also cut its price from $99 to $69."]}, {"instance_id": "realsumm-68", "summary": "Huma Abedin came under fire for not tipping at Chipotle in Iowa . Huma Abedin is Hillary Clinton 's most trusted aide for the 2016 campaign . On Saturday , Huma Abedin and husband Anthony Weiner went for Mexican lunch . It is one of she and husband Anthony Weiner final weekends before the 2016 campaign gets into swing .", "summary_trees": ["# ::snt Huma Abedin came under fire for not tipping at Chipotle in Iowa .\n(f / fire-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Huma\"\n                  :op2 \"Amin\"))\n      :ARG2 (t / tip-02\n            :polarity -\n            :ARG0 p\n            :ARG2 (c / company\n                  :name (n2 / name\n                        :op1 \"Chipotle\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Iowa\")))))", "# ::snt Huma Abedin is Hillary Clinton 's most trusted aide for the 2016 campaign .\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Huma\"\n                  :op2 \"Abedin\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Hillary\"\n                  :op2 \"Clinton\"))\n      :ARG2 (a / aide\n            :ARG1-of (t / trust-02\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 a\n                        :ARG3 (m / most))))\n      :time (c / campaign-01\n            :time (d / date-entity\n                  :year 2016)))", "# ::snt On Saturday , Huma Abedin and husband Anthony Weiner went for Mexican lunch .\n(g / go-02\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Huma\"\n                        :op2 \"Abedin\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Anthony\"\n                        :op2 \"Weiner\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (h2 / husband))))\n      :ARG4 (l / lunch\n            :mod (c / country\n                  :name (n3 / name\n                        :op1 \"Mexico\")))\n      :time (d / date-entity\n            :weekday (s / saturday)))", "# ::snt It is one of she and husband Anthony Weiner final weekends before the 2016 campaign gets into swing .\n(w / weekend\n      :ARG1-of (ii / include-91\n            :ARG2 (w2 / weekend\n                  :mod (f / final)\n                  :time (b / before\n                        :op1 (s / swing-06\n                              :ARG1 (c / campaign-01\n                                    :time (d / date-entity\n                                          :year 2016))))\n                  :poss (a / and\n                        :op1 (s2 / she)\n                        :op2 (p / person\n                              :name (n / name\n                                    :op1 \"Anthony\"\n                                    :op2 \"Weiner\")\n                              :ARG0-of (h / have-rel-role-91\n                                    :ARG1 s2\n                                    :ARG2 (h2 / husband))))))\n      :domain (ii2 / it))"], "tree": ["(t / tip-02\n   :polarity -\n   :ARG0 (p / person :name (n / name :op1 \"Huma\" :op2 \"Amin\"))\n   :ARG2 (c / company\n            :name (n2 / name\n                      :op1 \"Chipotle\")\n            :location (s / state\n                         :name (n3 / name\n                                   :op1 \"Iowa\"))))", "(f / fire-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Amin\"))\n   :ARG2 (t / tip-02\n            :polarity -\n            :ARG0 p\n            :ARG2 (c / company\n                     :name (n2 / name\n                               :op1 \"Chipotle\")\n                     :location (s / state\n                                  :name (n3 / name\n                                            :op1 \"Iowa\")))))", "(c / campaign-01\n   :time (d / date-entity\n            :year 2016))", "(h2 / have-degree-91\n    :ARG1 (a / aide)\n    :ARG3 (m / most))", "(c / campaign-01\n   :time (d / date-entity\n            :year 2016))", "(t / trust-02\n   :ARG2 (h2 / have-degree-91\n             :ARG1 (a / aide)\n             :ARG3 (m / most)))", "(h / have-rel-role-91\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Hillary\"\n                       :op2 \"Clinton\"))\n   :ARG2 (a / aide))", "(h / have-rel-role-91\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Hillary\"\n                       :op2 \"Clinton\"))\n   :ARG2 (a / aide))", "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n   :ARG2 (h2 / husband))", "(g / go-02\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\")))", "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n                      :ARG2 (h2 / husband))))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\"))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\"))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\"))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Huma\"\n                             :op2 \"Abedin\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Anthony\"\n                               :op2 \"Weiner\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband)))))", "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n                      :ARG2 (h2 / husband)))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :ARG4 l)", "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n                      :ARG2 (h2 / husband)))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :ARG4 l\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Weiner\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n                      :ARG2 (h2 / husband)))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :ARG4 l\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Huma\"\n                             :op2 \"Abedin\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Anthony\"\n                               :op2 \"Weiner\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\"))))", "(g / go-02\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Huma\"\n                             :op2 \"Abedin\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Anthony\"\n                               :op2 \"Weiner\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(g / go-02\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Huma\"\n                             :op2 \"Abedin\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Anthony\"\n                               :op2 \"Weiner\")\n                     :ARG0 (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (h2 / husband))))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n3 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s / saturday)))", "(h / have-rel-role-91\n   :ARG1 (s2 / she)\n   :ARG2 (h2 / husband))", "(c / campaign-01\n   :time (d / date-entity\n            :year 2016))", "(c / campaign-01\n   :time (d / date-entity\n            :year 2016))", "(s / swing-06\n   :ARG1 (c / campaign-01\n            :time (d / date-entity\n                     :year 2016)))", "(ii / include-91\n    :ARG2 (w2 / weekend\n              :mod (f / final)\n              :time (b / before\n                       :op1 (s / swing-06\n                               :ARG1 (c / campaign-01\n                                        :time (d / date-entity\n                                                 :year 2016))))\n              :poss (s2 / she)))", "(ii / include-91\n    :ARG2 (w2 / weekend\n              :mod (f / final)\n              :time (b / before\n                       :op1 (s / swing-06\n                               :ARG1 (c / campaign-01\n                                        :time (d / date-entity\n                                                 :year 2016))))\n              :poss (p / person\n                       :name (n / name\n                                :op1 \"Anthony\"\n                                :op2 \"Weiner\")\n                       :ARG0 (h / have-rel-role-91\n                                :ARG1 (s2 / she)\n                                :ARG2 (h2 / husband)))))", "(ii / include-91\n    :ARG2 (w2 / weekend\n              :mod (f / final)\n              :time (b / before\n                       :op1 (s / swing-06\n                               :ARG1 (c / campaign-01\n                                        :time (d / date-entity\n                                                 :year 2016))))\n              :poss (a / and\n                       :op1 (s2 / she)\n                       :op2 (p / person\n                               :name (n / name\n                                        :op1 \"Anthony\"\n                                        :op2 \"Weiner\")\n                               :ARG0 (h / have-rel-role-91\n                                        :ARG1 s2\n                                        :ARG2 (h2 / husband))))))"], "smus": ["Huma Amin is not tipped for Chipotle in Iowa.", "Huma Amin was fired for not tipping Chipotle in Iowa.", "The campaign is in 2016.", "the aide was the most.", "The campaign is in 2016.", "The aide was trusted most.", "Huma Abedin is Hillary Clinton's aide.", "Huma Abedin is Hillary Clinton's aide.", "Husband Huma Abedin", "Saturday went.", "Saturday went.", "Huma Abedin went.", "Anthony Weiner went with Huma Abedin's husband.", "Huma Abedin went to a Mexican lunch.", "Huma Abedin went to a Mexican lunch Saturday.", "Huma Abedin went to a Mexican lunch Saturday.", "Huma Abedin and her husband Anthony Weiner went.", "Anthony Weiner, husband Huma Abedin, went to a Mexican lunch.", "Anthony Weiner and Husband Huma Abedin went to a Mexican lunch Saturday.", "Anthony Weiner and Husband Huma Abedin went to a Mexican lunch Saturday.", "Huma Abedin and her husband Anthony Weiner went to a Mexican lunch.", "Huma Abedin and her husband Anthony Weiner went to a Mexican lunch Saturday.", "Huma Abedin and her husband Anthony Weiner went to a Mexican lunch Saturday.", "She is husband.", "The campaign is in 2016", "The campaign is in 2016", "The 2016 campaign is in swing.", "One of her final weekends before the swing of the 2016 campaign.", "One of her husband, Anthony Weiner,'s final weekends before the swing of the 2016 campaign.", "One of her and her husband, Anthony Weiner,'s final weekends before the swing of the 2016 campaign."]}, {"instance_id": "realsumm-69", "summary": "Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 . Reached height of Gary popularity in 1964 , when Gary was ranked 16th . Meanwhile , names including Dexter and Jenson are now in the top 100 .", "summary_trees": ["# ::snt Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 .\n(f / fall-01\n      :ARG1 (n / name\n            :name (n2 / name\n                  :op1 \"Gary\"))\n      :ARG3 (r / rank-01\n            :ARG2 147\n            :ARG1 n\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (p / popular-02\n                        :ARG1 n)\n                  :ARG3 (m / most)\n                  :ARG5 (n3 / name\n                        :mod (c / country\n                              :name (n4 / name\n                                    :op1 \"Britain\"))))\n            :time (d / date-entity\n                  :year 1996))\n      :ARG4 (r2 / rank-01\n            :ARG2 1091\n            :ARG1 n\n            :time (d2 / date-entity\n                  :year 2013)))", "# ::snt Reached height of Gary popularity in 1964 , when Gary was ranked 16th .\n(r / reach-01\n      :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                  :poss (p2 / person\n                        :name (n / name\n                              :op1 \"Gary\"))))\n      :time (d / date-entity\n            :year 1964\n            :time-of (r2 / rank-01\n                  :ARG1 p2\n                  :ARG2 16)))", "# ::snt Meanwhile , names including Dexter and Jenson are now in the top 100 .\n(t / top-01\n      :ARG1 (n / name\n            :ARG2-of (ii / include-01\n                  :ARG1 (a / and\n                        :op1 (n2 / name\n                              :name (n3 / name\n                                    :op1 \"Dexter\"))\n                        :op2 (n4 / name\n                              :name (n5 / name\n                                    :op1 \"Jenson\")))))\n      :ARG2 100\n      :time (n6 / now)\n      :time (m / meanwhile))"], "tree": ["(r2 / rank-01\n    :time (d2 / date-entity\n              :year 2013))", "(r / rank-01\n   :time (d / date-entity\n            :year 1996))", "(r2 / rank-01\n    :ARG2 1091\n    :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))\n    :time (d2 / date-entity\n              :year 2013))", "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\")))", "(h / have-degree-91\n   :ARG2 (p / popular-02\n            :ARG1 (n / name :name (n2 / name :op1 \"Gary\")))\n   :ARG3 (m / most)\n   :ARG5 (n3 / name\n             :mod (c / country\n                     :name (n4 / name\n                               :op1 \"Britain\"))))", "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG4 (r2 / rank-01\n             :ARG2 1091\n             :ARG1 n\n             :time (d2 / date-entity\n                       :year 2013)))", "(r / rank-01\n   :ARG2 147\n   :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))\n   :ARG1 (h / have-degree-91\n            :ARG2 (p / popular-02\n                     :ARG1 n)\n            :ARG3 (m / most)\n            :ARG5 (n3 / name\n                      :mod (c / country\n                              :name (n4 / name\n                                        :op1 \"Britain\"))))\n   :time (d / date-entity\n            :year 1996))", "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG3 (r / rank-01\n            :ARG2 147\n            :ARG1 n\n            :ARG1 (h / have-degree-91\n                     :ARG2 (p / popular-02\n                              :ARG1 n)\n                     :ARG3 (m / most)\n                     :ARG5 (n3 / name\n                               :mod (c / country\n                                       :name (n4 / name\n                                                 :op1 \"Britain\"))))\n            :time (d / date-entity\n                     :year 1996))\n   :ARG4 (r2 / rank-01\n             :ARG2 1091\n             :ARG1 n\n             :time (d2 / date-entity\n                       :year 2013)))", "(r / reach-01\n   :time (d / date-entity\n            :year 1964\n            :time (r2 / rank-01)))", "(h / high-02\n   :ARG1 (p / popularity\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Gary\"))))", "(h / high-02\n   :ARG1 (p / popularity\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Gary\"))))", "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :poss (p2 / person\n                               :name (n / name\n                                        :op1 \"Gary\"))))\n   :time (d / date-entity\n            :year 1964\n            :time (r2 / rank-01\n                      :ARG1 p2\n                      :ARG2 16)))", "(t / top-01\n   :time (n6 / now)\n   :time (m / meanwhile))", "(ii / include-01\n    :ARG1 (n2 / name\n              :name (n3 / name\n                        :op1 \"Dexter\")))", "(ii / include-01\n    :ARG1 (n4 / name\n              :name (n5 / name\n                        :op1 \"Jenson\")))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (n2 / name\n                                :name (n3 / name\n                                          :op1 \"Dexter\")))))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (n2 / name\n                                :name (n3 / name\n                                          :op1 \"Dexter\")))))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (n4 / name\n                                :name (n5 / name\n                                          :op1 \"Jenson\")))))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (n2 / name\n                                :name (n3 / name\n                                          :op1 \"Dexter\")))))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (n4 / name\n                                :name (n5 / name\n                                          :op1 \"Jenson\"))))\n   :ARG2 100)", "(ii / include-01\n    :ARG1 (a / and\n             :op1 (n2 / name\n                      :name (n3 / name\n                                :op1 \"Dexter\"))\n             :op2 (n4 / name\n                      :name (n5 / name\n                                :op1 \"Jenson\"))))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (n4 / name\n                                :name (n5 / name\n                                          :op1 \"Jenson\"))))\n   :ARG2 100\n   :time (n6 / now)\n   :time (m / meanwhile))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (a / and\n                               :op1 (n2 / name\n                                        :name (n3 / name\n                                                  :op1 \"Dexter\"))\n                               :op2 (n4 / name\n                                        :name (n5 / name\n                                                  :op1 \"Jenson\"))))))", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (a / and\n                               :op1 (n2 / name\n                                        :name (n3 / name\n                                                  :op1 \"Dexter\"))\n                               :op2 (n4 / name\n                                        :name (n5 / name\n                                                  :op1 \"Jenson\")))))\n   :ARG2 100)", "(t / top-01\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (a / and\n                               :op1 (n2 / name\n                                        :name (n3 / name\n                                                  :op1 \"Dexter\"))\n                               :op2 (n4 / name\n                                        :name (n5 / name\n                                                  :op1 \"Jenson\")))))\n   :ARG2 100\n   :time (n6 / now)\n   :time (m / meanwhile))"], "smus": ["2013 rankings", "In 1996, the rank was", "Gary is number 1091 in 2013.", "The name Gary fell.", "Gary is the most popular British name.", "Gary fell to number 1091 in 2013.", "Gary was ranked 147th most popular British name in 1996.", "Gary fell from 147th in 1996 to 1091th in 2013 as the most popular British name.", "Reached in 1964 when ranked.", "Gary's popularity is high.", "Gary's popularity is high.", "Gary's popularity reached a high in 1964 when he was ranked 16th.", "Meanwhile, top now.", "including the names Dexter.", "including the names of Jenson.", "Top names include: Dexter", "Top names include: Dexter", "Top names including Jenson", "Top names include: Dexter", "The top 100 names including Johnson", "including the names Dexter and Johnson.", "Meanwhile, names including Johnson are now in the top 100.", "Top names include: Dexter and Johnson.", "Top 100 names include: Dexter and Johnson.", "Meanwhile, names including Dexter and Johnson are now the top 100."]}, {"instance_id": "realsumm-70", "summary": "Leanne Mitchell has been dropped by Leanne Mitchell label and sings at a holiday camp . Andrea Begley and Jermain Jackman are yet to become household names . Will 2015 winner Stevie become a chart success or another Voice flop ? .", "summary_trees": ["# ::snt Leanne Mitchell has been dropped by Leanne Mitchell label and sings at a holiday camp .\n(a / and\n      :op1 (d / drop-05\n            :ARG0 (l / label-01\n                  :ARG2 (p / person\n                        :name (n / name\n                              :op1 \"Leanne\"\n                              :op2 \"Mitchell\")))\n            :ARG1 p)\n      :op2 (s / sing-01\n            :ARG0 p\n            :location (c / camp\n                  :mod (h / holiday))))", "# ::snt Andrea Begley and Jermain Jackman are yet to become household names .\n(h / have-11\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Andrea\"\n                        :op2 \"Begley\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Jermain\"\n                        :op2 \"Jackman\")))\n      :ARG1 (y / yet)\n      :ARG2 (b / become-01\n            :ARG1 a\n            :ARG2 (n3 / name\n                  :mod (h2 / household))))", "# ::snt Will 2015 winner Stevie become a chart success or another Voice flop ? .\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Stevie\")\n            :ARG0-of (w / win-01\n                  :time (d / date-entity\n                        :year 2015)))\n      :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                  :ARG0 p\n                  :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                  :ARG1 (v / voice-01)\n                  :mod (a2 / another))))"], "tree": ["(s / sing-01\n   :location (c / camp\n                :mod (h / holiday)))", "(s / sing-01\n   :ARG0 (p / person :name (n / name :op1 \"Leanne\" :op2 \"Mitchell\"))\n   :location (c / camp\n                :mod (h / holiday)))", "(l / label-01\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Leanne\"\n                     :op2 \"Mitchell\")))", "(d / drop-05\n   :ARG0 (l / label-01\n            :ARG2 (p / person\n                     :name (n / name\n                              :op1 \"Leanne\"\n                              :op2 \"Mitchell\")))\n   :ARG1 p)", "(d / drop-05\n   :ARG0 (l / label-01\n            :ARG2 (p / person\n                     :name (n / name\n                              :op1 \"Leanne\"\n                              :op2 \"Mitchell\")))\n   :ARG1 p)", "(b / become-01\n   :ARG1 (a / and)\n   :ARG2 (n3 / name\n             :mod (h2 / household)))", "(b / become-01\n   :ARG1 (a / and)\n   :ARG2 (n3 / name\n             :mod (h2 / household)))", "(h / have-11\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrea\"\n                     :op2 \"Begley\"))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 p\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(h / have-11\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrea\"\n                     :op2 \"Begley\"))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 p\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(h / have-11\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jermain\"\n                       :op2 \"Jackman\"))\n   :ARG1 (y / yet)\n   :ARG1 y\n   :ARG2 (b / become-01\n            :ARG1 p2\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(h / have-11\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jermain\"\n                       :op2 \"Jackman\"))\n   :ARG1 (y / yet)\n   :ARG1 y\n   :ARG2 (b / become-01\n            :ARG1 p2\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(h / have-11\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrea\"\n                             :op2 \"Begley\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jermain\"\n                               :op2 \"Jackman\")))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 a\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(h / have-11\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrea\"\n                             :op2 \"Begley\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jermain\"\n                               :op2 \"Jackman\")))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 a\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(s / succeed-01\n   :ARG0 (p / person :name (n / name :op1 \"Stevie\")))\n   :ARG1 (c / chart-01))", "(w / win-01\n   :time (d / date-entity\n            :year 2015))", "(s / succeed-01\n   :ARG0 (p / person :name (n / name :op1 \"Stevie\")))\n   :ARG1 (c / chart-01))", "(w / win-01\n   :time (d / date-entity\n            :year 2015))", "(f / flop-01\n   :ARG1 (v / voice-01)\n   :mod (a2 / another))", "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\")\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 p\n                    :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                    :ARG1 (v / voice-01)\n                    :mod (a2 / another))))", "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\")\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 p\n                    :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                    :ARG1 (v / voice-01)\n                    :mod (a2 / another))))"], "smus": ["sings in a holiday camp.", "Leanne Mitchell sings at a holiday camp.", "Leanne Mitchell is the label of a...", "Leanne Mitchell was dropped by the label.", "Leanne Mitchell was dropped by the label.", "and become a household name.", "and become a household name.", "Andrea Begley has yet to become a household name.", "Andrea Begley has yet to become a household name.", "Jermain Jackson has yet to become a household name.", "Jermain Jackson has yet to become a household name.", "Andrea Begley and Jerry Jackson have yet to become household names.", "Andrea Begley and Jerry Jackson have yet to become household names.", "Steve's success on the chart.", "The win in 2015", "Steve's success on the chart.", "The win in 2015", "Another Voice Flop.", "Steve's 2015 win became either a chart success or another flop?", "Steve's 2015 win became either a chart success or another flop?"]}, {"instance_id": "realsumm-71", "summary": "Romanian - born Alexandra Harra , 28 , has become an Instagram star . Model , who 's posed for Playboy , posts selfies with inspirational messages . After dyeing locks black , being hailed as a rival to Kim Kardashian .", "summary_trees": ["# ::snt Romanian - born Alexandra Harra , 28 , has become an Instagram star .\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Alexandra\"\n                  :op2 \"Harra\")\n            :ARG1-of (b2 / bear-02\n                  :location (c / country\n                        :name (n2 / name\n                              :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG2 (s / star\n            :mod (p2 / publication\n                  :name (n3 / name\n                        :op1 \"Instagram\"))))", "# ::snt Model , who 's posed for Playboy , posts selfies with inspirational messages .\n(p / post-01\n      :ARG0 (m / model\n            :ARG0-of (p2 / pose-01\n                  :ARG2 (m2 / magazine\n                        :name (n / name\n                              :op1 \"Playboy\"))))\n      :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                  :ARG0-of (ii / inspire-01))))", "# ::snt After dyeing locks black , being hailed as a rival to Kim Kardashian .\n(h / hail-02\n      :ARG2 (r / rival-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")))\n      :time (a / after\n            :op1 (d / dye-01\n                  :ARG1 (l / lock)\n                  :ARG2 (b / black-04\n                        :ARG1 l))))"], "tree": ["(b2 / bear-02\n    :location (c / country\n                 :name (n2 / name\n                           :op1 \"Romania\")))", "(b2 / bear-02\n    :location (c / country\n                 :name (n2 / name\n                           :op1 \"Romania\")))", "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alexandra\"\n                     :op2 \"Harra\")\n            :ARG1 (b2 / bear-02\n                      :location (c / country\n                                   :name (n2 / name\n                                             :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))", "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alexandra\"\n                     :op2 \"Harra\")\n            :ARG1 (b2 / bear-02\n                      :location (c / country\n                                   :name (n2 / name\n                                             :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))", "(p2 / pose-01\n    :ARG2 (m2 / magazine\n              :name (n / name\n                       :op1 \"Playboy\")))", "(p / post-01\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))", "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\")))))", "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\"))))\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))", "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\"))))\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))", "(h / hail-02\n   :time (a / after\n            :op1 (d / dye-01)))", "(d / dye-01\n   :ARG1 (l / lock)\n   :ARG2 (b / black-04\n            :ARG1 l))", "(r / rival-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kim\"\n                     :op2 \"Kardinez\")))", "(h / hail-02\n   :ARG2 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\")))\n   :time (a / after\n            :op1 (d / dye-01\n                    :ARG1 (l / lock)\n                    :ARG2 (b / black-04\n                             :ARG1 l))))"], "smus": ["Born in Romania.", "Born in Romania.", "Alexandra Harra, 28, a Romanian-born star on Instagram, has become a star.", "Alexandra Harra, 28, a Romanian-born star on Instagram, has become a star.", "Posing for Playboy.", "Posts selfies with inspiring messages", "Posts by Model Posing for Playboy", "Model posed for Playboy posts selfies with inspirational messages", "Model posed for Playboy posts selfies with inspirational messages", "Hail after dyeing.", "The locks were dyed black.", "Kim Kardinez is a rival.", "Kim Kardinez's rivalry was hailed after the locks were dyed black."]}, {"instance_id": "realsumm-72", "summary": "Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain . However , Nadir Ciftci was left blushing as rivals earned impressive victory . impressive victory gave rivals rivals first derby win in more than a decade . Goals from Greg Stewart , Jake McPake and Paul Heffernen secured impressive victory .", "summary_trees": ["# ::snt Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain .\n(c / celebrate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nadir\"\n                  :op2 \"Ciftci\"))\n      :manner (b / blow-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Scott\"\n                              :op2 \"Bain\")\n                        :ARG0-of (g / goalkeeper-01)\n                        :ARG0-of (r / rival-01\n                              :ARG1 p)))))", "# ::snt However , Nadir Ciftci was left blushing as rivals earned impressive victory .\n(c / contrast-01\n      :ARG2 (l / leave-13\n            :ARG0 (e / earn-01\n                  :ARG0 (r / rival)\n                  :ARG1 (w / win-01\n                        :ARG0 r\n                        :ARG0-of (ii / impress-01)))\n            :ARG1 (b / blush-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Nadia\"\n                              :op2 \"Ciftci\")))))", "# ::snt impressive victory gave rivals rivals first derby win in more than a decade .\n(g / give-01\n      :ARG0 (w / win-01\n            :ARG1-of (ii / impress-01))\n      :ARG1 (w2 / win-01\n            :ARG0 (r / rival\n                  :ARG0-of (r2 / rival-01))\n            :ord (o / ordinal-entity\n                  :value 1\n                  :range (m / more-than\n                        :op1 (t / temporal-quantity\n                              :quant 1\n                              :unit (d / decade))))\n            :mod (d2 / derby))\n      :ARG2 r)", "# ::snt Goals from Greg Stewart , Jake McPake and Paul Heffernen secured impressive victory .\n(s / secure-02\n      :ARG0 (g / goal\n            :source (a / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Greg\"\n                              :op2 \"Stewart\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Jake\"\n                              :op2 \"McPake\"))\n                  :op3 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Paul\"\n                              :op2 \"Heffernen\"))))\n      :ARG1 (w / win-01\n            :ARG0-of (ii / impress-01)))"], "tree": ["(k / kiss-01\n   :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Scott\"\n                       :op2 \"Bain\")\n             :ARG0 (g / goalkeeper-01)\n             :ARG0 (r / rival-01\n                      :ARG1 p)))", "(b / blow-01\n   :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Scott\"\n                                :op2 \"Bain\")\n                      :ARG0 (g / goalkeeper-01)\n                      :ARG0 (r / rival-01\n                               :ARG1 p))))", "(c / celebrate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nadir\"\n                     :op2 \"Ciftci\"))\n   :manner (b / blow-01\n              :ARG0 p\n              :ARG1 (k / kiss-01\n                       :ARG0 p\n                       :ARG1 (p2 / person\n                                 :name (n2 / name\n                                           :op1 \"Scott\"\n                                           :op2 \"Bain\")\n                                 :ARG0 (g / goalkeeper-01)\n                                 :ARG0 (r / rival-01\n                                          :ARG1 p)))))", "(w / win-01\n   :ARG0 (r / rival)\n   :ARG0 (ii / impress-01))", "(b / blush-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Nadia\"\n                     :op2 \"Ciftci\")))", "(e / earn-01\n   :ARG0 (r / rival)\n   :ARG1 (w / win-01\n            :ARG0 r\n            :ARG0 (ii / impress-01)))", "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG0 (r / rival)\n            :ARG1 (w / win-01\n                     :ARG0 r\n                     :ARG0 (ii / impress-01)))\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Nadia\"\n                              :op2 \"Ciftci\"))))", "(c / contrast-01\n   :ARG2 (l / leave-13\n            :ARG0 (e / earn-01\n                     :ARG0 (r / rival)\n                     :ARG1 (w / win-01\n                              :ARG0 r\n                              :ARG0 (ii / impress-01)))\n            :ARG1 (b / blush-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Nadia\"\n                                       :op2 \"Ciftci\")))))", "(w2 / win-01\n    :ARG0 (r / rival\n             :ARG0 (r2 / rival-01)))", "(w2 / win-01\n    :ord (o / ordinal-entity\n            :value 1\n            :range (m / more-than\n                      :op1 (t / temporal-quantity\n                              :quant 1\n                              :unit (d / decade))))\n    :mod (d2 / derby))", "(w2 / win-01\n    :ARG0 (r / rival\n             :ARG0 (r2 / rival-01))\n    :ord (o / ordinal-entity\n            :value 1\n            :range (m / more-than\n                      :op1 (t / temporal-quantity\n                              :quant 1\n                              :unit (d / decade))))\n    :mod (d2 / derby))", "(g / give-01\n   :ARG1 (w2 / win-01\n             :ARG0 (r / rival\n                      :ARG0 (r2 / rival-01))\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t / temporal-quantity\n                                       :quant 1\n                                       :unit (d / decade))))\n             :mod (d2 / derby)))", "(g / give-01\n   :ARG1 (w2 / win-01\n             :ARG0 (r / rival\n                      :ARG0 (r2 / rival-01))\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t / temporal-quantity\n                                       :quant 1\n                                       :unit (d / decade))))\n             :mod (d2 / derby))\n   :ARG2 r)", "(g / give-01\n   :ARG0 (w / win-01\n            :ARG1 (ii / impress-01))\n   :ARG1 (w2 / win-01\n             :ARG0 (r / rival\n                      :ARG0 (r2 / rival-01))\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t / temporal-quantity\n                                       :quant 1\n                                       :unit (d / decade))))\n             :mod (d2 / derby)))", "(g / give-01\n   :ARG0 (w / win-01\n            :ARG1 (ii / impress-01))\n   :ARG1 (w2 / win-01\n             :ARG0 (r / rival\n                      :ARG0 (r2 / rival-01))\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t / temporal-quantity\n                                       :quant 1\n                                       :unit (d / decade))))\n             :mod (d2 / derby))\n   :ARG2 r)", "(g / give-01\n   :ARG0 (w / win-01\n            :ARG1 (ii / impress-01))\n   :ARG1 (w2 / win-01\n             :ARG0 (r / rival\n                      :ARG0 (r2 / rival-01))\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t / temporal-quantity\n                                       :quant 1\n                                       :unit (d / decade))))\n             :mod (d2 / derby))\n   :ARG2 r)", "(s / secure-02\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p / person\n                       :name (n / name\n                                :op1 \"Greg\"\n                                :op2 \"Stewart\"))))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Jake\"\n                                  :op2 \"McPake\"))))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p / person\n                       :name (n / name\n                                :op1 \"Greg\"\n                                :op2 \"Stewart\"))))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Jake\"\n                                  :op2 \"McPake\"))))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p3 / person\n                        :name (n3 / name\n                                  :op1 \"Paul\"\n                                  :op2 \"Heffernen\")))\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p3 / person\n                        :name (n3 / name\n                                  :op1 \"Paul\"\n                                  :op2 \"Heffernen\")))\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (a / and\n                       :op1 (p / person\n                               :name (n / name\n                                        :op1 \"Greg\"\n                                        :op2 \"Stewart\"))\n                       :op2 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Jake\"\n                                          :op2 \"McPake\"))\n                       :op3 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Paul\"\n                                          :op2 \"Heffernen\"))))\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (a / and\n                       :op1 (p / person\n                               :name (n / name\n                                        :op1 \"Greg\"\n                                        :op2 \"Stewart\"))\n                       :op2 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Jake\"\n                                          :op2 \"McPake\"))\n                       :op3 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Paul\"\n                                          :op2 \"Heffernen\"))))\n   :ARG1 (w / win-01\n            :ARG0 (ii / impress-01)))"], "smus": ["Nadir ciftci kisses rival goalkeeper Scott Bain.", "Nadir ciftci was blowing a kiss from rival goalkeeper Scott Bain.", "Nadir ciftci was celebrated by blowing a kiss to rival goalkeeper Scott Bain.", "The rivals won by an impressive margin.", "Nadia Ciftci is blushing.", "The rivals earned an impressive victory.", "The fact that rivals earned an impressive victory has left Nadia Ciftci blushing.", "But Nadia Ciftci was left blushing as rivals earned an impressive victory.", "The victory for rivals.", "The derby is the first in more than a decade.", "The derby is the first victory by rivals in more than a decade.", "It gave rivals their first more than a decade-long derby victory.", "The derby gave rivals their first more than a decade-long victory.", "The impressing win gave rivals their first derby victory in more than a decade.", "The impressing win gave rivals their first derby victory in more than a decade.", "The impressing win gave rivals their first derby victory in more than a decade.", "An impressive win secured.", "Greg Stewart's goals secured.", "Jake McPake's goals secured.", "Greg Stewart's goals secured.", "Jake McPake's goals secured.", "Paul Heffernen's goals secured an impressive victory.", "Paul Heffernen's goals secured an impressive victory.", "The goals of Greg Stewart, Jake McPake and Paul Heffernen secured an impressive win.", "The goals of Greg Stewart, Jake McPake and Paul Heffernen secured an impressive win."]}, {"instance_id": "realsumm-73", "summary": "Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney . Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson . Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends .", "summary_trees": ["# ::snt Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney .\n(c / close-01\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 \"Mercedes-Benz\"\n                  :op2 \"Fashion\"\n                  :op3 \"Week\"\n                  :op4 \"Australia\")\n            :time (d / date-entity\n                  :year 2015))\n      :time (d2 / date-entity\n            :weekday (t / thursday)\n            :dayperiod (n2 / night))\n      :location (c2 / city\n            :name (n3 / name\n                  :op1 \"Sydney\")))", "# ::snt Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson .\n(ii / include-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Maticevski\"))\n            :op2 (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"Romance\"\n                        :op2 \"Was\"\n                        :op3 \"Born\"))\n            :op3 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Tome\"))\n            :op4 (p3 / person\n                  :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\"))\n            :op5 (p4 / person\n                  :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\")))\n      :ARG2 (s / show-04\n            :ARG1-of (s2 / stand-out-06)))", "# ::snt Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends .\n(t / trend\n      :ARG1-of (r / repeat-01)\n      :domain (a / and\n            :op1 (f / fabric\n                  :mod (s / sheer)\n                  :mod (m / metallic))\n            :op2 (s2 / silhouette\n                  :mod (s3 / slouchy)\n                  :mod (v / voluminous))))"], "tree": ["(c / close-01\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (n2 / night)))", "(c / close-01\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Mercedes-Benz\"\n                     :op2 \"Fashion\"\n                     :op3 \"Week\"\n                     :op4 \"Australia\")\n            :time (d / date-entity\n                     :year 2015)))", "(c / close-01\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (n2 / night))\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Sydney\")))", "(c / close-01\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Mercedes-Benz\"\n                     :op2 \"Fashion\"\n                     :op3 \"Week\"\n                     :op4 \"Australia\")\n            :time (d / date-entity\n                     :year 2015))\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (n2 / night)))", "(c / close-01\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Mercedes-Benz\"\n                     :op2 \"Fashion\"\n                     :op3 \"Week\"\n                     :op4 \"Australia\")\n            :time (d / date-entity\n                     :year 2015))\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (n2 / night))\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Sydney\")))", "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Maticevski\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n3 / name\n                        :op1 \"Tome\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (b / broadcast-program\n             :name (n2 / name\n                       :op1 \"Romance\"\n                       :op2 \"Was\"\n                       :op3 \"Born\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (p4 / person\n              :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06))\n    :ARG2 s)", "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Maticevski\"))\n             :op2 (b / broadcast-program\n                     :name (n2 / name\n                               :op1 \"Romance\"\n                               :op2 \"Was\"\n                               :op3 \"Born\"))\n             :op3 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Tome\"))\n             :op4 (p3 / person\n                      :name (n4 / name\n                                :op1 \"Steven\"\n                                :op2 \"Khalil\"))\n             :op5 (p4 / person\n                      :name (n5 / name\n                                :op1 \"Johanna\"\n                                :op2 \"Johnson\")))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(t / trend\n   :ARG1-of (r / repeat-01)\n   :domain (a / and\n              :op1 (f / fabric\n                      :mod (s / sheer)\n                      :mod (m / metallic))\n              :op2 (s2 / silhouette\n                       :mod (s3 / slouchy)\n                       :mod (v / voluminous))))"], "smus": ["Closed Thursday night.", "The Mercedes-Benz Fashion Week Australia 2015 closes.", "The closing will take place Thursday night in Sydney.", "Mercedes-Benz Fashion Week Australia 2015 closes Thursday night.", "Mercedes-Benz Fashion Week Australia 2015 closes Thursday night in Sydney", "Among the standout shows was Matias Kaczynski.", "Tome was one of the stand out shows.", "Steven Khalil was one of the stand out shows.", "Romance Was Born was one of the standout shows.", "The stand out shows included Johanna Johnson.", "The standout shows included Mariusevski, Romance Was Born, Tome, Steven Halil and Johanna Johnson.", "Metallic sheer fabrics and voluminous slouchy silhouettes are repeat trends."]}, {"instance_id": "realsumm-74", "summary": "Lindsay Sandiford fears Lindsay Sandiford will be next to face the firing squad . Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal . Lindsay Sandiford has been on death row in Bali since 2012 . Lindsay Sandiford was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 .", "summary_trees": ["# ::snt Lindsay Sandiford fears Lindsay Sandiford will be next to face the firing squad .\n(f / fear-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lindsay\"\n                  :op2 \"Sandiford\"))\n      :ARG1 (n2 / next\n            :domain p\n            :purpose (f2 / face-01\n                  :ARG0 p\n                  :ARG1 (s / squad\n                        :ARG0-of (f3 / fire-01)))))", "# ::snt Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal .\n(k / kill-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Andrew\"\n                        :op2 \"Chan\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Myuran\"\n                        :op2 \"Sukumaran\")))\n      :time (a2 / after\n            :op1 (m / meal\n                  :mod (b / bucket)\n                  :mod (c / company\n                        :name (n3 / name\n                              :op1 \"KFC\"))\n                  :mod (f / final))))", "# ::snt Lindsay Sandiford has been on death row in Bali since 2012 .\n(b / be-located-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Lindsay\"\n                  :op2 \"Sandiford\"))\n      :ARG2 (r / row\n            :mod (d / die-01))\n      :location (ii / island\n            :name (n2 / name\n                  :op1 \"Bali\"))\n      :time (s / since\n            :op1 (d2 / date-entity\n                  :year 2012)))", "# ::snt Lindsay Sandiford was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 .\n(c / convict-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Lindsay\"\n                  :op2 \"Sandiford\"))\n      :ARG2 (a / attempt-01\n            :ARG0 p\n            :ARG1 (s / smuggle-01\n                  :ARG0 p\n                  :ARG1 (c2 / cocaine\n                        :quant (m / monetary-quantity\n                              :quant 1600000\n                              :unit (p2 / pound))))\n            :time (d / date-entity\n                  :year 2012)))"], "tree": ["(f2 / face-01\n    :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n    :ARG1 (s / squad\n             :ARG0 (f3 / fire-01)))", "(f2 / face-01\n    :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n    :ARG1 (s / squad\n             :ARG0 (f3 / fire-01)))", "(f / fear-01\n   :ARG1 (n2 / next\n             :domain (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n             :purpose (f2 / face-01\n                          :ARG0 p\n                          :ARG1 (s / squad\n                                   :ARG0 (f3 / fire-01)))))", "(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG1 (n2 / next\n             :domain p\n             :purpose (f2 / face-01\n                          :ARG0 p\n                          :ARG1 (s / squad\n                                   :ARG0 (f3 / fire-01)))))", "(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG1 (n2 / next\n             :domain p\n             :purpose (f2 / face-01\n                          :ARG0 p\n                          :ARG1 (s / squad\n                                   :ARG0 (f3 / fire-01)))))", "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\")))", "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\")))", "(k / kill-01\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final))))", "(k / kill-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrew\"\n                             :op2 \"Chan\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Myuran\"\n                               :op2 \"Sukumaran\"))))", "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final))))", "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final)))\n   :time a2)", "(k / kill-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrew\"\n                             :op2 \"Chan\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Myuran\"\n                               :op2 \"Sukumaran\")))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final))))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG2 (r / row\n            :mod (d / die-01)))", "(b / be-located-at-91\n   :location (ii / island\n                 :name (n2 / name\n                           :op1 \"Bali\"))\n   :time (s / since\n            :op1 (d2 / date-entity\n                     :year 2012)))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG2 (r / row\n            :mod (d / die-01))\n   :location (ii / island\n                 :name (n2 / name\n                           :op1 \"Bali\"))\n   :time (s / since\n            :op1 (d2 / date-entity\n                     :year 2012)))", "(a / attempt-01\n   :time (d / date-entity\n            :year 2012))", "(a / attempt-01\n   :time (d / date-entity\n            :year 2012))", "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\")))", "(s / smuggle-01\n   :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n   :ARG1 (c2 / cocaine\n             :quant (m / monetary-quantity\n                       :quant 1600000\n                       :unit (p2 / pound))))", "(a / attempt-01\n   :ARG1 (s / smuggle-01\n            :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n            :ARG1 (c2 / cocaine\n                      :quant (m / monetary-quantity\n                                :quant 1600000\n                                :unit (p2 / pound)))))", "(a / attempt-01\n   :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n   :ARG1 (s / smuggle-01\n            :ARG0 p\n            :ARG1 (c2 / cocaine\n                      :quant (m / monetary-quantity\n                                :quant 1600000\n                                :unit (p2 / pound)))))", "(a / attempt-01\n   :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n   :ARG1 (s / smuggle-01\n            :ARG0 p\n            :ARG1 (c2 / cocaine\n                      :quant (m / monetary-quantity\n                                :quant 1600000\n                                :unit (p2 / pound))))\n   :time (d / date-entity\n            :year 2012))", "(a / attempt-01\n   :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n   :ARG1 (s / smuggle-01\n            :ARG0 p\n            :ARG1 (c2 / cocaine\n                      :quant (m / monetary-quantity\n                                :quant 1600000\n                                :unit (p2 / pound))))\n   :time (d / date-entity\n            :year 2012))", "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG2 (a / attempt-01\n            :ARG0 p\n            :ARG1 (s / smuggle-01\n                     :ARG0 p\n                     :ARG1 (c2 / cocaine\n                               :quant (m / monetary-quantity\n                                         :quant 1600000\n                                         :unit (p2 / pound))))\n            :time (d / date-entity\n                     :year 2012)))", "(c / convict-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG2 (a / attempt-01\n            :ARG0 p\n            :ARG1 (s / smuggle-01\n                     :ARG0 p\n                     :ARG1 (c2 / cocaine\n                               :quant (m / monetary-quantity\n                                         :quant 1600000\n                                         :unit (p2 / pound))))\n            :time (d / date-entity\n                     :year 2012)))"], "smus": ["Lindsay Sandiford will face a firing squad.", "Lindsay Sandiford will face a firing squad.", "Lindsay Sandiford fears he will be the next to face a firing squad.", "Lindsay Sandiford fears that she will be the next to face a firing squad.", "Lindsay Sandiford fears that she will be the next to face a firing squad.", "Andrew Chan killed.", "Myuran Sukumaran killed.", "Killed after the final bucket meal at KFC.", "Andrew Chan and Myuran Susumaran killed.", "Andrew Chan killed after the final bucket meal at KFC.", "Myuran Sukumaran killed at the time after the final bucket meal at KFC.", "Andrew Chan and Myuran Susumaran killed after the final bucket meal at KFC.", "Lindsay Sandiford is on death row.", "Bali has been in since 2012.", "Lindsay Sandiford has been on death row on Bali since 2012.", "Attempting in 2012.", "Attempting in 2012.", "Lindsay Sandiford was convicted.", "Lindsay Sandiford was to smuggle 160,000 pounds of cocaine.", "Lindsay Sandiford is attempting to smuggle 160,000 pounds of cocaine.", "Lindsay Sandiford is attempting to smuggle 160,000 pounds of cocaine.", "Lindsay Sandiford is attempting to smuggle 160,000 pounds of cocaine in 2012.", "Lindsay Sandiford is attempting to smuggle 160,000 pounds of cocaine in 2012.", "Lindsay Sandiford was convicted in 2012 of attempting to smuggle 160,000 pounds of cocaine.", "Lindsay Sandiford was convicted in 2012 of attempting to smuggle 160,000 pounds of cocaine."]}, {"instance_id": "realsumm-75", "summary": "Abby Bishop took in Abby Bishop two - day - old niece Zala in August 2013 . Now her two - day - old niece Zala is 20 months old and her two - day - old niece Zala follows Abby Bishop as Abby Bishop travels the world playing for professional basketball teams . Abby Bishop said took was a big decision but Abby Bishop would n't change anything . her two - day - old niece Zala will go with Abby Bishop when Abby Bishop starts playing in the U.S. WNBA in May.", "summary_trees": ["# ::snt Abby Bishop took in Abby Bishop two - day - old niece Zala in August 2013 .\n(t / take-in-06\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abby\"\n                  :op2 \"Bishop\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Zala\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 p\n                  :ARG2 (n3 / niece))\n            :age (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d / day)))\n      :time (d2 / date-entity\n            :month 8\n            :year 2013))", "# ::snt Now her two - day - old niece Zala is 20 months old and her two - day - old niece Zala follows Abby Bishop as Abby Bishop travels the world playing for professional basketball teams .\n(a / and\n      :op1 (a2 / age-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Zala\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Abby\"\n                                    :op2 \"Bishop\"))\n                        :ARG2 (n3 / niece)))\n            :ARG2 (t / temporal-quantity\n                  :quant 20\n                  :unit (m / month)))\n      :op2 (f / follow-01\n            :ARG1 p\n            :ARG2 (t2 / travel-01\n                  :ARG0 p2\n                  :ARG1 (w / world)\n                  :manner (p3 / play-01\n                        :ARG0 p2\n                        :ARG1 (t3 / team\n                              :mod (b / basketball)\n                              :mod (p4 / professional)))))\n      :time (n4 / now))", "# ::snt Abby Bishop said took was a big decision but Abby Bishop would n't change anything .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abby\"\n                  :op2 \"Bishop\"))\n      :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                  :mod (b / big)\n                  :domain (t / take-01))\n            :ARG2 (c2 / change-01\n                  :polarity -\n                  :ARG0 p\n                  :ARG1 (a / anything))))", "# ::snt her two - day - old niece Zala will go with Abby Bishop when Abby Bishop starts playing in the U.S. WNBA in May.\n(g / go-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Zala\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Abby\"\n                              :op2 \"Bishop\"))\n                  :ARG2 (n3 / niece))\n            :age (t / temporal-quantity\n                  :quant 2\n                  :unit (d / day)))\n      :accompanier p2\n      :time (s / start-01\n            :ARG0 p2\n            :ARG1 (p3 / play-01\n                  :ARG0 p2\n                  :ARG3 (l / league\n                        :name (n4 / name\n                              :op1 \"WNBA\")\n                        :mod (c / country\n                              :name (n5 / name\n                                    :op1 \"U.S.\"))))\n            :time (d2 / date-entity\n                  :month 5)))"], "tree": ["(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))\n   :ARG2 (n3 / niece))", "(t / take-in-06\n   :time (d2 / date-entity\n             :month 8\n             :year 2013))", "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Zala\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p\n                      :ARG2 (n3 / niece))\n             :age (t2 / temporal-quantity\n                      :quant 2\n                      :unit (d / day)))\n   :time (d2 / date-entity\n             :month 8\n             :year 2013))", "(t2 / travel-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG1 (w / world))", "(p3 / play-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG1 (t3 / team\n              :mod (b / basketball)\n              :mod (p4 / professional)))", "(p3 / play-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG1 (t3 / team\n              :mod (b / basketball)\n              :mod (p4 / professional)))", "(h / have-rel-role-91\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Abby\"\n                       :op2 \"Bishop\"))\n   :ARG2 (n3 / niece))", "(t2 / travel-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG1 (w / world)\n    :manner (p3 / play-01\n                :ARG0 p2\n                :ARG1 (t3 / team\n                          :mod (b / basketball)\n                          :mod (p4 / professional))))", "(f / follow-01\n   :ARG1 (p / person :name (n / name :op1 \"Zala\")))\n   :ARG2 (t2 / travel-01\n             :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n             :ARG1 (w / world)\n             :manner (p3 / play-01\n                         :ARG0 p2\n                         :ARG1 (t3 / team\n                                   :mod (b / basketball)\n                                   :mod (p4 / professional)))))", "(f / follow-01\n   :ARG1 (p / person :name (n / name :op1 \"Zala\")))\n   :ARG2 (t2 / travel-01\n             :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n             :ARG1 (w / world)\n             :manner (p3 / play-01\n                         :ARG0 p2\n                         :ARG1 (t3 / team\n                                   :mod (b / basketball)\n                                   :mod (p4 / professional)))))", "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Abby\"\n                                          :op2 \"Bishop\"))\n                      :ARG2 (n3 / niece)))\n    :ARG2 (t / temporal-quantity\n             :quant 20\n             :unit (m / month)))", "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Abby\"\n                                          :op2 \"Bishop\"))\n                      :ARG2 (n3 / niece)))\n    :ARG2 (t / temporal-quantity\n             :quant 20\n             :unit (m / month)))", "(c2 / change-01\n    :ARG0 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG1 (a / anything))", "(c2 / change-01\n    :polarity -\n    :ARG0 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG1 (a / anything))", "(d / decide-01\n   :mod (b / big)\n   :domain (t / take-01))", "(d / decide-01\n   :mod (b / big)\n   :domain (t / take-01))", "(c / contrast-01\n   :ARG1 (d / decide-01\n            :mod (b / big)\n            :domain (t / take-01))\n   :ARG2 (c2 / change-01\n             :polarity -\n             :ARG0 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))\n             :ARG1 (a / anything)))", "(c / contrast-01\n   :ARG1 (d / decide-01\n            :mod (b / big)\n            :domain (t / take-01))\n   :ARG2 (c2 / change-01\n             :polarity -\n             :ARG0 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))\n             :ARG1 (a / anything)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                     :mod (b / big)\n                     :domain (t / take-01))\n            :ARG2 (c2 / change-01\n                      :polarity -\n                      :ARG0 p\n                      :ARG1 (a / anything))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                     :mod (b / big)\n                     :domain (t / take-01))\n            :ARG2 (c2 / change-01\n                      :polarity -\n                      :ARG0 p\n                      :ARG1 (a / anything))))", "(s / start-01\n   :time (d2 / date-entity\n             :month 5))", "(s / start-01\n   :time (d2 / date-entity\n             :month 5))", "(s / start-01\n   :time (d2 / date-entity\n             :month 5))", "(h / have-rel-role-91\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Abby\"\n                       :op2 \"Bishop\"))\n   :ARG2 (n3 / niece))", "(p3 / play-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n    :ARG3 (l / league\n             :name (n4 / name\n                       :op1 \"WNBA\")\n             :mod (c / country\n                     :name (n5 / name\n                               :op1 \"U.S.\"))))", "(s / start-01\n   :ARG1 (p3 / play-01\n             :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n             :ARG3 (l / league\n                      :name (n4 / name\n                                :op1 \"WNBA\")\n                      :mod (c / country\n                              :name (n5 / name\n                                        :op1 \"U.S.\")))))", "(s / start-01\n   :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n   :ARG1 (p3 / play-01\n             :ARG0 p2\n             :ARG3 (l / league\n                      :name (n4 / name\n                                :op1 \"WNBA\")\n                      :mod (c / country\n                              :name (n5 / name\n                                        :op1 \"U.S.\")))))", "(s / start-01\n   :ARG1 (p3 / play-01\n             :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n             :ARG3 (l / league\n                      :name (n4 / name\n                                :op1 \"WNBA\")\n                      :mod (c / country\n                              :name (n5 / name\n                                        :op1 \"U.S.\"))))\n   :time (d2 / date-entity\n             :month 5))", "(s / start-01\n   :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n   :ARG1 (p3 / play-01\n             :ARG0 p2\n             :ARG3 (l / league\n                      :name (n4 / name\n                                :op1 \"WNBA\")\n                      :mod (c / country\n                              :name (n5 / name\n                                        :op1 \"U.S.\"))))\n   :time (d2 / date-entity\n             :month 5))", "(s / start-01\n   :ARG0 (p2 / person :name (n2 / name :op1 \"Abby\" :op2 \"Bishop\"))\n   :ARG1 (p3 / play-01\n             :ARG0 p2\n             :ARG3 (l / league\n                      :name (n4 / name\n                                :op1 \"WNBA\")\n                      :mod (c / country\n                              :name (n5 / name\n                                        :op1 \"U.S.\"))))\n   :time (d2 / date-entity\n             :month 5))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Zala\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Abby\"\n                                         :op2 \"Bishop\"))\n                     :ARG2 (n3 / niece))\n            :age (t / temporal-quantity\n                    :quant 2\n                    :unit (d / day))))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Zala\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Abby\"\n                                         :op2 \"Bishop\"))\n                     :ARG2 (n3 / niece))\n            :age (t / temporal-quantity\n                    :quant 2\n                    :unit (d / day)))\n   :accompanier p2\n   :time (s / start-01\n            :ARG0 p2\n            :ARG1 (p3 / play-01\n                      :ARG0 p2\n                      :ARG3 (l / league\n                               :name (n4 / name\n                                         :op1 \"WNBA\")\n                               :mod (c / country\n                                       :name (n5 / name\n                                                 :op1 \"U.S.\"))))\n            :time (d2 / date-entity\n                      :month 5)))"], "smus": ["Abby Bishop is the niece.", "Taken in August, 2002.", "Abby Bishop took in her two-day-old niece, Zala, in August.", "Abby Bishop travels the world.", "Abby Bishop is playing for professional basketball teams.", "Abby Bishop is playing for professional basketball teams.", "Abby Bishop is the niece.", "Abby Bishop travels the world playing for professional basketball teams.", "Sala follows Abby Bishop as she travels the world playing for professional basketball teams.", "Sala follows Abby Bishop as she travels the world playing for professional basketball teams.", "Abby Bishop's niece, Zala, is 20 months old.", "Abby Bishop's niece, Zala, is 20 months old.", "Abby Bishop will change anything.", "Abby Bishop didn't change anything.", "It was a big decision to take.", "It was a big decision to take.", "It was a big decision to be taken, but Abby Bishop didn't change anything.", "It was a big decision to be taken, but Abby Bishop didn't change anything.", "\"It was a big decision, but I didn't change anything,\" Abby Bishop said.", "\"It was a big decision, but I didn't change anything,\" Abby Bishop said.", "Starts May.", "Starts May.", "Starts May.", "Abby Bishop is the niece.", "Abby Bishop is playing in the U.S. WNBA.", "Abby Bishop starts playing in the U.S. WNBA.", "Abby Bishop starts playing in the U.S. WNBA.", "Abby Bishop starts playing in the U.S. WNBA in May.", "Abby Bishop starts playing in the U.S. WNBA in May.", "Abby Bishop starts playing in the U.S. WNBA in May.", "Zala went to her niece, Abby Bishop, who was two days old.", "When Abby Bishop starts playing in the U.S. WNBA in May, Zala, her two-day-old niece, will go with her."]}, {"instance_id": "realsumm-76", "summary": "ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins . Tour de Yorkshire runs over three stages starting in Bridlington on May 1 . Prior 's team and Yorkshire race inspired by Tour de France Grand Depart .", "summary_trees": ["# ::snt ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins .\n(p / prepare-02\n      :ARG0 (o / organization\n            :quant 1\n            :name (n / name\n                  :op1 \"Pro\"\n                  :op2 \"Cycling\"))\n      :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (a / and\n                  :op1 (t2 / team\n                        :name (n2 / name\n                              :op1 \"Team\"\n                              :op2 \"Sky\"))\n                  :op2 (p2 / person\n                        :name (n3 / name\n                              :op1 \"Sir\"\n                              :op2 \"Bradley\"\n                              :op3 \"Wiggins\")))))", "# ::snt Tour de Yorkshire runs over three stages starting in Bridlington on May 1 .\n(r / run-over-04\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 \"Tour\"\n                  :op2 \"de\"\n                  :op3 \"Yorkshire\"))\n      :ARG2 (s / stage\n            :quant 3)\n      :ARG1-of (s2 / start-01\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Bridlington\"))\n            :time (d / date-entity\n                  :day 1\n                  :month 5)))", "# ::snt Prior 's team and Yorkshire race inspired by Tour de France Grand Depart .\n(ii / inspire-01\n      :ARG0 (t / tour\n            :name (n / name\n                  :op1 \"Tour\"\n                  :op2 \"de\"\n                  :op3 \"France\"\n                  :op4 \"Grand\"\n                  :op5 \"Depart\"))\n      :ARG1 (a / and\n            :op1 (t2 / team\n                  :poss (p / person\n                        :name (n2 / name\n                              :op1 \"Prior\")))\n            :op2 (r / race-02\n                  :ARG0 p\n                  :location (c / county\n                        :name (n3 / name\n                              :op1 \"Yorkshire\")))))"], "tree": ["(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"Pro\" :op2 \"Cycling\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Team\"\n                       :op2 \"Sky\")))", "(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"Pro\" :op2 \"Cycling\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Sir\"\n                       :op2 \"Bradley\"\n                       :op3 \"Wiggins\")))", "(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"Pro\" :op2 \"Cycling\"))\n   :ARG1 (a / and\n            :op1 (t2 / team\n                     :name (n2 / name\n                               :op1 \"Team\"\n                               :op2 \"Sky\"))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Sir\"\n                               :op2 \"Bradley\"\n                               :op3 \"Wiggins\"))))", "(p / prepare-02\n   :ARG0 (o / organization\n            :quant 1\n            :name (n / name\n                     :op1 \"Pro\"\n                     :op2 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Team\"\n                                :op2 \"Sky\"))))", "(p / prepare-02\n   :ARG0 (o / organization\n            :quant 1\n            :name (n / name\n                     :op1 \"Pro\"\n                     :op2 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Sir\"\n                                :op2 \"Bradley\"\n                                :op3 \"Wiggins\"))))", "(p / prepare-02\n   :ARG0 (o / organization\n            :quant 1\n            :name (n / name\n                     :op1 \"Pro\"\n                     :op2 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (a / and\n                     :op1 (t2 / team\n                              :name (n2 / name\n                                        :op1 \"Team\"\n                                        :op2 \"Sky\"))\n                     :op2 (p2 / person\n                              :name (n3 / name\n                                        :op1 \"Sir\"\n                                        :op2 \"Bradley\"\n                                        :op3 \"Wiggins\")))))", "(s2 / start-01\n    :location (c / city\n                 :name (n2 / name\n                           :op1 \"Bridlington\"))\n    :time (d / date-entity\n             :day 1\n             :month 5))", "(s2 / start-01\n    :location (c / city\n                 :name (n2 / name\n                           :op1 \"Bridlington\"))\n    :time (d / date-entity\n             :day 1\n             :month 5))", "(r / run-over-04\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Tour\"\n                     :op2 \"de\"\n                     :op3 \"Yorkshire\"))\n   :ARG2 (s / stage\n            :quant 3)\n   :ARG1 (s2 / start-01\n             :location (c / city\n                          :name (n2 / name\n                                    :op1 \"Bridlington\"))\n             :time (d / date-entity\n                      :day 1\n                      :month 5)))", "(r / race-02\n   :location (c / county\n                :name (n3 / name\n                          :op1 \"Yorkshire\")))", "(r / race-02\n   :ARG0 (p / person :name (n2 / name :op1 \"Prior\"))\n   :location (c / county\n                :name (n3 / name\n                          :op1 \"Yorkshire\")))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\")))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (t2 / team\n              :poss (p / person\n                       :name (n2 / name\n                                 :op1 \"Prior\"))))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (t2 / team\n              :poss (p / person\n                       :name (n2 / name\n                                 :op1 \"Prior\"))))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (r / race-02\n             :ARG0 (p / person :name (n2 / name :op1 \"Prior\"))\n             :location (c / county\n                          :name (n3 / name\n                                    :op1 \"Yorkshire\"))))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (r / race-02\n             :ARG0 (p / person :name (n2 / name :op1 \"Prior\"))\n             :location (c / county\n                          :name (n3 / name\n                                    :op1 \"Yorkshire\"))))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (a / and\n             :op1 (t2 / team\n                      :poss (p / person\n                               :name (n2 / name\n                                         :op1 \"Prior\")))\n             :op2 (r / race-02\n                     :ARG0 p\n                     :location (c / county\n                                  :name (n3 / name\n                                            :op1 \"Yorkshire\")))))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (a / and\n             :op1 (t2 / team\n                      :poss (p / person\n                               :name (n2 / name\n                                         :op1 \"Prior\")))\n             :op2 (r / race-02\n                     :ARG0 p\n                     :location (c / county\n                                  :name (n3 / name\n                                            :op1 \"Yorkshire\")))))"], "smus": ["Pro Cycling will take on Team Sky.", "Pro Cycling will take on Sir Bradley Wiggins.", "Pro Cycling will take on Team Sky and Sir Bradley Wiggins.", "One Pro Cycling organization is preparing to take on Team Sky.", "One organization, Pro Cycling, is preparing to take on Sir Bradley Wiggins.", "One Pro Cycling organization is preparing to take on Team Sky and Sir Bradley Wiggins.", "Starting May 1st in Burlington.", "Starting May 1st in Burlington.", "The Tour de Yorkshire has run over three stages starting in Birmingham on May 1.", "The race is in Yorkshire.", "Prior is in the race in Yorkshire.", "Inspired by Tour de France Grand D\u00e9part.", "The Tour de France Grand D\u00e9part has inspired the team of Prior.", "The Tour de France Grand D\u00e9part has inspired the team of Prior.", "The Tour de France Grand Depart has inspired the race for the Primar in Yorkshire.", "The Tour de France Grand Depart has inspired the race for the Primar in Yorkshire.", "The Tour de France Grand D\u00e9part has inspired the team of Prior and his race in Yorkshire.", "The Tour de France Grand D\u00e9part has inspired the team of Prior and his race in Yorkshire."]}, {"instance_id": "realsumm-77", "summary": "Woman reported ' someone ' had been run over , but victim was a squirrel . Another man dialled 999 to say Another man dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives .", "summary_trees": ["# ::snt Woman reported ' someone ' had been run over , but victim was a squirrel .\n(c / contrast-01\n      :ARG1 (r / report-01\n            :ARG0 (w / woman)\n            :ARG1 (r2 / run-over-12\n                  :ARG1 (s / someone)))\n      :ARG2 (s2 / squirrel\n            :domain (v / victim)))", "# ::snt Another man dialled 999 to say Another man dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives .\n(a / and\n      :op1 (d / dial-01\n            :ARG0 (m / man\n                  :mod (a2 / another))\n            :ARG1 (p / phone-number-entity\n                  :value 999)\n            :purpose (s / say-01\n                  :ARG0 m\n                  :ARG1 (d2 / drop-01\n                        :ARG0 (m2 / man\n                              :mod (a3 / another))\n                        :ARG1 (b / burger\n                              :ARG1-of (b2 / bleed-01)))))\n      :op2 (w / warn-01\n            :ARG0 (s2 / service\n                  :mod (a4 / ambulance)\n                  :mod (c / country-region\n                        :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\")))\n            :ARG1 (p2 / possible-01\n                  :ARG1 (c2 / cost-01\n                        :ARG1 (c3 / call-02\n                              :mod (h / hoax-01))\n                        :ARG2 (l / live-01)))))"], "tree": ["(r / report-01\n   :ARG0 (w / woman)\n   :ARG1 (r2 / run-over-12\n             :ARG1 (s / someone)))", "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG0 (w / woman)\n            :ARG1 (r2 / run-over-12\n                      :ARG1 (s / someone)))\n   :ARG2 (s2 / squirrel\n             :domain (v / victim)))", "(c2 / cost-01\n    :ARG1 (c3 / call-02\n              :mod (h / hoax-01))\n    :ARG2 (l / live-01))", "(p2 / possible-01\n    :ARG1 (c2 / cost-01\n              :ARG1 (c3 / call-02\n                        :mod (h / hoax-01))\n              :ARG2 (l / live-01)))", "(d2 / drop-01\n    :ARG0 (m2 / man\n              :mod (a3 / another))\n    :ARG1 (b / burger\n             :ARG1 (b2 / bleed-01)))", "(s / say-01\n   :ARG0 (m / man)\n   :ARG1 (d2 / drop-01\n             :ARG0 (m2 / man\n                       :mod (a3 / another))\n             :ARG1 (b / burger\n                      :ARG1 (b2 / bleed-01))))", "(d / dial-01\n   :ARG0 (m / man\n            :mod (a2 / another))\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG0 m\n               :ARG1 (d2 / drop-01\n                         :ARG0 (m2 / man\n                                   :mod (a3 / another))\n                         :ARG1 (b / burger\n                                  :ARG1 (b2 / bleed-01)))))", "(w / warn-01\n   :ARG0 (s2 / service\n             :mod (a4 / ambulance)\n             :mod (c / country-region\n                     :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\")))\n   :ARG1 (p2 / possible-01\n             :ARG1 (c2 / cost-01\n                       :ARG1 (c3 / call-02\n                                 :mod (h / hoax-01))\n                       :ARG2 (l / live-01))))"], "smus": ["A woman reported someone being run over.", "A woman reported someone ran over but the victim was a squirrel.", "Hoax calls will cost lives.", "Hoax calls can cost lives.", "Another man dropped a bleeding burger.", "The man would say another man dropped a bleeding burger.", "Another man dialed 999 to say another man dropped a bleeding burger.", "The East of England ambulance service warned that hoax calls could cost lives."]}, {"instance_id": "realsumm-78", "summary": "Ben Flower returned from Ben Flower six - month ban on Thursday night . Ben Flower made first appearance since Ben Flower punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final . Ben Flower received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington .", "summary_trees": ["# ::snt Ben Flower returned from Ben Flower six - month ban on Thursday night .\n(r / return-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Ben\"\n                  :op2 \"Flower\"))\n      :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                  :quant 6\n                  :unit (m / month)))\n      :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "# ::snt Ben Flower made first appearance since Ben Flower punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final .\n(a / appear-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Ben\"\n                  :op2 \"Flower\"))\n      :ord (o / ordinal-entity\n            :value 1\n            :range (s / since\n                  :op1 (p2 / punch-01\n                        :ARG0 p\n                        :ARG1 (p3 / person\n                              :name (n2 / name\n                                    :op1 \"Lance\"\n                                    :op2 \"Hohaia\")\n                              :poss (t / team\n                                    :name (n3 / name\n                                          :op1 \"St\"\n                                          :op2 \"Helens\")))\n                        :time (m / moment\n                              :ARG0-of (o2 / open-02\n                                    :ARG1 (g / game\n                                          :name (n4 / name\n                                                :op1 \"Grand\"\n                                                :op2 \"Final\")\n                                          :time (s2 / season\n                                                :mod (l / last)))))))))", "# ::snt Ben Flower received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington .\n(r / receive-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Ben\"\n                  :op2 \"Flower\"))\n      :ARG1 (r2 / reception\n            :ARG1-of (b / brilliant-01))\n      :time (w / win-01\n            :ARG0 (t / team\n                  :name (n2 / name\n                        :op1 \"Wigan\"))\n            :ARG4 (t2 / team\n                  :name (n3 / name\n                        :op1 \"Warrington\"))\n            :manner (s / score-entity\n                  :op1 30\n                  :op2 20)))"], "tree": ["(b / ban-01\n   :duration (t / temporal-quantity\n                :quant 6\n                :unit (m / month)))", "(b / ban-01\n   :ARG2 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\"))\n   :duration (t / temporal-quantity\n                :quant 6\n                :unit (m / month)))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\")))", "(r / return-01\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "(r / return-01\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                         :quant 6\n                         :unit (m / month))))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                         :quant 6\n                         :unit (m / month)))\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "(a / appear-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\")))", "(a / appear-01\n   :ord (o / ordinal-entity\n           :value 1\n           :range (s / since\n                     :op1 (p2 / punch-01))))", "(o2 / open-02\n    :ARG1 (g / game\n             :name (n4 / name\n                       :op1 \"Grand\"\n                       :op2 \"Final\")\n             :time (s2 / season\n                       :mod (l / last))))", "(p2 / punch-01\n    :ARG0 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\"))\n    :ARG1 (p3 / person\n              :name (n2 / name\n                        :op1 \"Lance\"\n                        :op2 \"Hohaia\")\n              :poss (t / team\n                       :name (n3 / name\n                                 :op1 \"St\"\n                                 :op2 \"Helens\"))))", "(p2 / punch-01\n    :ARG0 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\"))\n    :ARG1 (p3 / person\n              :name (n2 / name\n                        :op1 \"Lance\"\n                        :op2 \"Hohaia\")\n              :poss (t / team\n                       :name (n3 / name\n                                 :op1 \"St\"\n                                 :op2 \"Helens\")))\n    :time (m / moment\n             :ARG0 (o2 / open-02\n                       :ARG1 (g / game\n                                :name (n4 / name\n                                          :op1 \"Grand\"\n                                          :op2 \"Final\")\n                                :time (s2 / season\n                                          :mod (l / last))))))", "(a / appear-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ord (o / ordinal-entity\n           :value 1\n           :range (s / since\n                     :op1 (p2 / punch-01\n                              :ARG0 p\n                              :ARG1 (p3 / person\n                                        :name (n2 / name\n                                                  :op1 \"Lance\"\n                                                  :op2 \"Hohaia\")\n                                        :poss (t / team\n                                                 :name (n3 / name\n                                                           :op1 \"St\"\n                                                           :op2 \"Helens\")))\n                              :time (m / moment\n                                       :ARG0 (o2 / open-02\n                                                 :ARG1 (g / game\n                                                          :name (n4 / name\n                                                                    :op1 \"Grand\"\n                                                                    :op2 \"Final\")\n                                                          :time (s2 / season\n                                                                    :mod (l / last)))))))))", "(w / win-01\n   :manner (s / score-entity\n              :op1 30\n              :op2 20))", "(w / win-01\n   :ARG0 (t / team\n            :name (n2 / name\n                      :op1 \"Wigan\")))", "(r / receive-01\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30\n                       :op2 20)))", "(r / receive-01\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30\n                       :op2 20)))", "(r / receive-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01)))", "(w / win-01\n   :ARG0 (t / team\n            :name (n2 / name\n                      :op1 \"Wigan\"))\n   :ARG4 (t2 / team\n             :name (n3 / name\n                       :op1 \"Warrington\"))\n   :manner (s / score-entity\n              :op1 30\n              :op2 20))", "(r / receive-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG0 (t / team\n                     :name (n2 / name\n                               :op1 \"Wigan\"))\n            :ARG4 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Warrington\"))\n            :manner (s / score-entity\n                       :op1 30\n                       :op2 20)))", "(r / receive-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01))\n   :time (w / win-01\n            :ARG0 (t / team\n                     :name (n2 / name\n                               :op1 \"Wigan\"))\n            :ARG4 (t2 / team\n                      :name (n3 / name\n                                :op1 \"Warrington\"))\n            :manner (s / score-entity\n                       :op1 30\n                       :op2 20)))"], "smus": ["The six-month ban.", "Ben Flower has been banned for 6 months.", "Ben Flower returned.", "The ship returned Thursday night.", "The ship returned Thursday night.", "Ben Flower returned Thursday night.", "Ben Flower returned from a six-month ban.", "Ben Flower returned Thursday night from a six-month ban.", "Ben Flower's appearance", "First appearance since the punch.", "The Grand Final of last season is open.", "Ben Flower punched St Helens' Lance Hohaia.", "Ben Flower punched St Helens' Lance Hohaia at the opening moments of last season's Grand Final.", "Ben Flower is the first appearance since punching St Helens' Lance Hohaia at the opening moments of last season's Grand Final.", "30-20 win.", "Wigan won", "Received when the win was 30-20.", "Received when the win was 30-20.", "Ben Flower received a brilliant reception.", "Wigan beat Warrington 30-20", "Ben Flower received a brilliant reception when Warrington beat Waigan 30-20.", "Ben Flower received a brilliant reception when Warrington beat Waigan 30-20."]}, {"instance_id": "realsumm-79", "summary": "Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy . A mix of Arabian and Napoleon III decor , the Jacques Garcia designed hotel harkens back to the city 's pleasure houses of yesteryear . Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental .", "summary_trees": ["# ::snt Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy .\n(a / and\n      :op1 (o / opulent\n            :domain (h / hotel\n                  :ARG1-of (d / design-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Jacques\"\n                                    :op2 \"Garcia\")))))\n      :op2 (e / edgy\n            :domain h)\n      :ARG1-of (ii / inspire-01\n            :ARG0 (a2 / aesthetic\n                  :poss (e2 / era\n                        :name (n2 / name\n                              :op1 \"Belle\"\n                              :op2 \"Epoque\")))))", "# ::snt A mix of Arabian and Napoleon III decor , the Jacques Garcia designed hotel harkens back to the city 's pleasure houses of yesteryear .\n(h / harken-01\n      :ARG0 (h2 / hotel\n            :ARG1-of (d / design-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Jacques\"\n                              :op2 \"Garcia\")))\n            :ARG2-of (m / mix-01\n                  :ARG1 (d2 / decor\n                        :mod (w / world-region\n                              :name (n2 / name\n                                    :op1 \"Arabia\")))\n                  :ARG3 (d3 / decor\n                        :mod (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Napoleon\"\n                                    :op2 \"III\")))))\n      :ARG1 (h3 / house\n            :mod (p3 / pleasure)\n            :poss (c / city)\n            :time (y / yesteryear))\n      :direction (b / back))", "# ::snt Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental .\n(a / available-02\n      :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (a2 / and\n                  :op1 (c / conservatory\n                        :ARG0-of (c2 / charm-01))\n                  :op2 (b / bar\n                        :mod (l / library))\n                  :op3 (s / spa\n                        :mod (m / moon))\n                  :ARG2-of (a3 / available-02\n                        :ARG2 (r / rent-01\n                              :ARG1 a2\n                              :ARG1-of (p / private-03)))))\n      :mod (a4 / also))"], "tree": ["(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jacques\"\n                     :op2 \"Garcia\")))", "(ii / inspire-01\n    :ARG0 (a2 / aesthetic\n              :poss (e2 / era\n                        :name (n2 / name\n                                  :op1 \"Belle\"\n                                  :op2 \"Epoque\"))))", "(ii / inspire-01\n    :ARG0 (a2 / aesthetic\n              :poss (e2 / era\n                        :name (n2 / name\n                                  :op1 \"Belle\"\n                                  :op2 \"Epoque\"))))", "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jacques\"\n                     :op2 \"Garcia\")))", "(m / mix-01\n   :ARG1 (d2 / decor\n             :mod (w / world-region\n                     :name (n2 / name\n                               :op1 \"Arabia\"))))", "(m / mix-01\n   :ARG1 (d2 / decor\n             :mod (w / world-region\n                     :name (n2 / name\n                               :op1 \"Arabia\")))\n   :ARG3 (d3 / decor\n             :mod (p2 / person\n                      :name (n3 / name\n                                :op1 \"Napoleon\"\n                                :op2 \"III\"))))", "(h / harken-01\n   :ARG0 (h2 / hotel\n             :ARG1 (d / design-01\n                      :ARG0 (p / person\n                               :name (n / name\n                                        :op1 \"Jacques\"\n                                        :op2 \"Garcia\")))\n             :ARG2 (m / mix-01\n                      :ARG1 (d2 / decor\n                                :mod (w / world-region\n                                        :name (n2 / name\n                                                  :op1 \"Arabia\")))\n                      :ARG3 (d3 / decor\n                                :mod (p2 / person\n                                         :name (n3 / name\n                                                   :op1 \"Napoleon\"\n                                                   :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :mod (p3 / pleasure)\n             :poss (c / city)\n             :time (y / yesteryear))\n   :direction (b / back))", "(r / rent-01\n   :ARG1 (a2 / and)\n   :ARG1 (p / private-03))", "(a3 / available-02\n    :ARG2 (r / rent-01\n             :ARG1 (a2 / and)\n             :ARG1 (p / private-03)))", "(a3 / available-02\n    :ARG2 (r / rent-01\n             :ARG1 (a2 / and)\n             :ARG1 (p / private-03)))", "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (c / conservatory\n            :ARG0 (c2 / charm-01)))", "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (b / bar\n            :mod (l / library)))", "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (c / conservatory\n                     :ARG0 (c2 / charm-01))))", "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (b / bar\n                     :mod (l / library))))", "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (s / spa\n            :mod (m / moon)\n            :ARG2 (a3 / available-02\n                      :ARG2 (r / rent-01\n                               :ARG1 s\n                               :ARG1 (p / private-03)))))", "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (s / spa\n                     :mod (m / moon)\n                     :ARG2 (a3 / available-02\n                               :ARG2 (r / rent-01\n                                        :ARG1 s\n                                        :ARG1 (p / private-03)))))\n   :mod (a4 / also))", "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (a2 / and\n             :op1 (c / conservatory\n                     :ARG0 (c2 / charm-01))\n             :op2 (b / bar\n                     :mod (l / library))\n             :op3 (s / spa\n                     :mod (m / moon))\n             :ARG2 (a3 / available-02\n                       :ARG2 (r / rent-01\n                                :ARG1 a2\n                                :ARG1 (p / private-03)))))", "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (a2 / and\n                      :op1 (c / conservatory\n                              :ARG0 (c2 / charm-01))\n                      :op2 (b / bar\n                              :mod (l / library))\n                      :op3 (s / spa\n                              :mod (m / moon))\n                      :ARG2 (a3 / available-02\n                                :ARG2 (r / rent-01\n                                         :ARG1 a2\n                                         :ARG1 (p / private-03)))))\n   :mod (a4 / also))"], "smus": ["Jacques Garcia designed.", "The aesthetic of the Belle Epoque era is inspired.", "The aesthetic of the Belle Epoque era is inspired.", "Jacques Garcia designed.", "The Arab decor is a mix.", "Arab decor mixed with Napoleon III decor", "The hotel Jacques Garcia designed harkens back to the city's pleasure houses of yesteryear, a mix of Arab and Napoleonic decor.", "Private rental.", "Private rental is available.", "Private rental is available.", "The guest is using a charming conservatory.", "Guest use of Library bar.", "The charming conservatory is available for guest use.", "The Library bar is available for guest use.", "The guest will use the moon spa, available for private rental.", "Moon spa is also available for guest use and for private rental.", "The guest will use the charming conservatory, library bar and moon spa, available for private rent.", "The charming conservatory, library bar and moon spa are also available for guest use and for private rent."]}, {"instance_id": "realsumm-80", "summary": "Steven Finn was left out of the England squad for the West Indies tour . Steven Finn has regained form after a tough 12 months . Steven Finn said Steven Finn 's back to bowling like Steven Finn was as ' a carefree 21 - year - old ' Steven Finn last of 23 Test caps came for England back in 2013 .", "summary_trees": ["# ::snt Steven Finn was left out of the England squad for the West Indies tour .\n(l / leave-out-03\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Steven\"\n                  :op2 \"Finn\"))\n      :ARG2 (s / squad\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"England\"))\n            :purpose (t / tour-01\n                  :ARG0 c\n                  :ARG1 (c2 / country\n                        :name (n3 / name\n                              :op1 \"West\"\n                              :op2 \"Indies\")))))", "# ::snt Steven Finn has regained form after a tough 12 months .\n(r / regain-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Steven\"\n                  :op2 \"Finn\"))\n      :ARG1 (f / form)\n      :time (a / after\n            :op1 (t / temporal-quantity\n                  :quant 12\n                  :unit (m / month)\n                  :ARG1-of (t2 / tough-02))))", "# ::snt Steven Finn said Steven Finn 's back to bowling like Steven Finn was as ' a carefree 21 - year - old ' Steven Finn last of 23 Test caps came for England back in 2013 .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Steven\"\n                  :op2 \"Finn\"))\n      :ARG1 (b / back-02\n            :ARG1 p\n            :ARG2 (b2 / bowl-01\n                  :ARG0 p)\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b3 / back-02\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Steven\"\n                                    :op2 \"Finn\")\n                              :age (t / temporal-quantity\n                                    :quant 21\n                                    :unit (y / year))\n                              :mod (c / carefree)))))\n      :ARG1-of (c2 / cause-01\n            :ARG0 (c3 / come-04\n                  :ARG1 (c4 / cap\n                        :ord (o / ordinal-entity\n                              :value -1)\n                        :ARG1-of (ii / include-91\n                              :ARG2 (c5 / cap\n                                    :quant 23\n                                    :mod (t2 / test)))\n                        :poss (c6 / country\n                              :name (n3 / name\n                                    :op1 \"England\")))\n                  :time (d / date-entity\n                        :year 2013))))"], "tree": ["(t / tour-01\n   :ARG0 (c / country :name (n2 / name :op1 \"England\"))\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"West\"\n                       :op2 \"Indies\")))", "(t / tour-01\n   :ARG0 (c / country :name (n2 / name :op1 \"England\"))\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"West\"\n                       :op2 \"Indies\")))", "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))\n            :purpose (t / tour-01\n                        :ARG0 c\n                        :ARG1 (c2 / country\n                                  :name (n3 / name\n                                            :op1 \"West\"\n                                            :op2 \"Indies\")))))", "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))\n            :purpose (t / tour-01\n                        :ARG0 c\n                        :ARG1 (c2 / country\n                                  :name (n3 / name\n                                            :op1 \"West\"\n                                            :op2 \"Indies\")))))", "(r / regain-01\n   :time (a / after\n            :op1 (t / temporal-quantity\n                    :quant 12\n                    :unit (m / month))))", "(r / regain-01\n   :time (a / after\n            :op1 (t / temporal-quantity\n                    :quant 12\n                    :unit (m / month))))", "(r / regain-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG1 (f / form))", "(r / regain-01\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t / temporal-quantity\n                    :quant 12\n                    :unit (m / month)\n                    :ARG1 (t2 / tough-02))))", "(r / regain-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t / temporal-quantity\n                    :quant 12\n                    :unit (m / month)\n                    :ARG1 (t2 / tough-02))))", "(c3 / come-04\n    :time (d / date-entity\n             :year 2013))", "(b / back-02\n   :ARG1 (p / person :name (n / name :op1 \"Steven\" :op2 \"Finn\"))\n   :ARG2 (b2 / bowl-01\n             :ARG0 p))", "(ii / include-91\n    :ARG2 (c5 / cap\n              :quant 23\n              :mod (t2 / test)))", "(b3 / back-02\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Steven\"\n                        :op2 \"Finn\")\n              :age (t / temporal-quantity\n                      :quant 21\n                      :unit (y / year))\n              :mod (c / carefree)))", "(r / resemble-01\n   :ARG2 (b3 / back-02\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Steven\"\n                                 :op2 \"Finn\")\n                       :age (t / temporal-quantity\n                               :quant 21\n                               :unit (y / year))\n                       :mod (c / carefree))))", "(c3 / come-04\n    :ARG1 (c4 / cap\n              :ord (o / ordinal-entity\n                      :value -1)\n              :ARG1 (ii / include-91\n                        :ARG2 (c5 / cap\n                                  :quant 23\n                                  :mod (t2 / test)))\n              :poss (c6 / country\n                        :name (n3 / name\n                                  :op1 \"England\"))))", "(c3 / come-04\n    :ARG1 (c4 / cap\n              :ord (o / ordinal-entity\n                      :value -1)\n              :ARG1 (ii / include-91\n                        :ARG2 (c5 / cap\n                                  :quant 23\n                                  :mod (t2 / test)))\n              :poss (c6 / country\n                        :name (n3 / name\n                                  :op1 \"England\")))\n    :time (d / date-entity\n             :year 2013))", "(b / back-02\n   :ARG1 (p / person :name (n / name :op1 \"Steven\" :op2 \"Finn\"))\n   :ARG2 (b2 / bowl-01\n             :ARG0 p)\n   :ARG1 (r / resemble-01\n            :ARG2 (b3 / back-02\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Steven\"\n                                          :op2 \"Finn\")\n                                :age (t / temporal-quantity\n                                        :quant 21\n                                        :unit (y / year))\n                                :mod (c / carefree)))))", "(c2 / cause-01\n    :ARG0 (c3 / come-04\n              :ARG1 (c4 / cap\n                        :ord (o / ordinal-entity\n                                :value -1)\n                        :ARG1 (ii / include-91\n                                  :ARG2 (c5 / cap\n                                            :quant 23\n                                            :mod (t2 / test)))\n                        :poss (c6 / country\n                                  :name (n3 / name\n                                            :op1 \"England\")))\n              :time (d / date-entity\n                       :year 2013)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 p\n            :ARG2 (b2 / bowl-01\n                      :ARG0 p)\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :name (n2 / name\n                                                   :op1 \"Steven\"\n                                                   :op2 \"Finn\")\n                                         :age (t / temporal-quantity\n                                                 :quant 21\n                                                 :unit (y / year))\n                                         :mod (c / carefree))))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG1 (b / back-02\n            :ARG1 p\n            :ARG2 (b2 / bowl-01\n                      :ARG0 p)\n            :ARG1 (r / resemble-01\n                     :ARG2 (b3 / back-02\n                               :ARG1 (p2 / person\n                                         :name (n2 / name\n                                                   :op1 \"Steven\"\n                                                   :op2 \"Finn\")\n                                         :age (t / temporal-quantity\n                                                 :quant 21\n                                                 :unit (y / year))\n                                         :mod (c / carefree)))))\n   :ARG1 (c2 / cause-01\n             :ARG0 (c3 / come-04\n                       :ARG1 (c4 / cap\n                                 :ord (o / ordinal-entity\n                                         :value -1)\n                                 :ARG1 (ii / include-91\n                                           :ARG2 (c5 / cap\n                                                     :quant 23\n                                                     :mod (t2 / test)))\n                                 :poss (c6 / country\n                                           :name (n3 / name\n                                                     :op1 \"England\")))\n                       :time (d / date-entity\n                                :year 2013))))"], "smus": ["England on tour of West Indies", "England on tour of West Indies", "Steven Finn was left out of the England squad for a tour of the West Indies.", "Steven Finn was left out of the England squad for a tour of the West Indies.", "Recovered after 12 months.", "Recovered after 12 months.", "Steven Finn has regained form.", "After 12 months of tough, form has regained.", "Steven Finn has regained form after 12 months of tough.", "It came in 2013.", "Steven Finn is backing bowling.", "23 of the test caps.", "Steven Finn, 21, is back, carefree.", "Like back to Steven Finn, a carefree 21 year old.", "The England's 23 test caps came first.", "The England's 23 test caps came in 2013.", "Steven Finn is back to bowling like a carefree 21 year old.", "Because England's first of 23 test caps came in 2013.", "Steven Finn said he was back to bowling like a carefree 21 year old.", "Steven Finn said he was back to bowling like Steven Finn, 21, a carefree man, because England's 23 test caps came in 2013."]}, {"instance_id": "realsumm-81", "summary": "Paul Armstrong flew to Cyprus to celebrate new job as IT project manager . Was stopped at airport with stun gun , baton and knuckle duster in Paul Armstrong bag . Pleaded guilty to possession of a firearm and lost new job as IT project manager before starting new job as IT project manager . Paul Armstrong was sentenced to eight months in jail , suspended for two years .", "summary_trees": ["# ::snt Paul Armstrong flew to Cyprus to celebrate new job as IT project manager .\n(f / fly-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Paul\"\n                  :op2 \"Armstrong\"))\n      :destination (c / country\n            :name (n2 / name\n                  :op1 \"Cyprus\"))\n      :purpose (c2 / celebrate-01\n            :ARG0 p\n            :ARG1 (j / job\n                  :ARG1-of (n3 / new-01)\n                  :topic (p2 / person\n                        :ARG0-of (m / manage-01\n                              :ARG1 (p3 / project\n                                    :topic (t / technology\n                                          :mod (ii / information))))))))", "# ::snt Was stopped at airport with stun gun , baton and knuckle duster in Paul Armstrong bag .\n(s / stop-01\n      :ARG1 (b / be-located-at-91\n            :ARG1 (a / and\n                  :op1 (g / gun\n                        :ARG2-of (s2 / stun-01))\n                  :op2 (b2 / baton)\n                  :op3 (d / dust-01\n                        :ARG1 (k / knuckle)))\n            :ARG2 (b3 / bag\n                  :poss (p / person\n                        :name (n / name\n                              :op1 \"Paul\"\n                              :op2 \"Armstrong\"))))\n      :location (a2 / airport))", "# ::snt Pleaded guilty to possession of a firearm and lost new job as IT project manager before starting new job as IT project manager .\n(a / and\n      :op1 (p / plead-02\n            :ARG2 (g / guilty-01\n                  :ARG1 (p2 / person)\n                  :ARG2 (p3 / possess-01\n                        :ARG1 (f / firearm))))\n      :op2 (l / lose-02\n            :ARG1 (j / job\n                  :ARG1-of (n / new-01)\n                  :topic (p4 / person\n                        :ARG0-of (m / manage-01\n                              :ARG1 (p5 / project\n                                    :mod (t / technology\n                                          :mod (ii / information)))))))\n      :time (b / before\n            :op1 (s / start-01\n                  :ARG1 j)))", "# ::snt Paul Armstrong was sentenced to eight months in jail , suspended for two years .\n(s / sentence-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Paul\"\n                  :op2 \"Armstrong\"))\n      :ARG2 (a / and\n            :op1 (t / temporal-quantity\n                  :quant 8\n                  :unit (m / month)\n                  :location (j / jail))\n            :op2 (s2 / suspend-01\n                  :ARG1 t\n                  :duration (t2 / temporal-quantity\n                        :quant 2\n                        :unit (y / year)))))"], "tree": ["(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))", "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))", "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))", "(m / manage-01\n   :ARG1 (p3 / project\n             :topic (t / technology\n                       :mod (ii / information))))", "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\")))", "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01))", "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))", "(c2 / celebrate-01\n    :ARG1 (j / job\n             :ARG1 (n3 / new-01)\n             :topic (p2 / person\n                        :ARG0 (m / manage-01\n                                 :ARG1 (p3 / project\n                                           :topic (t / technology\n                                                     :mod (ii / information)))))))", "(c2 / celebrate-01\n    :ARG0 (p / person :name (n / name :op1 \"Paul\" :op2 \"Armstrong\"))\n    :ARG1 (j / job\n             :ARG1 (n3 / new-01)\n             :topic (p2 / person\n                        :ARG0 (m / manage-01\n                                 :ARG1 (p3 / project\n                                           :topic (t / technology\n                                                     :mod (ii / information)))))))", "(c2 / celebrate-01\n    :ARG0 (p / person :name (n / name :op1 \"Paul\" :op2 \"Armstrong\"))\n    :ARG1 (j / job\n             :ARG1 (n3 / new-01)\n             :topic (p2 / person\n                        :ARG0 (m / manage-01\n                                 :ARG1 (p3 / project\n                                           :topic (t / technology\n                                                     :mod (ii / information)))))))", "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01\n                :ARG0 p\n                :ARG1 (j / job\n                         :ARG1 (n3 / new-01)\n                         :topic (p2 / person\n                                    :ARG0 (m / manage-01\n                                             :ARG1 (p3 / project\n                                                       :topic (t / technology\n                                                                 :mod (ii / information))))))))", "(b / be-located-at-91\n   :ARG1 (b2 / baton)\n   :ARG2 (b3 / bag\n             :poss (p / person\n                      :name (n / name\n                               :op1 \"Paul\"\n                               :op2 \"Armstrong\"))))", "(b / be-located-at-91\n   :ARG1 (g / gun\n            :ARG2 (s2 / stun-01))\n   :ARG2 (b3 / bag\n             :poss (p / person\n                      :name (n / name\n                               :op1 \"Paul\"\n                               :op2 \"Armstrong\"))))", "(b / be-located-at-91\n   :ARG1 (d / dust-01\n            :ARG1 (k / knuckle))\n   :ARG2 (b3 / bag\n             :poss (p / person\n                      :name (n / name\n                               :op1 \"Paul\"\n                               :op2 \"Armstrong\")))\n   :ARG2 b3)", "(s / stop-01\n   :ARG1 (b / be-located-at-91\n            :ARG1 (b2 / baton)\n            :ARG2 (b3 / bag\n                      :poss (p / person\n                               :name (n / name\n                                        :op1 \"Paul\"\n                                        :op2 \"Armstrong\"))))\n   :location (a2 / airport))", "(s / stop-01\n   :ARG1 (b / be-located-at-91\n            :ARG1 (g / gun\n                     :ARG2 (s2 / stun-01))\n            :ARG2 (b3 / bag\n                      :poss (p / person\n                               :name (n / name\n                                        :op1 \"Paul\"\n                                        :op2 \"Armstrong\"))))\n   :location (a2 / airport))", "(s / stop-01\n   :ARG1 (b / be-located-at-91\n            :ARG1 (d / dust-01\n                     :ARG1 (k / knuckle))\n            :ARG2 (b3 / bag\n                      :poss (p / person\n                               :name (n / name\n                                        :op1 \"Paul\"\n                                        :op2 \"Armstrong\")))\n            :ARG2 b3)\n   :location (a2 / airport))", "(b / be-located-at-91\n   :ARG1 (a / and\n            :op1 (g / gun\n                    :ARG2 (s2 / stun-01))\n            :op2 (b2 / baton)\n            :op3 (d / dust-01\n                    :ARG1 (k / knuckle)))\n   :ARG2 (b3 / bag\n             :poss (p / person\n                      :name (n / name\n                               :op1 \"Paul\"\n                               :op2 \"Armstrong\"))))", "(s / stop-01\n   :ARG1 (b / be-located-at-91\n            :ARG1 (a / and\n                     :op1 (g / gun\n                             :ARG2 (s2 / stun-01))\n                     :op2 (b2 / baton)\n                     :op3 (d / dust-01\n                             :ARG1 (k / knuckle)))\n            :ARG2 (b3 / bag\n                      :poss (p / person\n                               :name (n / name\n                                        :op1 \"Paul\"\n                                        :op2 \"Armstrong\"))))\n   :location (a2 / airport))", "(m / manage-01\n   :ARG1 (p5 / project\n             :mod (t / technology\n                     :mod (ii / information))))", "(g / guilty-01\n   :ARG1 (p2 / person)\n   :ARG2 (p3 / possess-01\n             :ARG1 (f / firearm)))", "(g / guilty-01\n   :ARG1 (p2 / person)\n   :ARG2 (p3 / possess-01\n             :ARG1 (f / firearm)))", "(p / plead-02\n   :ARG2 (g / guilty-01\n            :ARG1 (p2 / person)\n            :ARG2 (p3 / possess-01\n                      :ARG1 (f / firearm))))", "(l / lose-02\n   :ARG1 (j / job\n            :ARG1 (n / new-01)\n            :topic (p4 / person\n                       :ARG0 (m / manage-01\n                                :ARG1 (p5 / project\n                                          :mod (t / technology\n                                                  :mod (ii / information)))))))", "(l / lose-02\n   :ARG1 (j / job\n            :ARG1 (n / new-01)\n            :topic (p4 / person\n                       :ARG0 (m / manage-01\n                                :ARG1 (p5 / project\n                                          :mod (t / technology\n                                                  :mod (ii / information)))))))", "(s2 / suspend-01\n    :duration (t2 / temporal-quantity\n                  :quant 2\n                  :unit (y / year)))", "(s2 / suspend-01\n    :ARG1 (t / temporal-quantity)\n    :duration (t2 / temporal-quantity\n                  :quant 2\n                  :unit (y / year)))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\")))", "(s / sentence-01\n   :ARG2 (t / temporal-quantity\n            :quant 8\n            :unit (m / month)\n            :location (j / jail)))", "(s / sentence-01\n   :ARG2 (s2 / suspend-01\n             :ARG1 (t / temporal-quantity)\n             :duration (t2 / temporal-quantity\n                           :quant 2\n                           :unit (y / year))))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :ARG2 (t / temporal-quantity\n            :quant 8\n            :unit (m / month)\n            :location (j / jail)))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :ARG2 (t / temporal-quantity\n            :quant 8\n            :unit (m / month)\n            :location (j / jail)))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :ARG2 (s2 / suspend-01\n             :ARG1 (t / temporal-quantity)\n             :duration (t2 / temporal-quantity\n                           :quant 2\n                           :unit (y / year))))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :ARG2 (s2 / suspend-01\n             :ARG1 (t / temporal-quantity)\n             :duration (t2 / temporal-quantity\n                           :quant 2\n                           :unit (y / year))))", "(s / sentence-01\n   :ARG2 (a / and\n            :op1 (t / temporal-quantity\n                    :quant 8\n                    :unit (m / month)\n                    :location (j / jail))\n            :op2 (s2 / suspend-01\n                     :ARG1 t\n                     :duration (t2 / temporal-quantity\n                                   :quant 2\n                                   :unit (y / year)))))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :ARG2 (a / and\n            :op1 (t / temporal-quantity\n                    :quant 8\n                    :unit (m / month)\n                    :location (j / jail))\n            :op2 (s2 / suspend-01\n                     :ARG1 t\n                     :duration (t2 / temporal-quantity\n                                   :quant 2\n                                   :unit (y / year)))))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :ARG2 (a / and\n            :op1 (t / temporal-quantity\n                    :quant 8\n                    :unit (m / month)\n                    :location (j / jail))\n            :op2 (s2 / suspend-01\n                     :ARG1 t\n                     :duration (t2 / temporal-quantity\n                                   :quant 2\n                                   :unit (y / year)))))"], "smus": ["Flights to Cyprus were.", "Flights to Cyprus were.", "Flights to Cyprus were.", "Management of an information technology project.", "Paul Armstrong flew.", "Flights flew to Cyprus to celebrate.", "Paul Armstrong flew to Cyprus.", "Celebrate the new job of IT project manager.", "Paul Armstrong will celebrate the new job as project manager for information technology.", "Paul Armstrong will celebrate the new job as project manager for information technology.", "Paul Armstrong flew to Cyprus to celebrate the new job as project manager for the information technology project.", "The Baton was in Paul Armstrong's bag.", "The stun gun was in Paul Armstrong's bag.", "Knuckle dust in Paul Armstrong's bag.", "The baton was stopped at the airport by Paul Armstrong's bag.", "The stun gun in Paul Armstrong's bag was stopped at the airport.", "The knuckle dusting was stopped at the airport by Paul Armstrong's bag.", "A stun gun, a baton and a knuckle dusting were in Paul Armstrong's bag.", "Stunning gun, baton and knuckle dust stopped at the airport.", "Management of an information technology project.", "The person is guilty of possession of a firearm.", "The person is guilty of possession of a firearm.", "The person was pleaded guilty to possession of a firearm.", "A new job for the IT project manager was lost.", "A new job for the IT project manager was lost.", "The suspension was for two years.", "The suspension was for two years.", "Paul Armstrong was sentenced.", "sentenced to 8 months in jail.", "sentenced to be suspended for two years.", "Paul Armstrong was sentenced to eight months in jail.", "Paul Armstrong was sentenced to eight months in jail.", "Paul Armstrong was sentenced to 2 years suspended suspension.", "Paul Armstrong was sentenced to 2 years suspended suspension.", "sentenced to 8 months in jail and 2 years suspended.", "Paul Armstrong was sentenced to 8 months in jail and suspended for 2 years.", "Paul Armstrong was sentenced to 8 months in jail and suspended for 2 years."]}, {"instance_id": "realsumm-82", "summary": "Australian fashion designer Alex Perry wo n't show at this year 's MBFWA . Australian fashion designer Alex Perry is excited to kick back and enjoy the shows from front row . this year 's MBFWA will be Australian fashion designer Alex Perry second MBFWA Australian fashion designer Alex Perry has missed in two decades . Australian fashion designer Alex Perry is now focusing on global expansion in Asia and Middle East .", "summary_trees": ["# ::snt Australian fashion designer Alex Perry wo n't show at this year 's MBFWA .\n(s / show-01\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Alex\"\n                  :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                  :ARG1 (f / fashion))\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Australia\")))\n      :time (e / event\n            :name (n3 / name\n                  :op1 \"MBFWA\")\n            :mod (y / year\n                  :mod (t / this))))", "# ::snt Australian fashion designer Alex Perry is excited to kick back and enjoy the shows from front row .\n(e / excite-01\n      :ARG0 (a / and\n            :op1 (k / kick-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Alex\"\n                              :op2 \"Perry\")\n                        :ARG0-of (d / design-01\n                              :ARG1 (f / fashion))\n                        :mod (c / country\n                              :name (n2 / name\n                                    :op1 \"Australia\")))\n                  :direction (b / back))\n            :op2 (e2 / enjoy-01\n                  :ARG0 p\n                  :ARG1 (s / show-04)\n                  :manner (r / row\n                        :mod (f2 / front))))\n      :ARG1 p)", "# ::snt this year 's MBFWA will be Australian fashion designer Alex Perry second MBFWA Australian fashion designer Alex Perry has missed in two decades .\n(m / miss-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Alex\"\n                  :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                  :ARG1 (f / fashion))\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Australia\")))\n      :ARG1 (p2 / publication\n            :name (n3 / name\n                  :op1 \"MBFWA\"))\n      :time (b / before\n            :op1 (n4 / now)\n            :duration (t / temporal-quantity\n                  :quant 2\n                  :unit (d2 / decade)))\n      :ord (o / ordinal-entity\n            :value 2)\n      :time (y / year\n            :mod (t2 / this)))", "# ::snt Australian fashion designer Alex Perry is now focusing on global expansion in Asia and Middle East .\n(f / focus-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Alex\"\n                  :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                  :ARG1 (f2 / fashion))\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Australia\")))\n      :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (a / and\n                  :op1 (c2 / continent\n                        :name (n3 / name\n                              :op1 \"Asia\"))\n                  :op2 (w / world-region\n                        :name (n4 / name\n                              :op1 \"Middle\"\n                              :op2 \"East\"))))\n      :time (n5 / now))"], "tree": ["(s / show-01\n   :polarity -\n   :time (e / event\n            :name (n3 / name\n                      :op1 \"MBFWA\")\n            :mod (y / year\n                    :mod (t / this))))", "(s / show-01\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :time (e / event\n            :name (n3 / name\n                      :op1 \"MBFWA\")\n            :mod (y / year\n                    :mod (t / this))))", "(e2 / enjoy-01\n    :ARG0 (p / person :name (n / name :op1 \"Alex\" :op2 \"Perry\")))\n    :ARG1 (s / show-04))", "(e2 / enjoy-01\n    :manner (r / row\n               :mod (f2 / front)))", "(e2 / enjoy-01\n    :ARG0 (p / person :name (n / name :op1 \"Alex\" :op2 \"Perry\")))\n    :ARG1 (s / show-04)\n    :manner (r / row\n               :mod (f2 / front)))", "(e / excite-01\n   :ARG0 (e2 / enjoy-01\n             :ARG0 (p / person :name (n / name :op1 \"Alex\" :op2 \"Perry\")))\n             :ARG1 (s / show-04)\n             :manner (r / row\n                        :mod (f2 / front))))", "(e / excite-01\n   :ARG0 (e2 / enjoy-01\n             :ARG0 (p / person :name (n / name :op1 \"Alex\" :op2 \"Perry\")))\n             :ARG1 (s / show-04)\n             :manner (r / row\n                        :mod (f2 / front)))\n   :ARG1 p)", "(e / excite-01\n   :ARG0 (e2 / enjoy-01\n             :ARG0 (p / person :name (n / name :op1 \"Alex\" :op2 \"Perry\")))\n             :ARG1 (s / show-04)\n             :manner (r / row\n                        :mod (f2 / front)))\n   :ARG1 p)", "(k / kick-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\"))))", "(k / kick-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :direction (b / back))", "(e / excite-01\n   :ARG0 (k / kick-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Alex\"\n                              :op2 \"Perry\")\n                     :ARG0 (d / design-01\n                              :ARG1 (f / fashion))\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"Australia\")))\n            :direction (b / back)))", "(e / excite-01\n   :ARG0 (k / kick-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Alex\"\n                              :op2 \"Perry\")\n                     :ARG0 (d / design-01\n                              :ARG1 (f / fashion))\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"Australia\")))\n            :direction (b / back)))", "(e / excite-01\n   :ARG0 (k / kick-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Alex\"\n                              :op2 \"Perry\")\n                     :ARG0 (d / design-01\n                              :ARG1 (f / fashion))\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"Australia\")))\n            :direction (b / back)))", "(e / excite-01\n   :ARG0 (a / and\n            :op1 (k / kick-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Alex\"\n                                      :op2 \"Perry\")\n                             :ARG0 (d / design-01\n                                      :ARG1 (f / fashion))\n                             :mod (c / country\n                                     :name (n2 / name\n                                               :op1 \"Australia\")))\n                    :direction (b / back))\n            :op2 (e2 / enjoy-01\n                     :ARG0 p\n                     :ARG1 (s / show-04)\n                     :manner (r / row\n                                :mod (f2 / front)))))", "(e / excite-01\n   :ARG0 (a / and\n            :op1 (k / kick-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Alex\"\n                                      :op2 \"Perry\")\n                             :ARG0 (d / design-01\n                                      :ARG1 (f / fashion))\n                             :mod (c / country\n                                     :name (n2 / name\n                                               :op1 \"Australia\")))\n                    :direction (b / back))\n            :op2 (e2 / enjoy-01\n                     :ARG0 p\n                     :ARG1 (s / show-04)\n                     :manner (r / row\n                                :mod (f2 / front))))\n   :ARG1 p)", "(e / excite-01\n   :ARG0 (a / and\n            :op1 (k / kick-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Alex\"\n                                      :op2 \"Perry\")\n                             :ARG0 (d / design-01\n                                      :ARG1 (f / fashion))\n                             :mod (c / country\n                                     :name (n2 / name\n                                               :op1 \"Australia\")))\n                    :direction (b / back))\n            :op2 (e2 / enjoy-01\n                     :ARG0 p\n                     :ARG1 (s / show-04)\n                     :manner (r / row\n                                :mod (f2 / front))))\n   :ARG1 p)", "(m / miss-02\n   :time (b / before\n            :op1 (n4 / now)\n            :duration (t / temporal-quantity\n                         :quant 2\n                         :unit (d2 / decade))))", "(m / miss-02\n   :time (b / before\n            :op1 (n4 / now)\n            :duration (t / temporal-quantity\n                         :quant 2\n                         :unit (d2 / decade)))\n   :ord (o / ordinal-entity\n           :value 2)\n   :time (y / year\n            :mod (t2 / this)))", "(m / miss-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (p2 / publication\n             :name (n3 / name\n                       :op1 \"MBFWA\")))", "(m / miss-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (p2 / publication\n             :name (n3 / name\n                       :op1 \"MBFWA\"))\n   :time (b / before\n            :op1 (n4 / now)\n            :duration (t / temporal-quantity\n                         :quant 2\n                         :unit (d2 / decade))))", "(m / miss-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (p2 / publication\n             :name (n3 / name\n                       :op1 \"MBFWA\"))\n   :time (b / before\n            :op1 (n4 / now)\n            :duration (t / temporal-quantity\n                         :quant 2\n                         :unit (d2 / decade)))\n   :ord (o / ordinal-entity\n           :value 2)\n   :time (y / year\n            :mod (t2 / this)))", "(e / expand-01\n   :location (c2 / continent\n                 :name (n3 / name\n                           :op1 \"Asia\")))", "(e / expand-01\n   :location (w / world-region\n                :name (n4 / name\n                          :op1 \"Middle\"\n                          :op2 \"East\")))", "(e / expand-01\n   :ARG1 (g / globe)\n   :location (c2 / continent\n                 :name (n3 / name\n                           :op1 \"Asia\")))", "(e / expand-01\n   :ARG1 (g / globe)\n   :location (w / world-region\n                :name (n4 / name\n                          :op1 \"Middle\"\n                          :op2 \"East\")))", "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (c2 / continent\n                          :name (n3 / name\n                                    :op1 \"Asia\"))))", "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (w / world-region\n                         :name (n4 / name\n                                   :op1 \"Middle\"\n                                   :op2 \"East\"))))", "(e / expand-01\n   :location (a / and\n                :op1 (c2 / continent\n                         :name (n3 / name\n                                   :op1 \"Asia\"))\n                :op2 (w / world-region\n                        :name (n4 / name\n                                  :op1 \"Middle\"\n                                  :op2 \"East\"))))", "(e / expand-01\n   :ARG1 (g / globe)\n   :location (a / and\n                :op1 (c2 / continent\n                         :name (n3 / name\n                                   :op1 \"Asia\"))\n                :op2 (w / world-region\n                        :name (n4 / name\n                                  :op1 \"Middle\"\n                                  :op2 \"East\"))))", "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (a / and\n                         :op1 (c2 / continent\n                                  :name (n3 / name\n                                            :op1 \"Asia\"))\n                         :op2 (w / world-region\n                                 :name (n4 / name\n                                           :op1 \"Middle\"\n                                           :op2 \"East\")))))", "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f2 / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (c2 / continent\n                          :name (n3 / name\n                                    :op1 \"Asia\"))))", "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f2 / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (c2 / continent\n                          :name (n3 / name\n                                    :op1 \"Asia\"))))", "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f2 / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (w / world-region\n                         :name (n4 / name\n                                   :op1 \"Middle\"\n                                   :op2 \"East\"))))", "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f2 / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (w / world-region\n                         :name (n4 / name\n                                   :op1 \"Middle\"\n                                   :op2 \"East\")))\n   :time (n5 / now))", "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f2 / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (a / and\n                         :op1 (c2 / continent\n                                  :name (n3 / name\n                                            :op1 \"Asia\"))\n                         :op2 (w / world-region\n                                 :name (n4 / name\n                                           :op1 \"Middle\"\n                                           :op2 \"East\")))))", "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f2 / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :ARG1 (e / expand-01\n            :ARG1 (g / globe)\n            :location (a / and\n                         :op1 (c2 / continent\n                                  :name (n3 / name\n                                            :op1 \"Asia\"))\n                         :op2 (w / world-region\n                                 :name (n4 / name\n                                           :op1 \"Middle\"\n                                           :op2 \"East\"))))\n   :time (n5 / now))"], "smus": ["This year's MBFWA didn't show.", "Australian fashion designer Alex Perry didn't show at this year's MBFWA.", "Alex Perry will enjoy the shows.", "Enjoy from the front row.", "Alex Perry will enjoy the shows from the front row.", "It's exciting to see Alex Perry enjoying the shows from the front row.", "Alex Perry is excited to enjoy the shows front row.", "Alex Perry is excited to enjoy the shows front row.", "Australian fashion designer Alex Perry will kick.", "Australian fashion designer Alex Perry will kick back.", "Exciting to see Australian fashion designer Alex Perry kick back.", "Exciting to see Australian fashion designer Alex Perry kick back.", "Exciting to see Australian fashion designer Alex Perry kick back.", "Exciting to see Australian fashion designer Alex Perry kick back and enjoy the shows in front row.", "Australian fashion designer Alex Perry is exciting to kick back and enjoy the shows front row.", "Australian fashion designer Alex Perry is exciting to kick back and enjoy the shows front row.", "Missed in the past two decades.", "This year, the second time in two decades that has been missed.", "Australian fashion designer Alex Perry has missed MBFWA.", "Australian fashion designer Alex Perry has missed MBFWA for the past two decades.", "Australian fashion designer Alex Perry has missed MBFWA for the second time in two decades this year.", "expansion in Asia", "Expansion in the Middle East", "Global expansion in Asia", "Global expansion in the Middle East", "focusing on global expansion in Asia.", "focusing on global expansion in the Middle East.", "Expanding in Asia and the Middle East.", "Global expansion in Asia and the Middle East.", "Focusing on global expansion in Asia and the Middle East.", "Australian fashion designer Alex Perry is focusing on global expansion in Asia.", "Australian fashion designer Alex Perry is focusing on global expansion in Asia.", "Australian fashion designer Alex Perry is focusing on global expansion in the Middle East.", "Australian fashion designer Alex Perry is now focusing on global expansion in the Middle East.", "Australian fashion designer Alex Perry is focusing on global expansion in Asia and the Middle East.", "Australian fashion designer Alex Perry is now focusing on global expansion in Asia and the Middle East."]}, {"instance_id": "realsumm-83", "summary": "An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage . More than a dozen people were injured at An Indiana public school performance of American Pie and one student was taken to a hospital in critical condition . Students said there had been no issues when Students previously practiced American Pie on the stage with the same number of people .", "summary_trees": ["# ::snt An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage .\n(e / end-01\n      :ARG1 (p / perform-01\n            :ARG0 (s / school\n                  :location (s2 / state\n                        :name (n / name\n                              :op1 \"Indiana\"))\n                  :ARG1-of (p2 / public-02))\n            :ARG1 (m / music\n                  :name (n2 / name\n                        :op1 \"American\"\n                        :op2 \"Pie\")))\n      :ARG2 (t / tragedy)\n      :time (d / date-entity\n            :weekday (w / wednesday))\n      :time (b / buckle-01\n            :ARG1 (p3 / person\n                  :ARG0-of (r / rise-01))\n            :time (d2 / dance-01\n                  :ARG0 (p4 / person\n                        :quant (m2 / multiple\n                              :op1 12))\n                  :location (s3 / stage))))", "# ::snt More than a dozen people were injured at An Indiana public school performance of American Pie and one student was taken to a hospital in critical condition .\n(a / and\n      :op1 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / more-than\n                        :op1 12))\n            :time (p2 / perform-01\n                  :ARG1 (m2 / music\n                        :name (n / name\n                              :op1 \"American\"\n                              :op2 \"Pie\"))\n                  :location (s / school\n                        :ARG1-of (p3 / public-02)\n                        :location (s2 / state\n                              :name (n2 / name\n                                    :op1 \"Indiana\")))))\n      :op2 (t / take-01\n            :ARG1 (p4 / person\n                  :quant 1\n                  :ARG0-of (s3 / study-01))\n            :ARG3 (h / hospital)\n            :manner (c / condition\n                  :ARG1-of (c2 / critical-03))))", "# ::snt Students said there had been no issues when Students previously practiced American Pie on the stage with the same number of people .\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (s2 / study-01))\n      :ARG1 (ii / issue-02\n            :polarity -\n            :time (p2 / practice-01\n                  :ARG0 p\n                  :ARG1 (m / music\n                        :name (n / name\n                              :op1 \"American\"\n                              :op2 \"Pie\"))\n                  :location (s3 / stage)\n                  :accompanier (p3 / person\n                        :quant (n2 / number\n                              :ARG1-of (s4 / same-01)))\n                  :time (p4 / previous))))"], "tree": ["(b / buckle-01\n   :time (d2 / dance-01\n             :location (s3 / stage)))", "(d2 / dance-01\n    :ARG0 (p4 / person\n              :quant (m2 / multiple\n                         :op1 12)))", "(d2 / dance-01\n    :ARG0 (p4 / person\n              :quant (m2 / multiple\n                         :op1 12))\n    :location (s3 / stage))", "(e / end-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (b / buckle-01\n            :time (d2 / dance-01\n                      :location (s3 / stage))))", "(b / buckle-01\n   :ARG1 (p3 / person\n             :ARG0 (r / rise-01))\n   :time (d2 / dance-01\n             :ARG0 (p4 / person\n                       :quant (m2 / multiple\n                                  :op1 12))\n             :location (s3 / stage)))", "(p / perform-01\n   :ARG0 (s / school\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"Indiana\"))\n            :ARG1 (p2 / public-02))\n   :ARG1 (m / music\n            :name (n2 / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))", "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))\n                     :ARG1 (p2 / public-02))\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (b / buckle-01\n            :ARG1 (p3 / person\n                      :ARG0 (r / rise-01))\n            :time (d2 / dance-01\n                      :ARG0 (p4 / person\n                                :quant (m2 / multiple\n                                           :op1 12))\n                      :location (s3 / stage))))", "(p2 / perform-01\n    :location (s / school\n                 :location (s2 / state\n                               :name (n2 / name\n                                         :op1 \"Indiana\"))))", "(ii / injure-01\n    :time (p2 / perform-01\n              :location (s / school\n                           :location (s2 / state\n                                         :name (n2 / name\n                                                   :op1 \"Indiana\")))))", "(t / take-01\n   :ARG1 (p4 / person\n             :quant 1\n             :ARG0 (s3 / study-01))\n   :ARG3 (h / hospital)\n   :manner (c / condition\n              :ARG1 (c2 / critical-03)))", "(p2 / perform-01\n    :ARG1 (m2 / music\n              :name (n / name\n                       :op1 \"American\"\n                       :op2 \"Pie\"))\n    :location (s / school\n                 :ARG1 (p3 / public-02)\n                 :location (s2 / state\n                               :name (n2 / name\n                                         :op1 \"Indiana\"))))", "(ii / injure-01\n    :ARG1 (p / person\n             :quant (m / more-than\n                       :op1 12))\n    :time (p2 / perform-01\n              :ARG1 (m2 / music\n                        :name (n / name\n                                 :op1 \"American\"\n                                 :op2 \"Pie\"))\n              :location (s / school\n                           :ARG1 (p3 / public-02)\n                           :location (s2 / state\n                                         :name (n2 / name\n                                                   :op1 \"Indiana\")))))", "(p2 / practice-01\n    :ARG1 (m / music\n             :name (n / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))", "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (m / music\n             :name (n / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))", "(p2 / practice-01\n    :location (s3 / stage)\n    :accompanier (p3 / person\n                     :quant (n2 / number))\n    :time (p4 / previous))", "(ii / issue-02\n    :polarity -\n    :time (p2 / practice-01\n              :location (s3 / stage)\n              :accompanier (p3 / person\n                               :quant (n2 / number))\n              :time (p4 / previous)))", "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (m / music\n             :name (n / name\n                      :op1 \"American\"\n                      :op2 \"Pie\"))\n    :location (s3 / stage)\n    :accompanier (p3 / person\n                     :quant (n2 / number\n                                :ARG1 (s4 / same-01)))\n    :time (p4 / previous))", "(ii / issue-02\n    :polarity -\n    :time (p2 / practice-01\n              :ARG0 (p / person)\n              :ARG1 (m / music\n                       :name (n / name\n                                :op1 \"American\"\n                                :op2 \"Pie\"))\n              :location (s3 / stage)\n              :accompanier (p3 / person\n                               :quant (n2 / number\n                                          :ARG1 (s4 / same-01)))\n              :time (p4 / previous)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (ii / issue-02\n             :polarity -\n             :time (p2 / practice-01\n                       :ARG0 p\n                       :ARG1 (m / music\n                                :name (n / name\n                                         :op1 \"American\"\n                                         :op2 \"Pie\"))\n                       :location (s3 / stage)\n                       :accompanier (p3 / person\n                                        :quant (n2 / number\n                                                   :ARG1 (s4 / same-01)))\n                       :time (p4 / previous))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (ii / issue-02\n             :polarity -\n             :time (p2 / practice-01\n                       :ARG0 p\n                       :ARG1 (m / music\n                                :name (n / name\n                                         :op1 \"American\"\n                                         :op2 \"Pie\"))\n                       :location (s3 / stage)\n                       :accompanier (p3 / person\n                                        :quant (n2 / number\n                                                   :ARG1 (s4 / same-01)))\n                       :time (p4 / previous))))"], "smus": ["Blown as the dancers danced on stage.", "Dozens danced.", "Dozens danced on stage.", "Wednesday ended when the stage swooped in.", "The riser buckled as dozens danced on stage.", "A public school in Indiana performs American Pie.", "The Indiana public school's performance of American Pie ended in tragedy Wednesday, as the riser buckled as dozens danced on stage.", "Performance at an Indiana school.", "Injured during performance at Indian school.", "One student was taken to a hospital in critical condition.", "American Pie performance at a public school in Indiana.", "More than one person was injured during an American Pie performance at a public school in Indiana.", "American Pie practice.", "People practicing American Pie.", "There has previously been practice on stage with a number of people.", "There were no issues previously in practice with a number of people on stage.", "People have previously practiced American Pie on stage with the same number of people.", "There were no issues when people had previously practiced American Pie on stage with the same number of people.", "Students said they had no issues when they had previously practiced American Pie on stage with the same number of people.", "Students said they had no issues when they had previously practiced American Pie on stage with the same number of people."]}, {"instance_id": "realsumm-84", "summary": "Manchester City have been linked with summer move for Raheem Sterling . Raheem Sterling has two years left on Raheem Sterling contract and is stalling on a new deal . Brendan Rodgers says a move to Manchester City would not be step up for Raheem Sterling . Indicating it will take Manchester City 20 years to eclipse Liverpool .", "summary_trees": ["# ::snt Manchester City have been linked with summer move for Raheem Sterling .\n(l / link-01\n      :ARG1 (t / team\n            :name (n / name\n                  :op1 \"Manchester\"\n                  :op2 \"City\"))\n      :ARG2 (m / move-03\n            :ARG0 t\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 \"Raheem\"\n                        :op2 \"Sterling\"))\n            :time (d / date-entity\n                  :season (s / summer))))", "# ::snt Raheem Sterling has two years left on Raheem Sterling contract and is stalling on a new deal .\n(a / and\n      :op1 (l / leave-17\n            :ARG0 (c / contract\n                  :poss (p / person\n                        :name (n / name\n                              :op1 \"Raheem\"\n                              :op2 \"Sterl\")))\n            :ARG1 (t / temporal-quantity\n                  :quant 2\n                  :unit (y / year)))\n      :op2 (s / stall-01\n            :ARG0 p\n            :ARG1 (d / deal\n                  :ARG1-of (n2 / new-01))))", "# ::snt Brendan Rodgers says a move to Manchester City would not be step up for Raheem Sterling .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Brendan\"\n                  :op2 \"Rodgers\"))\n      :ARG1 (s2 / step-01\n            :polarity -\n            :ARG4 (m / move-01\n                  :ARG2 (c / city\n                        :name (n2 / name\n                              :op1 \"Manchester\"\n                              :op2 \"City\")))\n            :beneficiary (p2 / person\n                  :name (n3 / name\n                        :op1 \"Raheem\"\n                        :op2 \"Sterling\"))\n            :direction (u / up)))", "# ::snt Indicating it will take Manchester City 20 years to eclipse Liverpool .\n(ii / indicate-01\n      :ARG1 (t / take-10\n            :ARG0 (e / eclipse-01\n                  :ARG1 (t2 / team\n                        :name (n / name\n                              :op1 \"Liverpool\")))\n            :ARG1 (t3 / temporal-quantity\n                  :quant 20\n                  :unit (y / year))\n            :ARG2 (t4 / team\n                  :name (n2 / name\n                        :op1 \"Manchester\"\n                        :op2 \"City\"))))"], "tree": ["(m / move-03\n   :time (d / date-entity\n            :season (s / summer)))", "(m / move-03\n   :ARG0 (t / team :name (n / name :op1 \"Manchester\" :op2 \"City\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Raheem\"\n                      :op2 \"Sterling\"))\n   :time (d / date-entity\n            :season (s / summer)))", "(l / link-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Manchester\"\n                     :op2 \"City\"))\n   :ARG2 (m / move-03\n            :ARG0 t\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Raheem\"\n                               :op2 \"Sterling\"))\n            :time (d / date-entity\n                     :season (s / summer))))", "(s / stall-01\n   :ARG0 (p / person :name (n / name :op1 \"Raheem\" :op2 \"Sterl\"))\n   :ARG1 (d / deal\n            :ARG1 (n2 / new-01)))", "(l / leave-17\n   :ARG0 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Raheem\"\n                              :op2 \"Sterl\")))\n   :ARG1 (t / temporal-quantity\n            :quant 2\n            :unit (y / year)))", "(m / move-01\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"Manchester\"\n                      :op2 \"City\")))", "(s2 / step-01\n    :polarity -\n    :beneficiary (p2 / person\n                     :name (n3 / name\n                               :op1 \"Raheem\"\n                               :op2 \"Sterling\"))\n    :direction (u / up))", "(s2 / step-01\n    :polarity -\n    :ARG4 (m / move-01\n             :ARG2 (c / city\n                      :name (n2 / name\n                                :op1 \"Manchester\"\n                                :op2 \"City\")))\n    :beneficiary (p2 / person\n                     :name (n3 / name\n                               :op1 \"Raheem\"\n                               :op2 \"Sterling\"))\n    :direction (u / up))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brendan\"\n                     :op2 \"Rodgers\"))\n   :ARG1 (s2 / step-01\n             :polarity -\n             :ARG4 (m / move-01\n                      :ARG2 (c / city\n                               :name (n2 / name\n                                         :op1 \"Manchester\"\n                                         :op2 \"City\")))\n             :beneficiary (p2 / person\n                              :name (n3 / name\n                                        :op1 \"Raheem\"\n                                        :op2 \"Sterling\"))\n             :direction (u / up)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brendan\"\n                     :op2 \"Rodgers\"))\n   :ARG1 (s2 / step-01\n             :polarity -\n             :ARG4 (m / move-01\n                      :ARG2 (c / city\n                               :name (n2 / name\n                                         :op1 \"Manchester\"\n                                         :op2 \"City\")))\n             :beneficiary (p2 / person\n                              :name (n3 / name\n                                        :op1 \"Raheem\"\n                                        :op2 \"Sterling\"))\n             :direction (u / up)))", "(e / eclipse-01\n   :ARG1 (t2 / team\n             :name (n / name\n                      :op1 \"Liverpool\")))", "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG1 (t2 / team\n                      :name (n / name\n                               :op1 \"Liverpool\")))\n   :ARG1 (t3 / temporal-quantity\n             :quant 20\n             :unit (y / year))\n   :ARG2 (t4 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\")))", "(ii / indicate-01\n    :ARG1 (t / take-10\n             :ARG0 (e / eclipse-01\n                      :ARG1 (t2 / team\n                                :name (n / name\n                                         :op1 \"Liverpool\")))\n             :ARG1 (t3 / temporal-quantity\n                       :quant 20\n                       :unit (y / year))\n             :ARG2 (t4 / team\n                       :name (n2 / name\n                                 :op1 \"Manchester\"\n                                 :op2 \"City\"))))"], "smus": ["The move was in the summer.", "Manchester City made the move for Raheem Sterling in the summer.", "Manchester City are linked with a move to Radeem Sterling in the summer.", "Raheem Sterl is stalling the new deal.", "Raheem stern's contract has left him with two years.", "Move to Manchester City.", "Raheem Sternling was not taking a step up.", "Raheem Sternling is not taking a step up in Manchester City.", "Brendan Rodgers says that for Raheem Sterling, the move up to Manchester City is not a step up.", "Brendan Rodgers says that for Raheem Sterling, the move up to Manchester City is not a step up.", "eclipse liverpool", "It will take 20 years to eclipse Liverpool with Manchester City.", "indicating it will take Manchester City 20 years to eclipse Liverpool."]}, {"instance_id": "realsumm-85", "summary": "Up to one in five Chinese eateries could be selling soup using illegal meat . Charity says soup using illegal meat is often disguised on menu or only offered if requested . Loophole lets people bring 20 kg of meat into UK for personal consumption .", "summary_trees": ["# ::snt Up to one in five Chinese eateries could be selling soup using illegal meat .\n(p / possible-01\n      :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"China\"))\n                  :ARG1-of (ii / include-91\n                        :ARG2 (p2 / person\n                              :ARG0-of (e / eat-01))\n                        :ARG3 (u / up-to\n                              :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                  :ARG1-of (u2 / use-01\n                        :ARG0 r\n                        :ARG2 (m / meat\n                              :ARG1-of (l / legal-02\n                                    :polarity -))))))", "# ::snt Charity says soup using illegal meat is often disguised on menu or only offered if requested .\n(s / say-01\n      :ARG0 (c / charity)\n      :ARG1 (o / or\n            :op1 (d / disguise-01\n                  :ARG1 (s2 / soup\n                        :ARG0-of (u / use-01\n                              :ARG1 (m / meat\n                                    :ARG1-of (l / legal-02\n                                          :polarity -))))\n                  :location (m2 / menu)\n                  :frequency (o2 / often))\n            :op2 (o3 / offer-01\n                  :ARG1 s2\n                  :mod (o4 / only)\n                  :condition (r / request-01\n                        :ARG1 s2))))", "# ::snt Loophole lets people bring 20 kg of meat into UK for personal consumption .\n(l / let-01\n      :ARG0 (l2 / loophole)\n      :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                  :quant (m2 / mass-quantity\n                        :quant 20\n                        :unit (k / kilogram)))\n            :ARG2 (c / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                  :ARG0 p\n                  :ARG1 m\n                  :ARG1-of (p2 / personal-02))))"], "tree": ["(u2 / use-01\n    :ARG0 (r / restaurant)\n    :ARG2 (m / meat\n             :ARG1 (l / legal-02\n                      :polarity -)))", "(ii / include-91\n    :ARG2 (p2 / person\n              :ARG0 (e / eat-01))\n    :ARG3 (u / up-to\n             :op1 \"1/5\"))", "(s / sell-01\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG0 (r / restaurant)\n                       :ARG2 (m / meat\n                                :ARG1 (l / legal-02\n                                         :polarity -)))))", "(s / sell-01\n   :ARG0 (r / restaurant\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"China\"))\n            :ARG1 (ii / include-91\n                      :ARG2 (p2 / person\n                                :ARG0 (e / eat-01))\n                      :ARG3 (u / up-to\n                               :op1 \"1/5\"))))", "(s / sell-01\n   :ARG0 (r / restaurant\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"China\"))\n            :ARG1 (ii / include-91\n                      :ARG2 (p2 / person\n                                :ARG0 (e / eat-01))\n                      :ARG3 (u / up-to\n                               :op1 \"1/5\")))\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG0 r\n                       :ARG2 (m / meat\n                                :ARG1 (l / legal-02\n                                         :polarity -)))))", "(s / sell-01\n   :ARG0 (r / restaurant\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"China\"))\n            :ARG1 (ii / include-91\n                      :ARG2 (p2 / person\n                                :ARG0 (e / eat-01))\n                      :ARG3 (u / up-to\n                               :op1 \"1/5\")))\n   :ARG1 (s2 / soup\n             :ARG1 (u2 / use-01\n                       :ARG0 r\n                       :ARG2 (m / meat\n                                :ARG1 (l / legal-02\n                                         :polarity -)))))", "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"China\"))\n                     :ARG1 (ii / include-91\n                               :ARG2 (p2 / person\n                                         :ARG0 (e / eat-01))\n                               :ARG3 (u / up-to\n                                        :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                      :ARG1 (u2 / use-01\n                                :ARG0 r\n                                :ARG2 (m / meat\n                                         :ARG1 (l / legal-02\n                                                  :polarity -))))))", "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"China\"))\n                     :ARG1 (ii / include-91\n                               :ARG2 (p2 / person\n                                         :ARG0 (e / eat-01))\n                               :ARG3 (u / up-to\n                                        :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                      :ARG1 (u2 / use-01\n                                :ARG0 r\n                                :ARG2 (m / meat\n                                         :ARG1 (l / legal-02\n                                                  :polarity -))))))", "(o3 / offer-01\n    :mod (o4 / only)\n    :condition (r / request-01))", "(d / disguise-01\n   :location (m2 / menu)\n   :frequency (o2 / often))", "(u / use-01\n   :ARG1 (m / meat\n            :ARG1 (l / legal-02\n                     :polarity -)))", "(u / use-01\n   :ARG1 (m / meat\n            :ARG1 (l / legal-02\n                     :polarity -)))", "(o3 / offer-01\n    :ARG1 (s2 / soup)\n    :mod (o4 / only)\n    :condition (r / request-01\n                  :ARG1 s2))", "(d / disguise-01\n   :ARG1 (s2 / soup\n             :ARG0 (u / use-01\n                      :ARG1 (m / meat\n                               :ARG1 (l / legal-02\n                                        :polarity -))))\n   :location (m2 / menu)\n   :frequency (o2 / often))", "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (o / or\n            :op1 (d / disguise-01\n                    :ARG1 (s2 / soup\n                              :ARG0 (u / use-01\n                                       :ARG1 (m / meat\n                                                :ARG1 (l / legal-02\n                                                         :polarity -))))\n                    :location (m2 / menu)\n                    :frequency (o2 / often))\n            :op2 (o3 / offer-01\n                     :ARG1 s2\n                     :mod (o4 / only)\n                     :condition (r / request-01\n                                   :ARG1 s2))))", "(s / say-01\n   :ARG0 (c / charity)\n   :ARG1 (o / or\n            :op1 (d / disguise-01\n                    :ARG1 (s2 / soup\n                              :ARG0 (u / use-01\n                                       :ARG1 (m / meat\n                                                :ARG1 (l / legal-02\n                                                         :polarity -))))\n                    :location (m2 / menu)\n                    :frequency (o2 / often))\n            :op2 (o3 / offer-01\n                     :ARG1 s2\n                     :mod (o4 / only)\n                     :condition (r / request-01\n                                   :ARG1 s2))))", "(c2 / consume-01\n    :ARG0 (p / person)\n    :ARG1 (m / meat)\n    :ARG1 (p2 / personal-02))", "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram))))", "(b / bring-01\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram)))\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\")))", "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram)))\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\")))", "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram)))\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\"))\n   :purpose (c2 / consume-01\n                :ARG0 p\n                :ARG1 m\n                :ARG1 (p2 / personal-02)))", "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                     :quant (m2 / mass-quantity\n                                :quant 20\n                                :unit (k / kilogram)))\n            :ARG2 (c / country\n                     :name (n / name\n                              :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                         :ARG0 p\n                         :ARG1 m\n                         :ARG1 (p2 / personal-02))))", "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                     :quant (m2 / mass-quantity\n                                :quant 20\n                                :unit (k / kilogram)))\n            :ARG2 (c / country\n                     :name (n / name\n                              :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                         :ARG0 p\n                         :ARG1 m\n                         :ARG1 (p2 / personal-02))))"], "smus": ["Restaurants using illegal meat.", "Up to one fifth of the eaters.", "Selling soup about restaurants using illegal meat.", "Chinese restaurants selling up to 1/5 of the people eating.", "Chinese restaurants selling soup using illegal meat to up to one fifth of the customers.", "Chinese restaurants selling soup using illegal meat to up to one fifth of the customers.", "Chinese restaurants can be selling soup using illegal meat to up to one fifth of the eaters.", "Chinese restaurants can be selling soup using illegal meat to up to one fifth of the eaters.", "Only offered if requested.", "often disguised in the menu.", "using illegal meat.", "using illegal meat.", "Soup is only offered if requested.", "Using illegal meat is often disguised as soup on the menu.", "The charity says soup made with meat from an illegal source is often disguised on the menu or offered only if requested.", "The charity says soup made with meat from an illegal source is often disguised on the menu or offered only if requested.", "People consume meat as a person.", "People will bring 20 kilograms of meat.", "20kg of meat will be brought to the UK.", "People would bring 20 kilograms of meat to the UK.", "People will bring 20 kilograms of meat to the UK for consumption per person.", "The loophole lets people bring 20kg of meat into the UK for consumption by the person.", "The loophole lets people bring 20kg of meat into the UK for consumption by the person."]}, {"instance_id": "realsumm-86", "summary": "Two types of cereal in an Easter egg with marshmallows and brownies . Served at Black Milk cafe in Manchester 's Northern Quarter . ' Easter is less about what is used to mean , ' cafe owner Olly Taylor said .", "summary_trees": ["# ::snt Two types of cereal in an Easter egg with marshmallows and brownies .\n(c / cereal\n      :mod (t / type\n            :quant 2)\n      :location (e / egg\n            :mod (f / festival\n                  :name (n / name\n                        :op1 \"Easter\")))\n      :accompanier (a / and\n            :op1 (m / marshmallow)\n            :op2 (b / brownie)))", "# ::snt Served at Black Milk cafe in Manchester 's Northern Quarter . '\n(s / serve-01\n      :location (c / cafe\n            :name (n / name\n                  :op1 \"Black\"\n                  :op2 \"Milk\")\n            :location (q / quarter\n                  :name (n2 / name\n                        :op1 \"Northern\"\n                        :op2 \"Quarter\")\n                  :part-of (c2 / city\n                        :name (n3 / name\n                              :op1 \"Manchester\")))))", "# ::snt Easter is less about what is used to mean , ' cafe owner Olly Taylor said .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Olly\"\n                  :op2 \"Taylor\")\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (h / have-degree-91\n            :ARG1 (f / festival\n                  :name (n2 / name\n                        :op1 \"Easter\"))\n            :ARG2 (c2 / concern-02\n                  :ARG0 f\n                  :ARG1 (t / thing\n                        :ARG2-of (m / mean-01\n                              :ARG1 f\n                              :time (u / use-03))))\n            :ARG3 (l / less)))"], "tree": ["(c / cereal\n   :mod (t / type\n           :quant 2)\n   :location (e / egg\n                :mod (f / festival\n                        :name (n / name\n                                 :op1 \"Easter\")))\n   :accompanier (a / and\n                   :op1 (m / marshmallow)\n                   :op2 (b / brownie)))", "(s / serve-01\n   :location (c / cafe\n                :name (n / name\n                         :op1 \"Black\"\n                         :op2 \"Milk\")\n                :location (q / quarter\n                             :name (n2 / name\n                                       :op1 \"Northern\"\n                                       :op2 \"Quarter\")\n                             :part (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Manchester\")))))", "(s / serve-01\n   :location (c / cafe\n                :name (n / name\n                         :op1 \"Black\"\n                         :op2 \"Milk\")\n                :location (q / quarter\n                             :name (n2 / name\n                                       :op1 \"Northern\"\n                                       :op2 \"Quarter\")\n                             :part (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Manchester\")))))", "(m / mean-01\n   :ARG1 (f / festival :name (n2 / name :op1 \"Easter\"))\n   :time (u / use-03))", "(c2 / concern-02\n    :ARG0 (f / festival :name (n2 / name :op1 \"Easter\"))\n    :ARG1 (t / thing\n             :ARG2 (m / mean-01\n                      :ARG1 f\n                      :time (u / use-03))))", "(h / have-degree-91\n   :ARG1 (f / festival\n            :name (n2 / name\n                      :op1 \"Easter\"))\n   :ARG2 (c2 / concern-02\n             :ARG0 f\n             :ARG1 (t / thing\n                      :ARG2 (m / mean-01\n                               :ARG1 f\n                               :time (u / use-03))))\n   :ARG3 (l / less))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Olly\"\n                     :op2 \"Taylor\")\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (h / have-degree-91\n            :ARG1 (f / festival\n                     :name (n2 / name\n                               :op1 \"Easter\"))\n            :ARG2 (c2 / concern-02\n                      :ARG0 f\n                      :ARG1 (t / thing\n                               :ARG2 (m / mean-01\n                                        :ARG1 f\n                                        :time (u / use-03))))\n            :ARG3 (l / less)))"], "smus": ["There are two types of cereal in an Easter egg with marshmallows and brownies.", "Serving at the Black Milk cafe in Manchester's Northern Quarter.", "Serving at the Black Milk cafe in Manchester's Northern Quarter.", "used to mean Easter.", "As for what Easter used to mean...", "Easter is less about what it used to mean.", "\"Easter is less about what it used to mean,\" said Ollie Taylor, the owner of the cafe."]}, {"instance_id": "realsumm-87", "summary": "The European Union will accuse Google of illegally abusing The European Union supremacy . The European Union could fine Google more than \u00a3 4 billion - 10 per cent of Google annual revenue . Google to say Google uses search engine to divert traffic to Google own services . Google boasts a 90 per cent share in Europe 's search engine market .", "summary_trees": ["# ::snt The European Union will accuse Google of illegally abusing The European Union supremacy .\n(a / accuse-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"European\"\n                  :op2 \"Union\"))\n      :ARG1 (c / company\n            :name (n2 / name\n                  :op1 \"Google\"))\n      :ARG2 (a2 / abuse-02\n            :ARG0 c\n            :ARG1 (s / supremacy\n                  :poss o)\n            :manner (l / law\n                  :polarity -)))", "# ::snt The European Union could fine Google more than \u00a3 4 billion - 10 per cent of Google annual revenue .\n(p / possible-01\n      :ARG1 (f / fine-01\n            :ARG0 (o / organization\n                  :name (n / name\n                        :op1 \"European\"\n                        :op2 \"Union\"))\n            :ARG1 (m / more-than\n                  :op1 (m2 / monetary-quantity\n                        :quant 4000000000\n                        :unit (p2 / pound)\n                        :ARG1-of (m3 / mean-01\n                              :ARG2 (p3 / percentage-entity\n                                    :value 10\n                                    :ARG3-of (ii / include-91\n                                          :ARG2 (r / revenue\n                                                :poss (c / company\n                                                      :name (n2 / name\n                                                            :op1 \"Google\"))\n                                                :frequency (r2 / rate-entity-91\n                                                      :ARG3 (t / temporal-quantity\n                                                            :quant 1\n                                                            :unit (y / year)))))))))\n            :ARG2 c))", "# ::snt Google to say Google uses search engine to divert traffic to Google own services .\n(s / say-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Google\"))\n      :ARG1 (u / use-01\n            :ARG0 c\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                  :ARG0 c\n                  :ARG1 (t / traffic)\n                  :ARG3 (s3 / service\n                        :poss c))))", "# ::snt Google boasts a 90 per cent share in Europe 's search engine market .\n(b / boast-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Google\"))\n      :ARG1 (s / share-01\n            :ARG1 (m / market\n                  :mod (s2 / search-engine)\n                  :location (c2 / continent\n                        :name (n2 / name\n                              :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                  :value 90)))"], "tree": ["(a2 / abuse-02\n    :ARG1 (s / supremacy\n             :poss (o / organization :name (n / name :op1 \"European\" :op2 \"Union\"))))", "(a2 / abuse-02\n    :manner (l / law\n               :polarity -))", "(a2 / abuse-02\n    :ARG0 (c / company :name (n2 / name :op1 \"Google\"))\n    :ARG1 (s / supremacy\n             :poss (o / organization :name (n / name :op1 \"European\" :op2 \"Union\")))\n    :manner (l / law\n               :polarity -))", "(a / accuse-01\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c\n             :ARG1 (s / supremacy\n                      :poss (o / organization :name (n / name :op1 \"European\" :op2 \"Union\")))\n             :manner (l / law\n                        :polarity -)))", "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c\n             :ARG1 (s / supremacy\n                      :poss o)\n             :manner (l / law\n                        :polarity -)))", "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c\n             :ARG1 (s / supremacy\n                      :poss o)\n             :manner (l / law\n                        :polarity -)))", "(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))", "(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))", "(ii / include-91\n    :ARG2 (r / revenue\n             :poss (c / company\n                      :name (n2 / name\n                                :op1 \"Google\"))\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1\n                                     :unit (y / year)))))", "(m3 / mean-01\n    :ARG2 (p3 / percentage-entity\n              :value 10\n              :ARG3 (ii / include-91\n                        :ARG2 (r / revenue\n                                 :poss (c / company\n                                          :name (n2 / name\n                                                    :op1 \"Google\"))\n                                 :frequency (r2 / rate-entity-91\n                                                :ARG3 (t / temporal-quantity\n                                                         :quant 1\n                                                         :unit (y / year)))))))", "(f / fine-01\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 4000000000\n                     :unit (p2 / pound)\n                     :ARG1 (m3 / mean-01\n                               :ARG2 (p3 / percentage-entity\n                                         :value 10\n                                         :ARG3 (ii / include-91\n                                                   :ARG2 (r / revenue\n                                                            :poss (c / company\n                                                                     :name (n2 / name\n                                                                               :op1 \"Google\"))\n                                                            :frequency (r2 / rate-entity-91\n                                                                           :ARG3 (t / temporal-quantity\n                                                                                    :quant 1\n                                                                                    :unit (y / year))))))))))", "(f / fine-01\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 4000000000\n                     :unit (p2 / pound)\n                     :ARG1 (m3 / mean-01\n                               :ARG2 (p3 / percentage-entity\n                                         :value 10\n                                         :ARG3 (ii / include-91\n                                                   :ARG2 (r / revenue\n                                                            :poss (c / company\n                                                                     :name (n2 / name\n                                                                               :op1 \"Google\"))\n                                                            :frequency (r2 / rate-entity-91\n                                                                           :ARG3 (t / temporal-quantity\n                                                                                    :quant 1\n                                                                                    :unit (y / year)))))))))\n   :ARG2 c)", "(f / fine-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 4000000000\n                     :unit (p2 / pound)\n                     :ARG1 (m3 / mean-01\n                               :ARG2 (p3 / percentage-entity\n                                         :value 10\n                                         :ARG3 (ii / include-91\n                                                   :ARG2 (r / revenue\n                                                            :poss (c / company\n                                                                     :name (n2 / name\n                                                                               :op1 \"Google\"))\n                                                            :frequency (r2 / rate-entity-91\n                                                                           :ARG3 (t / temporal-quantity\n                                                                                    :quant 1\n                                                                                    :unit (y / year)))))))))\n   :ARG2 c)", "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG0 (o / organization\n                     :name (n / name\n                              :op1 \"European\"\n                              :op2 \"Union\"))\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :quant 4000000000\n                              :unit (p2 / pound)\n                              :ARG1 (m3 / mean-01\n                                        :ARG2 (p3 / percentage-entity\n                                                  :value 10\n                                                  :ARG3 (ii / include-91\n                                                            :ARG2 (r / revenue\n                                                                     :poss (c / company\n                                                                              :name (n2 / name\n                                                                                        :op1 \"Google\"))\n                                                                     :frequency (r2 / rate-entity-91\n                                                                                    :ARG3 (t / temporal-quantity\n                                                                                             :quant 1\n                                                                                             :unit (y / year)))))))))\n            :ARG2 c))", "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG0 (o / organization\n                     :name (n / name\n                              :op1 \"European\"\n                              :op2 \"Union\"))\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :quant 4000000000\n                              :unit (p2 / pound)\n                              :ARG1 (m3 / mean-01\n                                        :ARG2 (p3 / percentage-entity\n                                                  :value 10\n                                                  :ARG3 (ii / include-91\n                                                            :ARG2 (r / revenue\n                                                                     :poss (c / company\n                                                                              :name (n2 / name\n                                                                                        :op1 \"Google\"))\n                                                                     :frequency (r2 / rate-entity-91\n                                                                                    :ARG3 (t / temporal-quantity\n                                                                                             :quant 1\n                                                                                             :unit (y / year)))))))))\n            :ARG2 c))", "(u / use-01\n   :ARG0 (c / company :name (n / name :op1 \"Google\"))\n   :ARG1 (s2 / search-engine))", "(d / divert-01\n   :ARG0 (c / company :name (n / name :op1 \"Google\"))\n   :ARG1 (t / traffic)\n   :ARG3 (s3 / service\n             :poss c))", "(u / use-01\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 (c / company :name (n / name :op1 \"Google\"))\n            :ARG1 (t / traffic)\n            :ARG3 (s3 / service\n                      :poss c)))", "(u / use-01\n   :ARG0 (c / company :name (n / name :op1 \"Google\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 c\n            :ARG1 (t / traffic)\n            :ARG3 (s3 / service\n                      :poss c)))", "(u / use-01\n   :ARG0 (c / company :name (n / name :op1 \"Google\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 c\n            :ARG1 (t / traffic)\n            :ARG3 (s3 / service\n                      :poss c)))", "(s / say-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (u / use-01\n            :ARG0 c\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                     :ARG0 c\n                     :ARG1 (t / traffic)\n                     :ARG3 (s3 / service\n                               :poss c))))", "(s / say-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (u / use-01\n            :ARG0 c\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                     :ARG0 c\n                     :ARG1 (t / traffic)\n                     :ARG3 (s3 / service\n                               :poss c))))", "(s / share-01\n   :quant (p / percentage-entity\n             :value 90))", "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\"))))", "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\")))\n   :ARG2 (c / company :name (n / name :op1 \"Google\")))", "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\")))\n   :ARG2 (c / company :name (n / name :op1 \"Google\"))\n   :quant (p / percentage-entity\n             :value 90))", "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :mod (s2 / search-engine)\n                     :location (c2 / continent\n                                   :name (n2 / name\n                                             :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                      :value 90)))", "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :mod (s2 / search-engine)\n                     :location (c2 / continent\n                                   :name (n2 / name\n                                             :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                      :value 90)))"], "smus": ["Abusing the supremacy of the European Union.", "Abusing illegally.", "Google is illegally abusing the supremacy of the European Union.", "Google is accused of illegally abusing the supremacy of the European Union.", "The European Union will accuse Google of illegally abusing its supremacy.", "The European Union will accuse Google of illegally abusing its supremacy.", "Every year.", "Every year.", "Google's revenue is one year in total.", "10% of Google's annual revenue = 10%.", "The fine would be more than PS4bn, which is 10% of Google's annual revenue.", "Google will fine them more than PS4bn (ten percent of Google's annual revenue).", "The European Union will fine Google more than PS4bn, or 10 percent of Google's annual revenue.", "The European Union can fine Google more than PS4bn (ten percent of Google's annual revenue).", "The European Union can fine Google more than PS4bn (ten percent of Google's annual revenue).", "Google uses a search engine.", "Google will divert traffic to its services.", "The search engine uses Google to divert traffic to its services.", "Google uses a search engine to divert traffic to its services.", "Google uses a search engine to divert traffic to its services.", "Google says it uses a search engine to divert traffic to its services.", "Google says it uses a search engine to divert traffic to its services.", "90% share", "Share of European search engine market", "Google has a share of the European search engine market.", "Google has a 90 percent share of the European search engine market.", "Google boasts a 90 percent share of the European search engine market.", "Google boasts a 90 percent share of the European search engine market."]}, {"instance_id": "realsumm-88", "summary": "Phil Smith , 25 , forgot teaching assistant keys and scaled fence to try to get in teaching assistant flat . But teaching assistant fell and hit teaching assistant head while climbing through window . teaching assistant fractured teaching assistant skull and suffered a bleed on the brain and a blood clot . Parents paid tribute to teaching assistant .", "summary_trees": ["# ::snt Phil Smith , 25 , forgot teaching assistant keys and scaled fence to try to get in teaching assistant flat .\n(a / and\n      :op1 (f / forget-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Phil\"\n                        :op2 \"Smith\")\n                  :age (t / temporal-quantity\n                        :quant 25\n                        :unit (y / year)))\n            :ARG1 (k / key\n                  :mod (p2 / person\n                        :ARG0-of (a2 / assist-01\n                              :ARG1 (t2 / teach-01)))))\n      :op2 (s / scale-01\n            :ARG0 p\n            :ARG1 (f2 / fence)\n            :purpose (t3 / try-01\n                  :ARG0 p\n                  :ARG1 (g / get-05\n                        :ARG1 p\n                        :ARG2 (f3 / flat)))))", "# ::snt But teaching assistant fell and hit teaching assistant head while climbing through window .\n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (f / fall-01\n                  :ARG1 (p / person\n                        :ARG0-of (a2 / assist-01\n                              :ARG1 (t / teach-01))\n                        :part (h / head)))\n            :op2 (h2 / hit-01\n                  :ARG1 h)\n            :time (c2 / climb-01\n                  :ARG0 p\n                  :path (t2 / through\n                        :op1 (w / window)))))", "# ::snt teaching assistant fractured teaching assistant skull and suffered a bleed on the brain and a blood clot .\n(a / and\n      :op1 (f / fracture-01\n            :ARG0 (p / person\n                  :ARG0-of (a2 / assist-01\n                        :ARG1 (t / teach-01\n                              :ARG0 (p2 / person\n                                    :part (s / skull)))))\n            :ARG1 s)\n      :op2 (s2 / suffer-01\n            :ARG0 p2\n            :ARG1 (a3 / and\n                  :op1 (b / bleed-01\n                        :ARG1 (b2 / brain)\n                        :op2 (c / clot\n                              :mod (b3 / blood))))))", "# ::snt Parents paid tribute to teaching assistant .\n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p3 / parent)))\n      :ARG1 (t / tribute)\n      :ARG2 (p4 / person\n            :ARG0-of (a / assist-01\n                  :ARG1 (t2 / teach-01))))"], "tree": ["(g / get-05\n   :ARG1 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG2 (f3 / flat))", "(g / get-05\n   :ARG1 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG2 (f3 / flat))", "(t3 / try-01\n    :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n    :ARG1 (g / get-05\n             :ARG1 p\n             :ARG2 (f3 / flat)))", "(t3 / try-01\n    :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n    :ARG1 (g / get-05\n             :ARG1 p\n             :ARG2 (f3 / flat)))", "(f / forget-01\n   :ARG1 (k / key\n            :mod (p2 / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t2 / teach-01)))))", "(s / scale-01\n   :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG1 (f2 / fence)\n   :purpose (t3 / try-01\n                :ARG0 p\n                :ARG1 (g / get-05\n                         :ARG1 p\n                         :ARG2 (f3 / flat))))", "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")\n            :age (t / temporal-quantity\n                    :quant 25\n                    :unit (y / year))))", "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")\n            :age (t / temporal-quantity\n                    :quant 25\n                    :unit (y / year)))\n   :ARG1 (k / key\n            :mod (p2 / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t2 / teach-01)))))", "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")\n            :age (t / temporal-quantity\n                    :quant 25\n                    :unit (y / year)))\n   :ARG1 (k / key\n            :mod (p2 / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t2 / teach-01)))))", "(c2 / climb-01\n    :path (t2 / through\n              :op1 (w / window)))", "(c2 / climb-01\n    :ARG0 (p / person)\n    :path (t2 / through\n              :op1 (w / window)))", "(f / fall-01\n   :ARG1 (p / person\n            :ARG0 (a2 / assist-01\n                      :ARG1 (t / teach-01))\n            :part (h / head)))", "(f / fall-01\n   :ARG1 (p / person\n            :ARG0 (a2 / assist-01\n                      :ARG1 (t / teach-01))\n            :part (h / head)))", "(c / contrast-01\n   :ARG2 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t / teach-01))\n                     :part (h / head))))", "(c / contrast-01\n   :ARG2 (h2 / hit-01\n             :ARG1 (h / head)\n             :time (c2 / climb-01\n                       :ARG0 (p / person)\n                       :path (t2 / through\n                                 :op1 (w / window)))))", "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (f / fall-01\n                    :ARG1 (p / person\n                             :ARG0 (a2 / assist-01\n                                       :ARG1 (t / teach-01))\n                             :part (h / head)))\n            :op2 (h2 / hit-01\n                     :ARG1 h)\n            :time (c2 / climb-01\n                      :ARG0 p\n                      :path (t2 / through\n                                :op1 (w / window)))))", "(t / teach-01\n   :ARG0 (p2 / person\n             :part (s / skull)))", "(t / teach-01\n   :ARG0 (p2 / person\n             :part (s / skull)))", "(b / bleed-01\n   :op2 (c / clot\n           :mod (b3 / blood)))", "(b / bleed-01\n   :ARG1 (b2 / brain)\n   :op2 (c / clot\n           :mod (b3 / blood)))", "(a2 / assist-01\n    :ARG1 (t / teach-01\n             :ARG0 (p2 / person\n                       :part (s / skull))))", "(s2 / suffer-01\n    :ARG0 (p2 / person)\n    :ARG1 (a3 / and\n              :op1 (b / bleed-01\n                      :ARG1 (b2 / brain)\n                      :op2 (c / clot\n                              :mod (b3 / blood)))))", "(f / fracture-01\n   :ARG0 (p / person\n            :ARG0 (a2 / assist-01\n                      :ARG1 (t / teach-01\n                               :ARG0 (p2 / person\n                                         :part (s / skull\n                                                  :ARG1-of f))))))", "(s2 / suffer-01\n    :ARG0 (p2 / person)\n    :ARG1 (a3 / and\n              :op1 (b / bleed-01\n                      :ARG1 (b2 / brain)\n                      :op2 (c / clot\n                              :mod (b3 / blood)))))", "(f / fracture-01\n   :ARG0 (p / person\n            :ARG0 (a2 / assist-01\n                      :ARG1 (t / teach-01\n                               :ARG0 (p2 / person\n                                         :part (s / skull\n                                                  :ARG1-of f))))))", "(p / pay-01\n   :ARG2 (p4 / person\n             :ARG0 (a / assist-01\n                      :ARG1 (t2 / teach-01))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute))", "(p / pay-01\n   :ARG1 (t / tribute)\n   :ARG2 (p4 / person\n             :ARG0 (a / assist-01\n                      :ARG1 (t2 / teach-01))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute)\n   :ARG2 (p4 / person\n             :ARG0 (a / assist-01\n                      :ARG1 (t2 / teach-01))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute)\n   :ARG2 (p4 / person\n             :ARG0 (a / assist-01\n                      :ARG1 (t2 / teach-01))))"], "smus": ["Phil Smith is going to get flat.", "Phil Smith is going to get flat.", "Phil Smith will try to get flat.", "Phil Smith will try to get flat.", "The teaching assistant keys were forgotten.", "Phil Smith has scaled the fence to try and get flat.", "Phil Smith, 25, forgot.", "Phil Smith, 25, forgot the keys to being an assistant teacher.", "Phil Smith, 25, forgot the keys to being an assistant teacher.", "Climbing through the window.", "People climbing through the window.", "The teaching assistant fell on her head.", "The teaching assistant fell on her head.", "But the teaching assistant's head fell.", "But when people were climbing through the window, the head hit.", "But the teaching assistant fell and hit while climbing through the window.", "The skull is teaching.", "The skull is teaching.", "Blood clots", "Brain bleeding, blood clot.", "The skull is assisting in teaching.", "People suffered brain bleed and blood clot.", "The person assisting with the teaching of the fractured skull was fractured.", "People suffered brain bleed and blood clot.", "The person assisting with the teaching of the fractured skull was fractured.", "The teaching assistant paid.", "Parents paid.", "Parents paid tribute.", "The tribute was paid to the teaching assistant.", "Parents paid tribute to the teaching assistant.", "Parents paid tribute to the teaching assistant."]}, {"instance_id": "realsumm-89", "summary": "Emmanuel Adebayor 's current Tottenham contract runs out in 2016 . Emmanuel Adebayor 's is unwilling to take anything less than Emmanuel Adebayor 's current \u00a3 5.2million salary before accepting a move out of White Hart Lane . Emmanuel Adebayor 's has made just nine league starts this season .", "summary_trees": ["# ::snt Emmanuel Adebayor 's current Tottenham contract runs out in 2016 .\n(r / run-out-05\n      :ARG1 (c / contract\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Emmanuel\"\n                        :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Tottenham\")))\n      :time (d / date-entity\n            :year 2016))", "# ::snt Emmanuel Adebayor 's is unwilling to take anything less than Emmanuel Adebayor 's current \u00a3 5.2million salary before accepting a move out of White Hart Lane .\n(w / will-02\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Emmanuel\"\n                  :op2 \"Adebayor\"))\n      :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                  :ARG1-of (h / have-quant-91\n                        :ARG3 (l / less)\n                        :ARG4 (s / salary\n                              :poss p\n                              :time (c / current)\n                              :quant (m / monetary-quantity\n                                    :quant 5500000\n                                    :unit (p2 / pound)))))\n            :time (b / before\n                  :op1 (a2 / accept-01\n                        :ARG0 p\n                        :ARG1 (m2 / move-01\n                              :ARG0 p\n                              :ARG2 (r / road\n                                    :name (n2 / name\n                                          :op1 \"White\"\n                                          :op2 \"Hart\"\n                                          :op3 \"Lane\")))))))", "# ::snt Emmanuel Adebayor 's has made just nine league starts this season .\n(s / start-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Emmanuel\"\n                  :op2 \"Adebayor\"))\n      :mod (l / league)\n      :quant (j / just\n            :op1 9)\n      :time (s2 / season\n            :mod (t / this)))"], "tree": ["(r / run-out-05\n   :time (d / date-entity\n            :year 2016))", "(r / run-out-05\n   :time (d / date-entity\n            :year 2016))", "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\"))))", "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\")))\n   :time (d / date-entity\n            :year 2016))", "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\")))\n   :time (d / date-entity\n            :year 2016))", "(t / take-01\n   :time (b / before\n            :op1 (a2 / accept-01)))", "(t / take-01\n   :time (b / before\n            :op1 (a2 / accept-01)))", "(w / will-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Emmanuel\"\n                     :op2 \"Adebayor\")))", "(m2 / move-01\n    :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n    :ARG2 (r / road\n             :name (n2 / name\n                       :op1 \"White\"\n                       :op2 \"Hart\"\n                       :op3 \"Lane\")))", "(m2 / move-01\n    :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n    :ARG2 (r / road\n             :name (n2 / name\n                       :op1 \"White\"\n                       :op2 \"Hart\"\n                       :op3 \"Lane\")))", "(a2 / accept-01\n    :ARG1 (m2 / move-01\n              :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n              :ARG2 (r / road\n                       :name (n2 / name\n                                 :op1 \"White\"\n                                 :op2 \"Hart\"\n                                 :op3 \"Lane\"))))", "(a2 / accept-01\n    :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n    :ARG1 (m2 / move-01\n              :ARG0 p\n              :ARG2 (r / road\n                       :name (n2 / name\n                                 :op1 \"White\"\n                                 :op2 \"Hart\"\n                                 :op3 \"Lane\"))))", "(a2 / accept-01\n    :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n    :ARG1 (m2 / move-01\n              :ARG0 p\n              :ARG2 (r / road\n                       :name (n2 / name\n                                 :op1 \"White\"\n                                 :op2 \"Hart\"\n                                 :op3 \"Lane\"))))", "(h / have-quant-91\n   :ARG3 (l / less)\n   :ARG4 (s / salary\n            :poss (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n            :time (c / current)\n            :quant (m / monetary-quantity\n                      :quant 5500000\n                      :unit (p2 / pound))))", "(t / take-01\n   :ARG1 (a / anything\n            :ARG1 (h / have-quant-91\n                     :ARG3 (l / less)\n                     :ARG4 (s / salary\n                              :poss (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n                              :time (c / current)\n                              :quant (m / monetary-quantity\n                                        :quant 5500000\n                                        :unit (p2 / pound))))))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n   :ARG1 (a / anything\n            :ARG1 (h / have-quant-91\n                     :ARG3 (l / less)\n                     :ARG4 (s / salary\n                              :poss p\n                              :time (c / current)\n                              :quant (m / monetary-quantity\n                                        :quant 5500000\n                                        :unit (p2 / pound))))))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n   :ARG1 (a / anything\n            :ARG1 (h / have-quant-91\n                     :ARG3 (l / less)\n                     :ARG4 (s / salary\n                              :poss p\n                              :time (c / current)\n                              :quant (m / monetary-quantity\n                                        :quant 5500000\n                                        :unit (p2 / pound)))))\n   :time (b / before\n            :op1 (a2 / accept-01\n                     :ARG0 p\n                     :ARG1 (m2 / move-01\n                               :ARG0 p\n                               :ARG2 (r / road\n                                        :name (n2 / name\n                                                  :op1 \"White\"\n                                                  :op2 \"Hart\"\n                                                  :op3 \"Lane\"))))))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Emmanuel\" :op2 \"Adebayor\"))\n   :ARG1 (a / anything\n            :ARG1 (h / have-quant-91\n                     :ARG3 (l / less)\n                     :ARG4 (s / salary\n                              :poss p\n                              :time (c / current)\n                              :quant (m / monetary-quantity\n                                        :quant 5500000\n                                        :unit (p2 / pound)))))\n   :time (b / before\n            :op1 (a2 / accept-01\n                     :ARG0 p\n                     :ARG1 (m2 / move-01\n                               :ARG0 p\n                               :ARG2 (r / road\n                                        :name (n2 / name\n                                                  :op1 \"White\"\n                                                  :op2 \"Hart\"\n                                                  :op3 \"Lane\"))))))", "(w / will-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Emmanuel\"\n                     :op2 \"Adebayor\"))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                     :ARG1 (h / have-quant-91\n                              :ARG3 (l / less)\n                              :ARG4 (s / salary\n                                       :poss p\n                                       :time (c / current)\n                                       :quant (m / monetary-quantity\n                                                 :quant 5500000\n                                                 :unit (p2 / pound)))))\n            :time (b / before\n                     :op1 (a2 / accept-01\n                              :ARG0 p\n                              :ARG1 (m2 / move-01\n                                        :ARG0 p\n                                        :ARG2 (r / road\n                                                 :name (n2 / name\n                                                           :op1 \"White\"\n                                                           :op2 \"Hart\"\n                                                           :op3 \"Lane\")))))))", "(w / will-02\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Emmanuel\"\n                     :op2 \"Adebayor\"))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                     :ARG1 (h / have-quant-91\n                              :ARG3 (l / less)\n                              :ARG4 (s / salary\n                                       :poss p\n                                       :time (c / current)\n                                       :quant (m / monetary-quantity\n                                                 :quant 5500000\n                                                 :unit (p2 / pound)))))\n            :time (b / before\n                     :op1 (a2 / accept-01\n                              :ARG0 p\n                              :ARG1 (m2 / move-01\n                                        :ARG0 p\n                                        :ARG2 (r / road\n                                                 :name (n2 / name\n                                                           :op1 \"White\"\n                                                           :op2 \"Hart\"\n                                                           :op3 \"Lane\")))))))", "(s / start-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Emmanuel\"\n                     :op2 \"Adebayor\")))", "(s / start-01\n   :mod (l / league)\n   :quant (j / just\n             :op1 9)\n   :time (s2 / season\n             :mod (t / this)))", "(s / start-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Emmanuel\"\n                     :op2 \"Adebayor\"))\n   :mod (l / league)\n   :quant (j / just\n             :op1 9)\n   :time (s2 / season\n             :mod (t / this)))"], "smus": ["Run out in 2016.", "Run out in 2016.", "Emmanuel Adebayor's current Tottenham contract is running out.", "Emmanuel Adebayor's current Tottenham contract runs out in 2016.", "Emmanuel Adebayor's current Tottenham contract runs out in 2016.", "Take before accepting.", "Take before accepting.", "Emmanuel Adebayor is willing.", "Emmanuel Adebayor made the move to White Hart Lane.", "Emmanuel Adebayor made the move to White Hart Lane.", "Accepting Emmanuel Adebayor's move to White Hart Lane.", "Emmanuel Adebayor is accepting the move to White Hart Lane.", "Emmanuel Adebayor is accepting the move to White Hart Lane.", "less than Emmanuel Adebayor's current salary of PS55million.", "Take anything less than Emmanuel Adebayor's current salary of PS5.5m.", "Emmanuel Adebayor will take anything less than his current salary of PS5.5m.", "Emmanuel Adebayor will take anything less than his current salary of PS5.5m before accepting the move to White Hart Lane.", "Emmanuel Adebayor will take anything less than his current salary of PS5.5m before accepting the move to White Hart Lane.", "Emmanuel Adebayor is willing to take anything less than his current salary of PS5.5m before accepting the move to White Hart Lane.", "Emmanuel Adebayor was unwilling to take anything less than his current salary of PS5.5m before accepting the move to White Hart Lane.", "Emmanuel Adebayor starts.", "Just 9 league starts this season.", "Emmanuel Adebayor just starts 9 league starts this season."]}, {"instance_id": "realsumm-90", "summary": "John Helm was commentating on the game the day the fire broke out . John Helm gives John Helm insight into what cause the blaze 30 years ago . ' From everything John Helm have been told there is n\u2019t a jot of evidence to suggest the fire was caused deliberately , ' says John Helm .", "summary_trees": ["# ::snt John Helm was commentating on the game the day the fire broke out .\n(c / commentate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Helm\"))\n      :ARG3 (g / game)\n      :time (b / break-out-30\n            :ARG1 (f / fire)))", "# ::snt John Helm gives John Helm insight into what cause the blaze 30 years ago . '\n(g / give-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Helm\"))\n      :ARG1 (ii / insight\n            :topic (t / thing\n                  :ARG0-of (c / cause-01\n                        :ARG1 (b / blaze-01\n                              :time (b2 / before\n                                    :op1 (n2 / now)\n                                    :quant (t2 / temporal-quantity\n                                          :quant 30\n                                          :unit (y / year)))))))\n      :ARG2 p)", "# ::snt From everything John Helm have been told there is n\u2019t a jot of evidence to suggest the fire was caused deliberately , ' says John Helm .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Helm\"))\n      :ARG1 (e / evidence-01\n            :polarity -\n            :quant (j / jot)\n            :ARG0-of (s2 / suggest-01\n                  :ARG1 (c / cause-01\n                        :ARG1 (f / fire)\n                        :ARG1-of (d / deliberate-01)))\n            :source (e2 / everything\n                  :ARG1-of (t / tell-01\n                        :ARG2 p))))"], "tree": ["(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG3 (g / game)\n   :time (b / break-out-30\n            :ARG1 (f / fire)))", "(b / blaze-01\n   :time (b2 / before\n             :op1 (n2 / now)\n             :quant (t2 / temporal-quantity\n                        :quant 30\n                        :unit (y / year))))", "(b / blaze-01\n   :time (b2 / before\n             :op1 (n2 / now)\n             :quant (t2 / temporal-quantity\n                        :quant 30\n                        :unit (y / year))))", "(c / cause-01\n   :ARG1 (b / blaze-01\n            :time (b2 / before\n                      :op1 (n2 / now)\n                      :quant (t2 / temporal-quantity\n                                 :quant 30\n                                 :unit (y / year)))))", "(g / give-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG1 (ii / insight\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :op1 (n2 / now)\n                                                   :quant (t2 / temporal-quantity\n                                                              :quant 30\n                                                              :unit (y / year)))))))\n   :ARG2 p)", "(c / cause-01\n   :ARG1 (f / fire)\n   :ARG1 (d / deliberate-01))", "(e / evidence-01\n   :polarity -\n   :quant (j / jot)\n   :source (e2 / everything))", "(s2 / suggest-01\n    :ARG1 (c / cause-01\n             :ARG1 (f / fire)\n             :ARG1 (d / deliberate-01)))", "(e / evidence-01\n   :polarity -\n   :quant (j / jot)\n   :ARG0 (s2 / suggest-01\n             :ARG1 (c / cause-01\n                      :ARG1 (f / fire)\n                      :ARG1 (d / deliberate-01)))\n   :source (e2 / everything\n               :ARG1 (t / tell-01\n                        :ARG2 (p / person :name (n / name :op1 \"John\" :op2 \"Helm\")))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG1 (e / evidence-01\n            :polarity -\n            :quant (j / jot)\n            :ARG0 (s2 / suggest-01\n                      :ARG1 (c / cause-01\n                               :ARG1 (f / fire)\n                               :ARG1 (d / deliberate-01)))\n            :source (e2 / everything\n                        :ARG1 (t / tell-01\n                                 :ARG2 p))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG1 (e / evidence-01\n            :polarity -\n            :quant (j / jot)\n            :ARG0 (s2 / suggest-01\n                      :ARG1 (c / cause-01\n                               :ARG1 (f / fire)\n                               :ARG1 (d / deliberate-01)))\n            :source (e2 / everything\n                        :ARG1 (t / tell-01\n                                 :ARG2 p))))"], "smus": ["John Hell was commentating on the game when the fire broke out.", "30 years ago, there was a blaze.", "30 years ago, there was a blaze.", "The cause of the blaze is 30 years ago.", "John Helm gives him insight into the cause of the blaze of the past 30 years.", "The fire was deliberately caused.", "There isn't a jot of evidence in everything.", "To suggest the fire was deliberately caused.", "There is not a jot of evidence to suggest the fire was deliberately caused from everything John Helm has been told.", "John Helm says there isn't a jot of evidence to suggest the fire was deliberately caused from everything he has been told.", "John Helm says there isn't a jot of evidence to suggest the fire was deliberately caused from everything he has been told."]}, {"instance_id": "realsumm-91", "summary": "Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan . Rory McIlroy and Fifty Shades of Grey 's Jamie Dornan took part in the first Circular Soccer Showdown of 2015 . Rory McIlroy finished strongly to finish an impressive fourth at the Masters . READ : It wo n't be too long before Rory McIlroy wins a Masters .", "summary_trees": ["# ::snt Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan .\n(f / face-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Jamie\"\n                  :op2 \"Dornan\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / book\n                        :name (n3 / name\n                              :op1 \"Fifty\"\n                              :op2 \" Shades\"\n                              :op3 \"of\"\n                              :op4 \"Grey\")))))", "# ::snt Rory McIlroy and Fifty Shades of Grey 's Jamie Dornan took part in the first Circular Soccer Showdown of 2015 .\n(p / participate-01\n      :ARG0 (a / and\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 \"Rory\"\n                        :op2 \"McIlroy\"))\n            :op2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Jamie\"\n                        :op2 \"Dornan\")\n                  :poss (b / book\n                        :name (n3 / name\n                              :op1 \"Fifty\"\n                              :op2 \"Shadows\"\n                              :op3 \"of\"\n                              :op4 \"Grey\"))))\n      :ARG1 (g / game\n            :name (n4 / name\n                  :op1 \"Circular\"\n                  :op2 \"Soccer\"\n                  :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                  :value 1)\n            :time (d / date-entity\n                  :year 2015)))", "# ::snt Rory McIlroy finished strongly to finish an impressive fourth at the Masters .\n(f / finish-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1-of (s / strong-02)\n      :ARG0-of (c / cause-01\n            :ARG1 (f2 / finish-01\n                  :ARG0 p\n                  :ARG2 (f3 / fourth\n                        :ARG0-of (ii / impress-01))\n                  :location (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\")))))", "# ::snt READ :\n(r / read-01\n      :ARG1 (ii / it))", "# ::snt It wo n't be too long before Rory McIlroy wins a Masters .\n(b / be-temporally-at-91\n      :ARG1 (w / win-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Rory\"\n                        :op2 \"McIlroy\"))\n            :ARG1 (g / game\n                  :name (n2 / name\n                        :op1 \"Masters\")))\n      :ARG2 (b2 / before\n            :op1 (l / long-03\n                  :polarity -\n                  :ARG2-of (h / have-degree-91\n                        :ARG1 w\n                        :ARG3 (t / too)))))"], "tree": ["(h / have-org-role-91\n   :ARG1 (b / book\n            :name (n3 / name\n                      :op1 \"Fifty\"\n                      :op2 \" Shades\"\n                      :op3 \"of\"\n                      :op4 \"Grey\")))", "(f / face-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (b / book\n                               :name (n3 / name\n                                         :op1 \"Fifty\"\n                                         :op2 \" Shades\"\n                                         :op3 \"of\"\n                                         :op4 \"Grey\")))))", "(f / face-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (b / book\n                               :name (n3 / name\n                                         :op1 \"Fifty\"\n                                         :op2 \" Shades\"\n                                         :op3 \"of\"\n                                         :op4 \"Grey\")))))", "(p / participate-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Rory\"\n                      :op2 \"McIlroy\")))", "(p / participate-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :poss (b / book\n                      :name (n3 / name\n                                :op1 \"Fifty\"\n                                :op2 \"Shadows\"\n                                :op3 \"of\"\n                                :op4 \"Grey\"))))", "(p / participate-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Rory\"\n                      :op2 \"McIlroy\"))\n   :ARG1 (g / game\n            :name (n4 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015)))", "(p / participate-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Rory\"\n                      :op2 \"McIlroy\"))\n   :ARG1 (g / game\n            :name (n4 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015)))", "(p / participate-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Rory\"\n                              :op2 \"McIlroy\"))\n            :op2 (p3 / person\n                     :name (n2 / name\n                               :op1 \"Jamie\"\n                               :op2 \"Dornan\")\n                     :poss (b / book\n                              :name (n3 / name\n                                        :op1 \"Fifty\"\n                                        :op2 \"Shadows\"\n                                        :op3 \"of\"\n                                        :op4 \"Grey\")))))", "(p / participate-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :poss (b / book\n                      :name (n3 / name\n                                :op1 \"Fifty\"\n                                :op2 \"Shadows\"\n                                :op3 \"of\"\n                                :op4 \"Grey\")))\n   :ARG1 (g / game\n            :name (n4 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015))\n   :ARG1 g)", "(p / participate-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :poss (b / book\n                      :name (n3 / name\n                                :op1 \"Fifty\"\n                                :op2 \"Shadows\"\n                                :op3 \"of\"\n                                :op4 \"Grey\")))\n   :ARG1 (g / game\n            :name (n4 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015))\n   :ARG1 g)", "(p / participate-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Rory\"\n                              :op2 \"McIlroy\"))\n            :op2 (p3 / person\n                     :name (n2 / name\n                               :op1 \"Jamie\"\n                               :op2 \"Dornan\")\n                     :poss (b / book\n                              :name (n3 / name\n                                        :op1 \"Fifty\"\n                                        :op2 \"Shadows\"\n                                        :op3 \"of\"\n                                        :op4 \"Grey\"))))\n   :ARG1 (g / game\n            :name (n4 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015)))", "(p / participate-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Rory\"\n                              :op2 \"McIlroy\"))\n            :op2 (p3 / person\n                     :name (n2 / name\n                               :op1 \"Jamie\"\n                               :op2 \"Dornan\")\n                     :poss (b / book\n                              :name (n3 / name\n                                        :op1 \"Fifty\"\n                                        :op2 \"Shadows\"\n                                        :op3 \"of\"\n                                        :op4 \"Grey\"))))\n   :ARG1 (g / game\n            :name (n4 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015)))", "(f2 / finish-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (f3 / fourth\n              :ARG0 (ii / impress-01)))", "(f2 / finish-01\n    :location (g / game\n                 :name (n2 / name\n                           :op1 \"Masters\")))", "(f / finish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\")))", "(f2 / finish-01\n    :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n    :ARG2 (f3 / fourth\n              :ARG0 (ii / impress-01))\n    :location (g / game\n                 :name (n2 / name\n                           :op1 \"Masters\")))", "(c / cause-01\n   :ARG1 (f2 / finish-01\n             :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n             :ARG2 (f3 / fourth\n                       :ARG0 (ii / impress-01))\n             :location (g / game\n                          :name (n2 / name\n                                    :op1 \"Masters\"))))", "(f / finish-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (s / strong-02)\n   :ARG0 (c / cause-01\n            :ARG1 (f2 / finish-01\n                      :ARG0 p\n                      :ARG2 (f3 / fourth\n                                :ARG0 (ii / impress-01))\n                      :location (g / game\n                                   :name (n2 / name\n                                             :op1 \"Masters\")))))", "(r / read-01\n   :ARG1 (ii / it))", "(h / have-degree-91\n   :ARG1 (w / win-01)\n   :ARG3 (t / too))", "(l / long-03\n   :polarity -\n   :ARG2 (h / have-degree-91\n            :ARG1 (w / win-01)\n            :ARG3 (t / too)))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\")))", "(b / be-temporally-at-91\n   :ARG2 (b2 / before\n             :op1 (l / long-03\n                     :polarity -\n                     :ARG2 (h / have-degree-91\n                              :ARG1 (w / win-01)\n                              :ARG3 (t / too)))))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))", "(b / be-temporally-at-91\n   :ARG1 (w / win-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Rory\"\n                              :op2 \"McIlroy\"))\n            :ARG1 (g / game\n                     :name (n2 / name\n                               :op1 \"Masters\")))\n   :ARG2 (b2 / before\n             :op1 (l / long-03\n                     :polarity -\n                     :ARG2 (h / have-degree-91\n                              :ARG1 w\n                              :ARG3 (t / too)))))", "(b / be-temporally-at-91\n   :ARG1 (w / win-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Rory\"\n                              :op2 \"McIlroy\"))\n            :ARG1 (g / game\n                     :name (n2 / name\n                               :op1 \"Masters\")))\n   :ARG2 (b2 / before\n             :op1 (l / long-03\n                     :polarity -\n                     :ARG2 (h / have-degree-91\n                              :ARG1 w\n                              :ARG3 (t / too)))))"], "smus": ["fifty shades of grey", "-Rory McIlroy faced Jamie Dornan of fifty shades of grey.", "-Rory McIlroy faced Jamie Dornan of fifty shades of grey.", "Ry McIlroy was a participant.", "Jim Dornan of fifty shades of grey was a participant.", "Ry McIlroy will be a part of the first Circular Soccer Showdown in 2015.", "Ry McIlroy will be a part of the first Circular Soccer Showdown in 2015.", "The participants were Roy McIlroy and Jamie Dornan of fifty shades of Grey.", "Jim Dornan of fifty shades of grey will be a participant in the first Circular Soccer Showdown in 2015.", "Jim Dornan of fifty shades of grey will be a participant in the first Circular Soccer Showdown in 2015.", "The Circular Soccer Showdown will be the first time in 2015 for Rory McIlroy and Jim Norman of fifty shades of Grey.", "The Circular Soccer Showdown will be the first time in 2015 for Rory McIlroy and Jim Norman of fifty shades of Grey.", "Ryan McIlroy will finish fourth in the impressive class.", "Finish the Masters.", "Ryan McIlroy will finish.", "In the Masters, Rory McIlroy will finish fourth in impressing form.", "So, in the Masters, Ryan McIlroy will finish fourth in impressing.", "Ryder will finish strong to finish fourth in the Masters.", "It was read.", "Too many wins.", "Not too long until the winner wins.", "Ryan McIlroy wins.", "Not too long before the winner wins.", "Ry McIlroy wins the Masters.", "Ry McIlroy wins the Masters.", "Before it's too long, when Rory McIlroy wins the Masters.", "Before it's too long, when Rory McIlroy wins the Masters."]}, {"instance_id": "realsumm-92", "summary": "Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for Jimmy Fallon weight jokes about the governor . Later in The Tonight Show Chris Christie hoarded a pint of ice cream Jimmy Fallon brought out for the two to share . When asked if Chris Christie would run for president , Chris Christie said ; ' Chris Christie \u2019 ve got a day job which keeps Chris Christie busy ' .", "summary_trees": ["# ::snt Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for Jimmy Fallon weight jokes about the governor .\n(a / and\n      :op1 (a2 / appear-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Chris\"\n                        :op2 \"Christie\"))\n            :location (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"The\"\n                        :op2 \"Tonight\"\n                        :op3 \"Show\")))\n      :op2 (c / call-out-15\n            :ARG0 p\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jimmy\"\n                        :op2 \"Fallon\"))\n            :ARG2 (j / joke-01\n                  :ARG0 p2\n                  :ARG2 (p3 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG2 (g / governor)))\n                  :topic (w / weight))))", "# ::snt Later in The Tonight Show Chris Christie hoarded a pint of ice cream Jimmy Fallon brought out for the two to share .\n(h / hoard-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chris\"\n                  :op2 \"Christie\"))\n      :ARG1 (ii / ice-cream\n            :quant (p2 / pint)\n            :ARG1-of (b / bring-01\n                  :ARG0 (p3 / person\n                        :name (n2 / name\n                              :op1 \"Jimmy\"\n                              :op2 \"Fallon\"))\n                  :ARG2 (o / out)\n                  :purpose (s / share-01\n                        :ARG0 (a / and\n                              :op1 p\n                              :op2 p3)\n                        :ARG1 ii)))\n      :time (a2 / after\n            :op1 (s2 / show\n                  :name (n3 / name\n                        :op1 \"The\"\n                        :op2 \"Tonight\"\n                        :op3 \"Show\"))))", "# ::snt When asked if Chris Christie would run for president , Chris Christie said \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chris\"\n                  :op2 \"Christie\"))\n      :time (a / ask-01\n            :ARG1 (r / run-02\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG2 (p3 / president))))\n            :ARG2 p))"], "tree": ["(j / joke-01\n   :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))\n   :ARG2 (p3 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (g / governor))))", "(a2 / appear-01\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))", "(j / joke-01\n   :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))\n   :ARG2 (p3 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (g / governor)))\n   :topic (w / weight))", "(a2 / appear-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Chris\"\n                      :op2 \"Christie\"))\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))", "(c / call-out-15\n   :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\"))\n   :ARG2 (j / joke-01\n            :ARG0 p2\n            :ARG2 (p3 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (g / governor)))\n            :topic (w / weight)))", "(s / share-01\n   :ARG0 (a / and\n            :op1 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n            :op2 (p3 / person :name (n2 / name :op1 \"Jimmy\" :op2 \"Fallon\")))\n   :ARG1 (ii / ice-cream))", "(s / share-01\n   :ARG0 (a / and\n            :op1 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n            :op2 (p3 / person :name (n2 / name :op1 \"Jimmy\" :op2 \"Fallon\")))\n   :ARG1 (ii / ice-cream))", "(h / hoard-01\n   :time (a2 / after\n             :op1 (s2 / show\n                      :name (n3 / name\n                                :op1 \"The\"\n                                :op2 \"Tonight\"\n                                :op3 \"Show\"))))", "(b / bring-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\"))\n   :ARG2 (o / out)\n   :purpose (s / share-01\n               :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))))", "(b / bring-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\"))\n   :ARG2 (o / out)\n   :purpose (s / share-01\n               :ARG0 p3\n               :ARG1 (ii / ice-cream)))", "(b / bring-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\"))\n   :ARG2 (o / out)\n   :purpose (s / share-01\n               :ARG0 (a / and\n                        :op1 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n                        :op2 p3)\n               :ARG1 (ii / ice-cream)))", "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Jimmy\"\n                                          :op2 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))))))", "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Jimmy\"\n                                          :op2 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 p3\n                                  :ARG1 ii))))", "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Jimmy\"\n                                          :op2 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 (a / and\n                                           :op1 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n                                           :op2 p3)\n                                  :ARG1 ii))))", "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Christie\"))\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Jimmy\"\n                                          :op2 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 p\n                                  :ARG1 ii)))\n   :time (a2 / after\n             :op1 (s2 / show\n                      :name (n3 / name\n                                :op1 \"The\"\n                                :op2 \"Tonight\"\n                                :op3 \"Show\"))))", "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Christie\"))\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Jimmy\"\n                                          :op2 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 p3\n                                  :ARG1 ii\n                                  :ARG1 ii)))\n   :time (a2 / after\n             :op1 (s2 / show\n                      :name (n3 / name\n                                :op1 \"The\"\n                                :op2 \"Tonight\"\n                                :op3 \"Show\"))))", "(h / hoard-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Christie\"))\n   :ARG1 (ii / ice-cream\n             :quant (p2 / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Jimmy\"\n                                          :op2 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 (a / and\n                                           :op1 p\n                                           :op2 p3)\n                                  :ARG1 ii)))\n   :time (a2 / after\n             :op1 (s2 / show\n                      :name (n3 / name\n                                :op1 \"The\"\n                                :op2 \"Tonight\"\n                                :op3 \"Show\"))))", "(r / run-02\n   :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / president))))", "(r / run-02\n   :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n   :ARG1 (p2 / person\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / president))))", "(a / ask-01\n   :ARG1 (r / run-02\n            :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (p3 / president))))\n   :ARG2 p)", "(a / ask-01\n   :ARG1 (r / run-02\n            :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n            :ARG1 (p2 / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG2 (p3 / president))))\n   :ARG2 p)", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"\n                     :op2 \"Christie\"))\n   :time (a / ask-01\n            :ARG1 (r / run-02\n                     :ARG0 p\n                     :ARG1 (p2 / person\n                               :ARG0 (h / have-org-role-91\n                                        :ARG2 (p3 / president))))\n            :ARG2 p))"], "smus": ["Jimmy Fallon jokes about the governor.", "appeared on \"The Tonight Show\".", "Jimmy Fallon jokes about the governor about weight.", "Chris Christie appeared on The Tonight Show.", "Chris Christie called out Jimmy Fallon for his weight-loss jokes to the governor.", "Chris Christie and Jimmy Fallon will share ice-cream.", "Chris Christie and Jimmy Fallon will share ice-cream.", "Hoarded after The Tonight Show.", "Jimmy Fallon brought out to share with Chris Christie.", "Jimmy Fallon brought out to share ice-cream.", "Jimmy Fallon brought out ice-cream to Chris Christie and Jimmy Fallon.", "Jimmy Fallon brought out a pint of ice-cream to share with Chris Christie hoarded.", "Jimmy Fallon brought out a pint of ice-cream to share.", "Jimmy Fallon brought out a pint of ice-cream to share with Chris Christie, hoarded a pint.", "Chris Christie hoarded a pint of ice-cream after The Tonight Show that Jimmy Fallon brought out to share.", "Chris Christie hoarded a pint of ice-cream after The Tonight Show that Jimmy Fallon brought out to share.", "Chris Christie hoarded a pint of ice-cream after The Tonight Show, which Jimmy Fallon brought out to share.", "Chris Christie will run for president.", "Chris Christie will run for president.", "Chris Christie was asked to run for president.", "Chris Christie was asked to run for president.", "When asked to run for president, Chris Christie said --"]}, {"instance_id": "realsumm-93", "summary": "Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow . Qantas ' could loose Qantas ' eight landing strips at Heathrow . Qantas ' are also facing a fine in excess of $ 38,000 for every flight that 's late . Qantas ' blamed air congestion at Heathrow and Dubai airports .", "summary_trees": ["# ::snt Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow .\n(s / slip-01\n      :ARG1 (r / rate-01\n            :ARG1 (c / company\n                  :name (n / name\n                        :op1 \"Qantas\"))\n            :ARG3 (o / on-time))\n      :ARG4 (r2 / rank-01\n            :ARG2 75\n            :ARG1 c\n            :ARG5 (a / airline\n                  :quant 80\n                  :ARG0-of (u / use-01\n                        :ARG1 (a2 / airport\n                              :name (n2 / name\n                                    :op1 \"Heathrow\"))))))", "# ::snt Qantas ' could loose Qantas ' eight landing strips at Heathrow .\n(p / possible-01\n      :ARG1 (l / loose-01\n            :ARG0 (c / company\n                  :name (n / name\n                        :op1 \"Qantas\"))\n            :ARG1 (s / strip\n                  :quant 8\n                  :purpose (l2 / land-01)\n                  :poss c\n                  :location (a / airport\n                        :name (n2 / name\n                              :op1 \"Heathrow\")))))", "# ::snt Qantas ' are also facing a fine in excess of $ 38,000 for every flight that 's late .\n(f / face-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Qantas\"))\n      :ARG1 (f2 / fine-01\n            :ARG1 (ii / in-excess-of\n                  :op1 (m / monetary-quantity\n                        :quant 38000\n                        :unit (d / dollar)))\n            :ARG3 (f3 / fly-01\n                  :mod (e / every)\n                  :ARG1-of (l / late-02)))\n      :mod (a / also))", "# ::snt Qantas ' blamed air congestion at Heathrow and Dubai airports .\n(b / blame-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Qantas\"))\n      :ARG1 (c2 / congest-01\n            :ARG1 (a / air)\n            :location (a2 / and\n                  :op1 (a3 / airport\n                        :name (n2 / name\n                              :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                        :name (n3 / name\n                              :op1 \"Dubai\")))))"], "tree": ["(u / use-01\n   :ARG1 (a2 / airport\n             :name (n2 / name\n                       :op1 \"Heathrow\")))", "(u / use-01\n   :ARG1 (a2 / airport\n             :name (n2 / name\n                       :op1 \"Heathrow\")))", "(r / rate-01\n   :ARG1 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG3 (o / on-time))", "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))\n            :ARG3 (o / on-time)))", "(r2 / rank-01\n    :ARG2 75\n    :ARG1 (c / company :name (n / name :op1 \"Qantas\"))\n    :ARG5 (a / airline\n             :quant 80\n             :ARG0 (u / use-01\n                      :ARG1 (a2 / airport\n                                :name (n2 / name\n                                          :op1 \"Heathrow\")))))", "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))\n            :ARG3 (o / on-time))\n   :ARG4 (r2 / rank-01\n             :ARG2 75\n             :ARG1 c\n             :ARG5 (a / airline\n                      :quant 80\n                      :ARG0 (u / use-01\n                               :ARG1 (a2 / airport\n                                         :name (n2 / name\n                                                   :op1 \"Heathrow\"))))))", "(l / loose-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (s / strip\n            :quant 8\n            :purpose (l2 / land-01)\n            :poss c\n            :location (a / airport\n                         :name (n2 / name\n                                   :op1 \"Heathrow\"))))", "(p / possible-01\n   :ARG1 (l / loose-01\n            :ARG0 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))\n            :ARG1 (s / strip\n                     :quant 8\n                     :purpose (l2 / land-01)\n                     :poss c\n                     :location (a / airport\n                                  :name (n2 / name\n                                            :op1 \"Heathrow\")))))", "(f3 / fly-01\n    :mod (e / every)\n    :ARG1 (l / late-02))", "(f2 / fine-01\n    :ARG1 (ii / in-excess-of\n              :op1 (m / monetary-quantity\n                      :quant 38000\n                      :unit (d / dollar))))", "(f2 / fine-01\n    :ARG1 (ii / in-excess-of\n              :op1 (m / monetary-quantity\n                      :quant 38000\n                      :unit (d / dollar)))\n    :ARG3 (f3 / fly-01\n              :mod (e / every)\n              :ARG1 (l / late-02)))", "(f / face-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000\n                               :unit (d / dollar)))\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)\n                       :ARG1 (l / late-02))))", "(f / face-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000\n                               :unit (d / dollar)))\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)\n                       :ARG1 (l / late-02)))\n   :mod (a / also))", "(c2 / congest-01\n    :location (a3 / airport\n                  :name (n2 / name\n                            :op1 \"Heathrow\")))", "(c2 / congest-01\n    :location (a4 / airport\n                  :name (n3 / name\n                            :op1 \"Dubai\")))", "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a3 / airport\n                  :name (n2 / name\n                            :op1 \"Heathrow\")))", "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a4 / airport\n                  :name (n3 / name\n                            :op1 \"Dubai\")))", "(c2 / congest-01\n    :location (a2 / and\n                  :op1 (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))", "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a2 / and\n                  :op1 (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))", "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :ARG1 (a / air)\n             :location (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))))", "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :ARG1 (a / air)\n             :location (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))", "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :ARG1 (a / air)\n             :location (a2 / and\n                           :op1 (a3 / airport\n                                    :name (n2 / name\n                                              :op1 \"Heathrow\"))\n                           :op2 (a4 / airport\n                                    :name (n3 / name\n                                              :op1 \"Dubai\")))))"], "smus": ["Using Heathrow.", "Using Heathrow.", "Qantas is rated on time.", "Qantas's on-time rating slipped.", "Qantas ranks 75th among 80 airlines using Heathrow.", "Qantas's on-time rating slipped to 75th out of 80 airlines using Heathrow.", "Qantas will loose 8 landing strips at Heathrow.", "Qantas could loose eight landing strips at Heathrow.", "Every late flight.", "The fine was in excess of $38,000.", "Every late flight ticket in excess of $38,000 will get a fine.", "Qantas is facing a $38,000 in excess fine for every late flight.", "Qantas is also facing a $38,000 in excess fine for every late flight.", "Congestion at Heathrow airport", "Congestion in Dubai airport", "There was air congest at Heathrow.", "Air congest in Dubai", "Congestion at Heathrow and Dubai.", "There was air congest at Heathrow and Dubai.", "Qantas blamed air congestion at Heathrow.", "Qantas blamed air congestion in Dubai.", "Qantas blamed air congestion at Heathrow and Dubai."]}, {"instance_id": "realsumm-94", "summary": "Christopher Starrs was spared jail in an ' act of mercy ' by judge in January . But senior judge has now said Christopher Starrs took ' Christopher Starrs eye off the ball ' . Nicholas Cooke QC said Christopher Starrs should have been jailed . But added Christopher Starrs should thank Christopher Starrs lucky stars as sentence allowed to stand .", "summary_trees": ["# ::snt Christopher Starrs was spared jail in an ' act of mercy ' by judge in January .\n(s / spare-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01)))\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Christopher\"\n                  :op2 \"Starrs\"))\n      :ARG2 (j2 / jail)\n      :manner (a / act-02\n            :ARG0 p2\n            :ARG1 (m / mercy))\n      :time (d / date-entity\n            :month 1))", "# ::snt But senior judge has now said Christopher Starrs took ' Christopher Starrs eye off the ball ' .\n(c / contrast-01\n      :ARG2 (s / say-01\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)\n                        :mod (s2 / senior)))\n            :ARG1 (t / take-off-07\n                  :ARG0 (p2 / person\n                        :name (n / name\n                              :op1 \"Christopher\"\n                              :op2 \"Starrs\"))\n                  :ARG1 (e / eye\n                        :part-of p2)\n                  :source (b / ball))\n            :time (n2 / now)))", "# ::snt Nicholas Cooke QC said Christopher Starrs should have been jailed .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nicholas\"\n                  :op2 \"Cooke\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (l / lawyer\n                        :mod (g / general))))\n      :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Christopher\"\n                              :op2 \"Starrs\")))))", "# ::snt But added Christopher Starrs should thank Christopher Starrs lucky stars as sentence allowed to stand .\n(c / contrast-01\n      :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                  :ARG1 (t / thank-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Christopher\"\n                                    :op2 \"Starrs\"))\n                        :ARG1 (s / star\n                              :mod (l / lucky)\n                              :poss p)\n                        :ARG2 (a2 / allow-01\n                              :ARG1 (s2 / stand-04\n                                    :ARG1 (s3 / sentence-01\n                                          :ARG1 p))))\n                  :ARG2 p)))"], "tree": ["(a / act-02\n   :ARG0 (p2 / person :name (n / name :op1 \"Christopher\" :op2 \"Starrs\"))\n   :ARG1 (m / mercy))", "(a / act-02\n   :ARG0 (p2 / person :name (n / name :op1 \"Christopher\" :op2 \"Starrs\"))\n   :ARG1 (m / mercy))", "(s / spare-01\n   :time (d / date-entity\n            :month 1))", "(s / spare-01\n   :manner (a / act-02)\n   :time (d / date-entity\n            :month 1))", "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\")))", "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail))", "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :time (d / date-entity\n            :month 1))", "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :manner (a / act-02\n              :ARG0 p2\n              :ARG1 (m / mercy))\n   :time (d / date-entity\n            :month 1))", "(h / have-org-role-91\n   :ARG3 (j / judge-01)\n   :mod (s2 / senior))", "(t / take-off-07\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG1 (e / eye\n            :part-of p2))", "(t / take-off-07\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG1 (e / eye\n            :part-of p2)\n   :source (b / ball))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)\n                     :mod (s2 / senior)))\n   :ARG1 (t / take-off-07\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Christopher\"\n                               :op2 \"Starrs\"))\n            :ARG1 (e / eye\n                     :part-of p2)\n            :source (b / ball)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)\n                     :mod (s2 / senior)))\n   :ARG1 (t / take-off-07\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Christopher\"\n                               :op2 \"Starrs\"))\n            :ARG1 (e / eye\n                     :part-of p2)\n            :source (b / ball))\n   :time (n2 / now))", "(c / contrast-01\n   :ARG2 (s / say-01\n            :ARG0 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG3 (j / judge-01)\n                              :mod (s2 / senior)))\n            :ARG1 (t / take-off-07\n                     :ARG0 (p2 / person\n                               :name (n / name\n                                        :op1 \"Christopher\"\n                                        :op2 \"Starrs\"))\n                     :ARG1 (e / eye\n                              :part-of p2)\n                     :source (b / ball))\n            :time (n2 / now)))", "(h / have-org-role-91\n   :ARG2 (l / lawyer\n            :mod (g / general)))", "(j / jail-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Christopher\"\n                       :op2 \"Starrs\")))", "(j / jail-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Christopher\"\n                       :op2 \"Starrs\")))", "(r / recommend-01\n   :ARG1 (j / jail-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Christopher\"\n                                :op2 \"Starrs\"))))", "(r / recommend-01\n   :ARG1 (j / jail-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Christopher\"\n                                :op2 \"Starrs\"))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nicholas\"\n                     :op2 \"Cooke\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (l / lawyer\n                              :mod (g / general))))\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Christopher\"\n                                         :op2 \"Starrs\")))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nicholas\"\n                     :op2 \"Cooke\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (l / lawyer\n                              :mod (g / general))))\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Christopher\"\n                                         :op2 \"Starrs\")))))", "(s2 / stand-04\n    :ARG1 (s3 / sentence-01\n              :ARG1 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Starrs\"))))", "(s2 / stand-04\n    :ARG1 (s3 / sentence-01\n              :ARG1 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Starrs\"))))", "(a2 / allow-01\n    :ARG1 (s2 / stand-04\n              :ARG1 (s3 / sentence-01\n                        :ARG1 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Starrs\")))))", "(a2 / allow-01\n    :ARG1 (s2 / stand-04\n              :ARG1 (s3 / sentence-01\n                        :ARG1 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Starrs\")))))", "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p))", "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p)\n   :ARG2 (a2 / allow-01\n             :ARG1 (s2 / stand-04\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 p))))", "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p)\n   :ARG2 (a2 / allow-01\n             :ARG1 (s2 / stand-04\n                       :ARG1 (s3 / sentence-01\n                                 :ARG1 p))))", "(r / recommend-01\n   :ARG1 (t / thank-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Christopher\"\n                              :op2 \"Starrs\"))\n            :ARG1 (s / star\n                     :mod (l / lucky)\n                     :poss p)\n            :ARG2 (a2 / allow-01\n                      :ARG1 (s2 / stand-04\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 p)))))", "(r / recommend-01\n   :ARG1 (t / thank-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Christopher\"\n                              :op2 \"Starrs\"))\n            :ARG1 (s / star\n                     :mod (l / lucky)\n                     :poss p)\n            :ARG2 (a2 / allow-01\n                      :ARG1 (s2 / stand-04\n                                :ARG1 (s3 / sentence-01\n                                          :ARG1 p))))\n   :ARG2 p)", "(a / add-01\n   :ARG1 (r / recommend-01\n            :ARG1 (t / thank-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Christopher\"\n                                       :op2 \"Starrs\"))\n                     :ARG1 (s / star\n                              :mod (l / lucky)\n                              :poss p)\n                     :ARG2 (a2 / allow-01\n                               :ARG1 (s2 / stand-04\n                                         :ARG1 (s3 / sentence-01\n                                                   :ARG1 p))))\n            :ARG2 p))", "(c / contrast-01\n   :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                     :ARG1 (t / thank-01\n                              :ARG0 (p / person\n                                       :name (n / name\n                                                :op1 \"Christopher\"\n                                                :op2 \"Starrs\"))\n                              :ARG1 (s / star\n                                       :mod (l / lucky)\n                                       :poss p)\n                              :ARG2 (a2 / allow-01\n                                        :ARG1 (s2 / stand-04\n                                                  :ARG1 (s3 / sentence-01\n                                                            :ARG1 p))))\n                     :ARG2 p)))"], "smus": ["Christoper Starrs' act of mercy:", "Christoper Starrs' act of mercy:", "Spared in January.", "In January, the action was spared.", "-Christopher Starrs is spared.", "Christopher Starrs was spared jail.", "The Judge spared Christopher Starrs in January.", "In January, a Judge spared Christopher Starrs from jail in an act of mercy.", "Senior judge", "Christopher Starrs took his eye off.", "Christopher Starrs took his eye off the ball.", "A senior judge has said that Christopher Starrs took his eye off the ball.", "Now, a senior judge has said, Christopher Starrs took his eye off the ball.", "But now a senior judge has said that Christopher Starrs took his eye off the ball.", "Lawyer General", "Christopher Starrs was jailed.", "Christopher Starrs was jailed.", "Christopher Starrs should have been jailed.", "Christopher Starrs should have been jailed.", "Christopher Starrs should be jailed,'' said lawyer general Nicholas Cooke.", "Christopher Starrs should be jailed,'' said lawyer general Nicholas Cooke.", "The sentence of Christopher Starrs will stand.", "The sentence of Christopher Starrs will stand.", "Christopher Starrs' sentence was allowed to stand.", "Christopher Starrs' sentence was allowed to stand.", "Thank you, Christopher Starrs, for your lucky stars.", "Thank his lucky stars for being allowed to stand trial, Christopher Starrs.", "Thank his lucky stars for being allowed to stand trial, Christopher Starrs.", "Christopher Starrs should thank his lucky stars for being allowed to stand trial.", "Christopher Starrs should thank his lucky stars for being allowed to stand trial.", "Added that Christopher Starrs should thank his lucky stars for being allowed to stand trial.", "But it was added that Christopher Starrs should thank his lucky stars for being allowed to stand trial."]}, {"instance_id": "realsumm-95", "summary": "Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend . Cristiano Ronaldo scored five to take Cristiano Ronaldo league tally to 36 for the season . Real Madrid travel to Rayo Vallecano in a Madrid derby on Wednesday night . Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday .", "summary_trees": ["# ::snt Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend .\n(t / thrash-01\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Real\"\n                  :op2 \"Madrid\"))\n      :ARG1 (t3 / team\n            :name (n2 / name\n                  :op1 \"Granada\"))\n      :time (w / weekend)\n      :quant (s / score-entity\n            :op1 9\n            :op2 1)\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"La\"\n                  :op2 \"Liga\")))", "# ::snt Cristiano Ronaldo scored five to take Cristiano Ronaldo league tally to 36 for the season .\n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Cristiano\"\n                  :op2 \"Ronaldo\"))\n      :ARG1 5\n      :ARG0-of (t / take-01\n            :ARG1 (t2 / tally-01\n                  :ARG1 p\n                  :mod (l / league))\n            :ARG3 36\n            :time (s2 / season)))", "# ::snt Real Madrid travel to Rayo Vallecano in a Madrid derby on Wednesday night .\n(t / travel-01\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Real\"\n                  :op2 \"Madrid\"))\n      :ARG4 (t3 / team\n            :name (n2 / name\n                  :op1 \"Rayo\"\n                  :op2 \"Vallecano\"))\n      :subevent-of (d / derby\n            :mod t2\n            :mod (c / city\n                  :name (n3 / name\n                        :op1 \"Madrid\")))\n      :time (d2 / date-entity\n            :weekday (w / wednesday)\n            :dayperiod (n4 / night)))", "# ::snt Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday .\n(w / win-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Juventus\"))\n      :ARG2 (t2 / team\n            :name (n2 / name\n                  :op1 \"Fiorentina\"))\n      :ARG4 (r / reach-01\n            :ARG0 t\n            :ARG1 (f / final\n                  :subevent-of (g / game\n                        :name (n3 / name\n                              :op1 \"Coppa\"\n                              :op2 \"Italia\"))\n                  :time (d / date-entity\n                        :weekday (t3 / tuesday))))\n      :quant (s / score-entity\n            :op1 3\n            :op2 0))"], "tree": ["(t / thrash-01\n   :time (w / weekend)\n   :quant (s / score-entity\n             :op1 9\n             :op2 1)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))", "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\"))\n   :time (w / weekend)\n   :quant (s / score-entity\n             :op1 9\n             :op2 1)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))", "(t2 / tally-01\n    :ARG1 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n    :mod (l / league))", "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG1 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :mod (l / league)))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cristiano\"\n                     :op2 \"Ronaldo\"))\n   :ARG1 5)", "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG1 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :mod (l / league))\n   :ARG3 36\n   :time (s2 / season))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cristiano\"\n                     :op2 \"Ronaldo\"))\n   :ARG1 5\n   :ARG0 (t / take-01\n            :ARG1 (t2 / tally-01\n                      :ARG1 p\n                      :mod (l / league))\n            :ARG3 36\n            :time (s2 / season)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\")))", "(t / travel-01\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(t / travel-01\n   :subevent (d / derby)\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\")))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :subevent (d / derby\n                :mod t2\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(w / win-01\n   :quant (s / score-entity\n             :op1 3\n             :op2 0))", "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\")))", "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\")))", "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Juventus\"))\n   :ARG1 (f / final\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Coppa\"\n                                   :op2 \"Italia\"))\n            :time (d / date-entity\n                     :weekday (t3 / tuesday))))", "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Juventus\"))\n   :ARG1 (f / final\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Coppa\"\n                                   :op2 \"Italia\"))\n            :time (d / date-entity\n                     :weekday (t3 / tuesday))))", "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\"))\n   :ARG4 (r / reach-01\n            :ARG0 t\n            :ARG1 (f / final\n                     :subevent (g / game\n                                  :name (n3 / name\n                                            :op1 \"Coppa\"\n                                            :op2 \"Italia\"))\n                     :time (d / date-entity\n                              :weekday (t3 / tuesday))))\n   :quant (s / score-entity\n             :op1 3\n             :op2 0))"], "smus": ["La Liga thrashed by 9-1 at the weekend.", "Real Madrid thrashed Granada 1-1 in La Liga over the weekend.", "Cristiano Ronaldo's league tally:", "Take the league tally of Cristiano Ronaldo.", "Cristina Ronaldo scored 5", "Take Cristiano Ronaldo's league tally to 36 this season.", "Cristiano Ronaldo scored five to take his league tally to 36 this season.", "Real Madrid will travel.", "Travel Wednesday night.", "The derby is on Wednesday night.", "Real Madrid travel to Rayo Vallecano", "Real Madrid will travel to Rayo Vallecano on Wednesday night.", "Real Madrid travel to Rayo Vallecano in the Madrid derby on Wednesday night.", "3-1 win.", "Juventus won 1-0.", "Juventus won 1-0 at Fiorentina.", "Juventus will reach the final in the Coppa Italia on Tuesday.", "Juventus will reach the final in the Coppa Italia on Tuesday.", "Juventus won 3-3 at Fiorentina to reach the final in Coppa Italia on Tuesday."]}, {"instance_id": "realsumm-96", "summary": "Kevin Pietersen was sacked by England 14 months ago after Ashes defeat . Kevin Pietersen scored 170 on Kevin Pietersen county cricket return for Surrey last week . Kevin Pietersen wants to make a sensational return to the England side this year . But Andrew Flintoff thinks time is running out for Kevin Pietersen to resurrect career .", "summary_trees": ["# ::snt Kevin Pietersen was sacked by England 14 months ago after Ashes defeat .\n(s / sack-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"England\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Kevin\"\n                  :op2 \"Pietersen\"))\n      :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                  :quant 14\n                  :unit (m / month)))\n      :time (a / after\n            :op1 (d / defeat-01\n                  :ARG0 t\n                  :ARG2 (g / game\n                        :name (n4 / name\n                              :op1 \"Ashes\")))))", "# ::snt Kevin Pietersen scored 170 on Kevin Pietersen county cricket return for Surrey last week .\n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Pietersen\"))\n      :ARG1 s\n      :ARG2 170\n      :time (w / week\n            :mod (l / last))\n      :time (r / return-01\n            :ARG1 p\n            :ARG4 (c / county\n                  :name (n2 / name\n                        :op1 \"Surrey\"))\n            :mod (c2 / cricket)))", "# ::snt Kevin Pietersen wants to make a sensational return to the England side this year .\n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Pietersen\"))\n      :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                  :mod (t / this))))", "# ::snt But Andrew Flintoff thinks time is running out for Kevin Pietersen to resurrect career .\n(c / contrast-01\n      :ARG2 (t / think-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Andrew\"\n                        :op2 \"Flintoff\"))\n            :ARG1 (r / run-out-05\n                  :ARG1 (t2 / time)\n                  :ARG2 (r2 / resurrect-01\n                        :ARG0 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Kevin\"\n                                    :op2 \"Pietersen\"))\n                        :ARG1 (c2 / career)))))"], "tree": ["(d / defeat-01\n   :ARG0 (t / team :name (n / name :op1 \"England\"))\n   :ARG2 (g / game\n            :name (n4 / name\n                      :op1 \"Ashes\")))", "(s / sack-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\")))", "(s / sack-01\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month))))", "(s / sack-01\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month)))\n   :time (a / after\n            :op1 (d / defeat-01)))", "(s / sack-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month))))", "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month)))\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG0 t\n                    :ARG2 (g / game\n                             :name (n4 / name\n                                       :op1 \"Ashes\")))))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n   :ARG4 (c / county\n            :name (n2 / name\n                      :op1 \"Surrey\")))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n   :ARG4 (c / county\n            :name (n2 / name\n                      :op1 \"Surrey\"))\n   :mod (c2 / cricket))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Pietersen\"))\n   :ARG1 s\n   :ARG2 170\n   :time (w / week\n            :mod (l / last))\n   :time (r / return-01\n            :ARG1 p\n            :ARG4 (c / county\n                     :name (n2 / name\n                               :op1 \"Surrey\"))\n            :mod (c2 / cricket)))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Pietersen\"))\n   :ARG1 s\n   :ARG2 170\n   :time (w / week\n            :mod (l / last))\n   :time (r / return-01\n            :ARG1 p\n            :ARG4 (c / county\n                     :name (n2 / name\n                               :op1 \"Surrey\"))\n            :mod (c2 / cricket)))", "(s / score-01\n   :ARG1 s\n   :ARG2 170\n   :time (w / week\n            / week\n            :mod (l / last\n                    / last)\n            :mod l)\n   :time (r / return-01\n            / return-01\n            :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n            :ARG4 (c / county\n                     / county\n                     :name (n2 / name\n                               / name\n                               :op1 \"Surrey\"\n                               :op1 \"Surrey\")\n                     :name n2)\n            :mod (c2 / cricket\n                     / cricket)\n            :ARG1 p\n            :ARG4 c\n            :mod c2)\n   :ARG2 170\n   :time w\n   :time r)", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Pietersen\"))\n   :ARG1 s\n   :ARG2 170\n   :time (w / week\n            / week\n            :mod (l / last\n                    / last)\n            :mod l)\n   :time (r / return-01\n            / return-01\n            :ARG1 p\n            :ARG4 (c / county\n                     / county\n                     :name (n2 / name\n                               / name\n                               :op1 \"Surrey\"\n                               :op1 \"Surrey\")\n                     :name n2)\n            :mod (c2 / cricket\n                     / cricket)\n            :ARG1 p\n            :ARG4 c\n            :mod c2)\n   :time w\n   :time r)", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Pietersen\"))\n   :ARG1 s\n   :ARG2 170\n   :time (w / week\n            / week\n            :mod (l / last\n                    / last)\n            :mod l)\n   :time (r / return-01\n            / return-01\n            :ARG1 p\n            :ARG4 (c / county\n                     / county\n                     :name (n2 / name\n                               / name\n                               :op1 \"Surrey\"\n                               :op1 \"Surrey\")\n                     :name n2)\n            :mod (c2 / cricket\n                     / cricket)\n            :ARG1 p\n            :ARG4 c\n            :mod c2)\n   :ARG2 170\n   :time w\n   :time r)", "(r / return-01\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :mod (s2 / sensational)\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\")))\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\")))\n   :mod (s2 / sensational)\n   :time (y / year\n            :mod (t / this)))", "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                     :mod (t / this))))", "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                     :mod (t / this))))", "(r2 / resurrect-01\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Kevin\"\n                        :op2 \"Pietersen\"))\n    :ARG1 (c2 / career))", "(r2 / resurrect-01\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Kevin\"\n                        :op2 \"Pietersen\"))\n    :ARG1 (c2 / career))", "(r / run-out-05\n   :ARG1 (t2 / time)\n   :ARG2 (r2 / resurrect-01\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Kevin\"\n                                 :op2 \"Pietersen\"))\n             :ARG1 (c2 / career)))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\"))\n   :ARG1 (r / run-out-05\n            :ARG1 (t2 / time)\n            :ARG2 (r2 / resurrect-01\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Kevin\"\n                                          :op2 \"Pietersen\"))\n                      :ARG1 (c2 / career))))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\"))\n   :ARG1 (r / run-out-05\n            :ARG1 (t2 / time)\n            :ARG2 (r2 / resurrect-01\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Kevin\"\n                                          :op2 \"Pietersen\"))\n                      :ARG1 (c2 / career))))", "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Andrew\"\n                              :op2 \"Flintoff\"))\n            :ARG1 (r / run-out-05\n                     :ARG1 (t2 / time)\n                     :ARG2 (r2 / resurrect-01\n                               :ARG0 (p2 / person\n                                         :name (n2 / name\n                                                   :op1 \"Kevin\"\n                                                   :op2 \"Pietersen\"))\n                               :ARG1 (c2 / career)))))"], "smus": ["England defeat the Ashes 1-0", "Kevin Pietersen was sacked.", "Sacked 14 months ago.", "Sacked 14 months ago after defeat.", "Kevin Pietersen was sacked 14 months ago.", "England have sacked Kevin Pietersen in 14 months after they defeat the Ashes.", "Kevin Pietersen's return to Surrey:", "Kevin Pietersen's cricket return to Surrey:", "Kevin Pietersen scored 170 last week on his cricket return to Surrey.", "Kevin Pietersen scored 170 last week on his cricket return to Surrey.", "Last week, on Kevin Pietersen's cricket cricket return to Surrey Surrey, he scored 170 in the return.", "Kevin Pietersen scored 170 last week on his return to Surrey county cricket cricket.", "Kevin Pietersen scored 170 last week on his return to Surrey Surrey cricket cricketing return of 170 last week.", "This year's return", "This year's return", "Kevin Pietersen's return this year", "A sensational return this year.", "Kevin Pietersen's return to the English side", "Kevin Pietersen will return to the English side this year.", "Kevin Pietersen's return to the English side this year was sensational.", "Kevin Pietersen wants a sensational return to the English side this year.", "Kevin Pietersen wants a sensational return to the English side this year.", "Kevin Pietersen will resurrect his career.", "Kevin Pietersen will resurrect his career.", "Time is running out for Kevin Pietersen to resurrect his career.", "Andrew Flintoff thinks time is running out for Kevin Pietersen to resurrect his career.", "Andrew Flintoff thinks time is running out for Kevin Pietersen to resurrect his career.", "But Andrew Flintoff thinks time is running out for Kevin Pietersen to resurrect his career."]}, {"instance_id": "realsumm-97", "summary": "If Carl Froch does n't fight in 2015 I ' m not sure Carl Froch 'll be back at all . A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact . Scott Quigg - Carl Froch summer fight is dead in the water .", "summary_trees": ["# ::snt If Carl Froch does n't fight in 2015 I ' m not sure Carl Froch 'll be back at all .\n(s / sure-02\n      :polarity -\n      :ARG0 (ii / i)\n      :ARG1 (r / return-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Carl\"\n                        :op2 \"Froch\"))\n            :mod (a / at-all))\n      :condition (f / fight-01\n            :polarity -\n            :ARG0 p\n            :time (d / date-entity\n                  :year 2015)))", "# ::snt A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact .\n(l / likely-01\n      :ARG1 (b / blockbuster\n            :mod (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"DeGale\")))\n      :time (a / after\n            :op1 (d / defeat-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Julio\"\n                              :op2 \"Cesar\"\n                              :op3 \"Chavez\"\n                              :op4 \"Jr\"))))\n      :concession (c / contact-01\n            :ARG0 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Anthony\"\n                        :op2 \"Dirrell\")))\n      :ARG2-of (h / have-degree-91\n            :ARG1 b\n            :ARG3 (m / most)))", "# ::snt Scott Quigg - Carl Froch summer fight is dead in the water .\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Scott\"\n                  :op2 \"Quigg\"))\n      :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n                  :time (d2 / date-entity\n                        :season (s2 / summer)))\n            :location (w / water)))"], "tree": ["(s / sure-02\n   :polarity -\n   :ARG0 (ii / i))", "(f / fight-01\n   :polarity -\n   :time (d / date-entity\n            :year 2015))", "(s / sure-02\n   :polarity -\n   :condition (f / fight-01\n                 :polarity -))", "(f / fight-01\n   :polarity -\n   :ARG0 (p / person :name (n / name :op1 \"Carl\" :op2 \"Froch\"))\n   :time (d / date-entity\n            :year 2015))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carl\"\n                     :op2 \"Froch\")))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carl\"\n                     :op2 \"Froch\"))\n   :mod (a / at-all))", "(s / sure-02\n   :polarity -\n   :ARG0 (ii / i)\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n            :mod (a / at-all)))", "(s / sure-02\n   :polarity -\n   :ARG0 (ii / i)\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n            :mod (a / at-all))\n   :condition (f / fight-01\n                 :polarity -\n                 :ARG0 p\n                 :time (d / date-entity\n                          :year 2015)))", "(h / have-degree-91\n   :ARG1 (b / blockbuster)\n   :ARG3 (m / most))", "(c / contact-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Dirrell\")))", "(c / contact-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Dirrell\")))", "(l / likely-01\n   :time (a / after\n            :op1 (d / defeat-01))\n   :concession (c / contact-01))", "(d / defeat-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Julio\"\n                       :op2 \"Cesar\"\n                       :op3 \"Chavez\"\n                       :op4 \"Jr\")))", "(d / defeat-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Julio\"\n                       :op2 \"Cesar\"\n                       :op3 \"Chavez\"\n                       :op4 \"Jr\")))", "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\"))))", "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Julio\"\n                                        :op2 \"Cesar\"\n                                        :op3 \"Chavez\"\n                                        :op4 \"Jr\"))))\n   :concession (c / contact-01\n                  :ARG0 (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Anthony\"\n                                      :op2 \"Dirrell\")))\n   :ARG2 (h / have-degree-91\n            :ARG1 b\n            :ARG3 (m / most)))", "(f / fight-01\n   :time (d2 / date-entity\n             :season (s2 / summer)))", "(f / fight-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Froch\")))", "(f / fight-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Froch\"))\n   :time (d2 / date-entity\n             :season (s2 / summer)))", "(d / die-01\n   :ARG1 (f / fight-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carl\"\n                                :op2 \"Froch\"))\n            :time (d2 / date-entity\n                      :season (s2 / summer))))", "(d / die-01\n   :ARG1 (f / fight-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carl\"\n                                :op2 \"Froch\"))\n            :time (d2 / date-entity\n                      :season (s2 / summer)))\n   :location (w / water))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\"))\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Carl\"\n                                         :op2 \"Froch\"))\n                     :time (d2 / date-entity\n                               :season (s2 / summer)))\n            :location (w / water)))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\"))\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Carl\"\n                                         :op2 \"Froch\"))\n                     :time (d2 / date-entity\n                               :season (s2 / summer)))\n            :location (w / water)))"], "smus": ["I'm not sure.", "Not a fiftie in 2015.", "Not sure, condi not fifti.", "Carl Froch is not a fianc in 2015.", "Carl Froch returned.", "Carl Froch returns at all.", "I'm not sure Carl Froch will return at all.", "I'm not sure Carl Froch will return at all, but he won't be fifti in 2015.", "The biggest blockbuster.", "Anthony Dirrell is in contact.", "Anthony Dirrell is in contact.", "Despite contact, it is likely to happen after defeat.", "defeat Julio Cesar Chavez Jr.", "defeat Julio Cesar Chavez Jr.", "James DeGale's blockbuster is likely.", "Despite Anthony Dirrell's contact, James DeGale's most likely blockbuster after Julio Cesar Chavez Jr.'s defeat.", "The fights are in the summer.", "Carl Froch is in a fight.", "Carl Froch is in a fight this summer.", "Carl Froch's fight in the summer was dead.", "The summer fight between Carl Froch and the frogs died on the water.", "Scott Quigg: Carl Froch's summer fight has died on the water.", "Scott Quigg: Carl Froch's summer fight has died on the water."]}, {"instance_id": "realsumm-98", "summary": "Clip shows mysterious black cloud hanging over the village of Shortandy . mysterious black cloud hanging over the village of Shortandy sat in the air not moving for more than 15 minutes . mysterious black cloud hanging over the village of Shortandy has been viewed tens of thousands of times on Youtube . While some viewers are suggesting mysterious black cloud hanging over the village of Shortandy was an alien spacecraft , experts think mysterious black cloud hanging over the village of Shortandy could have been caused by nearby factories .", "summary_trees": ["# ::snt Clip shows mysterious black cloud hanging over the village of Shortandy .\n(s / show-01\n      :ARG0 (c / clip)\n      :ARG1 (c2 / cloud\n            :mod (m / mysterious)\n            :ARG1-of (b / black-04)\n            :ARG1-of (h / hang-01\n                  :ARG2 (o / over\n                        :op1 (v / village\n                              :name (n / name\n                                    :op1 \"Shortandy\"))))))", "# ::snt mysterious black cloud hanging over the village of Shortandy sat in the air not moving for more than 15 minutes .\n(s / sit-01\n      :ARG1 (c / cloud\n            :ARG1-of (b / black-04)\n            :mod (m / mysterious)\n            :ARG1-of (h / hang-01\n                  :ARG2 (o / over\n                        :op1 (v / village\n                              :name (n / name\n                                    :op1 \"Shortandy\")))))\n      :ARG2 (a / air)\n      :duration (m2 / more-than\n            :op1 (t / temporal-quantity\n                  :quant 15\n                  :unit (m3 / minute)))\n      :manner (m4 / move-01\n            :polarity -\n            :ARG1 c))", "# ::snt mysterious black cloud hanging over the village of Shortandy has been viewed tens of thousands of times on Youtube .\n(v / view-01\n      :ARG1 (c / cloud\n            :ARG1-of (b / black-04)\n            :mod (m / mysterious)\n            :ARG1-of (h / hang-01\n                  :ARG2 (o / over\n                        :op1 (v2 / village\n                              :name (n / name\n                                    :op1 \"Shortandy\")))))\n      :medium (p / publication\n            :name (n2 / name\n                  :op1 \"Youtube\"))\n      :frequency (m2 / multiple\n            :op1 10000))", "# ::snt While some viewers are suggesting mysterious black cloud hanging over the village of Shortandy was an alien spacecraft , experts think mysterious black cloud hanging over the village of Shortandy could have been caused by nearby factories .\n(c / contrast-01\n      :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                  :ARG0-of (v / view-01)\n                  :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                  :mod (a / alien)\n                  :domain (c2 / cloud\n                        :ARG1-of (b / black-04)\n                        :mod (m / mystery)\n                        :ARG1-of (h / hang-01\n                              :ARG2 (o / over\n                                    :op1 (v2 / village\n                                          :name (n / name\n                                                :op1 \"Shortandy\")))))))\n      :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                  :ARG1-of (e / expert-01))\n            :ARG1 (p3 / possible-01\n                  :ARG1 (c3 / cause-01\n                        :ARG0 (f / factory\n                              :location (n2 / nearby))\n                        :ARG1 c2))))"], "tree": ["(h / hang-01\n   :ARG2 (o / over\n            :op1 (v / village\n                    :name (n / name\n                             :op1 \"Shortandy\"))))", "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :mod (m / mysterious)\n             :ARG1 (b / black-04)\n             :ARG1 (h / hang-01\n                      :ARG2 (o / over\n                               :op1 (v / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\"))))))", "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :mod (m / mysterious)\n             :ARG1 (b / black-04)\n             :ARG1 (h / hang-01\n                      :ARG2 (o / over\n                               :op1 (v / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\"))))))", "(h / hang-01\n   :ARG2 (o / over\n            :op1 (v / village\n                    :name (n / name\n                             :op1 \"Shortandy\"))))", "(s / sit-01\n   :duration (m2 / more-than\n                 :op1 (t / temporal-quantity\n                         :quant 15\n                         :unit (m3 / minute)))\n   :manner (m4 / move-01\n               :polarity -))", "(s / sit-01\n   :ARG1 (c / cloud\n            :ARG1 (b / black-04)\n            :mod (m / mysterious)\n            :ARG1 (h / hang-01\n                     :ARG2 (o / over\n                              :op1 (v / village\n                                      :name (n / name\n                                               :op1 \"Shortandy\")))))\n   :ARG2 (a / air))", "(s / sit-01\n   :ARG1 (c / cloud\n            :ARG1 (b / black-04)\n            :mod (m / mysterious)\n            :ARG1 (h / hang-01\n                     :ARG2 (o / over\n                              :op1 (v / village\n                                      :name (n / name\n                                               :op1 \"Shortandy\")))))\n   :ARG2 (a / air)\n   :duration (m2 / more-than\n                 :op1 (t / temporal-quantity\n                         :quant 15\n                         :unit (m3 / minute)))\n   :manner (m4 / move-01\n               :polarity -\n               :ARG1 c))", "(h / hang-01\n   :ARG2 (o / over\n            :op1 (v2 / village\n                     :name (n / name\n                              :op1 \"Shortandy\"))))", "(v / view-01\n   :medium (p / publication\n              :name (n2 / name\n                        :op1 \"Youtube\"))\n   :frequency (m2 / multiple\n                  :op1 10000))", "(v / view-01\n   :ARG1 (c / cloud\n            :ARG1 (b / black-04)\n            :mod (m / mysterious)\n            :ARG1 (h / hang-01\n                     :ARG2 (o / over\n                              :op1 (v2 / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\"))))))", "(v / view-01\n   :ARG1 (c / cloud\n            :ARG1 (b / black-04)\n            :mod (m / mysterious)\n            :ARG1 (h / hang-01\n                     :ARG2 (o / over\n                              :op1 (v2 / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\")))))\n   :medium (p / publication\n              :name (n2 / name\n                        :op1 \"Youtube\"))\n   :frequency (m2 / multiple\n                  :op1 10000))", "(c3 / cause-01\n    :ARG0 (f / factory\n             :location (n2 / nearby))\n    :ARG1 (c2 / cloud))", "(p3 / possible-01\n    :ARG1 (c3 / cause-01\n              :ARG0 (f / factory\n                       :location (n2 / nearby))\n              :ARG1 (c2 / cloud)))", "(h / hang-01\n   :ARG2 (o / over\n            :op1 (v2 / village\n                     :name (n / name\n                              :op1 \"Shortandy\"))))", "(p3 / possible-01\n    :ARG1 (c3 / cause-01\n              :ARG0 (f / factory\n                       :location (n2 / nearby))\n              :ARG1 (c2 / cloud)))", "(t / think-01\n   :ARG0 (p2 / person\n             :ARG1 (e / expert-01))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG0 (f / factory\n                                :location (n2 / nearby))\n                       :ARG1 (c2 / cloud))))", "(t / think-01\n   :ARG0 (p2 / person\n             :ARG1 (e / expert-01))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG0 (f / factory\n                                :location (n2 / nearby))\n                       :ARG1 (c2 / cloud))))", "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (s2 / some))\n   :ARG1 (s3 / spacecraft\n             :mod (a / alien)\n             :domain (c2 / cloud\n                         :ARG1 (b / black-04)\n                         :mod (m / mystery)\n                         :ARG1 (h / hang-01\n                                  :ARG2 (o / over\n                                           :op1 (v2 / village\n                                                    :name (n / name\n                                                             :op1 \"Shortandy\")))))))", "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (s2 / some))\n   :ARG1 (s3 / spacecraft\n             :mod (a / alien)\n             :domain (c2 / cloud\n                         :ARG1 (b / black-04)\n                         :mod (m / mystery)\n                         :ARG1 (h / hang-01\n                                  :ARG2 (o / over\n                                           :op1 (v2 / village\n                                                    :name (n / name\n                                                             :op1 \"Shortandy\")))))))", "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01)\n                     :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                      :mod (a / alien)\n                      :domain (c2 / cloud\n                                  :ARG1 (b / black-04)\n                                  :mod (m / mystery)\n                                  :ARG1 (h / hang-01\n                                           :ARG2 (o / over\n                                                    :op1 (v2 / village\n                                                             :name (n / name\n                                                                      :op1 \"Shortandy\")))))))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n2 / nearby))\n                                :ARG1 c2))))", "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01)\n                     :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                      :mod (a / alien)\n                      :domain (c2 / cloud\n                                  :ARG1 (b / black-04)\n                                  :mod (m / mystery)\n                                  :ARG1 (h / hang-01\n                                           :ARG2 (o / over\n                                                    :op1 (v2 / village\n                                                             :name (n / name\n                                                                      :op1 \"Shortandy\")))))))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n2 / nearby))\n                                :ARG1 c2))))"], "smus": ["Hanging over Shortandy village.", "The clip shows a mysterious black cloud hanging over Shortandy village.", "The clip shows a mysterious black cloud hanging over Shortandy village.", "Hanging over Shortandy village.", "Sitting still, not moving, for more than 15 minutes.", "A mysterious black cloud sat in the air hung over Shortandy village.", "A mysterious black cloud sat in the air, hanging over Shortandy village, for more than 15 minutes, not moving.", "Hanging over Shortandy village.", "viewed thousands of times on youtube.", "A mysterious black cloud was viewed hung over Shortandy village.", "A mysterious black cloud was viewed on youtube thousands of times as it hung over Shortandy village.", "The nearby factories have caused the cloud.", "Perhaps nearby factories have caused the cloud.", "Hanging over Shortandy village.", "Perhaps nearby factories have caused the cloud.", "Experts think nearby factories may have caused the cloud.", "Experts think nearby factories may have caused the cloud.", "Some viewers are suggesting that the mysterious black cloud hanging over Shortandy village is an alien spacecraft.", "Some viewers are suggesting that the mysterious black cloud hanging over Shortandy village is an alien spacecraft.", "Some viewers are suggesting that the mysterious black cloud hanging over Shortandy is an alien spacecraft, while experts think nearby factories may have caused it.", "Some viewers are suggesting that the mysterious black cloud hanging over Shortandy is an alien spacecraft, while experts think nearby factories may have caused it."]}, {"instance_id": "realsumm-99", "summary": "Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses . In total 1,177 were transferred to a different jail where 1,177 will mix with 1,177 arch rivals - Mara Salvatrucha . handcuffed members from the notorious Barrio 18 gang will now no longer be classified by gang affiliation , but by how dangerous handcuffed members from the notorious Barrio 18 gang are .", "summary_trees": ["# ::snt Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses .\n(s / show-01\n      :ARG0 (ii / image\n            :mod (ii2 / incredible))\n      :ARG1 (m / march-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang\n                              :name (n / name\n                                    :op1 \"Barrio\"\n                                    :op2 18)\n                              :ARG1-of (n2 / notorious-01))\n                        :ARG2 (m2 / member))\n                  :ARG1-of (h2 / handcuff-01))\n            :destination (b / bus)))", "# ::snt In total 1,177 were transferred to a different jail where 1,177 will mix with 1,177 arch rivals - Mara Salvatrucha .\n(t / transfer-01\n      :ARG1 (p / person\n            :quant 1741\n            :ARG2-of (t2 / total-01))\n      :ARG2 (j / jail\n            :ARG1-of (d / differ-02)\n            :location-of (m / mix-01\n                  :ARG1 p\n                  :ARG2 (p2 / person\n                        :quant 1741\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 (c / criminal-organization\n                                    :name (n / name\n                                          :op1 \"Mara\"\n                                          :op2 \"Salvatrucha\")\n                                    :ARG0-of (r / rival-01\n                                          :mod (a / arch)))\n                              :ARG2 (m2 / member))))))", "# ::snt handcuffed members from the notorious Barrio 18 gang will now no longer be classified by gang affiliation , but by how dangerous handcuffed members from the notorious Barrio 18 gang are .\n(c / contrast-01\n      :ARG1 (c2 / classify-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang\n                              :name (n / name\n                                    :op1 \"Barrio\"\n                                    :op2 18)\n                              :ARG1-of (n2 / notorious-01))\n                        :ARG2 (m / member\n                              :ARG1-of (h2 / handcuff-01))))\n            :ARG2 (a / affiliate-01\n                  :ARG1 g))\n      :ARG2 (c3 / classify-01\n            :ARG1 p\n            :ARG2 (t / thing\n                  :degree-of (d / dangerous\n                        :domain p)))\n      :time (n3 / no-longer)\n      :time (n4 / now))"], "tree": ["(h / have-org-role-91\n   :ARG1 (g / gang\n            :name (n / name\n                     :op1 \"Barrio\"\n                     :op2 18)\n            :ARG1 (n2 / notorious-01))\n   :ARG2 (m2 / member))", "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (g / gang\n                              :name (n / name\n                                       :op1 \"Barrio\"\n                                       :op2 18)\n                              :ARG1 (n2 / notorious-01))\n                     :ARG2 (m2 / member))\n            :ARG1 (h2 / handcuff-01))\n   :destination (b / bus))", "(s / show-01\n   :ARG0 (ii / image\n             :mod (ii2 / incredible))\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG1 (g / gang\n                                       :name (n / name\n                                                :op1 \"Barrio\"\n                                                :op2 18)\n                                       :ARG1 (n2 / notorious-01))\n                              :ARG2 (m2 / member))\n                     :ARG1 (h2 / handcuff-01))\n            :destination (b / bus)))", "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741\n            :ARG2 (t2 / total-01)))", "(h / have-rel-role-91\n   :ARG1 (c / criminal-organization\n            :name (n / name\n                     :op1 \"Mara\"\n                     :op2 \"Salvatrucha\")\n            :ARG0 (r / rival-01\n                     :mod (a / arch)))\n   :ARG2 (m2 / member))", "(m / mix-01\n   :ARG1 (p / person)\n   :ARG2 (p2 / person\n             :quant 1741\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (c / criminal-organization\n                               :name (n / name\n                                        :op1 \"Mara\"\n                                        :op2 \"Salvatrucha\")\n                               :ARG0 (r / rival-01\n                                        :mod (a / arch)))\n                      :ARG2 (m2 / member))))", "(t / transfer-01\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)\n            :location (m / mix-01\n                         :ARG1 (p / person)\n                         :ARG2 (p2 / person\n                                   :quant 1741\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :name (n / name\n                                                              :op1 \"Mara\"\n                                                              :op2 \"Salvatrucha\")\n                                                     :ARG0 (r / rival-01\n                                                              :mod (a / arch)))\n                                            :ARG2 (m2 / member))))))", "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741\n            :ARG2 (t2 / total-01))\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)\n            :location (m / mix-01\n                         :ARG1 p\n                         :ARG2 (p2 / person\n                                   :quant 1741\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :name (n / name\n                                                              :op1 \"Mara\"\n                                                              :op2 \"Salvatrucha\")\n                                                     :ARG0 (r / rival-01\n                                                              :mod (a / arch)))\n                                            :ARG2 (m2 / member))))))", "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741\n            :ARG2 (t2 / total-01))\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)\n            :location (m / mix-01\n                         :ARG1 p\n                         :ARG2 (p2 / person\n                                   :quant 1741\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 (c / criminal-organization\n                                                     :name (n / name\n                                                              :op1 \"Mara\"\n                                                              :op2 \"Salvatrucha\")\n                                                     :ARG0 (r / rival-01\n                                                              :mod (a / arch)))\n                                            :ARG2 (m2 / member))))))", "(c / contrast-01\n   :time (n3 / no-longer)\n   :time (n4 / now))", "(c3 / classify-01\n    :ARG1 (p / person)\n    :ARG2 (t / thing\n             :degree (d / dangerous\n                        :domain p)))", "(c3 / classify-01\n    :ARG1 (p / person)\n    :ARG2 (t / thing\n             :degree (d / dangerous\n                        :domain p)))", "(h / have-org-role-91\n   :ARG1 (g / gang\n            :name (n / name\n                     :op1 \"Barrio\"\n                     :op2 18)\n            :ARG1 (n2 / notorious-01))\n   :ARG2 (m / member\n            :ARG1 (h2 / handcuff-01)))", "(c2 / classify-01\n    :ARG1 (p / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g / gang\n                               :name (n / name\n                                        :op1 \"Barrio\"\n                                        :op2 18)\n                               :ARG1 (n2 / notorious-01))\n                      :ARG2 (m / member\n                               :ARG1 (h2 / handcuff-01))))\n    :ARG2 (a / affiliate-01\n             :ARG1 g))", "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g / gang\n                                        :name (n / name\n                                                 :op1 \"Barrio\"\n                                                 :op2 18)\n                                        :ARG1 (n2 / notorious-01))\n                               :ARG2 (m / member\n                                        :ARG1 (h2 / handcuff-01))))\n             :ARG2 (a / affiliate-01\n                      :ARG1 g))\n   :ARG2 (c3 / classify-01\n             :ARG1 p\n             :ARG2 (t / thing\n                      :degree (d / dangerous\n                                 :domain p)))\n   :time (n3 / no-longer)\n   :time (n4 / now))"], "smus": ["The notorious gang, Barrio 18, is made up of members.", "The members of the notorious Barrio 18 gang were marched to buses in handcuffs.", "Incredibly detailed images show members of the notorious Barrio 18 gang marching in handcuffs to buses.", "Total transfer: 1741", "The Mara Salvatrucha is an arch rival.", "Mix people with 1741 members of the Mara Salvatrucha, arch rivals.", "Transferred to a different jail where people mix with 1741 members of the Mara Salvatrucha, arch rivals.", "Total 1741 people were transferred to a different jail where they would mix with 1741 members of the Mara Salvatrucha, arch rivals.", "Total 1741 people were transferred to a different jail where they would mix with 1741 members of the Mara Salvatrucha, arch rivals.", "But no longer, now.", "People are classified as dangerous.", "People are classified as dangerous.", "The notorious Barrio 18 gang is a group of handcuffed members.", "The members of the handcuffed gang, known as Barrio 18, are classified as affiliates.", "The handcuffed members of the notorious Barrio 18 gang are no longer classified as affiliates but as dangerous."]}]